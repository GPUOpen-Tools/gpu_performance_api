//==============================================================================
// Copyright (c) 2010-2021 Advanced Micro Devices, Inc. All rights reserved.
/// @author AMD Developer Tools Team
/// @file
/// @brief CL counter definitions for GFX9.
//==============================================================================

// This file is autogenerated by the ConvertHWEnums project.

#ifndef GPA_AUTO_GENERATED_GPU_PERF_API_COUNTER_GENERATOR_GPA_HW_COUNTER_CL_GFX9_H_
#define GPA_AUTO_GENERATED_GPU_PERF_API_COUNTER_GENERATOR_GPA_HW_COUNTER_CL_GFX9_H_

// clang-format off

#include <set>

struct GpaHardwareCounterDesc;
struct GpaCounterGroupDesc;
struct GpaSqCounterGroupDesc;

namespace counter_cl_gfx9
{
    extern GpaHardwareCounterDesc*           kClCounterGroupArrayGfx9[]; ///< Array of hardware counter groups for Cl for Gfx9 family
    extern GpaHardwareCounterDesc*           kClExposedCountersGroupArrayGfx9[]; ///< Array of hardware exposed counter groups for Cl for Gfx9 family
    extern GpaCounterGroupDesc               kHwClGroupsGfx9[]; ///< Array of counter groups for Cl for Gfx9 family
    extern GpaCounterGroupExposedCounterDesc kHwClExposedCountersByGroupGfx9[]; ///< Array of exposed counter groups for Cl for Gfx9 family
    extern GpaPaddedCounterDesc              kClPaddedCounterByGroupGfx9[]; ///< Array of reserved counter for Cl for Gfx9 family
    extern GpaSqCounterGroupDesc             kHwClSqGroupsGfx9[]; ///< Array of SQ groups for Cl for Gfx9 family
    extern unsigned int                       kHwClSqIsolatedGroupsGfx9[]; ///< Array of counter groups isolated from SQ counter groups for Cl for Gfx9 family
    extern const std::set<unsigned int>       kHwClTimestampBlockIdsGfx9; ///< Timestamp block id's for Cl for Gfx9 family
    extern const std::set<unsigned int>       kHwClTimeCounterIndicesGfx9; ///< Timestamp counter indices for Cl for Gfx9 family
    extern const unsigned int                 kHwClGroupCountGfx9; ///< Hardware Group Count for Cl for Gfx9 family
    extern const unsigned int                 kHwClExposedCountersGroupCountGfx9; ///< Whitelist hardware counter Group Count for Cl for Gfx9 family
    extern const unsigned int                 kClPaddedCounterGroupCountGfx9; ///< reserved counter group count for Cl for Gfx9 family
    extern const unsigned int                 kHwClSqGroupCountGfx9; ///< Hardware SQ Group Count for Cl for Gfx9 family
    extern const unsigned int                 kHwClSqIsolatedGroupCountGfx9; ///< Hardware Isolated Group Count for Cl for Gfx9 family

/// @brief If the requested ASIC type is supported, then the global GPU generation block instance counters are updated.
///
/// @param [in] asic_type The ASIC type that is currently in use.
///
/// @return True if the ASIC is matched by this file and block instances are updated, otherwise false.
inline bool OverrideMaxBlockEvents(GDT_HW_ASIC_TYPE asic_type)
{
    UNREFERENCED_PARAMETER(asic_type);


    return true;
}
} //  namespace counter_cl_gfx9

// clang-format on

#endif  // GPA_AUTO_GENERATED_GPU_PERF_API_COUNTER_GENERATOR_GPA_HW_COUNTER_CL_GFX9_H_
