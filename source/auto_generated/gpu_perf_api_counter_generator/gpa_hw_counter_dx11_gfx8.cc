//==============================================================================
// Copyright (c) 2010-2021 Advanced Micro Devices, Inc. All rights reserved.
/// @author AMD Developer Tools Team
/// @file
/// @brief DX11 counter definitions for GFX8.
//==============================================================================

#include "gpu_perf_api_counter_generator/gpa_counter.h"
#include "auto_generated/gpu_perf_api_counter_generator/gpa_hw_counter_gfx8.h"
#include "auto_generated/gpu_perf_api_counter_generator/gpa_hw_exposed_counters_gfx8.h"
#include "auto_generated/gpu_perf_api_counter_generator/gpa_hw_counter_dx11_gfx8.h"

// This file is autogenerated by the ConvertHWEnums project

// clang-format off

namespace counter_dx11_gfx8
{
    using namespace counter_gfx8;

    GpaHardwareCounterDesc* kDx11CounterGroupArrayGfx8[] = {
        kSdma0CountersGfx8,
        kSdma1CountersGfx8,
        kSrbmCountersGfx8,
        kCpfCountersGfx8,
        kCb0CountersGfx8,
        kCb1CountersGfx8,
        kCb2CountersGfx8,
        kCb3CountersGfx8,
        kCb4CountersGfx8,
        kCb5CountersGfx8,
        kCb6CountersGfx8,
        kCb7CountersGfx8,
        kCb8CountersGfx8,
        kCb9CountersGfx8,
        kCb10CountersGfx8,
        kCb11CountersGfx8,
        kCb12CountersGfx8,
        kCb13CountersGfx8,
        kCb14CountersGfx8,
        kCb15CountersGfx8,
        kDb0CountersGfx8,
        kDb1CountersGfx8,
        kDb2CountersGfx8,
        kDb3CountersGfx8,
        kDb4CountersGfx8,
        kDb5CountersGfx8,
        kDb6CountersGfx8,
        kDb7CountersGfx8,
        kDb8CountersGfx8,
        kDb9CountersGfx8,
        kDb10CountersGfx8,
        kDb11CountersGfx8,
        kDb12CountersGfx8,
        kDb13CountersGfx8,
        kDb14CountersGfx8,
        kDb15CountersGfx8,
        kGrbmCountersGfx8,
        kGrbmse0CountersGfx8,
        kGrbmse1CountersGfx8,
        kGrbmse2CountersGfx8,
        kGrbmse3CountersGfx8,
        kRlcCountersGfx8,
        kPaSu0CountersGfx8,
        kPaSu1CountersGfx8,
        kPaSu2CountersGfx8,
        kPaSu3CountersGfx8,
        kPaSc0CountersGfx8,
        kPaSc1CountersGfx8,
        kPaSc2CountersGfx8,
        kPaSc3CountersGfx8,
        kSx0CountersGfx8,
        kSx1CountersGfx8,
        kSx2CountersGfx8,
        kSx3CountersGfx8,
        kSpi0CountersGfx8,
        kSpi1CountersGfx8,
        kSpi2CountersGfx8,
        kSpi3CountersGfx8,
        kSq0CountersGfx8,
        kSq1CountersGfx8,
        kSq2CountersGfx8,
        kSq3CountersGfx8,
        kSqEs0CountersGfx8,
        kSqEs1CountersGfx8,
        kSqEs2CountersGfx8,
        kSqEs3CountersGfx8,
        kSqGs0CountersGfx8,
        kSqGs1CountersGfx8,
        kSqGs2CountersGfx8,
        kSqGs3CountersGfx8,
        kSqVs0CountersGfx8,
        kSqVs1CountersGfx8,
        kSqVs2CountersGfx8,
        kSqVs3CountersGfx8,
        kSqPs0CountersGfx8,
        kSqPs1CountersGfx8,
        kSqPs2CountersGfx8,
        kSqPs3CountersGfx8,
        kSqLs0CountersGfx8,
        kSqLs1CountersGfx8,
        kSqLs2CountersGfx8,
        kSqLs3CountersGfx8,
        kSqHs0CountersGfx8,
        kSqHs1CountersGfx8,
        kSqHs2CountersGfx8,
        kSqHs3CountersGfx8,
        kSqCs0CountersGfx8,
        kSqCs1CountersGfx8,
        kSqCs2CountersGfx8,
        kSqCs3CountersGfx8,
        kTa0CountersGfx8,
        kTa1CountersGfx8,
        kTa2CountersGfx8,
        kTa3CountersGfx8,
        kTa4CountersGfx8,
        kTa5CountersGfx8,
        kTa6CountersGfx8,
        kTa7CountersGfx8,
        kTa8CountersGfx8,
        kTa9CountersGfx8,
        kTa10CountersGfx8,
        kTa11CountersGfx8,
        kTa12CountersGfx8,
        kTa13CountersGfx8,
        kTa14CountersGfx8,
        kTa15CountersGfx8,
        kTa16CountersGfx8,
        kTa17CountersGfx8,
        kTa18CountersGfx8,
        kTa19CountersGfx8,
        kTa20CountersGfx8,
        kTa21CountersGfx8,
        kTa22CountersGfx8,
        kTa23CountersGfx8,
        kTa24CountersGfx8,
        kTa25CountersGfx8,
        kTa26CountersGfx8,
        kTa27CountersGfx8,
        kTa28CountersGfx8,
        kTa29CountersGfx8,
        kTa30CountersGfx8,
        kTa31CountersGfx8,
        kTa32CountersGfx8,
        kTa33CountersGfx8,
        kTa34CountersGfx8,
        kTa35CountersGfx8,
        kTa36CountersGfx8,
        kTa37CountersGfx8,
        kTa38CountersGfx8,
        kTa39CountersGfx8,
        kTa40CountersGfx8,
        kTa41CountersGfx8,
        kTa42CountersGfx8,
        kTa43CountersGfx8,
        kTa44CountersGfx8,
        kTa45CountersGfx8,
        kTa46CountersGfx8,
        kTa47CountersGfx8,
        kTa48CountersGfx8,
        kTa49CountersGfx8,
        kTa50CountersGfx8,
        kTa51CountersGfx8,
        kTa52CountersGfx8,
        kTa53CountersGfx8,
        kTa54CountersGfx8,
        kTa55CountersGfx8,
        kTa56CountersGfx8,
        kTa57CountersGfx8,
        kTa58CountersGfx8,
        kTa59CountersGfx8,
        kTa60CountersGfx8,
        kTa61CountersGfx8,
        kTa62CountersGfx8,
        kTa63CountersGfx8,
        kTd0CountersGfx8,
        kTd1CountersGfx8,
        kTd2CountersGfx8,
        kTd3CountersGfx8,
        kTd4CountersGfx8,
        kTd5CountersGfx8,
        kTd6CountersGfx8,
        kTd7CountersGfx8,
        kTd8CountersGfx8,
        kTd9CountersGfx8,
        kTd10CountersGfx8,
        kTd11CountersGfx8,
        kTd12CountersGfx8,
        kTd13CountersGfx8,
        kTd14CountersGfx8,
        kTd15CountersGfx8,
        kTd16CountersGfx8,
        kTd17CountersGfx8,
        kTd18CountersGfx8,
        kTd19CountersGfx8,
        kTd20CountersGfx8,
        kTd21CountersGfx8,
        kTd22CountersGfx8,
        kTd23CountersGfx8,
        kTd24CountersGfx8,
        kTd25CountersGfx8,
        kTd26CountersGfx8,
        kTd27CountersGfx8,
        kTd28CountersGfx8,
        kTd29CountersGfx8,
        kTd30CountersGfx8,
        kTd31CountersGfx8,
        kTd32CountersGfx8,
        kTd33CountersGfx8,
        kTd34CountersGfx8,
        kTd35CountersGfx8,
        kTd36CountersGfx8,
        kTd37CountersGfx8,
        kTd38CountersGfx8,
        kTd39CountersGfx8,
        kTd40CountersGfx8,
        kTd41CountersGfx8,
        kTd42CountersGfx8,
        kTd43CountersGfx8,
        kTd44CountersGfx8,
        kTd45CountersGfx8,
        kTd46CountersGfx8,
        kTd47CountersGfx8,
        kTd48CountersGfx8,
        kTd49CountersGfx8,
        kTd50CountersGfx8,
        kTd51CountersGfx8,
        kTd52CountersGfx8,
        kTd53CountersGfx8,
        kTd54CountersGfx8,
        kTd55CountersGfx8,
        kTd56CountersGfx8,
        kTd57CountersGfx8,
        kTd58CountersGfx8,
        kTd59CountersGfx8,
        kTd60CountersGfx8,
        kTd61CountersGfx8,
        kTd62CountersGfx8,
        kTd63CountersGfx8,
        kTcp0CountersGfx8,
        kTcp1CountersGfx8,
        kTcp2CountersGfx8,
        kTcp3CountersGfx8,
        kTcp4CountersGfx8,
        kTcp5CountersGfx8,
        kTcp6CountersGfx8,
        kTcp7CountersGfx8,
        kTcp8CountersGfx8,
        kTcp9CountersGfx8,
        kTcp10CountersGfx8,
        kTcp11CountersGfx8,
        kTcp12CountersGfx8,
        kTcp13CountersGfx8,
        kTcp14CountersGfx8,
        kTcp15CountersGfx8,
        kTcp16CountersGfx8,
        kTcp17CountersGfx8,
        kTcp18CountersGfx8,
        kTcp19CountersGfx8,
        kTcp20CountersGfx8,
        kTcp21CountersGfx8,
        kTcp22CountersGfx8,
        kTcp23CountersGfx8,
        kTcp24CountersGfx8,
        kTcp25CountersGfx8,
        kTcp26CountersGfx8,
        kTcp27CountersGfx8,
        kTcp28CountersGfx8,
        kTcp29CountersGfx8,
        kTcp30CountersGfx8,
        kTcp31CountersGfx8,
        kTcp32CountersGfx8,
        kTcp33CountersGfx8,
        kTcp34CountersGfx8,
        kTcp35CountersGfx8,
        kTcp36CountersGfx8,
        kTcp37CountersGfx8,
        kTcp38CountersGfx8,
        kTcp39CountersGfx8,
        kTcp40CountersGfx8,
        kTcp41CountersGfx8,
        kTcp42CountersGfx8,
        kTcp43CountersGfx8,
        kTcp44CountersGfx8,
        kTcp45CountersGfx8,
        kTcp46CountersGfx8,
        kTcp47CountersGfx8,
        kTcp48CountersGfx8,
        kTcp49CountersGfx8,
        kTcp50CountersGfx8,
        kTcp51CountersGfx8,
        kTcp52CountersGfx8,
        kTcp53CountersGfx8,
        kTcp54CountersGfx8,
        kTcp55CountersGfx8,
        kTcp56CountersGfx8,
        kTcp57CountersGfx8,
        kTcp58CountersGfx8,
        kTcp59CountersGfx8,
        kTcp60CountersGfx8,
        kTcp61CountersGfx8,
        kTcp62CountersGfx8,
        kTcp63CountersGfx8,
        kTcc0CountersGfx8,
        kTcc1CountersGfx8,
        kTcc2CountersGfx8,
        kTcc3CountersGfx8,
        kTcc4CountersGfx8,
        kTcc5CountersGfx8,
        kTcc6CountersGfx8,
        kTcc7CountersGfx8,
        kTcc8CountersGfx8,
        kTcc9CountersGfx8,
        kTcc10CountersGfx8,
        kTcc11CountersGfx8,
        kTcc12CountersGfx8,
        kTcc13CountersGfx8,
        kTcc14CountersGfx8,
        kTcc15CountersGfx8,
        kTca0CountersGfx8,
        kTca1CountersGfx8,
        kGdsCountersGfx8,
        kIa0CountersGfx8,
        kIa1CountersGfx8,
        kVgt0CountersGfx8,
        kVgt1CountersGfx8,
        kVgt2CountersGfx8,
        kVgt3CountersGfx8,
        kMc0CountersGfx8,
        kMc1CountersGfx8,
        kMc2CountersGfx8,
        kMc3CountersGfx8,
        kMc4CountersGfx8,
        kMc5CountersGfx8,
        kMc6CountersGfx8,
        kMc7CountersGfx8,
        kMc8CountersGfx8,
        kMc9CountersGfx8,
        kMc10CountersGfx8,
        kMc11CountersGfx8,
        kMc12CountersGfx8,
        kMc13CountersGfx8,
        kMc14CountersGfx8,
        kMc15CountersGfx8,
        kMc16CountersGfx8,
        kMc17CountersGfx8,
        kMc18CountersGfx8,
        kMc19CountersGfx8,
        kMc20CountersGfx8,
        kMc21CountersGfx8,
        kMc22CountersGfx8,
        kMc23CountersGfx8,
        kMc24CountersGfx8,
        kMc25CountersGfx8,
        kMc26CountersGfx8,
        kMc27CountersGfx8,
        kMc28CountersGfx8,
        kMc29CountersGfx8,
        kMc30CountersGfx8,
        kMc31CountersGfx8,
        kCpgCountersGfx8,
        kCpcCountersGfx8,
        kWdCountersGfx8,
        kGpuTimestampCountersGfx8,
        kGpuTimeCountersGfx8,
    };

    GpaHardwareCounterDesc* kDx11ExposedCountersGroupArrayGfx8[] = {
        kCb0ExposedCountersGfx8,
        kCb1ExposedCountersGfx8,
        kCb2ExposedCountersGfx8,
        kCb3ExposedCountersGfx8,
        kCb4ExposedCountersGfx8,
        kCb5ExposedCountersGfx8,
        kCb6ExposedCountersGfx8,
        kCb7ExposedCountersGfx8,
        kCb8ExposedCountersGfx8,
        kCb9ExposedCountersGfx8,
        kCb10ExposedCountersGfx8,
        kCb11ExposedCountersGfx8,
        kCb12ExposedCountersGfx8,
        kCb13ExposedCountersGfx8,
        kCb14ExposedCountersGfx8,
        kCb15ExposedCountersGfx8,
        kDb0ExposedCountersGfx8,
        kDb1ExposedCountersGfx8,
        kDb2ExposedCountersGfx8,
        kDb3ExposedCountersGfx8,
        kDb4ExposedCountersGfx8,
        kDb5ExposedCountersGfx8,
        kDb6ExposedCountersGfx8,
        kDb7ExposedCountersGfx8,
        kDb8ExposedCountersGfx8,
        kDb9ExposedCountersGfx8,
        kDb10ExposedCountersGfx8,
        kDb11ExposedCountersGfx8,
        kDb12ExposedCountersGfx8,
        kDb13ExposedCountersGfx8,
        kDb14ExposedCountersGfx8,
        kDb15ExposedCountersGfx8,
        kGrbmExposedCountersGfx8,
        kPaSu0ExposedCountersGfx8,
        kPaSu1ExposedCountersGfx8,
        kPaSu2ExposedCountersGfx8,
        kPaSu3ExposedCountersGfx8,
        kPaSc0ExposedCountersGfx8,
        kPaSc1ExposedCountersGfx8,
        kPaSc2ExposedCountersGfx8,
        kPaSc3ExposedCountersGfx8,
        kSx0ExposedCountersGfx8,
        kSx1ExposedCountersGfx8,
        kSx2ExposedCountersGfx8,
        kSx3ExposedCountersGfx8,
        kSpi0ExposedCountersGfx8,
        kSpi1ExposedCountersGfx8,
        kSpi2ExposedCountersGfx8,
        kSpi3ExposedCountersGfx8,
        kSq0ExposedCountersGfx8,
        kSq1ExposedCountersGfx8,
        kSq2ExposedCountersGfx8,
        kSq3ExposedCountersGfx8,
        kSqEs0ExposedCountersGfx8,
        kSqEs1ExposedCountersGfx8,
        kSqEs2ExposedCountersGfx8,
        kSqEs3ExposedCountersGfx8,
        kSqGs0ExposedCountersGfx8,
        kSqGs1ExposedCountersGfx8,
        kSqGs2ExposedCountersGfx8,
        kSqGs3ExposedCountersGfx8,
        kSqVs0ExposedCountersGfx8,
        kSqVs1ExposedCountersGfx8,
        kSqVs2ExposedCountersGfx8,
        kSqVs3ExposedCountersGfx8,
        kSqPs0ExposedCountersGfx8,
        kSqPs1ExposedCountersGfx8,
        kSqPs2ExposedCountersGfx8,
        kSqPs3ExposedCountersGfx8,
        kSqLs0ExposedCountersGfx8,
        kSqLs1ExposedCountersGfx8,
        kSqLs2ExposedCountersGfx8,
        kSqLs3ExposedCountersGfx8,
        kSqHs0ExposedCountersGfx8,
        kSqHs1ExposedCountersGfx8,
        kSqHs2ExposedCountersGfx8,
        kSqHs3ExposedCountersGfx8,
        kSqCs0ExposedCountersGfx8,
        kSqCs1ExposedCountersGfx8,
        kSqCs2ExposedCountersGfx8,
        kSqCs3ExposedCountersGfx8,
        kTa0ExposedCountersGfx8,
        kTa1ExposedCountersGfx8,
        kTa2ExposedCountersGfx8,
        kTa3ExposedCountersGfx8,
        kTa4ExposedCountersGfx8,
        kTa5ExposedCountersGfx8,
        kTa6ExposedCountersGfx8,
        kTa7ExposedCountersGfx8,
        kTa8ExposedCountersGfx8,
        kTa9ExposedCountersGfx8,
        kTa10ExposedCountersGfx8,
        kTa11ExposedCountersGfx8,
        kTa12ExposedCountersGfx8,
        kTa13ExposedCountersGfx8,
        kTa14ExposedCountersGfx8,
        kTa15ExposedCountersGfx8,
        kTa16ExposedCountersGfx8,
        kTa17ExposedCountersGfx8,
        kTa18ExposedCountersGfx8,
        kTa19ExposedCountersGfx8,
        kTa20ExposedCountersGfx8,
        kTa21ExposedCountersGfx8,
        kTa22ExposedCountersGfx8,
        kTa23ExposedCountersGfx8,
        kTa24ExposedCountersGfx8,
        kTa25ExposedCountersGfx8,
        kTa26ExposedCountersGfx8,
        kTa27ExposedCountersGfx8,
        kTa28ExposedCountersGfx8,
        kTa29ExposedCountersGfx8,
        kTa30ExposedCountersGfx8,
        kTa31ExposedCountersGfx8,
        kTa32ExposedCountersGfx8,
        kTa33ExposedCountersGfx8,
        kTa34ExposedCountersGfx8,
        kTa35ExposedCountersGfx8,
        kTa36ExposedCountersGfx8,
        kTa37ExposedCountersGfx8,
        kTa38ExposedCountersGfx8,
        kTa39ExposedCountersGfx8,
        kTa40ExposedCountersGfx8,
        kTa41ExposedCountersGfx8,
        kTa42ExposedCountersGfx8,
        kTa43ExposedCountersGfx8,
        kTa44ExposedCountersGfx8,
        kTa45ExposedCountersGfx8,
        kTa46ExposedCountersGfx8,
        kTa47ExposedCountersGfx8,
        kTa48ExposedCountersGfx8,
        kTa49ExposedCountersGfx8,
        kTa50ExposedCountersGfx8,
        kTa51ExposedCountersGfx8,
        kTa52ExposedCountersGfx8,
        kTa53ExposedCountersGfx8,
        kTa54ExposedCountersGfx8,
        kTa55ExposedCountersGfx8,
        kTa56ExposedCountersGfx8,
        kTa57ExposedCountersGfx8,
        kTa58ExposedCountersGfx8,
        kTa59ExposedCountersGfx8,
        kTa60ExposedCountersGfx8,
        kTa61ExposedCountersGfx8,
        kTa62ExposedCountersGfx8,
        kTa63ExposedCountersGfx8,
        kTcp0ExposedCountersGfx8,
        kTcp1ExposedCountersGfx8,
        kTcp2ExposedCountersGfx8,
        kTcp3ExposedCountersGfx8,
        kTcp4ExposedCountersGfx8,
        kTcp5ExposedCountersGfx8,
        kTcp6ExposedCountersGfx8,
        kTcp7ExposedCountersGfx8,
        kTcp8ExposedCountersGfx8,
        kTcp9ExposedCountersGfx8,
        kTcp10ExposedCountersGfx8,
        kTcp11ExposedCountersGfx8,
        kTcp12ExposedCountersGfx8,
        kTcp13ExposedCountersGfx8,
        kTcp14ExposedCountersGfx8,
        kTcp15ExposedCountersGfx8,
        kTcp16ExposedCountersGfx8,
        kTcp17ExposedCountersGfx8,
        kTcp18ExposedCountersGfx8,
        kTcp19ExposedCountersGfx8,
        kTcp20ExposedCountersGfx8,
        kTcp21ExposedCountersGfx8,
        kTcp22ExposedCountersGfx8,
        kTcp23ExposedCountersGfx8,
        kTcp24ExposedCountersGfx8,
        kTcp25ExposedCountersGfx8,
        kTcp26ExposedCountersGfx8,
        kTcp27ExposedCountersGfx8,
        kTcp28ExposedCountersGfx8,
        kTcp29ExposedCountersGfx8,
        kTcp30ExposedCountersGfx8,
        kTcp31ExposedCountersGfx8,
        kTcp32ExposedCountersGfx8,
        kTcp33ExposedCountersGfx8,
        kTcp34ExposedCountersGfx8,
        kTcp35ExposedCountersGfx8,
        kTcp36ExposedCountersGfx8,
        kTcp37ExposedCountersGfx8,
        kTcp38ExposedCountersGfx8,
        kTcp39ExposedCountersGfx8,
        kTcp40ExposedCountersGfx8,
        kTcp41ExposedCountersGfx8,
        kTcp42ExposedCountersGfx8,
        kTcp43ExposedCountersGfx8,
        kTcp44ExposedCountersGfx8,
        kTcp45ExposedCountersGfx8,
        kTcp46ExposedCountersGfx8,
        kTcp47ExposedCountersGfx8,
        kTcp48ExposedCountersGfx8,
        kTcp49ExposedCountersGfx8,
        kTcp50ExposedCountersGfx8,
        kTcp51ExposedCountersGfx8,
        kTcp52ExposedCountersGfx8,
        kTcp53ExposedCountersGfx8,
        kTcp54ExposedCountersGfx8,
        kTcp55ExposedCountersGfx8,
        kTcp56ExposedCountersGfx8,
        kTcp57ExposedCountersGfx8,
        kTcp58ExposedCountersGfx8,
        kTcp59ExposedCountersGfx8,
        kTcp60ExposedCountersGfx8,
        kTcp61ExposedCountersGfx8,
        kTcp62ExposedCountersGfx8,
        kTcp63ExposedCountersGfx8,
        kTcc0ExposedCountersGfx8,
        kTcc1ExposedCountersGfx8,
        kTcc2ExposedCountersGfx8,
        kTcc3ExposedCountersGfx8,
        kTcc4ExposedCountersGfx8,
        kTcc5ExposedCountersGfx8,
        kTcc6ExposedCountersGfx8,
        kTcc7ExposedCountersGfx8,
        kTcc8ExposedCountersGfx8,
        kTcc9ExposedCountersGfx8,
        kTcc10ExposedCountersGfx8,
        kTcc11ExposedCountersGfx8,
        kTcc12ExposedCountersGfx8,
        kTcc13ExposedCountersGfx8,
        kTcc14ExposedCountersGfx8,
        kTcc15ExposedCountersGfx8,
        kVgt0ExposedCountersGfx8,
        kVgt1ExposedCountersGfx8,
        kVgt2ExposedCountersGfx8,
        kVgt3ExposedCountersGfx8,
        kGputimeExposedCountersGfx8,
    };

    GpaCounterGroupDesc kHwDx11GroupsGfx8[] = {
        {0, "SDMA0", 0, 62, 2, 0},
        {1, "SDMA1", 1, 62, 2, 0},
        {2, "SRBM", 0, 27, 2, 0},
        {3, "CPF", 0, 19, 2, 0},
        {4, "CB0", 0, 396, 4, 0},
        {5, "CB1", 1, 396, 4, 0},
        {6, "CB2", 2, 396, 4, 0},
        {7, "CB3", 3, 396, 4, 0},
        {8, "CB4", 4, 396, 4, 0},
        {9, "CB5", 5, 396, 4, 0},
        {10, "CB6", 6, 396, 4, 0},
        {11, "CB7", 7, 396, 4, 0},
        {12, "CB8", 8, 396, 4, 0},
        {13, "CB9", 9, 396, 4, 0},
        {14, "CB10", 10, 396, 4, 0},
        {15, "CB11", 11, 396, 4, 0},
        {16, "CB12", 12, 396, 4, 0},
        {17, "CB13", 13, 396, 4, 0},
        {18, "CB14", 14, 396, 4, 0},
        {19, "CB15", 15, 396, 4, 0},
        {20, "DB0", 0, 257, 4, 0},
        {21, "DB1", 1, 257, 4, 0},
        {22, "DB2", 2, 257, 4, 0},
        {23, "DB3", 3, 257, 4, 0},
        {24, "DB4", 4, 257, 4, 0},
        {25, "DB5", 5, 257, 4, 0},
        {26, "DB6", 6, 257, 4, 0},
        {27, "DB7", 7, 257, 4, 0},
        {28, "DB8", 8, 257, 4, 0},
        {29, "DB9", 9, 257, 4, 0},
        {30, "DB10", 10, 257, 4, 0},
        {31, "DB11", 11, 257, 4, 0},
        {32, "DB12", 12, 257, 4, 0},
        {33, "DB13", 13, 257, 4, 0},
        {34, "DB14", 14, 257, 4, 0},
        {35, "DB15", 15, 257, 4, 0},
        {36, "GRBM", 0, 34, 2, 0},
        {37, "GRBMSE0", 0, 15, 4, 0},
        {38, "GRBMSE1", 1, 15, 4, 0},
        {39, "GRBMSE2", 2, 15, 4, 0},
        {40, "GRBMSE3", 3, 15, 4, 0},
        {41, "RLC", 0, 7, 2, 0},
        {42, "PA_SU0", 0, 153, 4, 0},
        {43, "PA_SU1", 1, 153, 4, 0},
        {44, "PA_SU2", 2, 153, 4, 0},
        {45, "PA_SU3", 3, 153, 4, 0},
        {46, "PA_SC0", 0, 397, 8, 0},
        {47, "PA_SC1", 1, 397, 8, 0},
        {48, "PA_SC2", 2, 397, 8, 0},
        {49, "PA_SC3", 3, 397, 8, 0},
        {50, "SX0", 0, 34, 4, 0},
        {51, "SX1", 1, 34, 4, 0},
        {52, "SX2", 2, 34, 4, 0},
        {53, "SX3", 3, 34, 4, 0},
        {54, "SPI0", 0, 197, 6, 0},
        {55, "SPI1", 1, 197, 6, 0},
        {56, "SPI2", 2, 197, 6, 0},
        {57, "SPI3", 3, 197, 6, 0},
        {58, "SQ0", 0, 299, 16, 0},
        {59, "SQ1", 1, 299, 16, 0},
        {60, "SQ2", 2, 299, 16, 0},
        {61, "SQ3", 3, 299, 16, 0},
        {62, "SQ_ES0", 0, 299, 16, 0},
        {63, "SQ_ES1", 1, 299, 16, 0},
        {64, "SQ_ES2", 2, 299, 16, 0},
        {65, "SQ_ES3", 3, 299, 16, 0},
        {66, "SQ_GS0", 0, 299, 16, 0},
        {67, "SQ_GS1", 1, 299, 16, 0},
        {68, "SQ_GS2", 2, 299, 16, 0},
        {69, "SQ_GS3", 3, 299, 16, 0},
        {70, "SQ_VS0", 0, 299, 16, 0},
        {71, "SQ_VS1", 1, 299, 16, 0},
        {72, "SQ_VS2", 2, 299, 16, 0},
        {73, "SQ_VS3", 3, 299, 16, 0},
        {74, "SQ_PS0", 0, 299, 16, 0},
        {75, "SQ_PS1", 1, 299, 16, 0},
        {76, "SQ_PS2", 2, 299, 16, 0},
        {77, "SQ_PS3", 3, 299, 16, 0},
        {78, "SQ_LS0", 0, 299, 16, 0},
        {79, "SQ_LS1", 1, 299, 16, 0},
        {80, "SQ_LS2", 2, 299, 16, 0},
        {81, "SQ_LS3", 3, 299, 16, 0},
        {82, "SQ_HS0", 0, 299, 16, 0},
        {83, "SQ_HS1", 1, 299, 16, 0},
        {84, "SQ_HS2", 2, 299, 16, 0},
        {85, "SQ_HS3", 3, 299, 16, 0},
        {86, "SQ_CS0", 0, 299, 16, 0},
        {87, "SQ_CS1", 1, 299, 16, 0},
        {88, "SQ_CS2", 2, 299, 16, 0},
        {89, "SQ_CS3", 3, 299, 16, 0},
        {90, "TA0", 0, 119, 2, 0},
        {91, "TA1", 1, 119, 2, 0},
        {92, "TA2", 2, 119, 2, 0},
        {93, "TA3", 3, 119, 2, 0},
        {94, "TA4", 4, 119, 2, 0},
        {95, "TA5", 5, 119, 2, 0},
        {96, "TA6", 6, 119, 2, 0},
        {97, "TA7", 7, 119, 2, 0},
        {98, "TA8", 8, 119, 2, 0},
        {99, "TA9", 9, 119, 2, 0},
        {100, "TA10", 10, 119, 2, 0},
        {101, "TA11", 11, 119, 2, 0},
        {102, "TA12", 12, 119, 2, 0},
        {103, "TA13", 13, 119, 2, 0},
        {104, "TA14", 14, 119, 2, 0},
        {105, "TA15", 15, 119, 2, 0},
        {106, "TA16", 16, 119, 2, 0},
        {107, "TA17", 17, 119, 2, 0},
        {108, "TA18", 18, 119, 2, 0},
        {109, "TA19", 19, 119, 2, 0},
        {110, "TA20", 20, 119, 2, 0},
        {111, "TA21", 21, 119, 2, 0},
        {112, "TA22", 22, 119, 2, 0},
        {113, "TA23", 23, 119, 2, 0},
        {114, "TA24", 24, 119, 2, 0},
        {115, "TA25", 25, 119, 2, 0},
        {116, "TA26", 26, 119, 2, 0},
        {117, "TA27", 27, 119, 2, 0},
        {118, "TA28", 28, 119, 2, 0},
        {119, "TA29", 29, 119, 2, 0},
        {120, "TA30", 30, 119, 2, 0},
        {121, "TA31", 31, 119, 2, 0},
        {122, "TA32", 32, 119, 2, 0},
        {123, "TA33", 33, 119, 2, 0},
        {124, "TA34", 34, 119, 2, 0},
        {125, "TA35", 35, 119, 2, 0},
        {126, "TA36", 36, 119, 2, 0},
        {127, "TA37", 37, 119, 2, 0},
        {128, "TA38", 38, 119, 2, 0},
        {129, "TA39", 39, 119, 2, 0},
        {130, "TA40", 40, 119, 2, 0},
        {131, "TA41", 41, 119, 2, 0},
        {132, "TA42", 42, 119, 2, 0},
        {133, "TA43", 43, 119, 2, 0},
        {134, "TA44", 44, 119, 2, 0},
        {135, "TA45", 45, 119, 2, 0},
        {136, "TA46", 46, 119, 2, 0},
        {137, "TA47", 47, 119, 2, 0},
        {138, "TA48", 48, 119, 2, 0},
        {139, "TA49", 49, 119, 2, 0},
        {140, "TA50", 50, 119, 2, 0},
        {141, "TA51", 51, 119, 2, 0},
        {142, "TA52", 52, 119, 2, 0},
        {143, "TA53", 53, 119, 2, 0},
        {144, "TA54", 54, 119, 2, 0},
        {145, "TA55", 55, 119, 2, 0},
        {146, "TA56", 56, 119, 2, 0},
        {147, "TA57", 57, 119, 2, 0},
        {148, "TA58", 58, 119, 2, 0},
        {149, "TA59", 59, 119, 2, 0},
        {150, "TA60", 60, 119, 2, 0},
        {151, "TA61", 61, 119, 2, 0},
        {152, "TA62", 62, 119, 2, 0},
        {153, "TA63", 63, 119, 2, 0},
        {154, "TD0", 0, 55, 2, 0},
        {155, "TD1", 1, 55, 2, 0},
        {156, "TD2", 2, 55, 2, 0},
        {157, "TD3", 3, 55, 2, 0},
        {158, "TD4", 4, 55, 2, 0},
        {159, "TD5", 5, 55, 2, 0},
        {160, "TD6", 6, 55, 2, 0},
        {161, "TD7", 7, 55, 2, 0},
        {162, "TD8", 8, 55, 2, 0},
        {163, "TD9", 9, 55, 2, 0},
        {164, "TD10", 10, 55, 2, 0},
        {165, "TD11", 11, 55, 2, 0},
        {166, "TD12", 12, 55, 2, 0},
        {167, "TD13", 13, 55, 2, 0},
        {168, "TD14", 14, 55, 2, 0},
        {169, "TD15", 15, 55, 2, 0},
        {170, "TD16", 16, 55, 2, 0},
        {171, "TD17", 17, 55, 2, 0},
        {172, "TD18", 18, 55, 2, 0},
        {173, "TD19", 19, 55, 2, 0},
        {174, "TD20", 20, 55, 2, 0},
        {175, "TD21", 21, 55, 2, 0},
        {176, "TD22", 22, 55, 2, 0},
        {177, "TD23", 23, 55, 2, 0},
        {178, "TD24", 24, 55, 2, 0},
        {179, "TD25", 25, 55, 2, 0},
        {180, "TD26", 26, 55, 2, 0},
        {181, "TD27", 27, 55, 2, 0},
        {182, "TD28", 28, 55, 2, 0},
        {183, "TD29", 29, 55, 2, 0},
        {184, "TD30", 30, 55, 2, 0},
        {185, "TD31", 31, 55, 2, 0},
        {186, "TD32", 32, 55, 2, 0},
        {187, "TD33", 33, 55, 2, 0},
        {188, "TD34", 34, 55, 2, 0},
        {189, "TD35", 35, 55, 2, 0},
        {190, "TD36", 36, 55, 2, 0},
        {191, "TD37", 37, 55, 2, 0},
        {192, "TD38", 38, 55, 2, 0},
        {193, "TD39", 39, 55, 2, 0},
        {194, "TD40", 40, 55, 2, 0},
        {195, "TD41", 41, 55, 2, 0},
        {196, "TD42", 42, 55, 2, 0},
        {197, "TD43", 43, 55, 2, 0},
        {198, "TD44", 44, 55, 2, 0},
        {199, "TD45", 45, 55, 2, 0},
        {200, "TD46", 46, 55, 2, 0},
        {201, "TD47", 47, 55, 2, 0},
        {202, "TD48", 48, 55, 2, 0},
        {203, "TD49", 49, 55, 2, 0},
        {204, "TD50", 50, 55, 2, 0},
        {205, "TD51", 51, 55, 2, 0},
        {206, "TD52", 52, 55, 2, 0},
        {207, "TD53", 53, 55, 2, 0},
        {208, "TD54", 54, 55, 2, 0},
        {209, "TD55", 55, 55, 2, 0},
        {210, "TD56", 56, 55, 2, 0},
        {211, "TD57", 57, 55, 2, 0},
        {212, "TD58", 58, 55, 2, 0},
        {213, "TD59", 59, 55, 2, 0},
        {214, "TD60", 60, 55, 2, 0},
        {215, "TD61", 61, 55, 2, 0},
        {216, "TD62", 62, 55, 2, 0},
        {217, "TD63", 63, 55, 2, 0},
        {218, "TCP0", 0, 180, 4, 0},
        {219, "TCP1", 1, 180, 4, 0},
        {220, "TCP2", 2, 180, 4, 0},
        {221, "TCP3", 3, 180, 4, 0},
        {222, "TCP4", 4, 180, 4, 0},
        {223, "TCP5", 5, 180, 4, 0},
        {224, "TCP6", 6, 180, 4, 0},
        {225, "TCP7", 7, 180, 4, 0},
        {226, "TCP8", 8, 180, 4, 0},
        {227, "TCP9", 9, 180, 4, 0},
        {228, "TCP10", 10, 180, 4, 0},
        {229, "TCP11", 11, 180, 4, 0},
        {230, "TCP12", 12, 180, 4, 0},
        {231, "TCP13", 13, 180, 4, 0},
        {232, "TCP14", 14, 180, 4, 0},
        {233, "TCP15", 15, 180, 4, 0},
        {234, "TCP16", 16, 180, 4, 0},
        {235, "TCP17", 17, 180, 4, 0},
        {236, "TCP18", 18, 180, 4, 0},
        {237, "TCP19", 19, 180, 4, 0},
        {238, "TCP20", 20, 180, 4, 0},
        {239, "TCP21", 21, 180, 4, 0},
        {240, "TCP22", 22, 180, 4, 0},
        {241, "TCP23", 23, 180, 4, 0},
        {242, "TCP24", 24, 180, 4, 0},
        {243, "TCP25", 25, 180, 4, 0},
        {244, "TCP26", 26, 180, 4, 0},
        {245, "TCP27", 27, 180, 4, 0},
        {246, "TCP28", 28, 180, 4, 0},
        {247, "TCP29", 29, 180, 4, 0},
        {248, "TCP30", 30, 180, 4, 0},
        {249, "TCP31", 31, 180, 4, 0},
        {250, "TCP32", 32, 180, 4, 0},
        {251, "TCP33", 33, 180, 4, 0},
        {252, "TCP34", 34, 180, 4, 0},
        {253, "TCP35", 35, 180, 4, 0},
        {254, "TCP36", 36, 180, 4, 0},
        {255, "TCP37", 37, 180, 4, 0},
        {256, "TCP38", 38, 180, 4, 0},
        {257, "TCP39", 39, 180, 4, 0},
        {258, "TCP40", 40, 180, 4, 0},
        {259, "TCP41", 41, 180, 4, 0},
        {260, "TCP42", 42, 180, 4, 0},
        {261, "TCP43", 43, 180, 4, 0},
        {262, "TCP44", 44, 180, 4, 0},
        {263, "TCP45", 45, 180, 4, 0},
        {264, "TCP46", 46, 180, 4, 0},
        {265, "TCP47", 47, 180, 4, 0},
        {266, "TCP48", 48, 180, 4, 0},
        {267, "TCP49", 49, 180, 4, 0},
        {268, "TCP50", 50, 180, 4, 0},
        {269, "TCP51", 51, 180, 4, 0},
        {270, "TCP52", 52, 180, 4, 0},
        {271, "TCP53", 53, 180, 4, 0},
        {272, "TCP54", 54, 180, 4, 0},
        {273, "TCP55", 55, 180, 4, 0},
        {274, "TCP56", 56, 180, 4, 0},
        {275, "TCP57", 57, 180, 4, 0},
        {276, "TCP58", 58, 180, 4, 0},
        {277, "TCP59", 59, 180, 4, 0},
        {278, "TCP60", 60, 180, 4, 0},
        {279, "TCP61", 61, 180, 4, 0},
        {280, "TCP62", 62, 180, 4, 0},
        {281, "TCP63", 63, 180, 4, 0},
        {282, "TCC0", 0, 192, 4, 0},
        {283, "TCC1", 1, 192, 4, 0},
        {284, "TCC2", 2, 192, 4, 0},
        {285, "TCC3", 3, 192, 4, 0},
        {286, "TCC4", 4, 192, 4, 0},
        {287, "TCC5", 5, 192, 4, 0},
        {288, "TCC6", 6, 192, 4, 0},
        {289, "TCC7", 7, 192, 4, 0},
        {290, "TCC8", 8, 192, 4, 0},
        {291, "TCC9", 9, 192, 4, 0},
        {292, "TCC10", 10, 192, 4, 0},
        {293, "TCC11", 11, 192, 4, 0},
        {294, "TCC12", 12, 192, 4, 0},
        {295, "TCC13", 13, 192, 4, 0},
        {296, "TCC14", 14, 192, 4, 0},
        {297, "TCC15", 15, 192, 4, 0},
        {298, "TCA0", 0, 35, 4, 0},
        {299, "TCA1", 1, 35, 4, 0},
        {300, "GDS", 0, 121, 4, 0},
        {301, "IA0", 0, 24, 4, 0},
        {302, "IA1", 1, 24, 4, 0},
        {303, "VGT0", 0, 147, 4, 0},
        {304, "VGT1", 1, 147, 4, 0},
        {305, "VGT2", 2, 147, 4, 0},
        {306, "VGT3", 3, 147, 4, 0},
        {307, "MC0", 0, 33, 4, 0},
        {308, "MC1", 1, 33, 4, 0},
        {309, "MC2", 2, 33, 4, 0},
        {310, "MC3", 3, 33, 4, 0},
        {311, "MC4", 4, 33, 4, 0},
        {312, "MC5", 5, 33, 4, 0},
        {313, "MC6", 6, 33, 4, 0},
        {314, "MC7", 7, 33, 4, 0},
        {315, "MC8", 8, 33, 4, 0},
        {316, "MC9", 9, 33, 4, 0},
        {317, "MC10", 10, 33, 4, 0},
        {318, "MC11", 11, 33, 4, 0},
        {319, "MC12", 12, 33, 4, 0},
        {320, "MC13", 13, 33, 4, 0},
        {321, "MC14", 14, 33, 4, 0},
        {322, "MC15", 15, 33, 4, 0},
        {323, "MC16", 16, 33, 4, 0},
        {324, "MC17", 17, 33, 4, 0},
        {325, "MC18", 18, 33, 4, 0},
        {326, "MC19", 19, 33, 4, 0},
        {327, "MC20", 20, 33, 4, 0},
        {328, "MC21", 21, 33, 4, 0},
        {329, "MC22", 22, 33, 4, 0},
        {330, "MC23", 23, 33, 4, 0},
        {331, "MC24", 24, 33, 4, 0},
        {332, "MC25", 25, 33, 4, 0},
        {333, "MC26", 26, 33, 4, 0},
        {334, "MC27", 27, 33, 4, 0},
        {335, "MC28", 28, 33, 4, 0},
        {336, "MC29", 29, 33, 4, 0},
        {337, "MC30", 30, 33, 4, 0},
        {338, "MC31", 31, 33, 4, 0},
        {339, "CPG", 0, 48, 2, 0},
        {340, "CPC", 0, 24, 2, 0},
        {341, "WD", 0, 37, 4, 0},
        {342, "GPUTimeStamp", 0, 1, 1, 0},
        {343, "GPUTime", 0, 6, 2, 0},
    };

    GpaCounterGroupExposedCounterDesc kHwDx11ExposedCountersByGroupGfx8[] = {
        {4, 170, {7, 116, 117, 118, 118, 126, 127, 128, 162, 257, 259}},
        {5, 566, {7, 116, 117, 118, 118, 126, 127, 128, 162, 257, 259}},
        {6, 962, {7, 116, 117, 118, 118, 126, 127, 128, 162, 257, 259}},
        {7, 1358, {7, 116, 117, 118, 118, 126, 127, 128, 162, 257, 259}},
        {8, 1754, {7, 116, 117, 118, 118, 126, 127, 128, 162, 257, 259}},
        {9, 2150, {7, 116, 117, 118, 118, 126, 127, 128, 162, 257, 259}},
        {10, 2546, {7, 116, 117, 118, 118, 126, 127, 128, 162, 257, 259}},
        {11, 2942, {7, 116, 117, 118, 118, 126, 127, 128, 162, 257, 259}},
        {12, 3338, {7, 116, 117, 118, 118, 126, 127, 128, 162, 257, 259}},
        {13, 3734, {7, 116, 117, 118, 118, 126, 127, 128, 162, 257, 259}},
        {14, 4130, {7, 116, 117, 118, 118, 126, 127, 128, 162, 257, 259}},
        {15, 4526, {7, 116, 117, 118, 118, 126, 127, 128, 162, 257, 259}},
        {16, 4922, {7, 116, 117, 118, 118, 126, 127, 128, 162, 257, 259}},
        {17, 5318, {7, 116, 117, 118, 118, 126, 127, 128, 162, 257, 259}},
        {18, 5714, {7, 116, 117, 118, 118, 126, 127, 128, 162, 257, 259}},
        {19, 6110, {7, 116, 117, 118, 118, 126, 127, 128, 162, 257, 259}},
        {20, 6506, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {21, 6763, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {22, 7020, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {23, 7277, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {24, 7534, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {25, 7791, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {26, 8048, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {27, 8305, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {28, 8562, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {29, 8819, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {30, 9076, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {31, 9333, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {32, 9590, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {33, 9847, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {34, 10104, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {35, 10361, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {36, 10618, {0, 2}},
        {42, 10719, {8, 14, 21, 54, 55, 56, 57, 61, 62, 73, 74, 105, 109}},
        {43, 10872, {8, 14, 21, 54, 55, 56, 57, 61, 62, 73, 74, 105, 109}},
        {44, 11025, {8, 14, 21, 54, 55, 56, 57, 61, 62, 73, 74, 105, 109}},
        {45, 11178, {8, 14, 21, 54, 55, 56, 57, 61, 62, 73, 74, 105, 109}},
        {46, 11331, {163, 164, 165, 166, 239, 240, 241, 242, 263}},
        {47, 11728, {163, 164, 165, 166, 239, 240, 241, 242, 263}},
        {48, 12125, {163, 164, 165, 166, 239, 240, 241, 242, 263}},
        {49, 12522, {163, 164, 165, 166, 239, 240, 241, 242, 263}},
        {50, 12919, {12, 14, 17, 19, 22, 24, 27, 29}},
        {51, 12953, {12, 14, 17, 19, 22, 24, 27, 29}},
        {52, 12987, {12, 14, 17, 19, 22, 24, 27, 29}},
        {53, 13021, {12, 14, 17, 19, 22, 24, 27, 29}},
        {54, 13055, {1, 10, 17, 20, 26, 32, 38, 44, 48, 54, 58, 59, 62, 64, 65, 68, 70, 75}},
        {55, 13252, {1, 10, 17, 20, 26, 32, 38, 44, 48, 54, 58, 59, 62, 64, 65, 68, 70, 75}},
        {56, 13449, {1, 10, 17, 20, 26, 32, 38, 44, 48, 54, 58, 59, 62, 64, 65, 68, 70, 75}},
        {57, 13646, {1, 10, 17, 20, 26, 32, 38, 44, 48, 54, 58, 59, 62, 64, 65, 68, 70, 75}},
        {58, 13843, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {59, 14142, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {60, 14441, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {61, 14740, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {62, 15039, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {63, 15338, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {64, 15637, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {65, 15936, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {66, 16235, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {67, 16534, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {68, 16833, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {69, 17132, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {70, 17431, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {71, 17730, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {72, 18029, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {73, 18328, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {74, 18627, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {75, 18926, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {76, 19225, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {77, 19524, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {78, 19823, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {79, 20122, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {80, 20421, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {81, 20720, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {82, 21019, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {83, 21318, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {84, 21617, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {85, 21916, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {86, 22215, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {87, 22514, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {88, 22813, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {89, 23112, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 81, 86, 89, 97}},
        {90, 23411, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {91, 23530, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {92, 23649, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {93, 23768, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {94, 23887, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {95, 24006, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {96, 24125, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {97, 24244, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {98, 24363, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {99, 24482, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {100, 24601, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {101, 24720, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {102, 24839, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {103, 24958, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {104, 25077, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {105, 25196, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {106, 25315, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {107, 25434, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {108, 25553, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {109, 25672, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {110, 25791, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {111, 25910, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {112, 26029, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {113, 26148, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {114, 26267, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {115, 26386, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {116, 26505, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {117, 26624, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {118, 26743, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {119, 26862, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {120, 26981, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {121, 27100, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {122, 27219, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {123, 27338, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {124, 27457, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {125, 27576, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {126, 27695, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {127, 27814, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {128, 27933, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {129, 28052, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {130, 28171, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {131, 28290, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {132, 28409, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {133, 28528, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {134, 28647, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {135, 28766, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {136, 28885, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {137, 29004, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {138, 29123, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {139, 29242, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {140, 29361, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {141, 29480, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {142, 29599, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {143, 29718, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {144, 29837, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {145, 29956, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {146, 30075, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {147, 30194, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {148, 30313, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {149, 30432, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {150, 30551, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {151, 30670, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {152, 30789, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {153, 30908, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {218, 34547, {3}},
        {219, 34727, {3}},
        {220, 34907, {3}},
        {221, 35087, {3}},
        {222, 35267, {3}},
        {223, 35447, {3}},
        {224, 35627, {3}},
        {225, 35807, {3}},
        {226, 35987, {3}},
        {227, 36167, {3}},
        {228, 36347, {3}},
        {229, 36527, {3}},
        {230, 36707, {3}},
        {231, 36887, {3}},
        {232, 37067, {3}},
        {233, 37247, {3}},
        {234, 37427, {3}},
        {235, 37607, {3}},
        {236, 37787, {3}},
        {237, 37967, {3}},
        {238, 38147, {3}},
        {239, 38327, {3}},
        {240, 38507, {3}},
        {241, 38687, {3}},
        {242, 38867, {3}},
        {243, 39047, {3}},
        {244, 39227, {3}},
        {245, 39407, {3}},
        {246, 39587, {3}},
        {247, 39767, {3}},
        {248, 39947, {3}},
        {249, 40127, {3}},
        {250, 40307, {3}},
        {251, 40487, {3}},
        {252, 40667, {3}},
        {253, 40847, {3}},
        {254, 41027, {3}},
        {255, 41207, {3}},
        {256, 41387, {3}},
        {257, 41567, {3}},
        {258, 41747, {3}},
        {259, 41927, {3}},
        {260, 42107, {3}},
        {261, 42287, {3}},
        {262, 42467, {3}},
        {263, 42647, {3}},
        {264, 42827, {3}},
        {265, 43007, {3}},
        {266, 43187, {3}},
        {267, 43367, {3}},
        {268, 43547, {3}},
        {269, 43727, {3}},
        {270, 43907, {3}},
        {271, 44087, {3}},
        {272, 44267, {3}},
        {273, 44447, {3}},
        {274, 44627, {3}},
        {275, 44807, {3}},
        {276, 44987, {3}},
        {277, 45167, {3}},
        {278, 45347, {3}},
        {279, 45527, {3}},
        {280, 45707, {3}},
        {281, 45887, {3}},
        {282, 46067, {18, 19, 26, 28, 35}},
        {283, 46259, {18, 19, 26, 28, 35}},
        {284, 46451, {18, 19, 26, 28, 35}},
        {285, 46643, {18, 19, 26, 28, 35}},
        {286, 46835, {18, 19, 26, 28, 35}},
        {287, 47027, {18, 19, 26, 28, 35}},
        {288, 47219, {18, 19, 26, 28, 35}},
        {289, 47411, {18, 19, 26, 28, 35}},
        {290, 47603, {18, 19, 26, 28, 35}},
        {291, 47795, {18, 19, 26, 28, 35}},
        {292, 47987, {18, 19, 26, 28, 35}},
        {293, 48179, {18, 19, 26, 28, 35}},
        {294, 48371, {18, 19, 26, 28, 35}},
        {295, 48563, {18, 19, 26, 28, 35}},
        {296, 48755, {18, 19, 26, 28, 35}},
        {297, 48947, {18, 19, 26, 28, 35}},
        {303, 49378, {1, 9, 20, 96, 105, 124}},
        {304, 49525, {1, 9, 20, 96, 105, 124}},
        {305, 49672, {1, 9, 20, 96, 105, 124}},
        {306, 49819, {1, 9, 20, 96, 105, 124}},
        {343, 51132, {0, 1, 2, 3, 4, 5}},
    };

    GpaPaddedCounterDesc kDx11PaddedCounterByGroupGfx8[] = {
    {}
    };

    GpaSqCounterGroupDesc kHwDx11SqGroupsGfx8[] = {
        {58, 0, kSqAll},
        {59, 1, kSqAll},
        {60, 2, kSqAll},
        {61, 3, kSqAll},
        {62, 0, kSqEs},
        {63, 1, kSqEs},
        {64, 2, kSqEs},
        {65, 3, kSqEs},
        {66, 0, kSqGs},
        {67, 1, kSqGs},
        {68, 2, kSqGs},
        {69, 3, kSqGs},
        {70, 0, kSqVs},
        {71, 1, kSqVs},
        {72, 2, kSqVs},
        {73, 3, kSqVs},
        {74, 0, kSqPs},
        {75, 1, kSqPs},
        {76, 2, kSqPs},
        {77, 3, kSqPs},
        {78, 0, kSqLs},
        {79, 1, kSqLs},
        {80, 2, kSqLs},
        {81, 3, kSqLs},
        {82, 0, kSqHs},
        {83, 1, kSqHs},
        {84, 2, kSqHs},
        {85, 3, kSqHs},
        {86, 0, kSqCs},
        {87, 1, kSqCs},
        {88, 2, kSqCs},
        {89, 3, kSqCs},
    };


    unsigned int kHwDx11SqIsolatedGroupsGfx8[] = {
        90, // Ta
        91, // Ta
        92, // Ta
        93, // Ta
        94, // Ta
        95, // Ta
        96, // Ta
        97, // Ta
        98, // Ta
        99, // Ta
        100, // Ta
        101, // Ta
        102, // Ta
        103, // Ta
        104, // Ta
        105, // Ta
        106, // Ta
        107, // Ta
        108, // Ta
        109, // Ta
        110, // Ta
        111, // Ta
        112, // Ta
        113, // Ta
        114, // Ta
        115, // Ta
        116, // Ta
        117, // Ta
        118, // Ta
        119, // Ta
        120, // Ta
        121, // Ta
        122, // Ta
        123, // Ta
        124, // Ta
        125, // Ta
        126, // Ta
        127, // Ta
        128, // Ta
        129, // Ta
        130, // Ta
        131, // Ta
        132, // Ta
        133, // Ta
        134, // Ta
        135, // Ta
        136, // Ta
        137, // Ta
        138, // Ta
        139, // Ta
        140, // Ta
        141, // Ta
        142, // Ta
        143, // Ta
        144, // Ta
        145, // Ta
        146, // Ta
        147, // Ta
        148, // Ta
        149, // Ta
        150, // Ta
        151, // Ta
        152, // Ta
        153, // Ta
        154, // Td
        155, // Td
        156, // Td
        157, // Td
        158, // Td
        159, // Td
        160, // Td
        161, // Td
        162, // Td
        163, // Td
        164, // Td
        165, // Td
        166, // Td
        167, // Td
        168, // Td
        169, // Td
        170, // Td
        171, // Td
        172, // Td
        173, // Td
        174, // Td
        175, // Td
        176, // Td
        177, // Td
        178, // Td
        179, // Td
        180, // Td
        181, // Td
        182, // Td
        183, // Td
        184, // Td
        185, // Td
        186, // Td
        187, // Td
        188, // Td
        189, // Td
        190, // Td
        191, // Td
        192, // Td
        193, // Td
        194, // Td
        195, // Td
        196, // Td
        197, // Td
        198, // Td
        199, // Td
        200, // Td
        201, // Td
        202, // Td
        203, // Td
        204, // Td
        205, // Td
        206, // Td
        207, // Td
        208, // Td
        209, // Td
        210, // Td
        211, // Td
        212, // Td
        213, // Td
        214, // Td
        215, // Td
        216, // Td
        217, // Td
        218, // Tcp
        219, // Tcp
        220, // Tcp
        221, // Tcp
        222, // Tcp
        223, // Tcp
        224, // Tcp
        225, // Tcp
        226, // Tcp
        227, // Tcp
        228, // Tcp
        229, // Tcp
        230, // Tcp
        231, // Tcp
        232, // Tcp
        233, // Tcp
        234, // Tcp
        235, // Tcp
        236, // Tcp
        237, // Tcp
        238, // Tcp
        239, // Tcp
        240, // Tcp
        241, // Tcp
        242, // Tcp
        243, // Tcp
        244, // Tcp
        245, // Tcp
        246, // Tcp
        247, // Tcp
        248, // Tcp
        249, // Tcp
        250, // Tcp
        251, // Tcp
        252, // Tcp
        253, // Tcp
        254, // Tcp
        255, // Tcp
        256, // Tcp
        257, // Tcp
        258, // Tcp
        259, // Tcp
        260, // Tcp
        261, // Tcp
        262, // Tcp
        263, // Tcp
        264, // Tcp
        265, // Tcp
        266, // Tcp
        267, // Tcp
        268, // Tcp
        269, // Tcp
        270, // Tcp
        271, // Tcp
        272, // Tcp
        273, // Tcp
        274, // Tcp
        275, // Tcp
        276, // Tcp
        277, // Tcp
        278, // Tcp
        279, // Tcp
        280, // Tcp
        281, // Tcp
        282, // Tcc
        283, // Tcc
        284, // Tcc
        285, // Tcc
        286, // Tcc
        287, // Tcc
        288, // Tcc
        289, // Tcc
        290, // Tcc
        291, // Tcc
        292, // Tcc
        293, // Tcc
        294, // Tcc
        295, // Tcc
        296, // Tcc
        297, // Tcc
        298, // Tca
        299, // Tca
    };

    PE_BLOCK_ID kHwDx11DriverEnumGfx8[] = {
    PE_BLOCK_SDMA,
    PE_BLOCK_SDMA,
    PE_BLOCK_SRBM,
    PE_BLOCK_CPF,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_GRBM,
    PE_BLOCK_GRBMSE,
    PE_BLOCK_GRBMSE,
    PE_BLOCK_GRBMSE,
    PE_BLOCK_GRBMSE,
    PE_BLOCK_RLC,
    PE_BLOCK_PA,
    PE_BLOCK_PA,
    PE_BLOCK_PA,
    PE_BLOCK_PA,
    PE_BLOCK_SC,
    PE_BLOCK_SC,
    PE_BLOCK_SC,
    PE_BLOCK_SC,
    PE_BLOCK_SX,
    PE_BLOCK_SX,
    PE_BLOCK_SX,
    PE_BLOCK_SX,
    PE_BLOCK_SPI,
    PE_BLOCK_SPI,
    PE_BLOCK_SPI,
    PE_BLOCK_SPI,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCA,
    PE_BLOCK_TCA,
    PE_BLOCK_GDS,
    PE_BLOCK_IA,
    PE_BLOCK_IA,
    PE_BLOCK_VGT,
    PE_BLOCK_VGT,
    PE_BLOCK_VGT,
    PE_BLOCK_VGT,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_MC,
    PE_BLOCK_CPG,
    PE_BLOCK_CPC,
    PE_BLOCK_WD,
    PE_BLOCK_UNKNOWN,
    PE_BLOCK_UNKNOWN,
    };

    const unsigned int kHwDx11GpuTimeBottomToBottomDurationIndexGfx8 = 51132; ///< Index of delta between the previous command reaching bottom of pipe and the current command reaching bottom of pipe, will not include latency of first data to travel through pipeline, best for large data sets. for Dx11 for Gfx8 family
    const unsigned int kHwDx11GpuTimeBottomToBottomStartIndexGfx8 = static_cast<unsigned int>(-1); ///< Index of time of the previous command reaching bottom of pipe for Dx11 for Gfx8 family
    const unsigned int kHwDx11GpuTimeBottomToBottomEndIndexGfx8 = static_cast<unsigned int>(-1); ///< Index of time of the current command reaching bottom of pipe for Dx11 for Gfx8 family
    const unsigned int kHwDx11GpuTimeTopToBottomDurationIndexGfx8 = 51135; ///< Index of execution duration of the current command from top of pipe to bottom of pipe, may include overhead of time in queue for Dx11 for Gfx8 family
    const unsigned int kHwDx11GpuTimeTopToBottomStartIndexGfx8 = static_cast<unsigned int>(-1); ///< Index of time that the current command reaches the top of pipe for Dx11 for Gfx8 family
    const unsigned int kHwDx11GpuTimeTopToBottomEndIndexGfx8 = static_cast<unsigned int>(-1); ///< Index of time that the current command reaches the bottom of pipe for Dx11 for Gfx8 family
    const std::set<unsigned int> kHwDx11TimestampBlockIdsGfx8 =       {343, 342}; ///< Timestamp block id's for DX11 for gfx8 family
    const std::set<unsigned int> kHwDx11TimeCounterIndicesGfx8 =      {51132, 51133, 51134, 51135, 51136, 51137, 51131}; ///< Timestamp counter indices for DX11 for gfx8 family
    const unsigned int           kHwDx11GroupCountGfx8                = sizeof(kHwDx11GroupsGfx8) / sizeof(GpaCounterGroupDesc);
    const unsigned int           kHwDx11ExposedCountersGroupCountGfx8 = 230;
    const unsigned int           kDx11PaddedCounterGroupCountGfx8 = 0;
    const unsigned int           kHwDx11SqGroupCountGfx8              = sizeof(kHwDx11SqGroupsGfx8) / sizeof(GpaSqCounterGroupDesc);
    const unsigned int           kHwDx11SqIsolatedGroupCountGfx8      = sizeof(kHwDx11SqIsolatedGroupsGfx8) / sizeof(unsigned int);
} //  namespace counter_dx11_gfx8

// clang-format on
