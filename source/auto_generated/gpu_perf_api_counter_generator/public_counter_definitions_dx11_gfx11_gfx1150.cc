//==============================================================================
// Copyright (c) 2010-2025 Advanced Micro Devices, Inc. All rights reserved.
/// @author AMD Developer Tools Team
/// @file
/// @brief Public Counter Definitions for DX11 GFX11_GFX1150.
//==============================================================================

#include <array>
#include "gpu_perf_api_common/gpa_array_view.hpp"
// clang-format off
#include "gpu_perf_api_counter_generator/gpa_counter.h"
#include "auto_generated/gpu_perf_api_counter_generator/public_counter_definitions_dx11_gfx11_gfx1150.h"

// *** Note, this is an auto-generated file. Do not edit. Execute PublicCounterCompiler to rebuild.

#include "auto_generated/gpu_perf_api_counter_generator/gpa_hw_counter_gfx11_gfx1150.h"

namespace dx11_gfx11_gfx1150
{
bool UpdatePublicAsicSpecificCounters(GDT_HW_GENERATION desired_generation, GDT_HW_ASIC_TYPE asic_type, GpaDerivedCounters& c)
{
    UNREFERENCED_PARAMETER(desired_generation);
    UNREFERENCED_PARAMETER(c);  // Unreferenced if there are no ASIC specific block instance registers

    if (!counter_gfx11_gfx1150::MatchAsic(asic_type))
    {
        return false;
    }

    counter_gfx11_gfx1150::OverrideBlockInstanceCounters(asic_type);

    { // Index:0
        static constexpr std::array<GpaUInt32, 25> kHardwareCounters = {
                7724,
                8117,
                8510,
                8903,
                9296,
                9689,
                10082,
                10475,
                10868,
                11261,
                11654,
                12047,
                12440,
                12833,
                13226,
                13619,
                14012,
                14405,
                14798,
                15191,
                15584,
                15977,
                16370,
                16763,
                24,
        };
        c.UpdateAsicSpecificDerivedCounter("DepthStencilTestBusy",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,/,(100),*");
    }
    { // Index:1
        static constexpr std::array<GpaUInt32, 24> kHardwareCounters = {
                7724,
                8117,
                8510,
                8903,
                9296,
                9689,
                10082,
                10475,
                10868,
                11261,
                11654,
                12047,
                12440,
                12833,
                13226,
                13619,
                14012,
                14405,
                14798,
                15191,
                15584,
                15977,
                16370,
                16763,
        };
        c.UpdateAsicSpecificDerivedCounter("DepthStencilTestBusyCycles",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24");
    }
    { // Index:2
        static constexpr std::array<GpaUInt32, 48> kHardwareCounters = {
                7595,
                7988,
                8381,
                8774,
                9167,
                9560,
                9953,
                10346,
                10739,
                11132,
                11525,
                11918,
                12311,
                12704,
                13097,
                13490,
                13883,
                14276,
                14669,
                15062,
                15455,
                15848,
                16241,
                16634,
                7584,
                7977,
                8370,
                8763,
                9156,
                9549,
                9942,
                10335,
                10728,
                11121,
                11514,
                11907,
                12300,
                12693,
                13086,
                13479,
                13872,
                14265,
                14658,
                15051,
                15444,
                15837,
                16230,
                16623,
        };
        c.UpdateAsicSpecificDerivedCounter("HiZTilesAccepted",
                                           kHardwareCounters,
                                           "24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,-,(0),max,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,/,(100),*");
    }
    { // Index:3
        static constexpr std::array<GpaUInt32, 48> kHardwareCounters = {
                7584,
                7977,
                8370,
                8763,
                9156,
                9549,
                9942,
                10335,
                10728,
                11121,
                11514,
                11907,
                12300,
                12693,
                13086,
                13479,
                13872,
                14265,
                14658,
                15051,
                15444,
                15837,
                16230,
                16623,
                7595,
                7988,
                8381,
                8774,
                9167,
                9560,
                9953,
                10346,
                10739,
                11132,
                11525,
                11918,
                12311,
                12704,
                13097,
                13490,
                13883,
                14276,
                14669,
                15062,
                15455,
                15848,
                16241,
                16634,
        };
        c.UpdateAsicSpecificDerivedCounter("HiZTilesAcceptedCount",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(0),max");
    }
    { // Index:4
        static constexpr std::array<GpaUInt32, 24> kHardwareCounters = {
                7595,
                7988,
                8381,
                8774,
                9167,
                9560,
                9953,
                10346,
                10739,
                11132,
                11525,
                11918,
                12311,
                12704,
                13097,
                13490,
                13883,
                14276,
                14669,
                15062,
                15455,
                15848,
                16241,
                16634,
        };
        c.UpdateAsicSpecificDerivedCounter("HiZTilesRejectedCount",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24");
    }
    { // Index:5
        static constexpr std::array<GpaUInt32, 48> kHardwareCounters = {
                7584,
                7977,
                8370,
                8763,
                9156,
                9549,
                9942,
                10335,
                10728,
                11121,
                11514,
                11907,
                12300,
                12693,
                13086,
                13479,
                13872,
                14265,
                14658,
                15051,
                15444,
                15837,
                16230,
                16623,
                7608,
                8001,
                8394,
                8787,
                9180,
                9573,
                9966,
                10359,
                10752,
                11145,
                11538,
                11931,
                12324,
                12717,
                13110,
                13503,
                13896,
                14289,
                14682,
                15075,
                15468,
                15861,
                16254,
                16647,
        };
        c.UpdateAsicSpecificDerivedCounter("PreZTilesDetailCulled",
                                           kHardwareCounters,
                                           "24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,/,(100),*");
    }
    { // Index:6
        static constexpr std::array<GpaUInt32, 24> kHardwareCounters = {
                7608,
                8001,
                8394,
                8787,
                9180,
                9573,
                9966,
                10359,
                10752,
                11145,
                11538,
                11931,
                12324,
                12717,
                13110,
                13503,
                13896,
                14289,
                14682,
                15075,
                15468,
                15861,
                16254,
                16647,
        };
        c.UpdateAsicSpecificDerivedCounter("PreZTilesDetailCulledCount",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24");
    }
    { // Index:7
        static constexpr std::array<GpaUInt32, 24> kHardwareCounters = {
                7584,
                7977,
                8370,
                8763,
                9156,
                9549,
                9942,
                10335,
                10728,
                11121,
                11514,
                11907,
                12300,
                12693,
                13086,
                13479,
                13872,
                14265,
                14658,
                15051,
                15444,
                15837,
                16230,
                16623,
        };
        c.UpdateAsicSpecificDerivedCounter("PreZTilesDetailSurvivingCount",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24");
    }
    { // Index:8
        static constexpr std::array<GpaUInt32, 48> kHardwareCounters = {
                19220,
                19895,
                20570,
                21245,
                21920,
                22595,
                23270,
                23945,
                24620,
                25295,
                25970,
                26645,
                27320,
                27995,
                28670,
                29345,
                30020,
                30695,
                31370,
                32045,
                32720,
                33395,
                34070,
                34745,
                19296,
                19971,
                20646,
                21321,
                21996,
                22671,
                23346,
                24021,
                24696,
                25371,
                26046,
                26721,
                27396,
                28071,
                28746,
                29421,
                30096,
                30771,
                31446,
                32121,
                32796,
                33471,
                34146,
                34821,
        };
        c.UpdateAsicSpecificDerivedCounter("HiZQuadsCulled",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,/,(100),*");
    }
    { // Index:9
        static constexpr std::array<GpaUInt32, 48> kHardwareCounters = {
                19220,
                19895,
                20570,
                21245,
                21920,
                22595,
                23270,
                23945,
                24620,
                25295,
                25970,
                26645,
                27320,
                27995,
                28670,
                29345,
                30020,
                30695,
                31370,
                32045,
                32720,
                33395,
                34070,
                34745,
                19296,
                19971,
                20646,
                21321,
                21996,
                22671,
                23346,
                24021,
                24696,
                25371,
                26046,
                26721,
                27396,
                28071,
                28746,
                29421,
                30096,
                30771,
                31446,
                32121,
                32796,
                33471,
                34146,
                34821,
        };
        c.UpdateAsicSpecificDerivedCounter("HiZQuadsCulledCount",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(0),max");
    }
    { // Index:10
        static constexpr std::array<GpaUInt32, 24> kHardwareCounters = {
                19296,
                19971,
                20646,
                21321,
                21996,
                22671,
                23346,
                24021,
                24696,
                25371,
                26046,
                26721,
                27396,
                28071,
                28746,
                29421,
                30096,
                30771,
                31446,
                32121,
                32796,
                33471,
                34146,
                34821,
        };
        c.UpdateAsicSpecificDerivedCounter("HiZQuadsAcceptedCount",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24");
    }
    { // Index:11
        static constexpr std::array<GpaUInt32, 72> kHardwareCounters = {
                19296,
                19971,
                20646,
                21321,
                21996,
                22671,
                23346,
                24021,
                24696,
                25371,
                26046,
                26721,
                27396,
                28071,
                28746,
                29421,
                30096,
                30771,
                31446,
                32121,
                32796,
                33471,
                34146,
                34821,
                19320,
                19995,
                20670,
                21345,
                22020,
                22695,
                23370,
                24045,
                24720,
                25395,
                26070,
                26745,
                27420,
                28095,
                28770,
                29445,
                30120,
                30795,
                31470,
                32145,
                32820,
                33495,
                34170,
                34845,
                19220,
                19895,
                20570,
                21245,
                21920,
                22595,
                23270,
                23945,
                24620,
                25295,
                25970,
                26645,
                27320,
                27995,
                28670,
                29345,
                30020,
                30695,
                31370,
                32045,
                32720,
                33395,
                34070,
                34745,
        };
        c.UpdateAsicSpecificDerivedCounter("PreZQuadsCulled",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(0),max,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,sum24,/,(100),*");
    }
    { // Index:12
        static constexpr std::array<GpaUInt32, 48> kHardwareCounters = {
                19296,
                19971,
                20646,
                21321,
                21996,
                22671,
                23346,
                24021,
                24696,
                25371,
                26046,
                26721,
                27396,
                28071,
                28746,
                29421,
                30096,
                30771,
                31446,
                32121,
                32796,
                33471,
                34146,
                34821,
                19320,
                19995,
                20670,
                21345,
                22020,
                22695,
                23370,
                24045,
                24720,
                25395,
                26070,
                26745,
                27420,
                28095,
                28770,
                29445,
                30120,
                30795,
                31470,
                32145,
                32820,
                33495,
                34170,
                34845,
        };
        c.UpdateAsicSpecificDerivedCounter("PreZQuadsCulledCount",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(0),max");
    }
    { // Index:13
        static constexpr std::array<GpaUInt32, 24> kHardwareCounters = {
                19320,
                19995,
                20670,
                21345,
                22020,
                22695,
                23370,
                24045,
                24720,
                25395,
                26070,
                26745,
                27420,
                28095,
                28770,
                29445,
                30120,
                30795,
                31470,
                32145,
                32820,
                33495,
                34170,
                34845,
        };
        c.UpdateAsicSpecificDerivedCounter("PreZQuadsSurvivingCount",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24");
    }
    { // Index:14
        static constexpr std::array<GpaUInt32, 48> kHardwareCounters = {
                19320,
                19995,
                20670,
                21345,
                22020,
                22695,
                23370,
                24045,
                24720,
                25395,
                26070,
                26745,
                27420,
                28095,
                28770,
                29445,
                30120,
                30795,
                31470,
                32145,
                32820,
                33495,
                34170,
                34845,
                19220,
                19895,
                20570,
                21245,
                21920,
                22595,
                23270,
                23945,
                24620,
                25295,
                25970,
                26645,
                27320,
                27995,
                28670,
                29345,
                30020,
                30695,
                31370,
                32045,
                32720,
                33395,
                34070,
                34745,
        };
        c.UpdateAsicSpecificDerivedCounter("PostZQuads",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,/,(100),*");
    }
    { // Index:15
        static constexpr std::array<GpaUInt32, 24> kHardwareCounters = {
                19320,
                19995,
                20670,
                21345,
                22020,
                22695,
                23370,
                24045,
                24720,
                25395,
                26070,
                26745,
                27420,
                28095,
                28770,
                29445,
                30120,
                30795,
                31470,
                32145,
                32820,
                33495,
                34170,
                34845,
        };
        c.UpdateAsicSpecificDerivedCounter("PostZQuadCount",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24");
    }
    { // Index:16
        static constexpr std::array<GpaUInt32, 24> kHardwareCounters = {
                7757,
                8150,
                8543,
                8936,
                9329,
                9722,
                10115,
                10508,
                10901,
                11294,
                11687,
                12080,
                12473,
                12866,
                13259,
                13652,
                14045,
                14438,
                14831,
                15224,
                15617,
                16010,
                16403,
                16796,
        };
        c.UpdateAsicSpecificDerivedCounter("PreZSamplesPassing",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24");
    }
    { // Index:17
        static constexpr std::array<GpaUInt32, 24> kHardwareCounters = {
                7759,
                8152,
                8545,
                8938,
                9331,
                9724,
                10117,
                10510,
                10903,
                11296,
                11689,
                12082,
                12475,
                12868,
                13261,
                13654,
                14047,
                14440,
                14833,
                15226,
                15619,
                16012,
                16405,
                16798,
        };
        c.UpdateAsicSpecificDerivedCounter("PreZSamplesFailingS",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24");
    }
    { // Index:18
        static constexpr std::array<GpaUInt32, 24> kHardwareCounters = {
                7758,
                8151,
                8544,
                8937,
                9330,
                9723,
                10116,
                10509,
                10902,
                11295,
                11688,
                12081,
                12474,
                12867,
                13260,
                13653,
                14046,
                14439,
                14832,
                15225,
                15618,
                16011,
                16404,
                16797,
        };
        c.UpdateAsicSpecificDerivedCounter("PreZSamplesFailingZ",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24");
    }
    { // Index:19
        static constexpr std::array<GpaUInt32, 24> kHardwareCounters = {
                7754,
                8147,
                8540,
                8933,
                9326,
                9719,
                10112,
                10505,
                10898,
                11291,
                11684,
                12077,
                12470,
                12863,
                13256,
                13649,
                14042,
                14435,
                14828,
                15221,
                15614,
                16007,
                16400,
                16793,
        };
        c.UpdateAsicSpecificDerivedCounter("PostZSamplesPassing",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24");
    }
    { // Index:20
        static constexpr std::array<GpaUInt32, 24> kHardwareCounters = {
                7756,
                8149,
                8542,
                8935,
                9328,
                9721,
                10114,
                10507,
                10900,
                11293,
                11686,
                12079,
                12472,
                12865,
                13258,
                13651,
                14044,
                14437,
                14830,
                15223,
                15616,
                16009,
                16402,
                16795,
        };
        c.UpdateAsicSpecificDerivedCounter("PostZSamplesFailingS",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24");
    }
    { // Index:21
        static constexpr std::array<GpaUInt32, 24> kHardwareCounters = {
                7755,
                8148,
                8541,
                8934,
                9327,
                9720,
                10113,
                10506,
                10899,
                11292,
                11685,
                12078,
                12471,
                12864,
                13257,
                13650,
                14043,
                14436,
                14829,
                15222,
                15615,
                16008,
                16401,
                16794,
        };
        c.UpdateAsicSpecificDerivedCounter("PostZSamplesFailingZ",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24");
    }
    { // Index:22
        static constexpr std::array<GpaUInt32, 25> kHardwareCounters = {
                7626,
                8019,
                8412,
                8805,
                9198,
                9591,
                9984,
                10377,
                10770,
                11163,
                11556,
                11949,
                12342,
                12735,
                13128,
                13521,
                13914,
                14307,
                14700,
                15093,
                15486,
                15879,
                16272,
                16665,
                24,
        };
        c.UpdateAsicSpecificDerivedCounter("ZUnitStalled",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,/,(100),*");
    }
    { // Index:23
        static constexpr std::array<GpaUInt32, 24> kHardwareCounters = {
                7626,
                8019,
                8412,
                8805,
                9198,
                9591,
                9984,
                10377,
                10770,
                11163,
                11556,
                11949,
                12342,
                12735,
                13128,
                13521,
                13914,
                14307,
                14700,
                15093,
                15486,
                15879,
                16272,
                16665,
        };
        c.UpdateAsicSpecificDerivedCounter("ZUnitStalledCycles",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24");
    }
    { // Index:24
        static constexpr std::array<GpaUInt32, 48> kHardwareCounters = {
                7628,
                8021,
                8414,
                8807,
                9200,
                9593,
                9986,
                10379,
                10772,
                11165,
                11558,
                11951,
                12344,
                12737,
                13130,
                13523,
                13916,
                14309,
                14702,
                15095,
                15488,
                15881,
                16274,
                16667,
                7635,
                8028,
                8421,
                8814,
                9207,
                9600,
                9993,
                10386,
                10779,
                11172,
                11565,
                11958,
                12351,
                12744,
                13137,
                13530,
                13923,
                14316,
                14709,
                15102,
                15495,
                15888,
                16281,
                16674,
        };
        c.UpdateAsicSpecificDerivedCounter("DBMemRead",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,(256),*,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,(32),*,+");
    }
    { // Index:25
        static constexpr std::array<GpaUInt32, 48> kHardwareCounters = {
                7640,
                8033,
                8426,
                8819,
                9212,
                9605,
                9998,
                10391,
                10784,
                11177,
                11570,
                11963,
                12356,
                12749,
                13142,
                13535,
                13928,
                14321,
                14714,
                15107,
                15500,
                15893,
                16286,
                16679,
                7643,
                8036,
                8429,
                8822,
                9215,
                9608,
                10001,
                10394,
                10787,
                11180,
                11573,
                11966,
                12359,
                12752,
                13145,
                13538,
                13931,
                14324,
                14717,
                15110,
                15503,
                15896,
                16289,
                16682,
        };
        c.UpdateAsicSpecificDerivedCounter("DBMemWritten",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,(32),*,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,(32),*,+");
    }
    { // Index:26
        static constexpr std::array<GpaUInt32, 192> kHardwareCounters = {
                81692,
                81771,
                81850,
                81929,
                82008,
                82087,
                82166,
                82245,
                82324,
                82403,
                82482,
                82561,
                82640,
                82719,
                82798,
                82877,
                82956,
                83035,
                83114,
                83193,
                83272,
                83351,
                83430,
                83509,
                83588,
                83667,
                83746,
                83825,
                83904,
                83983,
                84062,
                84141,
                84220,
                84299,
                84378,
                84457,
                84536,
                84615,
                84694,
                84773,
                84852,
                84931,
                85010,
                85089,
                85168,
                85247,
                85326,
                85405,
                85484,
                85563,
                85642,
                85721,
                85800,
                85879,
                85958,
                86037,
                86116,
                86195,
                86274,
                86353,
                86432,
                86511,
                86590,
                86669,
                86748,
                86827,
                86906,
                86985,
                87064,
                87143,
                87222,
                87301,
                87380,
                87459,
                87538,
                87617,
                87696,
                87775,
                87854,
                87933,
                88012,
                88091,
                88170,
                88249,
                88328,
                88407,
                88486,
                88565,
                88644,
                88723,
                88802,
                88881,
                88960,
                89039,
                89118,
                89197,
                81700,
                81779,
                81858,
                81937,
                82016,
                82095,
                82174,
                82253,
                82332,
                82411,
                82490,
                82569,
                82648,
                82727,
                82806,
                82885,
                82964,
                83043,
                83122,
                83201,
                83280,
                83359,
                83438,
                83517,
                83596,
                83675,
                83754,
                83833,
                83912,
                83991,
                84070,
                84149,
                84228,
                84307,
                84386,
                84465,
                84544,
                84623,
                84702,
                84781,
                84860,
                84939,
                85018,
                85097,
                85176,
                85255,
                85334,
                85413,
                85492,
                85571,
                85650,
                85729,
                85808,
                85887,
                85966,
                86045,
                86124,
                86203,
                86282,
                86361,
                86440,
                86519,
                86598,
                86677,
                86756,
                86835,
                86914,
                86993,
                87072,
                87151,
                87230,
                87309,
                87388,
                87467,
                87546,
                87625,
                87704,
                87783,
                87862,
                87941,
                88020,
                88099,
                88178,
                88257,
                88336,
                88415,
                88494,
                88573,
                88652,
                88731,
                88810,
                88889,
                88968,
                89047,
                89126,
                89205,
        };
        c.UpdateAsicSpecificDerivedCounter("L0CacheHit",
                                           kHardwareCounters,
                                           "(0),(1),96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum96,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,ifnotzero");
    }
    { // Index:27
        static constexpr std::array<GpaUInt32, 96> kHardwareCounters = {
                81692,
                81771,
                81850,
                81929,
                82008,
                82087,
                82166,
                82245,
                82324,
                82403,
                82482,
                82561,
                82640,
                82719,
                82798,
                82877,
                82956,
                83035,
                83114,
                83193,
                83272,
                83351,
                83430,
                83509,
                83588,
                83667,
                83746,
                83825,
                83904,
                83983,
                84062,
                84141,
                84220,
                84299,
                84378,
                84457,
                84536,
                84615,
                84694,
                84773,
                84852,
                84931,
                85010,
                85089,
                85168,
                85247,
                85326,
                85405,
                85484,
                85563,
                85642,
                85721,
                85800,
                85879,
                85958,
                86037,
                86116,
                86195,
                86274,
                86353,
                86432,
                86511,
                86590,
                86669,
                86748,
                86827,
                86906,
                86985,
                87064,
                87143,
                87222,
                87301,
                87380,
                87459,
                87538,
                87617,
                87696,
                87775,
                87854,
                87933,
                88012,
                88091,
                88170,
                88249,
                88328,
                88407,
                88486,
                88565,
                88644,
                88723,
                88802,
                88881,
                88960,
                89039,
                89118,
                89197,
        };
        c.UpdateAsicSpecificDerivedCounter("L0CacheRequestCount",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96");
    }
    { // Index:28
        static constexpr std::array<GpaUInt32, 192> kHardwareCounters = {
                81692,
                81771,
                81850,
                81929,
                82008,
                82087,
                82166,
                82245,
                82324,
                82403,
                82482,
                82561,
                82640,
                82719,
                82798,
                82877,
                82956,
                83035,
                83114,
                83193,
                83272,
                83351,
                83430,
                83509,
                83588,
                83667,
                83746,
                83825,
                83904,
                83983,
                84062,
                84141,
                84220,
                84299,
                84378,
                84457,
                84536,
                84615,
                84694,
                84773,
                84852,
                84931,
                85010,
                85089,
                85168,
                85247,
                85326,
                85405,
                85484,
                85563,
                85642,
                85721,
                85800,
                85879,
                85958,
                86037,
                86116,
                86195,
                86274,
                86353,
                86432,
                86511,
                86590,
                86669,
                86748,
                86827,
                86906,
                86985,
                87064,
                87143,
                87222,
                87301,
                87380,
                87459,
                87538,
                87617,
                87696,
                87775,
                87854,
                87933,
                88012,
                88091,
                88170,
                88249,
                88328,
                88407,
                88486,
                88565,
                88644,
                88723,
                88802,
                88881,
                88960,
                89039,
                89118,
                89197,
                81700,
                81779,
                81858,
                81937,
                82016,
                82095,
                82174,
                82253,
                82332,
                82411,
                82490,
                82569,
                82648,
                82727,
                82806,
                82885,
                82964,
                83043,
                83122,
                83201,
                83280,
                83359,
                83438,
                83517,
                83596,
                83675,
                83754,
                83833,
                83912,
                83991,
                84070,
                84149,
                84228,
                84307,
                84386,
                84465,
                84544,
                84623,
                84702,
                84781,
                84860,
                84939,
                85018,
                85097,
                85176,
                85255,
                85334,
                85413,
                85492,
                85571,
                85650,
                85729,
                85808,
                85887,
                85966,
                86045,
                86124,
                86203,
                86282,
                86361,
                86440,
                86519,
                86598,
                86677,
                86756,
                86835,
                86914,
                86993,
                87072,
                87151,
                87230,
                87309,
                87388,
                87467,
                87546,
                87625,
                87704,
                87783,
                87862,
                87941,
                88020,
                88099,
                88178,
                88257,
                88336,
                88415,
                88494,
                88573,
                88652,
                88731,
                88810,
                88889,
                88968,
                89047,
                89126,
                89205,
        };
        c.UpdateAsicSpecificDerivedCounter("L0CacheHitCount",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum96,-");
    }
    { // Index:29
        static constexpr std::array<GpaUInt32, 96> kHardwareCounters = {
                81700,
                81779,
                81858,
                81937,
                82016,
                82095,
                82174,
                82253,
                82332,
                82411,
                82490,
                82569,
                82648,
                82727,
                82806,
                82885,
                82964,
                83043,
                83122,
                83201,
                83280,
                83359,
                83438,
                83517,
                83596,
                83675,
                83754,
                83833,
                83912,
                83991,
                84070,
                84149,
                84228,
                84307,
                84386,
                84465,
                84544,
                84623,
                84702,
                84781,
                84860,
                84939,
                85018,
                85097,
                85176,
                85255,
                85334,
                85413,
                85492,
                85571,
                85650,
                85729,
                85808,
                85887,
                85966,
                86045,
                86124,
                86203,
                86282,
                86361,
                86440,
                86519,
                86598,
                86677,
                86756,
                86835,
                86914,
                86993,
                87072,
                87151,
                87230,
                87309,
                87388,
                87467,
                87546,
                87625,
                87704,
                87783,
                87862,
                87941,
                88020,
                88099,
                88178,
                88257,
                88336,
                88415,
                88494,
                88573,
                88652,
                88731,
                88810,
                88889,
                88968,
                89047,
                89126,
                89205,
        };
        c.UpdateAsicSpecificDerivedCounter("L0CacheMissCount",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96");
    }
    { // Index:30
        static constexpr std::array<GpaUInt32, 96> kHardwareCounters = {
                81729,
                81808,
                81887,
                81966,
                82045,
                82124,
                82203,
                82282,
                82361,
                82440,
                82519,
                82598,
                82677,
                82756,
                82835,
                82914,
                82993,
                83072,
                83151,
                83230,
                83309,
                83388,
                83467,
                83546,
                83625,
                83704,
                83783,
                83862,
                83941,
                84020,
                84099,
                84178,
                84257,
                84336,
                84415,
                84494,
                84573,
                84652,
                84731,
                84810,
                84889,
                84968,
                85047,
                85126,
                85205,
                85284,
                85363,
                85442,
                85521,
                85600,
                85679,
                85758,
                85837,
                85916,
                85995,
                86074,
                86153,
                86232,
                86311,
                86390,
                86469,
                86548,
                86627,
                86706,
                86785,
                86864,
                86943,
                87022,
                87101,
                87180,
                87259,
                87338,
                87417,
                87496,
                87575,
                87654,
                87733,
                87812,
                87891,
                87970,
                88049,
                88128,
                88207,
                88286,
                88365,
                88444,
                88523,
                88602,
                88681,
                88760,
                88839,
                88918,
                88997,
                89076,
                89155,
                89234,
        };
        c.UpdateAsicSpecificDerivedCounter("L0TagConflictReadStalledCycles",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96");
    }
    { // Index:31
        static constexpr std::array<GpaUInt32, 96> kHardwareCounters = {
                81730,
                81809,
                81888,
                81967,
                82046,
                82125,
                82204,
                82283,
                82362,
                82441,
                82520,
                82599,
                82678,
                82757,
                82836,
                82915,
                82994,
                83073,
                83152,
                83231,
                83310,
                83389,
                83468,
                83547,
                83626,
                83705,
                83784,
                83863,
                83942,
                84021,
                84100,
                84179,
                84258,
                84337,
                84416,
                84495,
                84574,
                84653,
                84732,
                84811,
                84890,
                84969,
                85048,
                85127,
                85206,
                85285,
                85364,
                85443,
                85522,
                85601,
                85680,
                85759,
                85838,
                85917,
                85996,
                86075,
                86154,
                86233,
                86312,
                86391,
                86470,
                86549,
                86628,
                86707,
                86786,
                86865,
                86944,
                87023,
                87102,
                87181,
                87260,
                87339,
                87418,
                87497,
                87576,
                87655,
                87734,
                87813,
                87892,
                87971,
                88050,
                88129,
                88208,
                88287,
                88366,
                88445,
                88524,
                88603,
                88682,
                88761,
                88840,
                88919,
                88998,
                89077,
                89156,
                89235,
        };
        c.UpdateAsicSpecificDerivedCounter("L0TagConflictWriteStalledCycles",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96");
    }
    { // Index:32
        static constexpr std::array<GpaUInt32, 96> kHardwareCounters = {
                81731,
                81810,
                81889,
                81968,
                82047,
                82126,
                82205,
                82284,
                82363,
                82442,
                82521,
                82600,
                82679,
                82758,
                82837,
                82916,
                82995,
                83074,
                83153,
                83232,
                83311,
                83390,
                83469,
                83548,
                83627,
                83706,
                83785,
                83864,
                83943,
                84022,
                84101,
                84180,
                84259,
                84338,
                84417,
                84496,
                84575,
                84654,
                84733,
                84812,
                84891,
                84970,
                85049,
                85128,
                85207,
                85286,
                85365,
                85444,
                85523,
                85602,
                85681,
                85760,
                85839,
                85918,
                85997,
                86076,
                86155,
                86234,
                86313,
                86392,
                86471,
                86550,
                86629,
                86708,
                86787,
                86866,
                86945,
                87024,
                87103,
                87182,
                87261,
                87340,
                87419,
                87498,
                87577,
                87656,
                87735,
                87814,
                87893,
                87972,
                88051,
                88130,
                88209,
                88288,
                88367,
                88446,
                88525,
                88604,
                88683,
                88762,
                88841,
                88920,
                88999,
                89078,
                89157,
                89236,
        };
        c.UpdateAsicSpecificDerivedCounter("L0TagConflictAtomicStalledCycles",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96");
    }
    { // Index:33
        static constexpr std::array<GpaUInt32, 97> kHardwareCounters = {
                81722,
                81801,
                81880,
                81959,
                82038,
                82117,
                82196,
                82275,
                82354,
                82433,
                82512,
                82591,
                82670,
                82749,
                82828,
                82907,
                82986,
                83065,
                83144,
                83223,
                83302,
                83381,
                83460,
                83539,
                83618,
                83697,
                83776,
                83855,
                83934,
                84013,
                84092,
                84171,
                84250,
                84329,
                84408,
                84487,
                84566,
                84645,
                84724,
                84803,
                84882,
                84961,
                85040,
                85119,
                85198,
                85277,
                85356,
                85435,
                85514,
                85593,
                85672,
                85751,
                85830,
                85909,
                85988,
                86067,
                86146,
                86225,
                86304,
                86383,
                86462,
                86541,
                86620,
                86699,
                86778,
                86857,
                86936,
                87015,
                87094,
                87173,
                87252,
                87331,
                87410,
                87489,
                87568,
                87647,
                87726,
                87805,
                87884,
                87963,
                88042,
                88121,
                88200,
                88279,
                88358,
                88437,
                88516,
                88595,
                88674,
                88753,
                88832,
                88911,
                88990,
                89069,
                89148,
                89227,
                24,
        };
        c.UpdateAsicSpecificDerivedCounter("MemUnitStalled",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96,96,/,(100),*");
    }
    { // Index:34
        static constexpr std::array<GpaUInt32, 96> kHardwareCounters = {
                81722,
                81801,
                81880,
                81959,
                82038,
                82117,
                82196,
                82275,
                82354,
                82433,
                82512,
                82591,
                82670,
                82749,
                82828,
                82907,
                82986,
                83065,
                83144,
                83223,
                83302,
                83381,
                83460,
                83539,
                83618,
                83697,
                83776,
                83855,
                83934,
                84013,
                84092,
                84171,
                84250,
                84329,
                84408,
                84487,
                84566,
                84645,
                84724,
                84803,
                84882,
                84961,
                85040,
                85119,
                85198,
                85277,
                85356,
                85435,
                85514,
                85593,
                85672,
                85751,
                85830,
                85909,
                85988,
                86067,
                86146,
                86225,
                86304,
                86383,
                86462,
                86541,
                86620,
                86699,
                86778,
                86857,
                86936,
                87015,
                87094,
                87173,
                87252,
                87331,
                87410,
                87489,
                87568,
                87647,
                87726,
                87805,
                87884,
                87963,
                88042,
                88121,
                88200,
                88279,
                88358,
                88437,
                88516,
                88595,
                88674,
                88753,
                88832,
                88911,
                88990,
                89069,
                89148,
                89227,
        };
        c.UpdateAsicSpecificDerivedCounter("MemUnitStalledCycles",
                                           kHardwareCounters,
                                           "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96");
    }
    return true;
}

}  // namespace dx11_gfx11_gfx1150

// clang-format on

