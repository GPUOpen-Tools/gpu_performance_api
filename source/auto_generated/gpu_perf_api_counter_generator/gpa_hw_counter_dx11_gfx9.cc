//==============================================================================
// Copyright (c) 2010-2023 Advanced Micro Devices, Inc. All rights reserved.
/// @author AMD Developer Tools Team
/// @file
/// @brief DX11 counter definitions for GFX9.
//==============================================================================

#include "gpu_perf_api_counter_generator/gpa_counter.h"
#include "auto_generated/gpu_perf_api_counter_generator/gpa_hw_counter_gfx9.h"
#include "auto_generated/gpu_perf_api_counter_generator/gpa_hw_counter_dx11_gfx9.h"

// This file is autogenerated by the ConvertHWEnums project

// clang-format off

namespace counter_dx11_gfx9
{
    using namespace counter_gfx9;

    std::vector<std::vector<GpaHardwareCounterDesc>*> kDx11CounterGroupArrayGfx9 = {
        &kCpfCountersGfx9,
        &kCb0CountersGfx9,
        &kCb1CountersGfx9,
        &kCb2CountersGfx9,
        &kCb3CountersGfx9,
        &kCb4CountersGfx9,
        &kCb5CountersGfx9,
        &kCb6CountersGfx9,
        &kCb7CountersGfx9,
        &kCb8CountersGfx9,
        &kCb9CountersGfx9,
        &kCb10CountersGfx9,
        &kCb11CountersGfx9,
        &kCb12CountersGfx9,
        &kCb13CountersGfx9,
        &kCb14CountersGfx9,
        &kCb15CountersGfx9,
        &kDb0CountersGfx9,
        &kDb1CountersGfx9,
        &kDb2CountersGfx9,
        &kDb3CountersGfx9,
        &kDb4CountersGfx9,
        &kDb5CountersGfx9,
        &kDb6CountersGfx9,
        &kDb7CountersGfx9,
        &kDb8CountersGfx9,
        &kDb9CountersGfx9,
        &kDb10CountersGfx9,
        &kDb11CountersGfx9,
        &kDb12CountersGfx9,
        &kDb13CountersGfx9,
        &kDb14CountersGfx9,
        &kDb15CountersGfx9,
        &kGrbmCountersGfx9,
        &kPaSu0CountersGfx9,
        &kPaSu1CountersGfx9,
        &kPaSu2CountersGfx9,
        &kPaSu3CountersGfx9,
        &kPaSc0CountersGfx9,
        &kPaSc1CountersGfx9,
        &kPaSc2CountersGfx9,
        &kPaSc3CountersGfx9,
        &kSx0CountersGfx9,
        &kSx1CountersGfx9,
        &kSx2CountersGfx9,
        &kSx3CountersGfx9,
        &kSpi0CountersGfx9,
        &kSpi1CountersGfx9,
        &kSpi2CountersGfx9,
        &kSpi3CountersGfx9,
        &kSq0CountersGfx9,
        &kSq1CountersGfx9,
        &kSq2CountersGfx9,
        &kSq3CountersGfx9,
        &kSqEs0CountersGfx9,
        &kSqEs1CountersGfx9,
        &kSqEs2CountersGfx9,
        &kSqEs3CountersGfx9,
        &kSqGs0CountersGfx9,
        &kSqGs1CountersGfx9,
        &kSqGs2CountersGfx9,
        &kSqGs3CountersGfx9,
        &kSqVs0CountersGfx9,
        &kSqVs1CountersGfx9,
        &kSqVs2CountersGfx9,
        &kSqVs3CountersGfx9,
        &kSqPs0CountersGfx9,
        &kSqPs1CountersGfx9,
        &kSqPs2CountersGfx9,
        &kSqPs3CountersGfx9,
        &kSqLs0CountersGfx9,
        &kSqLs1CountersGfx9,
        &kSqLs2CountersGfx9,
        &kSqLs3CountersGfx9,
        &kSqHs0CountersGfx9,
        &kSqHs1CountersGfx9,
        &kSqHs2CountersGfx9,
        &kSqHs3CountersGfx9,
        &kSqCs0CountersGfx9,
        &kSqCs1CountersGfx9,
        &kSqCs2CountersGfx9,
        &kSqCs3CountersGfx9,
        &kTa0CountersGfx9,
        &kTa1CountersGfx9,
        &kTa2CountersGfx9,
        &kTa3CountersGfx9,
        &kTa4CountersGfx9,
        &kTa5CountersGfx9,
        &kTa6CountersGfx9,
        &kTa7CountersGfx9,
        &kTa8CountersGfx9,
        &kTa9CountersGfx9,
        &kTa10CountersGfx9,
        &kTa11CountersGfx9,
        &kTa12CountersGfx9,
        &kTa13CountersGfx9,
        &kTa14CountersGfx9,
        &kTa15CountersGfx9,
        &kTa16CountersGfx9,
        &kTa17CountersGfx9,
        &kTa18CountersGfx9,
        &kTa19CountersGfx9,
        &kTa20CountersGfx9,
        &kTa21CountersGfx9,
        &kTa22CountersGfx9,
        &kTa23CountersGfx9,
        &kTa24CountersGfx9,
        &kTa25CountersGfx9,
        &kTa26CountersGfx9,
        &kTa27CountersGfx9,
        &kTa28CountersGfx9,
        &kTa29CountersGfx9,
        &kTa30CountersGfx9,
        &kTa31CountersGfx9,
        &kTa32CountersGfx9,
        &kTa33CountersGfx9,
        &kTa34CountersGfx9,
        &kTa35CountersGfx9,
        &kTa36CountersGfx9,
        &kTa37CountersGfx9,
        &kTa38CountersGfx9,
        &kTa39CountersGfx9,
        &kTa40CountersGfx9,
        &kTa41CountersGfx9,
        &kTa42CountersGfx9,
        &kTa43CountersGfx9,
        &kTa44CountersGfx9,
        &kTa45CountersGfx9,
        &kTa46CountersGfx9,
        &kTa47CountersGfx9,
        &kTa48CountersGfx9,
        &kTa49CountersGfx9,
        &kTa50CountersGfx9,
        &kTa51CountersGfx9,
        &kTa52CountersGfx9,
        &kTa53CountersGfx9,
        &kTa54CountersGfx9,
        &kTa55CountersGfx9,
        &kTa56CountersGfx9,
        &kTa57CountersGfx9,
        &kTa58CountersGfx9,
        &kTa59CountersGfx9,
        &kTa60CountersGfx9,
        &kTa61CountersGfx9,
        &kTa62CountersGfx9,
        &kTa63CountersGfx9,
        &kTcp0CountersGfx9,
        &kTcp1CountersGfx9,
        &kTcp2CountersGfx9,
        &kTcp3CountersGfx9,
        &kTcp4CountersGfx9,
        &kTcp5CountersGfx9,
        &kTcp6CountersGfx9,
        &kTcp7CountersGfx9,
        &kTcp8CountersGfx9,
        &kTcp9CountersGfx9,
        &kTcp10CountersGfx9,
        &kTcp11CountersGfx9,
        &kTcp12CountersGfx9,
        &kTcp13CountersGfx9,
        &kTcp14CountersGfx9,
        &kTcp15CountersGfx9,
        &kTcp16CountersGfx9,
        &kTcp17CountersGfx9,
        &kTcp18CountersGfx9,
        &kTcp19CountersGfx9,
        &kTcp20CountersGfx9,
        &kTcp21CountersGfx9,
        &kTcp22CountersGfx9,
        &kTcp23CountersGfx9,
        &kTcp24CountersGfx9,
        &kTcp25CountersGfx9,
        &kTcp26CountersGfx9,
        &kTcp27CountersGfx9,
        &kTcp28CountersGfx9,
        &kTcp29CountersGfx9,
        &kTcp30CountersGfx9,
        &kTcp31CountersGfx9,
        &kTcp32CountersGfx9,
        &kTcp33CountersGfx9,
        &kTcp34CountersGfx9,
        &kTcp35CountersGfx9,
        &kTcp36CountersGfx9,
        &kTcp37CountersGfx9,
        &kTcp38CountersGfx9,
        &kTcp39CountersGfx9,
        &kTcp40CountersGfx9,
        &kTcp41CountersGfx9,
        &kTcp42CountersGfx9,
        &kTcp43CountersGfx9,
        &kTcp44CountersGfx9,
        &kTcp45CountersGfx9,
        &kTcp46CountersGfx9,
        &kTcp47CountersGfx9,
        &kTcp48CountersGfx9,
        &kTcp49CountersGfx9,
        &kTcp50CountersGfx9,
        &kTcp51CountersGfx9,
        &kTcp52CountersGfx9,
        &kTcp53CountersGfx9,
        &kTcp54CountersGfx9,
        &kTcp55CountersGfx9,
        &kTcp56CountersGfx9,
        &kTcp57CountersGfx9,
        &kTcp58CountersGfx9,
        &kTcp59CountersGfx9,
        &kTcp60CountersGfx9,
        &kTcp61CountersGfx9,
        &kTcp62CountersGfx9,
        &kTcp63CountersGfx9,
        &kTcc0CountersGfx9,
        &kTcc1CountersGfx9,
        &kTcc2CountersGfx9,
        &kTcc3CountersGfx9,
        &kTcc4CountersGfx9,
        &kTcc5CountersGfx9,
        &kTcc6CountersGfx9,
        &kTcc7CountersGfx9,
        &kTcc8CountersGfx9,
        &kTcc9CountersGfx9,
        &kTcc10CountersGfx9,
        &kTcc11CountersGfx9,
        &kTcc12CountersGfx9,
        &kTcc13CountersGfx9,
        &kTcc14CountersGfx9,
        &kTcc15CountersGfx9,
        &kVgt0CountersGfx9,
        &kVgt1CountersGfx9,
        &kVgt2CountersGfx9,
        &kVgt3CountersGfx9,
        &kGcea0CountersGfx9,
        &kGcea1CountersGfx9,
        &kGcea2CountersGfx9,
        &kGcea3CountersGfx9,
        &kGcea4CountersGfx9,
        &kGcea5CountersGfx9,
        &kGcea6CountersGfx9,
        &kGcea7CountersGfx9,
        &kGcea8CountersGfx9,
        &kGcea9CountersGfx9,
        &kGcea10CountersGfx9,
        &kGcea11CountersGfx9,
        &kGcea12CountersGfx9,
        &kGcea13CountersGfx9,
        &kGcea14CountersGfx9,
        &kGcea15CountersGfx9,
        &kGcea16CountersGfx9,
        &kGcea17CountersGfx9,
        &kGcea18CountersGfx9,
        &kGcea19CountersGfx9,
        &kGcea20CountersGfx9,
        &kGcea21CountersGfx9,
        &kGcea22CountersGfx9,
        &kGcea23CountersGfx9,
        &kGcea24CountersGfx9,
        &kGcea25CountersGfx9,
        &kGcea26CountersGfx9,
        &kGcea27CountersGfx9,
        &kGcea28CountersGfx9,
        &kGcea29CountersGfx9,
        &kGcea30CountersGfx9,
        &kGcea31CountersGfx9,
        &kGpuTimeCountersGfx9,
    };


    std::vector<GpaCounterGroupDesc> kHwDx11GroupsGfx9 = {
        {0, "CPF", 0, 32, 2, 0},
        {1, "CB0", 0, 444, 4, 0},
        {2, "CB1", 1, 444, 4, 0},
        {3, "CB2", 2, 444, 4, 0},
        {4, "CB3", 3, 444, 4, 0},
        {5, "CB4", 4, 444, 4, 0},
        {6, "CB5", 5, 444, 4, 0},
        {7, "CB6", 6, 444, 4, 0},
        {8, "CB7", 7, 444, 4, 0},
        {9, "CB8", 8, 444, 4, 0},
        {10, "CB9", 9, 444, 4, 0},
        {11, "CB10", 10, 444, 4, 0},
        {12, "CB11", 11, 444, 4, 0},
        {13, "CB12", 12, 444, 4, 0},
        {14, "CB13", 13, 444, 4, 0},
        {15, "CB14", 14, 444, 4, 0},
        {16, "CB15", 15, 444, 4, 0},
        {17, "DB0", 0, 328, 4, 0},
        {18, "DB1", 1, 328, 4, 0},
        {19, "DB2", 2, 328, 4, 0},
        {20, "DB3", 3, 328, 4, 0},
        {21, "DB4", 4, 328, 4, 0},
        {22, "DB5", 5, 328, 4, 0},
        {23, "DB6", 6, 328, 4, 0},
        {24, "DB7", 7, 328, 4, 0},
        {25, "DB8", 8, 328, 4, 0},
        {26, "DB9", 9, 328, 4, 0},
        {27, "DB10", 10, 328, 4, 0},
        {28, "DB11", 11, 328, 4, 0},
        {29, "DB12", 12, 328, 4, 0},
        {30, "DB13", 13, 328, 4, 0},
        {31, "DB14", 14, 328, 4, 0},
        {32, "DB15", 15, 328, 4, 0},
        {33, "GRBM", 0, 38, 2, 0},
        {34, "GRBMSE0", 0, 16, 4, 0},
        {35, "GRBMSE1", 1, 16, 4, 0},
        {36, "GRBMSE2", 2, 16, 4, 0},
        {37, "GRBMSE3", 3, 16, 4, 0},
        {38, "RLC", 0, 7, 2, 0},
        {39, "PA_SU0", 0, 351, 4, 0},
        {40, "PA_SU1", 1, 351, 4, 0},
        {41, "PA_SU2", 2, 351, 4, 0},
        {42, "PA_SU3", 3, 351, 4, 0},
        {43, "PA_SC0", 0, 492, 8, 0},
        {44, "PA_SC1", 1, 492, 8, 0},
        {45, "PA_SC2", 2, 492, 8, 0},
        {46, "PA_SC3", 3, 492, 8, 0},
        {47, "SX0", 0, 208, 4, 0},
        {48, "SX1", 1, 208, 4, 0},
        {49, "SX2", 2, 208, 4, 0},
        {50, "SX3", 3, 208, 4, 0},
        {51, "SPI0", 0, 196, 6, 0},
        {52, "SPI1", 1, 196, 6, 0},
        {53, "SPI2", 2, 196, 6, 0},
        {54, "SPI3", 3, 196, 6, 0},
        {55, "SQ0", 0, 374, 16, 0},
        {56, "SQ1", 1, 374, 16, 0},
        {57, "SQ2", 2, 374, 16, 0},
        {58, "SQ3", 3, 374, 16, 0},
        {59, "SQ_ES0", 0, 374, 16, 0},
        {60, "SQ_ES1", 1, 374, 16, 0},
        {61, "SQ_ES2", 2, 374, 16, 0},
        {62, "SQ_ES3", 3, 374, 16, 0},
        {63, "SQ_GS0", 0, 374, 16, 0},
        {64, "SQ_GS1", 1, 374, 16, 0},
        {65, "SQ_GS2", 2, 374, 16, 0},
        {66, "SQ_GS3", 3, 374, 16, 0},
        {67, "SQ_VS0", 0, 374, 16, 0},
        {68, "SQ_VS1", 1, 374, 16, 0},
        {69, "SQ_VS2", 2, 374, 16, 0},
        {70, "SQ_VS3", 3, 374, 16, 0},
        {71, "SQ_PS0", 0, 374, 16, 0},
        {72, "SQ_PS1", 1, 374, 16, 0},
        {73, "SQ_PS2", 2, 374, 16, 0},
        {74, "SQ_PS3", 3, 374, 16, 0},
        {75, "SQ_LS0", 0, 374, 16, 0},
        {76, "SQ_LS1", 1, 374, 16, 0},
        {77, "SQ_LS2", 2, 374, 16, 0},
        {78, "SQ_LS3", 3, 374, 16, 0},
        {79, "SQ_HS0", 0, 374, 16, 0},
        {80, "SQ_HS1", 1, 374, 16, 0},
        {81, "SQ_HS2", 2, 374, 16, 0},
        {82, "SQ_HS3", 3, 374, 16, 0},
        {83, "SQ_CS0", 0, 374, 16, 0},
        {84, "SQ_CS1", 1, 374, 16, 0},
        {85, "SQ_CS2", 2, 374, 16, 0},
        {86, "SQ_CS3", 3, 374, 16, 0},
        {87, "TA0", 0, 119, 2, 0},
        {88, "TA1", 1, 119, 2, 0},
        {89, "TA2", 2, 119, 2, 0},
        {90, "TA3", 3, 119, 2, 0},
        {91, "TA4", 4, 119, 2, 0},
        {92, "TA5", 5, 119, 2, 0},
        {93, "TA6", 6, 119, 2, 0},
        {94, "TA7", 7, 119, 2, 0},
        {95, "TA8", 8, 119, 2, 0},
        {96, "TA9", 9, 119, 2, 0},
        {97, "TA10", 10, 119, 2, 0},
        {98, "TA11", 11, 119, 2, 0},
        {99, "TA12", 12, 119, 2, 0},
        {100, "TA13", 13, 119, 2, 0},
        {101, "TA14", 14, 119, 2, 0},
        {102, "TA15", 15, 119, 2, 0},
        {103, "TA16", 16, 119, 2, 0},
        {104, "TA17", 17, 119, 2, 0},
        {105, "TA18", 18, 119, 2, 0},
        {106, "TA19", 19, 119, 2, 0},
        {107, "TA20", 20, 119, 2, 0},
        {108, "TA21", 21, 119, 2, 0},
        {109, "TA22", 22, 119, 2, 0},
        {110, "TA23", 23, 119, 2, 0},
        {111, "TA24", 24, 119, 2, 0},
        {112, "TA25", 25, 119, 2, 0},
        {113, "TA26", 26, 119, 2, 0},
        {114, "TA27", 27, 119, 2, 0},
        {115, "TA28", 28, 119, 2, 0},
        {116, "TA29", 29, 119, 2, 0},
        {117, "TA30", 30, 119, 2, 0},
        {118, "TA31", 31, 119, 2, 0},
        {119, "TA32", 32, 119, 2, 0},
        {120, "TA33", 33, 119, 2, 0},
        {121, "TA34", 34, 119, 2, 0},
        {122, "TA35", 35, 119, 2, 0},
        {123, "TA36", 36, 119, 2, 0},
        {124, "TA37", 37, 119, 2, 0},
        {125, "TA38", 38, 119, 2, 0},
        {126, "TA39", 39, 119, 2, 0},
        {127, "TA40", 40, 119, 2, 0},
        {128, "TA41", 41, 119, 2, 0},
        {129, "TA42", 42, 119, 2, 0},
        {130, "TA43", 43, 119, 2, 0},
        {131, "TA44", 44, 119, 2, 0},
        {132, "TA45", 45, 119, 2, 0},
        {133, "TA46", 46, 119, 2, 0},
        {134, "TA47", 47, 119, 2, 0},
        {135, "TA48", 48, 119, 2, 0},
        {136, "TA49", 49, 119, 2, 0},
        {137, "TA50", 50, 119, 2, 0},
        {138, "TA51", 51, 119, 2, 0},
        {139, "TA52", 52, 119, 2, 0},
        {140, "TA53", 53, 119, 2, 0},
        {141, "TA54", 54, 119, 2, 0},
        {142, "TA55", 55, 119, 2, 0},
        {143, "TA56", 56, 119, 2, 0},
        {144, "TA57", 57, 119, 2, 0},
        {145, "TA58", 58, 119, 2, 0},
        {146, "TA59", 59, 119, 2, 0},
        {147, "TA60", 60, 119, 2, 0},
        {148, "TA61", 61, 119, 2, 0},
        {149, "TA62", 62, 119, 2, 0},
        {150, "TA63", 63, 119, 2, 0},
        {151, "TD0", 0, 57, 2, 0},
        {152, "TD1", 1, 57, 2, 0},
        {153, "TD2", 2, 57, 2, 0},
        {154, "TD3", 3, 57, 2, 0},
        {155, "TD4", 4, 57, 2, 0},
        {156, "TD5", 5, 57, 2, 0},
        {157, "TD6", 6, 57, 2, 0},
        {158, "TD7", 7, 57, 2, 0},
        {159, "TD8", 8, 57, 2, 0},
        {160, "TD9", 9, 57, 2, 0},
        {161, "TD10", 10, 57, 2, 0},
        {162, "TD11", 11, 57, 2, 0},
        {163, "TD12", 12, 57, 2, 0},
        {164, "TD13", 13, 57, 2, 0},
        {165, "TD14", 14, 57, 2, 0},
        {166, "TD15", 15, 57, 2, 0},
        {167, "TD16", 16, 57, 2, 0},
        {168, "TD17", 17, 57, 2, 0},
        {169, "TD18", 18, 57, 2, 0},
        {170, "TD19", 19, 57, 2, 0},
        {171, "TD20", 20, 57, 2, 0},
        {172, "TD21", 21, 57, 2, 0},
        {173, "TD22", 22, 57, 2, 0},
        {174, "TD23", 23, 57, 2, 0},
        {175, "TD24", 24, 57, 2, 0},
        {176, "TD25", 25, 57, 2, 0},
        {177, "TD26", 26, 57, 2, 0},
        {178, "TD27", 27, 57, 2, 0},
        {179, "TD28", 28, 57, 2, 0},
        {180, "TD29", 29, 57, 2, 0},
        {181, "TD30", 30, 57, 2, 0},
        {182, "TD31", 31, 57, 2, 0},
        {183, "TD32", 32, 57, 2, 0},
        {184, "TD33", 33, 57, 2, 0},
        {185, "TD34", 34, 57, 2, 0},
        {186, "TD35", 35, 57, 2, 0},
        {187, "TD36", 36, 57, 2, 0},
        {188, "TD37", 37, 57, 2, 0},
        {189, "TD38", 38, 57, 2, 0},
        {190, "TD39", 39, 57, 2, 0},
        {191, "TD40", 40, 57, 2, 0},
        {192, "TD41", 41, 57, 2, 0},
        {193, "TD42", 42, 57, 2, 0},
        {194, "TD43", 43, 57, 2, 0},
        {195, "TD44", 44, 57, 2, 0},
        {196, "TD45", 45, 57, 2, 0},
        {197, "TD46", 46, 57, 2, 0},
        {198, "TD47", 47, 57, 2, 0},
        {199, "TD48", 48, 57, 2, 0},
        {200, "TD49", 49, 57, 2, 0},
        {201, "TD50", 50, 57, 2, 0},
        {202, "TD51", 51, 57, 2, 0},
        {203, "TD52", 52, 57, 2, 0},
        {204, "TD53", 53, 57, 2, 0},
        {205, "TD54", 54, 57, 2, 0},
        {206, "TD55", 55, 57, 2, 0},
        {207, "TD56", 56, 57, 2, 0},
        {208, "TD57", 57, 57, 2, 0},
        {209, "TD58", 58, 57, 2, 0},
        {210, "TD59", 59, 57, 2, 0},
        {211, "TD60", 60, 57, 2, 0},
        {212, "TD61", 61, 57, 2, 0},
        {213, "TD62", 62, 57, 2, 0},
        {214, "TD63", 63, 57, 2, 0},
        {215, "TCP0", 0, 85, 4, 0},
        {216, "TCP1", 1, 85, 4, 0},
        {217, "TCP2", 2, 85, 4, 0},
        {218, "TCP3", 3, 85, 4, 0},
        {219, "TCP4", 4, 85, 4, 0},
        {220, "TCP5", 5, 85, 4, 0},
        {221, "TCP6", 6, 85, 4, 0},
        {222, "TCP7", 7, 85, 4, 0},
        {223, "TCP8", 8, 85, 4, 0},
        {224, "TCP9", 9, 85, 4, 0},
        {225, "TCP10", 10, 85, 4, 0},
        {226, "TCP11", 11, 85, 4, 0},
        {227, "TCP12", 12, 85, 4, 0},
        {228, "TCP13", 13, 85, 4, 0},
        {229, "TCP14", 14, 85, 4, 0},
        {230, "TCP15", 15, 85, 4, 0},
        {231, "TCP16", 16, 85, 4, 0},
        {232, "TCP17", 17, 85, 4, 0},
        {233, "TCP18", 18, 85, 4, 0},
        {234, "TCP19", 19, 85, 4, 0},
        {235, "TCP20", 20, 85, 4, 0},
        {236, "TCP21", 21, 85, 4, 0},
        {237, "TCP22", 22, 85, 4, 0},
        {238, "TCP23", 23, 85, 4, 0},
        {239, "TCP24", 24, 85, 4, 0},
        {240, "TCP25", 25, 85, 4, 0},
        {241, "TCP26", 26, 85, 4, 0},
        {242, "TCP27", 27, 85, 4, 0},
        {243, "TCP28", 28, 85, 4, 0},
        {244, "TCP29", 29, 85, 4, 0},
        {245, "TCP30", 30, 85, 4, 0},
        {246, "TCP31", 31, 85, 4, 0},
        {247, "TCP32", 32, 85, 4, 0},
        {248, "TCP33", 33, 85, 4, 0},
        {249, "TCP34", 34, 85, 4, 0},
        {250, "TCP35", 35, 85, 4, 0},
        {251, "TCP36", 36, 85, 4, 0},
        {252, "TCP37", 37, 85, 4, 0},
        {253, "TCP38", 38, 85, 4, 0},
        {254, "TCP39", 39, 85, 4, 0},
        {255, "TCP40", 40, 85, 4, 0},
        {256, "TCP41", 41, 85, 4, 0},
        {257, "TCP42", 42, 85, 4, 0},
        {258, "TCP43", 43, 85, 4, 0},
        {259, "TCP44", 44, 85, 4, 0},
        {260, "TCP45", 45, 85, 4, 0},
        {261, "TCP46", 46, 85, 4, 0},
        {262, "TCP47", 47, 85, 4, 0},
        {263, "TCP48", 48, 85, 4, 0},
        {264, "TCP49", 49, 85, 4, 0},
        {265, "TCP50", 50, 85, 4, 0},
        {266, "TCP51", 51, 85, 4, 0},
        {267, "TCP52", 52, 85, 4, 0},
        {268, "TCP53", 53, 85, 4, 0},
        {269, "TCP54", 54, 85, 4, 0},
        {270, "TCP55", 55, 85, 4, 0},
        {271, "TCP56", 56, 85, 4, 0},
        {272, "TCP57", 57, 85, 4, 0},
        {273, "TCP58", 58, 85, 4, 0},
        {274, "TCP59", 59, 85, 4, 0},
        {275, "TCP60", 60, 85, 4, 0},
        {276, "TCP61", 61, 85, 4, 0},
        {277, "TCP62", 62, 85, 4, 0},
        {278, "TCP63", 63, 85, 4, 0},
        {279, "TCC0", 0, 282, 4, 0},
        {280, "TCC1", 1, 282, 4, 0},
        {281, "TCC2", 2, 282, 4, 0},
        {282, "TCC3", 3, 282, 4, 0},
        {283, "TCC4", 4, 282, 4, 0},
        {284, "TCC5", 5, 282, 4, 0},
        {285, "TCC6", 6, 282, 4, 0},
        {286, "TCC7", 7, 282, 4, 0},
        {287, "TCC8", 8, 282, 4, 0},
        {288, "TCC9", 9, 282, 4, 0},
        {289, "TCC10", 10, 282, 4, 0},
        {290, "TCC11", 11, 282, 4, 0},
        {291, "TCC12", 12, 282, 4, 0},
        {292, "TCC13", 13, 282, 4, 0},
        {293, "TCC14", 14, 282, 4, 0},
        {294, "TCC15", 15, 282, 4, 0},
        {295, "TCA0", 0, 35, 4, 0},
        {296, "TCA1", 1, 35, 4, 0},
        {297, "GDS", 0, 121, 4, 0},
        {298, "IA0", 0, 32, 4, 0},
        {299, "IA1", 1, 32, 4, 0},
        {300, "VGT0", 0, 148, 4, 0},
        {301, "VGT1", 1, 148, 4, 0},
        {302, "VGT2", 2, 148, 4, 0},
        {303, "VGT3", 3, 148, 4, 0},
        {304, "CPG", 0, 60, 2, 0},
        {305, "CPC", 0, 35, 2, 0},
        {306, "WD", 0, 58, 4, 0},
        {307, "MCVML2", 0, 21, 8, 0},
        {308, "ATC", 0, 24, 4, 0},
        {309, "ATCL2", 0, 8, 2, 0},
        {310, "RPB", 0, 95, 4, 0},
        {311, "GCEA0", 0, 83, 2, 0},
        {312, "GCEA1", 1, 83, 2, 0},
        {313, "GCEA2", 2, 83, 2, 0},
        {314, "GCEA3", 3, 83, 2, 0},
        {315, "GCEA4", 4, 83, 2, 0},
        {316, "GCEA5", 5, 83, 2, 0},
        {317, "GCEA6", 6, 83, 2, 0},
        {318, "GCEA7", 7, 83, 2, 0},
        {319, "GCEA8", 8, 83, 2, 0},
        {320, "GCEA9", 9, 83, 2, 0},
        {321, "GCEA10", 10, 83, 2, 0},
        {322, "GCEA11", 11, 83, 2, 0},
        {323, "GCEA12", 12, 83, 2, 0},
        {324, "GCEA13", 13, 83, 2, 0},
        {325, "GCEA14", 14, 83, 2, 0},
        {326, "GCEA15", 15, 83, 2, 0},
        {327, "GCEA16", 16, 83, 2, 0},
        {328, "GCEA17", 17, 83, 2, 0},
        {329, "GCEA18", 18, 83, 2, 0},
        {330, "GCEA19", 19, 83, 2, 0},
        {331, "GCEA20", 20, 83, 2, 0},
        {332, "GCEA21", 21, 83, 2, 0},
        {333, "GCEA22", 22, 83, 2, 0},
        {334, "GCEA23", 23, 83, 2, 0},
        {335, "GCEA24", 24, 83, 2, 0},
        {336, "GCEA25", 25, 83, 2, 0},
        {337, "GCEA26", 26, 83, 2, 0},
        {338, "GCEA27", 27, 83, 2, 0},
        {339, "GCEA28", 28, 83, 2, 0},
        {340, "GCEA29", 29, 83, 2, 0},
        {341, "GCEA30", 30, 83, 2, 0},
        {342, "GCEA31", 31, 83, 2, 0},
        {343, "RMI0", 0, 257, 4, 0},
        {344, "RMI1", 1, 257, 4, 0},
        {345, "RMI2", 2, 257, 4, 0},
        {346, "RMI3", 3, 257, 4, 0},
        {347, "RMI4", 4, 257, 4, 0},
        {348, "RMI5", 5, 257, 4, 0},
        {349, "RMI6", 6, 257, 4, 0},
        {350, "RMI7", 7, 257, 4, 0},
        {351, "GPUTimeStamp", 0, 1, 1, 0},
        {352, "GPUTime", 0, 6, 2, 0},
    };

    GpaCounterGroupExposedCounterDesc kHwDx11ExposedCountersByGroupGfx9[] = {
        {0, 0},
        {1, 32},
        {2, 476},
        {3, 920},
        {4, 1364},
        {5, 1808},
        {6, 2252},
        {7, 2696},
        {8, 3140},
        {9, 3584},
        {10, 4028},
        {11, 4472},
        {12, 4916},
        {13, 5360},
        {14, 5804},
        {15, 6248},
        {16, 6692},
        {17, 7136},
        {18, 7464},
        {19, 7792},
        {20, 8120},
        {21, 8448},
        {22, 8776},
        {23, 9104},
        {24, 9432},
        {25, 9760},
        {26, 10088},
        {27, 10416},
        {28, 10744},
        {29, 11072},
        {30, 11400},
        {31, 11728},
        {32, 12056},
        {33, 12384},
        {39, 12493},
        {40, 12844},
        {41, 13195},
        {42, 13546},
        {43, 13897},
        {44, 14389},
        {45, 14881},
        {46, 15373},
        {47, 15865},
        {48, 16073},
        {49, 16281},
        {50, 16489},
        {51, 16697},
        {52, 16893},
        {53, 17089},
        {54, 17285},
        {55, 17481},
        {56, 17855},
        {57, 18229},
        {58, 18603},
        {59, 18977},
        {60, 19351},
        {61, 19725},
        {62, 20099},
        {63, 20473},
        {64, 20847},
        {65, 21221},
        {66, 21595},
        {67, 21969},
        {68, 22343},
        {69, 22717},
        {70, 23091},
        {71, 23465},
        {72, 23839},
        {73, 24213},
        {74, 24587},
        {75, 24961},
        {76, 25335},
        {77, 25709},
        {78, 26083},
        {79, 26457},
        {80, 26831},
        {81, 27205},
        {82, 27579},
        {83, 27953},
        {84, 28327},
        {85, 28701},
        {86, 29075},
        {87, 29449},
        {88, 29568},
        {89, 29687},
        {90, 29806},
        {91, 29925},
        {92, 30044},
        {93, 30163},
        {94, 30282},
        {95, 30401},
        {96, 30520},
        {97, 30639},
        {98, 30758},
        {99, 30877},
        {100, 30996},
        {101, 31115},
        {102, 31234},
        {103, 31353},
        {104, 31472},
        {105, 31591},
        {106, 31710},
        {107, 31829},
        {108, 31948},
        {109, 32067},
        {110, 32186},
        {111, 32305},
        {112, 32424},
        {113, 32543},
        {114, 32662},
        {115, 32781},
        {116, 32900},
        {117, 33019},
        {118, 33138},
        {119, 33257},
        {120, 33376},
        {121, 33495},
        {122, 33614},
        {123, 33733},
        {124, 33852},
        {125, 33971},
        {126, 34090},
        {127, 34209},
        {128, 34328},
        {129, 34447},
        {130, 34566},
        {131, 34685},
        {132, 34804},
        {133, 34923},
        {134, 35042},
        {135, 35161},
        {136, 35280},
        {137, 35399},
        {138, 35518},
        {139, 35637},
        {140, 35756},
        {141, 35875},
        {142, 35994},
        {143, 36113},
        {144, 36232},
        {145, 36351},
        {146, 36470},
        {147, 36589},
        {148, 36708},
        {149, 36827},
        {150, 36946},
        {215, 40713},
        {216, 40798},
        {217, 40883},
        {218, 40968},
        {219, 41053},
        {220, 41138},
        {221, 41223},
        {222, 41308},
        {223, 41393},
        {224, 41478},
        {225, 41563},
        {226, 41648},
        {227, 41733},
        {228, 41818},
        {229, 41903},
        {230, 41988},
        {231, 42073},
        {232, 42158},
        {233, 42243},
        {234, 42328},
        {235, 42413},
        {236, 42498},
        {237, 42583},
        {238, 42668},
        {239, 42753},
        {240, 42838},
        {241, 42923},
        {242, 43008},
        {243, 43093},
        {244, 43178},
        {245, 43263},
        {246, 43348},
        {247, 43433},
        {248, 43518},
        {249, 43603},
        {250, 43688},
        {251, 43773},
        {252, 43858},
        {253, 43943},
        {254, 44028},
        {255, 44113},
        {256, 44198},
        {257, 44283},
        {258, 44368},
        {259, 44453},
        {260, 44538},
        {261, 44623},
        {262, 44708},
        {263, 44793},
        {264, 44878},
        {265, 44963},
        {266, 45048},
        {267, 45133},
        {268, 45218},
        {269, 45303},
        {270, 45388},
        {271, 45473},
        {272, 45558},
        {273, 45643},
        {274, 45728},
        {275, 45813},
        {276, 45898},
        {277, 45983},
        {278, 46068},
        {279, 46153},
        {280, 46435},
        {281, 46717},
        {282, 46999},
        {283, 47281},
        {284, 47563},
        {285, 47845},
        {286, 48127},
        {287, 48409},
        {288, 48691},
        {289, 48973},
        {290, 49255},
        {291, 49537},
        {292, 49819},
        {293, 50101},
        {294, 50383},
        {300, 50920},
        {301, 51068},
        {302, 51216},
        {303, 51364},
        {311, 51813},
        {312, 51896},
        {313, 51979},
        {314, 52062},
        {315, 52145},
        {316, 52228},
        {317, 52311},
        {318, 52394},
        {319, 52477},
        {320, 52560},
        {321, 52643},
        {322, 52726},
        {323, 52809},
        {324, 52892},
        {325, 52975},
        {326, 53058},
        {327, 53141},
        {328, 53224},
        {329, 53307},
        {330, 53390},
        {331, 53473},
        {332, 53556},
        {333, 53639},
        {334, 53722},
        {335, 53805},
        {336, 53888},
        {337, 53971},
        {338, 54054},
        {339, 54137},
        {340, 54220},
        {341, 54303},
        {342, 54386},
        {352, 56526},
    };

    GpaPaddedCounterDesc kDx11PaddedCounterByGroupGfx9[] = {
        {1, 32, {438, 439, 440, 441, 442, 443}},
        {2, 476, {438, 439, 440, 441, 442, 443}},
        {3, 920, {438, 439, 440, 441, 442, 443}},
        {4, 1364, {438, 439, 440, 441, 442, 443}},
        {5, 1808, {438, 439, 440, 441, 442, 443}},
        {6, 2252, {438, 439, 440, 441, 442, 443}},
        {7, 2696, {438, 439, 440, 441, 442, 443}},
        {8, 3140, {438, 439, 440, 441, 442, 443}},
        {9, 3584, {438, 439, 440, 441, 442, 443}},
        {10, 4028, {438, 439, 440, 441, 442, 443}},
        {11, 4472, {438, 439, 440, 441, 442, 443}},
        {12, 4916, {438, 439, 440, 441, 442, 443}},
        {13, 5360, {438, 439, 440, 441, 442, 443}},
        {14, 5804, {438, 439, 440, 441, 442, 443}},
        {15, 6248, {438, 439, 440, 441, 442, 443}},
        {16, 6692, {438, 439, 440, 441, 442, 443}},
        {39, 12493, {292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350}},
        {40, 12844, {292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350}},
        {41, 13195, {292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350}},
        {42, 13546, {292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350}},
        {43, 13897, {491}},
        {44, 14389, {491}},
        {45, 14881, {491}},
        {46, 15373, {491}},
        {279, 46153, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {280, 46435, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {281, 46717, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {282, 46999, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {283, 47281, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {284, 47563, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {285, 47845, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {286, 48127, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {287, 48409, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {288, 48691, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {289, 48973, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {290, 49255, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {291, 49537, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {292, 49819, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {293, 50101, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {294, 50383, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {310, 51718, {63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94}},
        {311, 51813, {77, 78, 79, 80, 81, 82}},
        {312, 51896, {77, 78, 79, 80, 81, 82}},
        {313, 51979, {77, 78, 79, 80, 81, 82}},
        {314, 52062, {77, 78, 79, 80, 81, 82}},
        {315, 52145, {77, 78, 79, 80, 81, 82}},
        {316, 52228, {77, 78, 79, 80, 81, 82}},
        {317, 52311, {77, 78, 79, 80, 81, 82}},
        {318, 52394, {77, 78, 79, 80, 81, 82}},
        {319, 52477, {77, 78, 79, 80, 81, 82}},
        {320, 52560, {77, 78, 79, 80, 81, 82}},
        {321, 52643, {77, 78, 79, 80, 81, 82}},
        {322, 52726, {77, 78, 79, 80, 81, 82}},
        {323, 52809, {77, 78, 79, 80, 81, 82}},
        {324, 52892, {77, 78, 79, 80, 81, 82}},
        {325, 52975, {77, 78, 79, 80, 81, 82}},
        {326, 53058, {77, 78, 79, 80, 81, 82}},
        {327, 53141, {77, 78, 79, 80, 81, 82}},
        {328, 53224, {77, 78, 79, 80, 81, 82}},
        {329, 53307, {77, 78, 79, 80, 81, 82}},
        {330, 53390, {77, 78, 79, 80, 81, 82}},
        {331, 53473, {77, 78, 79, 80, 81, 82}},
        {332, 53556, {77, 78, 79, 80, 81, 82}},
        {333, 53639, {77, 78, 79, 80, 81, 82}},
        {334, 53722, {77, 78, 79, 80, 81, 82}},
        {335, 53805, {77, 78, 79, 80, 81, 82}},
        {336, 53888, {77, 78, 79, 80, 81, 82}},
        {337, 53971, {77, 78, 79, 80, 81, 82}},
        {338, 54054, {77, 78, 79, 80, 81, 82}},
        {339, 54137, {77, 78, 79, 80, 81, 82}},
        {340, 54220, {77, 78, 79, 80, 81, 82}},
        {341, 54303, {77, 78, 79, 80, 81, 82}},
        {342, 54386, {77, 78, 79, 80, 81, 82}},
    };

    GpaSqCounterGroupDesc kHwDx11SqGroupsGfx9[] = {
        {55, 0, kSqAll},
        {56, 1, kSqAll},
        {57, 2, kSqAll},
        {58, 3, kSqAll},
        {59, 0, kSqEs},
        {60, 1, kSqEs},
        {61, 2, kSqEs},
        {62, 3, kSqEs},
        {63, 0, kSqGs},
        {64, 1, kSqGs},
        {65, 2, kSqGs},
        {66, 3, kSqGs},
        {67, 0, kSqVs},
        {68, 1, kSqVs},
        {69, 2, kSqVs},
        {70, 3, kSqVs},
        {71, 0, kSqPs},
        {72, 1, kSqPs},
        {73, 2, kSqPs},
        {74, 3, kSqPs},
        {75, 0, kSqLs},
        {76, 1, kSqLs},
        {77, 2, kSqLs},
        {78, 3, kSqLs},
        {79, 0, kSqHs},
        {80, 1, kSqHs},
        {81, 2, kSqHs},
        {82, 3, kSqHs},
        {83, 0, kSqCs},
        {84, 1, kSqCs},
        {85, 2, kSqCs},
        {86, 3, kSqCs},
    };


    unsigned int kHwDx11SqIsolatedGroupsGfx9[] = {
        87, // Ta
        88, // Ta
        89, // Ta
        90, // Ta
        91, // Ta
        92, // Ta
        93, // Ta
        94, // Ta
        95, // Ta
        96, // Ta
        97, // Ta
        98, // Ta
        99, // Ta
        100, // Ta
        101, // Ta
        102, // Ta
        103, // Ta
        104, // Ta
        105, // Ta
        106, // Ta
        107, // Ta
        108, // Ta
        109, // Ta
        110, // Ta
        111, // Ta
        112, // Ta
        113, // Ta
        114, // Ta
        115, // Ta
        116, // Ta
        117, // Ta
        118, // Ta
        119, // Ta
        120, // Ta
        121, // Ta
        122, // Ta
        123, // Ta
        124, // Ta
        125, // Ta
        126, // Ta
        127, // Ta
        128, // Ta
        129, // Ta
        130, // Ta
        131, // Ta
        132, // Ta
        133, // Ta
        134, // Ta
        135, // Ta
        136, // Ta
        137, // Ta
        138, // Ta
        139, // Ta
        140, // Ta
        141, // Ta
        142, // Ta
        143, // Ta
        144, // Ta
        145, // Ta
        146, // Ta
        147, // Ta
        148, // Ta
        149, // Ta
        150, // Ta
        151, // Td
        152, // Td
        153, // Td
        154, // Td
        155, // Td
        156, // Td
        157, // Td
        158, // Td
        159, // Td
        160, // Td
        161, // Td
        162, // Td
        163, // Td
        164, // Td
        165, // Td
        166, // Td
        167, // Td
        168, // Td
        169, // Td
        170, // Td
        171, // Td
        172, // Td
        173, // Td
        174, // Td
        175, // Td
        176, // Td
        177, // Td
        178, // Td
        179, // Td
        180, // Td
        181, // Td
        182, // Td
        183, // Td
        184, // Td
        185, // Td
        186, // Td
        187, // Td
        188, // Td
        189, // Td
        190, // Td
        191, // Td
        192, // Td
        193, // Td
        194, // Td
        195, // Td
        196, // Td
        197, // Td
        198, // Td
        199, // Td
        200, // Td
        201, // Td
        202, // Td
        203, // Td
        204, // Td
        205, // Td
        206, // Td
        207, // Td
        208, // Td
        209, // Td
        210, // Td
        211, // Td
        212, // Td
        213, // Td
        214, // Td
        215, // Tcp
        216, // Tcp
        217, // Tcp
        218, // Tcp
        219, // Tcp
        220, // Tcp
        221, // Tcp
        222, // Tcp
        223, // Tcp
        224, // Tcp
        225, // Tcp
        226, // Tcp
        227, // Tcp
        228, // Tcp
        229, // Tcp
        230, // Tcp
        231, // Tcp
        232, // Tcp
        233, // Tcp
        234, // Tcp
        235, // Tcp
        236, // Tcp
        237, // Tcp
        238, // Tcp
        239, // Tcp
        240, // Tcp
        241, // Tcp
        242, // Tcp
        243, // Tcp
        244, // Tcp
        245, // Tcp
        246, // Tcp
        247, // Tcp
        248, // Tcp
        249, // Tcp
        250, // Tcp
        251, // Tcp
        252, // Tcp
        253, // Tcp
        254, // Tcp
        255, // Tcp
        256, // Tcp
        257, // Tcp
        258, // Tcp
        259, // Tcp
        260, // Tcp
        261, // Tcp
        262, // Tcp
        263, // Tcp
        264, // Tcp
        265, // Tcp
        266, // Tcp
        267, // Tcp
        268, // Tcp
        269, // Tcp
        270, // Tcp
        271, // Tcp
        272, // Tcp
        273, // Tcp
        274, // Tcp
        275, // Tcp
        276, // Tcp
        277, // Tcp
        278, // Tcp
        279, // Tcc
        280, // Tcc
        281, // Tcc
        282, // Tcc
        283, // Tcc
        284, // Tcc
        285, // Tcc
        286, // Tcc
        287, // Tcc
        288, // Tcc
        289, // Tcc
        290, // Tcc
        291, // Tcc
        292, // Tcc
        293, // Tcc
        294, // Tcc
        295, // Tca
        296, // Tca
    };

    PE_BLOCK_ID kHwDx11DriverEnumGfx9[] = {
    PE_BLOCK_CPF,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_CB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_DB,
    PE_BLOCK_GRBM,
    PE_BLOCK_GRBMSE,
    PE_BLOCK_GRBMSE,
    PE_BLOCK_GRBMSE,
    PE_BLOCK_GRBMSE,
    PE_BLOCK_RLC,
    PE_BLOCK_PA,
    PE_BLOCK_PA,
    PE_BLOCK_PA,
    PE_BLOCK_PA,
    PE_BLOCK_SC,
    PE_BLOCK_SC,
    PE_BLOCK_SC,
    PE_BLOCK_SC,
    PE_BLOCK_SX,
    PE_BLOCK_SX,
    PE_BLOCK_SX,
    PE_BLOCK_SX,
    PE_BLOCK_SPI,
    PE_BLOCK_SPI,
    PE_BLOCK_SPI,
    PE_BLOCK_SPI,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_SQ,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TA,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TD,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCP,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCC,
    PE_BLOCK_TCA,
    PE_BLOCK_TCA,
    PE_BLOCK_GDS,
    PE_BLOCK_IA,
    PE_BLOCK_IA,
    PE_BLOCK_VGT,
    PE_BLOCK_VGT,
    PE_BLOCK_VGT,
    PE_BLOCK_VGT,
    PE_BLOCK_CPG,
    PE_BLOCK_CPC,
    PE_BLOCK_WD,
    PE_BLOCK_MCVML2,
    PE_BLOCK_ATC,
    PE_BLOCK_ATCL2,
    PE_BLOCK_RPB,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_EA,
    PE_BLOCK_RMI,
    PE_BLOCK_RMI,
    PE_BLOCK_RMI,
    PE_BLOCK_RMI,
    PE_BLOCK_RMI,
    PE_BLOCK_RMI,
    PE_BLOCK_RMI,
    PE_BLOCK_RMI,
    PE_BLOCK_UNKNOWN,
    PE_BLOCK_UNKNOWN,
    };

    const unsigned int kHwDx11GpuTimeBottomToBottomDurationIndexGfx9 = 56526; ///< Index of delta between the previous command reaching bottom of pipe and the current command reaching bottom of pipe, will not include latency of first data to travel through pipeline, best for large data sets. for Dx11 for Gfx9 family
    const unsigned int kHwDx11GpuTimeBottomToBottomStartIndexGfx9 = static_cast<unsigned int>(-1); ///< Index of time of the previous command reaching bottom of pipe for Dx11 for Gfx9 family
    const unsigned int kHwDx11GpuTimeBottomToBottomEndIndexGfx9 = static_cast<unsigned int>(-1); ///< Index of time of the current command reaching bottom of pipe for Dx11 for Gfx9 family
    const unsigned int kHwDx11GpuTimeTopToBottomDurationIndexGfx9 = 56529; ///< Index of execution duration of the current command from top of pipe to bottom of pipe, may include overhead of time in queue for Dx11 for Gfx9 family
    const unsigned int kHwDx11GpuTimeTopToBottomStartIndexGfx9 = static_cast<unsigned int>(-1); ///< Index of time that the current command reaches the top of pipe for Dx11 for Gfx9 family
    const unsigned int kHwDx11GpuTimeTopToBottomEndIndexGfx9 = static_cast<unsigned int>(-1); ///< Index of time that the current command reaches the bottom of pipe for Dx11 for Gfx9 family
    const std::set<unsigned int> kHwDx11TimestampBlockIdsGfx9 =       {352, 351}; ///< Timestamp block id's for DX11 for gfx9 family
    const std::set<unsigned int> kHwDx11TimeCounterIndicesGfx9 =      {56526, 56527, 56528, 56529, 56530, 56531, 56525}; ///< Timestamp counter indices for DX11 for gfx9 family
    const unsigned int           kHwDx11GroupCountGfx9                = static_cast<unsigned int>(kHwDx11GroupsGfx9.size());
    const unsigned int           kDx11PaddedCounterGroupCountGfx9 = 73;
    const unsigned int           kHwDx11SqGroupCountGfx9              = sizeof(kHwDx11SqGroupsGfx9) / sizeof(GpaSqCounterGroupDesc);
    const unsigned int           kHwDx11SqIsolatedGroupCountGfx9      = sizeof(kHwDx11SqIsolatedGroupsGfx9) / sizeof(unsigned int);
} //  namespace counter_dx11_gfx9

// clang-format on
