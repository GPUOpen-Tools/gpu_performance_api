//==============================================================================
// Copyright (c) 2010-2023 Advanced Micro Devices, Inc. All rights reserved.
/// @author AMD Developer Tools Team
/// @file
/// @brief Public Counter Definitions for DX11 GFX11.
//==============================================================================

#include "gpu_perf_api_counter_generator/gpa_counter.h"
#include "auto_generated/gpu_perf_api_counter_generator/public_counter_definitions_dx11_gfx11.h"

// *** Note, this is an auto-generated file. Do not edit. Execute PublicCounterCompiler to rebuild.

void AutoDefinePublicDerivedCountersDx11Gfx11(GpaDerivedCounters& c)
{
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(233526);

        c.DefineDerivedCounter("GPUTime", "Timing", "Time this API command took to execute on the GPU in nanoseconds from the time the previous command reached the bottom of the pipeline (BOP) to the time this command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "0,TS_FREQ,/,(1000000000),*", "cbd338f2-de6c-7b14-92ad-ba724ca2e501");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24);
        internal_counters.push_back(0);

        c.DefineDerivedCounter("GPUBusy", "Timing", "The percentage of time the GPU command processor was busy.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,/,(100),*,(100),min", "b1ba5363-1abc-fe66-2fdd-1fe6ee8989a0");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24);

        c.DefineDerivedCounter("GPUBusyCycles", "Timing", "Number of GPU cycles that the GPU command processor was busy.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0", "451cb045-23af-ac44-4603-d5832fa041d9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35887);
        internal_counters.push_back(36171);
        internal_counters.push_back(36455);
        internal_counters.push_back(36739);
        internal_counters.push_back(37023);
        internal_counters.push_back(37307);
        internal_counters.push_back(35912);
        internal_counters.push_back(36196);
        internal_counters.push_back(36480);
        internal_counters.push_back(36764);
        internal_counters.push_back(37048);
        internal_counters.push_back(37332);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("VsGsBusy", "Timing", "The percentage of time the ShaderUnit has VS or GS work to do in a VS-[GS-]PS pipeline.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,max6,(0),6,7,8,9,10,11,sum6,ifnotzero,12,/,(100),*,(100),min", "969c41c7-eb0b-9706-a7a1-98f27c3af56b");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35887);
        internal_counters.push_back(36171);
        internal_counters.push_back(36455);
        internal_counters.push_back(36739);
        internal_counters.push_back(37023);
        internal_counters.push_back(37307);
        internal_counters.push_back(35912);
        internal_counters.push_back(36196);
        internal_counters.push_back(36480);
        internal_counters.push_back(36764);
        internal_counters.push_back(37048);
        internal_counters.push_back(37332);

        c.DefineDerivedCounter("VsGsBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has VS or GS work to do in a VS-[GS-]PS pipeline.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,max6,(0),6,7,8,9,10,11,sum6,ifnotzero", "a8420bb7-6bd8-930a-9088-d73b9c039851");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(233526);
        internal_counters.push_back(35887);
        internal_counters.push_back(36171);
        internal_counters.push_back(36455);
        internal_counters.push_back(36739);
        internal_counters.push_back(37023);
        internal_counters.push_back(37307);
        internal_counters.push_back(35912);
        internal_counters.push_back(36196);
        internal_counters.push_back(36480);
        internal_counters.push_back(36764);
        internal_counters.push_back(37048);
        internal_counters.push_back(37332);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("VsGsTime", "Timing", "Time VS or GS are busy in nanoseconds in a VS-[GS-]PS pipeline.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "1,2,3,4,5,6,max6,(0),7,8,9,10,11,12,sum6,ifnotzero,13,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "3ce33b11-210d-b3de-9b6c-b9f3cd04beff");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35907);
        internal_counters.push_back(36191);
        internal_counters.push_back(36475);
        internal_counters.push_back(36759);
        internal_counters.push_back(37043);
        internal_counters.push_back(37327);
        internal_counters.push_back(35912);
        internal_counters.push_back(36196);
        internal_counters.push_back(36480);
        internal_counters.push_back(36764);
        internal_counters.push_back(37048);
        internal_counters.push_back(37332);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PreTessellationBusy", "Timing", "The percentage of time the ShaderUnit has VS and HS work to do in a pipeline that uses tessellation.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,max6,6,7,8,9,10,11,sum6,ifnotzero,12,/,(100),*,(100),min", "346c7430-4666-7065-b5b7-1cb8cbb1c01c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35907);
        internal_counters.push_back(36191);
        internal_counters.push_back(36475);
        internal_counters.push_back(36759);
        internal_counters.push_back(37043);
        internal_counters.push_back(37327);
        internal_counters.push_back(35912);
        internal_counters.push_back(36196);
        internal_counters.push_back(36480);
        internal_counters.push_back(36764);
        internal_counters.push_back(37048);
        internal_counters.push_back(37332);

        c.DefineDerivedCounter("PreTessellationBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has VS and HS work to do in a pipeline that uses tessellation.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,max6,6,7,8,9,10,11,sum6,ifnotzero", "dac68e38-0e3a-9364-2674-308e63bee2d2");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(233526);
        internal_counters.push_back(35907);
        internal_counters.push_back(36191);
        internal_counters.push_back(36475);
        internal_counters.push_back(36759);
        internal_counters.push_back(37043);
        internal_counters.push_back(37327);
        internal_counters.push_back(35912);
        internal_counters.push_back(36196);
        internal_counters.push_back(36480);
        internal_counters.push_back(36764);
        internal_counters.push_back(37048);
        internal_counters.push_back(37332);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PreTessellationTime", "Timing", "Time VS and HS are busy in nanoseconds in a pipeline that uses tessellation.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "(0),1,2,3,4,5,6,max6,7,8,9,10,11,12,sum6,ifnotzero,13,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "d5e6c54c-5ffb-b173-6118-bece61f0281c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35887);
        internal_counters.push_back(36171);
        internal_counters.push_back(36455);
        internal_counters.push_back(36739);
        internal_counters.push_back(37023);
        internal_counters.push_back(37307);
        internal_counters.push_back(35912);
        internal_counters.push_back(36196);
        internal_counters.push_back(36480);
        internal_counters.push_back(36764);
        internal_counters.push_back(37048);
        internal_counters.push_back(37332);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PostTessellationBusy", "Timing", "The percentage of time the ShaderUnit has DS or GS work to do in a pipeline that uses tessellation.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,max6,6,7,8,9,10,11,sum6,ifnotzero,12,/,(100),*,(100),min", "1a275c68-9340-f358-71c6-a2648390381d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35887);
        internal_counters.push_back(36171);
        internal_counters.push_back(36455);
        internal_counters.push_back(36739);
        internal_counters.push_back(37023);
        internal_counters.push_back(37307);
        internal_counters.push_back(35912);
        internal_counters.push_back(36196);
        internal_counters.push_back(36480);
        internal_counters.push_back(36764);
        internal_counters.push_back(37048);
        internal_counters.push_back(37332);

        c.DefineDerivedCounter("PostTessellationBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has DS or GS work to do in a pipeline that uses tessellation.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,max6,6,7,8,9,10,11,sum6,ifnotzero", "a5ed943b-13ef-942b-56fb-6d519eeb7337");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(233526);
        internal_counters.push_back(35887);
        internal_counters.push_back(36171);
        internal_counters.push_back(36455);
        internal_counters.push_back(36739);
        internal_counters.push_back(37023);
        internal_counters.push_back(37307);
        internal_counters.push_back(35912);
        internal_counters.push_back(36196);
        internal_counters.push_back(36480);
        internal_counters.push_back(36764);
        internal_counters.push_back(37048);
        internal_counters.push_back(37332);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PostTessellationTime", "Timing", "Time DS or GS are busy in nanoseconds in a pipeline that uses tessellation.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "(0),1,2,3,4,5,6,max6,7,8,9,10,11,12,sum6,ifnotzero,13,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "9f8dfa40-faee-2014-3467-2630a7d95c1e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35942);
        internal_counters.push_back(36226);
        internal_counters.push_back(36510);
        internal_counters.push_back(36794);
        internal_counters.push_back(37078);
        internal_counters.push_back(37362);
        internal_counters.push_back(35958);
        internal_counters.push_back(36242);
        internal_counters.push_back(36526);
        internal_counters.push_back(36810);
        internal_counters.push_back(37094);
        internal_counters.push_back(37378);
        internal_counters.push_back(35943);
        internal_counters.push_back(36227);
        internal_counters.push_back(36511);
        internal_counters.push_back(36795);
        internal_counters.push_back(37079);
        internal_counters.push_back(37363);
        internal_counters.push_back(35959);
        internal_counters.push_back(36243);
        internal_counters.push_back(36527);
        internal_counters.push_back(36811);
        internal_counters.push_back(37095);
        internal_counters.push_back(37379);
        internal_counters.push_back(35944);
        internal_counters.push_back(36228);
        internal_counters.push_back(36512);
        internal_counters.push_back(36796);
        internal_counters.push_back(37080);
        internal_counters.push_back(37364);
        internal_counters.push_back(35960);
        internal_counters.push_back(36244);
        internal_counters.push_back(36528);
        internal_counters.push_back(36812);
        internal_counters.push_back(37096);
        internal_counters.push_back(37380);
        internal_counters.push_back(35945);
        internal_counters.push_back(36229);
        internal_counters.push_back(36513);
        internal_counters.push_back(36797);
        internal_counters.push_back(37081);
        internal_counters.push_back(37365);
        internal_counters.push_back(35961);
        internal_counters.push_back(36245);
        internal_counters.push_back(36529);
        internal_counters.push_back(36813);
        internal_counters.push_back(37097);
        internal_counters.push_back(37381);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSBusy", "Timing", "The percentage of time the ShaderUnit has pixel shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,max6,6,7,8,9,10,11,sum6,ifnotzero,(0),12,13,14,15,16,17,max6,18,19,20,21,22,23,sum6,ifnotzero,(0),24,25,26,27,28,29,max6,30,31,32,33,34,35,sum6,ifnotzero,(0),36,37,38,39,40,41,max6,42,43,44,45,46,47,sum6,ifnotzero,max4,48,/,(100),*,(100),min", "7e772beb-d82c-bd9a-aed0-fe504d416ce5");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35942);
        internal_counters.push_back(36226);
        internal_counters.push_back(36510);
        internal_counters.push_back(36794);
        internal_counters.push_back(37078);
        internal_counters.push_back(37362);
        internal_counters.push_back(35958);
        internal_counters.push_back(36242);
        internal_counters.push_back(36526);
        internal_counters.push_back(36810);
        internal_counters.push_back(37094);
        internal_counters.push_back(37378);
        internal_counters.push_back(35943);
        internal_counters.push_back(36227);
        internal_counters.push_back(36511);
        internal_counters.push_back(36795);
        internal_counters.push_back(37079);
        internal_counters.push_back(37363);
        internal_counters.push_back(35959);
        internal_counters.push_back(36243);
        internal_counters.push_back(36527);
        internal_counters.push_back(36811);
        internal_counters.push_back(37095);
        internal_counters.push_back(37379);
        internal_counters.push_back(35944);
        internal_counters.push_back(36228);
        internal_counters.push_back(36512);
        internal_counters.push_back(36796);
        internal_counters.push_back(37080);
        internal_counters.push_back(37364);
        internal_counters.push_back(35960);
        internal_counters.push_back(36244);
        internal_counters.push_back(36528);
        internal_counters.push_back(36812);
        internal_counters.push_back(37096);
        internal_counters.push_back(37380);
        internal_counters.push_back(35945);
        internal_counters.push_back(36229);
        internal_counters.push_back(36513);
        internal_counters.push_back(36797);
        internal_counters.push_back(37081);
        internal_counters.push_back(37365);
        internal_counters.push_back(35961);
        internal_counters.push_back(36245);
        internal_counters.push_back(36529);
        internal_counters.push_back(36813);
        internal_counters.push_back(37097);
        internal_counters.push_back(37381);

        c.DefineDerivedCounter("PSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has pixel shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,max6,6,7,8,9,10,11,sum6,ifnotzero,(0),12,13,14,15,16,17,max6,18,19,20,21,22,23,sum6,ifnotzero,(0),24,25,26,27,28,29,max6,30,31,32,33,34,35,sum6,ifnotzero,(0),36,37,38,39,40,41,max6,42,43,44,45,46,47,sum6,ifnotzero,max4", "b58bea04-ce8e-2984-80f4-8aba7d4c817b");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(233526);
        internal_counters.push_back(35942);
        internal_counters.push_back(36226);
        internal_counters.push_back(36510);
        internal_counters.push_back(36794);
        internal_counters.push_back(37078);
        internal_counters.push_back(37362);
        internal_counters.push_back(35958);
        internal_counters.push_back(36242);
        internal_counters.push_back(36526);
        internal_counters.push_back(36810);
        internal_counters.push_back(37094);
        internal_counters.push_back(37378);
        internal_counters.push_back(35943);
        internal_counters.push_back(36227);
        internal_counters.push_back(36511);
        internal_counters.push_back(36795);
        internal_counters.push_back(37079);
        internal_counters.push_back(37363);
        internal_counters.push_back(35959);
        internal_counters.push_back(36243);
        internal_counters.push_back(36527);
        internal_counters.push_back(36811);
        internal_counters.push_back(37095);
        internal_counters.push_back(37379);
        internal_counters.push_back(35944);
        internal_counters.push_back(36228);
        internal_counters.push_back(36512);
        internal_counters.push_back(36796);
        internal_counters.push_back(37080);
        internal_counters.push_back(37364);
        internal_counters.push_back(35960);
        internal_counters.push_back(36244);
        internal_counters.push_back(36528);
        internal_counters.push_back(36812);
        internal_counters.push_back(37096);
        internal_counters.push_back(37380);
        internal_counters.push_back(35945);
        internal_counters.push_back(36229);
        internal_counters.push_back(36513);
        internal_counters.push_back(36797);
        internal_counters.push_back(37081);
        internal_counters.push_back(37365);
        internal_counters.push_back(35961);
        internal_counters.push_back(36245);
        internal_counters.push_back(36529);
        internal_counters.push_back(36813);
        internal_counters.push_back(37097);
        internal_counters.push_back(37381);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSTime", "Timing", "Time pixel shaders are busy in nanoseconds.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "(0),1,2,3,4,5,6,max6,7,8,9,10,11,12,sum6,ifnotzero,(0),13,14,15,16,17,18,max6,19,20,21,22,23,24,sum6,ifnotzero,(0),25,26,27,28,29,30,max6,31,32,33,34,35,36,sum6,ifnotzero,(0),37,38,39,40,41,42,max6,43,44,45,46,47,48,sum6,ifnotzero,max4,49,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "edca7694-7416-e8a6-0c5a-63a5ad5f3d74");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35923);
        internal_counters.push_back(36207);
        internal_counters.push_back(36491);
        internal_counters.push_back(36775);
        internal_counters.push_back(37059);
        internal_counters.push_back(37343);
        internal_counters.push_back(35927);
        internal_counters.push_back(36211);
        internal_counters.push_back(36495);
        internal_counters.push_back(36779);
        internal_counters.push_back(37063);
        internal_counters.push_back(37347);
        internal_counters.push_back(35931);
        internal_counters.push_back(36215);
        internal_counters.push_back(36499);
        internal_counters.push_back(36783);
        internal_counters.push_back(37067);
        internal_counters.push_back(37351);
        internal_counters.push_back(35935);
        internal_counters.push_back(36219);
        internal_counters.push_back(36503);
        internal_counters.push_back(36787);
        internal_counters.push_back(37071);
        internal_counters.push_back(37355);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("CSBusy", "Timing", "The percentage of time the ShaderUnit has compute shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,comparemax6,12,13,14,15,16,17,18,19,20,21,22,23,comparemax6,max,24,/,(100),*,(100),min", "493fdd90-8d2b-a055-5e4e-2d29c3396b8c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35923);
        internal_counters.push_back(36207);
        internal_counters.push_back(36491);
        internal_counters.push_back(36775);
        internal_counters.push_back(37059);
        internal_counters.push_back(37343);
        internal_counters.push_back(35927);
        internal_counters.push_back(36211);
        internal_counters.push_back(36495);
        internal_counters.push_back(36779);
        internal_counters.push_back(37063);
        internal_counters.push_back(37347);
        internal_counters.push_back(35931);
        internal_counters.push_back(36215);
        internal_counters.push_back(36499);
        internal_counters.push_back(36783);
        internal_counters.push_back(37067);
        internal_counters.push_back(37351);
        internal_counters.push_back(35935);
        internal_counters.push_back(36219);
        internal_counters.push_back(36503);
        internal_counters.push_back(36787);
        internal_counters.push_back(37071);
        internal_counters.push_back(37355);

        c.DefineDerivedCounter("CSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has compute shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,comparemax6,12,13,14,15,16,17,18,19,20,21,22,23,comparemax6,max", "39bcf1b8-f6b2-4c37-f9af-0a2bb59512f9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(233526);
        internal_counters.push_back(35923);
        internal_counters.push_back(36207);
        internal_counters.push_back(36491);
        internal_counters.push_back(36775);
        internal_counters.push_back(37059);
        internal_counters.push_back(37343);
        internal_counters.push_back(35927);
        internal_counters.push_back(36211);
        internal_counters.push_back(36495);
        internal_counters.push_back(36779);
        internal_counters.push_back(37063);
        internal_counters.push_back(37347);
        internal_counters.push_back(35931);
        internal_counters.push_back(36215);
        internal_counters.push_back(36499);
        internal_counters.push_back(36783);
        internal_counters.push_back(37067);
        internal_counters.push_back(37351);
        internal_counters.push_back(35935);
        internal_counters.push_back(36219);
        internal_counters.push_back(36503);
        internal_counters.push_back(36787);
        internal_counters.push_back(37071);
        internal_counters.push_back(37355);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("CSTime", "Timing", "Time compute shaders are busy in nanoseconds.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "1,2,3,4,5,6,7,8,9,10,11,12,comparemax6,13,14,15,16,17,18,19,20,21,22,23,24,comparemax6,max,25,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "dbc24916-ecb2-7eef-8d63-7afadaaab6bc");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(17180);
        internal_counters.push_back(17491);
        internal_counters.push_back(17802);
        internal_counters.push_back(18113);
        internal_counters.push_back(18424);
        internal_counters.push_back(18735);
        internal_counters.push_back(17184);
        internal_counters.push_back(17495);
        internal_counters.push_back(17806);
        internal_counters.push_back(18117);
        internal_counters.push_back(18428);
        internal_counters.push_back(18739);
        internal_counters.push_back(17136);
        internal_counters.push_back(17447);
        internal_counters.push_back(17758);
        internal_counters.push_back(18069);
        internal_counters.push_back(18380);
        internal_counters.push_back(18691);
        internal_counters.push_back(17148);
        internal_counters.push_back(17459);
        internal_counters.push_back(17770);
        internal_counters.push_back(18081);
        internal_counters.push_back(18392);
        internal_counters.push_back(18703);
        internal_counters.push_back(17137);
        internal_counters.push_back(17448);
        internal_counters.push_back(17759);
        internal_counters.push_back(18070);
        internal_counters.push_back(18381);
        internal_counters.push_back(18692);
        internal_counters.push_back(17149);
        internal_counters.push_back(17460);
        internal_counters.push_back(17771);
        internal_counters.push_back(18082);
        internal_counters.push_back(18393);
        internal_counters.push_back(18704);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PrimitiveAssemblyBusy", "Timing", "The percentage of GPUTime that primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,vecsub6,SU_CLOCKS_PRIM,12,13,14,15,16,17,18,19,20,21,22,23,vecsum6,24,25,26,27,28,29,vecsum6,(2),30,31,32,33,34,35,scalarmul6,vecsum6,scalarmul6,vecsub6,max6,(0),max,36,/,(100),*,(100),min", "54ac5640-c4d7-95e2-20e0-6a9fdfc07333");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(17180);
        internal_counters.push_back(17491);
        internal_counters.push_back(17802);
        internal_counters.push_back(18113);
        internal_counters.push_back(18424);
        internal_counters.push_back(18735);
        internal_counters.push_back(17184);
        internal_counters.push_back(17495);
        internal_counters.push_back(17806);
        internal_counters.push_back(18117);
        internal_counters.push_back(18428);
        internal_counters.push_back(18739);
        internal_counters.push_back(17136);
        internal_counters.push_back(17447);
        internal_counters.push_back(17758);
        internal_counters.push_back(18069);
        internal_counters.push_back(18380);
        internal_counters.push_back(18691);
        internal_counters.push_back(17148);
        internal_counters.push_back(17459);
        internal_counters.push_back(17770);
        internal_counters.push_back(18081);
        internal_counters.push_back(18392);
        internal_counters.push_back(18703);
        internal_counters.push_back(17137);
        internal_counters.push_back(17448);
        internal_counters.push_back(17759);
        internal_counters.push_back(18070);
        internal_counters.push_back(18381);
        internal_counters.push_back(18692);
        internal_counters.push_back(17149);
        internal_counters.push_back(17460);
        internal_counters.push_back(17771);
        internal_counters.push_back(18082);
        internal_counters.push_back(18393);
        internal_counters.push_back(18704);

        c.DefineDerivedCounter("PrimitiveAssemblyBusyCycles", "Timing", "Number of GPU cycles the primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,vecsub6,SU_CLOCKS_PRIM,12,13,14,15,16,17,18,19,20,21,22,23,vecsum6,24,25,26,27,28,29,vecsum6,(2),30,31,32,33,34,35,scalarmul6,vecsum6,scalarmul6,vecsub6,max6,(0),max", "99777f2d-9626-c78a-a97c-c4505eba1e5f");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(17089);
        internal_counters.push_back(17400);
        internal_counters.push_back(17711);
        internal_counters.push_back(18022);
        internal_counters.push_back(18333);
        internal_counters.push_back(18644);
        internal_counters.push_back(17129);
        internal_counters.push_back(17440);
        internal_counters.push_back(17751);
        internal_counters.push_back(18062);
        internal_counters.push_back(18373);
        internal_counters.push_back(18684);
        internal_counters.push_back(17130);
        internal_counters.push_back(17441);
        internal_counters.push_back(17752);
        internal_counters.push_back(18063);
        internal_counters.push_back(18374);
        internal_counters.push_back(18685);
        internal_counters.push_back(17131);
        internal_counters.push_back(17442);
        internal_counters.push_back(17753);
        internal_counters.push_back(18064);
        internal_counters.push_back(18375);
        internal_counters.push_back(18686);
        internal_counters.push_back(17132);
        internal_counters.push_back(17443);
        internal_counters.push_back(17754);
        internal_counters.push_back(18065);
        internal_counters.push_back(18376);
        internal_counters.push_back(18687);

        c.DefineDerivedCounter("CulledPrims", "PrimitiveAssembly", "The number of culled primitives. Typical reasons include scissor, the primitive having zero area, and back or front face culling.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,sum6,6,7,8,9,10,11,sum6,+,12,13,14,15,16,17,sum6,+,18,19,20,21,22,23,sum6,+,24,25,26,27,28,29,sum6,+", "589bdf55-9192-280a-41c3-584bc94f2562");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(17096);
        internal_counters.push_back(17407);
        internal_counters.push_back(17718);
        internal_counters.push_back(18029);
        internal_counters.push_back(18340);
        internal_counters.push_back(18651);

        c.DefineDerivedCounter("ClippedPrims", "PrimitiveAssembly", "The number of primitives that required one or more clipping operations due to intersecting the view volume or user clip planes.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,sum6", "5ef6f9d5-155e-5baa-163f-8359d9ea9bbf");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(17184);
        internal_counters.push_back(17495);
        internal_counters.push_back(17806);
        internal_counters.push_back(18117);
        internal_counters.push_back(18428);
        internal_counters.push_back(18739);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PAStalledOnRasterizer", "PrimitiveAssembly", "Percentage of GPUTime that primitive assembly waits for rasterization to be ready to accept data. This roughly indicates for what percentage of time the pipeline is bottlenecked by pixel operations.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,max6,6,/,(100),*", "6f9f416b-53c1-0457-f88c-7b6ba8973974");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(17184);
        internal_counters.push_back(17495);
        internal_counters.push_back(17806);
        internal_counters.push_back(18117);
        internal_counters.push_back(18428);
        internal_counters.push_back(18739);

        c.DefineDerivedCounter("PAStalledOnRasterizerCycles", "PrimitiveAssembly", "Number of GPU cycles the primitive assembly waits for rasterization to be ready to accept data. Indicates the number of GPU cycles the pipeline is bottlenecked by pixel operations.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,max6", "7a8c492a-c566-9328-6805-760dbff5c0f2");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(34913);
        internal_counters.push_back(34995);
        internal_counters.push_back(35077);
        internal_counters.push_back(35159);
        internal_counters.push_back(35241);
        internal_counters.push_back(35323);
        internal_counters.push_back(35405);
        internal_counters.push_back(35487);
        internal_counters.push_back(35569);
        internal_counters.push_back(35651);
        internal_counters.push_back(35733);
        internal_counters.push_back(35815);
        internal_counters.push_back(34918);
        internal_counters.push_back(35000);
        internal_counters.push_back(35082);
        internal_counters.push_back(35164);
        internal_counters.push_back(35246);
        internal_counters.push_back(35328);
        internal_counters.push_back(35410);
        internal_counters.push_back(35492);
        internal_counters.push_back(35574);
        internal_counters.push_back(35656);
        internal_counters.push_back(35738);
        internal_counters.push_back(35820);
        internal_counters.push_back(34923);
        internal_counters.push_back(35005);
        internal_counters.push_back(35087);
        internal_counters.push_back(35169);
        internal_counters.push_back(35251);
        internal_counters.push_back(35333);
        internal_counters.push_back(35415);
        internal_counters.push_back(35497);
        internal_counters.push_back(35579);
        internal_counters.push_back(35661);
        internal_counters.push_back(35743);
        internal_counters.push_back(35825);
        internal_counters.push_back(34928);
        internal_counters.push_back(35010);
        internal_counters.push_back(35092);
        internal_counters.push_back(35174);
        internal_counters.push_back(35256);
        internal_counters.push_back(35338);
        internal_counters.push_back(35420);
        internal_counters.push_back(35502);
        internal_counters.push_back(35584);
        internal_counters.push_back(35666);
        internal_counters.push_back(35748);
        internal_counters.push_back(35830);

        c.DefineDerivedCounter("PSPixelsOut", "PixelShader", "Pixels exported from shader to color buffers. Does not include killed or alpha tested pixels; if there are multiple render targets, each render target receives one export, so this will be 2 for 1 pixel written to two RTs.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,sum12,12,13,14,15,16,17,18,19,20,21,22,23,sum12,24,25,26,27,28,29,30,31,32,33,34,35,sum12,36,37,38,39,40,41,42,43,44,45,46,47,sum12,sum4", "24cba16c-baa6-6ecd-95ad-92ecb1338da1");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(34915);
        internal_counters.push_back(34997);
        internal_counters.push_back(35079);
        internal_counters.push_back(35161);
        internal_counters.push_back(35243);
        internal_counters.push_back(35325);
        internal_counters.push_back(35407);
        internal_counters.push_back(35489);
        internal_counters.push_back(35571);
        internal_counters.push_back(35653);
        internal_counters.push_back(35735);
        internal_counters.push_back(35817);
        internal_counters.push_back(34920);
        internal_counters.push_back(35002);
        internal_counters.push_back(35084);
        internal_counters.push_back(35166);
        internal_counters.push_back(35248);
        internal_counters.push_back(35330);
        internal_counters.push_back(35412);
        internal_counters.push_back(35494);
        internal_counters.push_back(35576);
        internal_counters.push_back(35658);
        internal_counters.push_back(35740);
        internal_counters.push_back(35822);
        internal_counters.push_back(34925);
        internal_counters.push_back(35007);
        internal_counters.push_back(35089);
        internal_counters.push_back(35171);
        internal_counters.push_back(35253);
        internal_counters.push_back(35335);
        internal_counters.push_back(35417);
        internal_counters.push_back(35499);
        internal_counters.push_back(35581);
        internal_counters.push_back(35663);
        internal_counters.push_back(35745);
        internal_counters.push_back(35827);
        internal_counters.push_back(34930);
        internal_counters.push_back(35012);
        internal_counters.push_back(35094);
        internal_counters.push_back(35176);
        internal_counters.push_back(35258);
        internal_counters.push_back(35340);
        internal_counters.push_back(35422);
        internal_counters.push_back(35504);
        internal_counters.push_back(35586);
        internal_counters.push_back(35668);
        internal_counters.push_back(35750);
        internal_counters.push_back(35832);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSExportStalls", "PixelShader", "Pixel shader output stalls. Percentage of GPUBusy. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,max12,12,13,14,15,16,17,18,19,20,21,22,23,max12,24,25,26,27,28,29,30,31,32,33,34,35,36,37,max12,38,39,40,41,42,43,44,45,46,47,max12,max4,48,/,(100),*", "9b4f466c-ff97-22bb-557d-84d3c4c51895");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(34915);
        internal_counters.push_back(34997);
        internal_counters.push_back(35079);
        internal_counters.push_back(35161);
        internal_counters.push_back(35243);
        internal_counters.push_back(35325);
        internal_counters.push_back(35407);
        internal_counters.push_back(35489);
        internal_counters.push_back(35571);
        internal_counters.push_back(35653);
        internal_counters.push_back(35735);
        internal_counters.push_back(35817);
        internal_counters.push_back(34920);
        internal_counters.push_back(35002);
        internal_counters.push_back(35084);
        internal_counters.push_back(35166);
        internal_counters.push_back(35248);
        internal_counters.push_back(35330);
        internal_counters.push_back(35412);
        internal_counters.push_back(35494);
        internal_counters.push_back(35576);
        internal_counters.push_back(35658);
        internal_counters.push_back(35740);
        internal_counters.push_back(35822);
        internal_counters.push_back(34925);
        internal_counters.push_back(35007);
        internal_counters.push_back(35089);
        internal_counters.push_back(35171);
        internal_counters.push_back(35253);
        internal_counters.push_back(35335);
        internal_counters.push_back(35417);
        internal_counters.push_back(35499);
        internal_counters.push_back(35581);
        internal_counters.push_back(35663);
        internal_counters.push_back(35745);
        internal_counters.push_back(35827);
        internal_counters.push_back(34930);
        internal_counters.push_back(35012);
        internal_counters.push_back(35094);
        internal_counters.push_back(35176);
        internal_counters.push_back(35258);
        internal_counters.push_back(35340);
        internal_counters.push_back(35422);
        internal_counters.push_back(35504);
        internal_counters.push_back(35586);
        internal_counters.push_back(35668);
        internal_counters.push_back(35750);
        internal_counters.push_back(35832);

        c.DefineDerivedCounter("PSExportStallsCycles", "PixelShader", "Number of GPU cycles the pixel shader output stalls. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,max12,12,13,14,15,16,17,18,19,20,21,22,23,max12,24,25,26,27,28,29,30,31,32,33,34,35,36,37,max12,38,39,40,41,42,43,44,45,46,47,max12,max4", "47c72aad-64e6-0864-d533-d8e0bc27c156");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35924);
        internal_counters.push_back(36208);
        internal_counters.push_back(36492);
        internal_counters.push_back(36776);
        internal_counters.push_back(37060);
        internal_counters.push_back(37344);
        internal_counters.push_back(35932);
        internal_counters.push_back(36216);
        internal_counters.push_back(36500);
        internal_counters.push_back(36784);
        internal_counters.push_back(37068);
        internal_counters.push_back(37352);

        c.DefineDerivedCounter("CSThreadGroups", "ComputeShader", "Total number of thread groups.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,sum6,6,7,8,9,10,11,sum6,+", "8ce3fc80-56b2-97f9-8e70-2e8c747cea68");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35927);
        internal_counters.push_back(36211);
        internal_counters.push_back(36495);
        internal_counters.push_back(36779);
        internal_counters.push_back(37063);
        internal_counters.push_back(37347);
        internal_counters.push_back(35935);
        internal_counters.push_back(36219);
        internal_counters.push_back(36503);
        internal_counters.push_back(36787);
        internal_counters.push_back(37071);
        internal_counters.push_back(37355);

        c.DefineDerivedCounter("CSWavefronts", "ComputeShader", "The total number of wavefronts used for the CS.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,sum6,6,7,8,9,10,11,sum6,+", "42379c6e-369b-c237-8b25-cdb9cdc65c4d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38501);
        internal_counters.push_back(38538);
        internal_counters.push_back(38575);
        internal_counters.push_back(38612);
        internal_counters.push_back(38649);
        internal_counters.push_back(38686);
        internal_counters.push_back(35924);
        internal_counters.push_back(36208);
        internal_counters.push_back(36492);
        internal_counters.push_back(36776);
        internal_counters.push_back(37060);
        internal_counters.push_back(37344);
        internal_counters.push_back(35932);
        internal_counters.push_back(36216);
        internal_counters.push_back(36500);
        internal_counters.push_back(36784);
        internal_counters.push_back(37068);
        internal_counters.push_back(37352);

        c.DefineDerivedCounter("CSThreads", "ComputeShader", "The number of CS threads processed by the hardware.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,4,5,sum6,6,7,8,9,10,11,sum6,12,13,14,15,16,17,sum6,+,ifnotzero", "7a648013-6eac-2665-ac36-13c6f4ac9c26");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38501);
        internal_counters.push_back(38538);
        internal_counters.push_back(38575);
        internal_counters.push_back(38612);
        internal_counters.push_back(38649);
        internal_counters.push_back(38686);
        internal_counters.push_back(35924);
        internal_counters.push_back(36208);
        internal_counters.push_back(36492);
        internal_counters.push_back(36776);
        internal_counters.push_back(37060);
        internal_counters.push_back(37344);
        internal_counters.push_back(35932);
        internal_counters.push_back(36216);
        internal_counters.push_back(36500);
        internal_counters.push_back(36784);
        internal_counters.push_back(37068);
        internal_counters.push_back(37352);

        c.DefineDerivedCounter("CSThreadGroupSize", "ComputeShader", "The number of CS threads within each thread group.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,4,5,sum6,6,7,8,9,10,11,sum6,12,13,14,15,16,17,sum6,+,/,6,7,8,9,10,11,sum6,12,13,14,15,16,17,sum6,+,ifnotzero", "8c65008a-9957-7ca6-4199-f6fe940420f6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38714);
        internal_counters.push_back(38950);
        internal_counters.push_back(39186);
        internal_counters.push_back(39422);
        internal_counters.push_back(39658);
        internal_counters.push_back(39894);
        internal_counters.push_back(40130);
        internal_counters.push_back(40366);
        internal_counters.push_back(40602);
        internal_counters.push_back(40838);
        internal_counters.push_back(41074);
        internal_counters.push_back(41310);
        internal_counters.push_back(41546);
        internal_counters.push_back(41782);
        internal_counters.push_back(42018);
        internal_counters.push_back(42254);
        internal_counters.push_back(42490);
        internal_counters.push_back(42726);
        internal_counters.push_back(42962);
        internal_counters.push_back(43198);
        internal_counters.push_back(43434);
        internal_counters.push_back(43670);
        internal_counters.push_back(43906);
        internal_counters.push_back(44142);
        internal_counters.push_back(44378);
        internal_counters.push_back(44614);
        internal_counters.push_back(44850);
        internal_counters.push_back(45086);
        internal_counters.push_back(45322);
        internal_counters.push_back(45558);
        internal_counters.push_back(45794);
        internal_counters.push_back(46030);
        internal_counters.push_back(46266);
        internal_counters.push_back(46502);
        internal_counters.push_back(46738);
        internal_counters.push_back(46974);
        internal_counters.push_back(47210);
        internal_counters.push_back(47446);
        internal_counters.push_back(47682);
        internal_counters.push_back(47918);
        internal_counters.push_back(48154);
        internal_counters.push_back(48390);
        internal_counters.push_back(48626);
        internal_counters.push_back(48862);
        internal_counters.push_back(49098);
        internal_counters.push_back(49334);
        internal_counters.push_back(49570);
        internal_counters.push_back(49806);
        internal_counters.push_back(50042);
        internal_counters.push_back(50278);
        internal_counters.push_back(50514);
        internal_counters.push_back(50750);
        internal_counters.push_back(50986);
        internal_counters.push_back(51222);
        internal_counters.push_back(51458);
        internal_counters.push_back(51694);
        internal_counters.push_back(51930);
        internal_counters.push_back(52166);
        internal_counters.push_back(52402);
        internal_counters.push_back(52638);
        internal_counters.push_back(52874);
        internal_counters.push_back(53110);
        internal_counters.push_back(53346);
        internal_counters.push_back(53582);
        internal_counters.push_back(53818);
        internal_counters.push_back(54054);
        internal_counters.push_back(54290);
        internal_counters.push_back(54526);
        internal_counters.push_back(54762);
        internal_counters.push_back(54998);
        internal_counters.push_back(55234);
        internal_counters.push_back(55470);
        internal_counters.push_back(55706);
        internal_counters.push_back(55942);
        internal_counters.push_back(56178);
        internal_counters.push_back(56414);
        internal_counters.push_back(56650);
        internal_counters.push_back(56886);
        internal_counters.push_back(57122);
        internal_counters.push_back(57358);
        internal_counters.push_back(57594);
        internal_counters.push_back(57830);
        internal_counters.push_back(58066);
        internal_counters.push_back(58302);
        internal_counters.push_back(58538);
        internal_counters.push_back(58774);
        internal_counters.push_back(59010);
        internal_counters.push_back(59246);
        internal_counters.push_back(59482);
        internal_counters.push_back(59718);
        internal_counters.push_back(59954);
        internal_counters.push_back(60190);
        internal_counters.push_back(60426);
        internal_counters.push_back(60662);
        internal_counters.push_back(60898);
        internal_counters.push_back(61134);
        internal_counters.push_back(24);
        internal_counters.push_back(35924);
        internal_counters.push_back(36208);
        internal_counters.push_back(36492);
        internal_counters.push_back(36776);
        internal_counters.push_back(37060);
        internal_counters.push_back(37344);
        internal_counters.push_back(35932);
        internal_counters.push_back(36216);
        internal_counters.push_back(36500);
        internal_counters.push_back(36784);
        internal_counters.push_back(37068);
        internal_counters.push_back(37352);

        c.DefineDerivedCounter("CSMemUnitBusy", "ComputeShader", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96,96,/,(100),*,97,98,99,100,101,102,sum6,103,104,105,106,107,108,sum6,+,ifnotzero", "42ab96e1-0a24-96c8-c4ff-098fa267d78e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38714);
        internal_counters.push_back(38950);
        internal_counters.push_back(39186);
        internal_counters.push_back(39422);
        internal_counters.push_back(39658);
        internal_counters.push_back(39894);
        internal_counters.push_back(40130);
        internal_counters.push_back(40366);
        internal_counters.push_back(40602);
        internal_counters.push_back(40838);
        internal_counters.push_back(41074);
        internal_counters.push_back(41310);
        internal_counters.push_back(41546);
        internal_counters.push_back(41782);
        internal_counters.push_back(42018);
        internal_counters.push_back(42254);
        internal_counters.push_back(42490);
        internal_counters.push_back(42726);
        internal_counters.push_back(42962);
        internal_counters.push_back(43198);
        internal_counters.push_back(43434);
        internal_counters.push_back(43670);
        internal_counters.push_back(43906);
        internal_counters.push_back(44142);
        internal_counters.push_back(44378);
        internal_counters.push_back(44614);
        internal_counters.push_back(44850);
        internal_counters.push_back(45086);
        internal_counters.push_back(45322);
        internal_counters.push_back(45558);
        internal_counters.push_back(45794);
        internal_counters.push_back(46030);
        internal_counters.push_back(46266);
        internal_counters.push_back(46502);
        internal_counters.push_back(46738);
        internal_counters.push_back(46974);
        internal_counters.push_back(47210);
        internal_counters.push_back(47446);
        internal_counters.push_back(47682);
        internal_counters.push_back(47918);
        internal_counters.push_back(48154);
        internal_counters.push_back(48390);
        internal_counters.push_back(48626);
        internal_counters.push_back(48862);
        internal_counters.push_back(49098);
        internal_counters.push_back(49334);
        internal_counters.push_back(49570);
        internal_counters.push_back(49806);
        internal_counters.push_back(50042);
        internal_counters.push_back(50278);
        internal_counters.push_back(50514);
        internal_counters.push_back(50750);
        internal_counters.push_back(50986);
        internal_counters.push_back(51222);
        internal_counters.push_back(51458);
        internal_counters.push_back(51694);
        internal_counters.push_back(51930);
        internal_counters.push_back(52166);
        internal_counters.push_back(52402);
        internal_counters.push_back(52638);
        internal_counters.push_back(52874);
        internal_counters.push_back(53110);
        internal_counters.push_back(53346);
        internal_counters.push_back(53582);
        internal_counters.push_back(53818);
        internal_counters.push_back(54054);
        internal_counters.push_back(54290);
        internal_counters.push_back(54526);
        internal_counters.push_back(54762);
        internal_counters.push_back(54998);
        internal_counters.push_back(55234);
        internal_counters.push_back(55470);
        internal_counters.push_back(55706);
        internal_counters.push_back(55942);
        internal_counters.push_back(56178);
        internal_counters.push_back(56414);
        internal_counters.push_back(56650);
        internal_counters.push_back(56886);
        internal_counters.push_back(57122);
        internal_counters.push_back(57358);
        internal_counters.push_back(57594);
        internal_counters.push_back(57830);
        internal_counters.push_back(58066);
        internal_counters.push_back(58302);
        internal_counters.push_back(58538);
        internal_counters.push_back(58774);
        internal_counters.push_back(59010);
        internal_counters.push_back(59246);
        internal_counters.push_back(59482);
        internal_counters.push_back(59718);
        internal_counters.push_back(59954);
        internal_counters.push_back(60190);
        internal_counters.push_back(60426);
        internal_counters.push_back(60662);
        internal_counters.push_back(60898);
        internal_counters.push_back(61134);
        internal_counters.push_back(35924);
        internal_counters.push_back(36208);
        internal_counters.push_back(36492);
        internal_counters.push_back(36776);
        internal_counters.push_back(37060);
        internal_counters.push_back(37344);
        internal_counters.push_back(35932);
        internal_counters.push_back(36216);
        internal_counters.push_back(36500);
        internal_counters.push_back(36784);
        internal_counters.push_back(37068);
        internal_counters.push_back(37352);

        c.DefineDerivedCounter("CSMemUnitBusyCycles", "ComputeShader", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96,96,97,98,99,100,101,sum6,102,103,104,105,106,107,sum6,+,ifnotzero", "39d5687f-c727-7c0c-af82-bb711d3897ed");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80306);
        internal_counters.push_back(80384);
        internal_counters.push_back(80462);
        internal_counters.push_back(80540);
        internal_counters.push_back(80618);
        internal_counters.push_back(80696);
        internal_counters.push_back(80774);
        internal_counters.push_back(80852);
        internal_counters.push_back(80930);
        internal_counters.push_back(81008);
        internal_counters.push_back(81086);
        internal_counters.push_back(81164);
        internal_counters.push_back(81242);
        internal_counters.push_back(81320);
        internal_counters.push_back(81398);
        internal_counters.push_back(81476);
        internal_counters.push_back(81554);
        internal_counters.push_back(81632);
        internal_counters.push_back(81710);
        internal_counters.push_back(81788);
        internal_counters.push_back(81866);
        internal_counters.push_back(81944);
        internal_counters.push_back(82022);
        internal_counters.push_back(82100);
        internal_counters.push_back(82178);
        internal_counters.push_back(82256);
        internal_counters.push_back(82334);
        internal_counters.push_back(82412);
        internal_counters.push_back(82490);
        internal_counters.push_back(82568);
        internal_counters.push_back(82646);
        internal_counters.push_back(82724);
        internal_counters.push_back(82802);
        internal_counters.push_back(82880);
        internal_counters.push_back(82958);
        internal_counters.push_back(83036);
        internal_counters.push_back(83114);
        internal_counters.push_back(83192);
        internal_counters.push_back(83270);
        internal_counters.push_back(83348);
        internal_counters.push_back(83426);
        internal_counters.push_back(83504);
        internal_counters.push_back(83582);
        internal_counters.push_back(83660);
        internal_counters.push_back(83738);
        internal_counters.push_back(83816);
        internal_counters.push_back(83894);
        internal_counters.push_back(83972);
        internal_counters.push_back(84050);
        internal_counters.push_back(84128);
        internal_counters.push_back(84206);
        internal_counters.push_back(84284);
        internal_counters.push_back(84362);
        internal_counters.push_back(84440);
        internal_counters.push_back(84518);
        internal_counters.push_back(84596);
        internal_counters.push_back(84674);
        internal_counters.push_back(84752);
        internal_counters.push_back(84830);
        internal_counters.push_back(84908);
        internal_counters.push_back(84986);
        internal_counters.push_back(85064);
        internal_counters.push_back(85142);
        internal_counters.push_back(85220);
        internal_counters.push_back(85298);
        internal_counters.push_back(85376);
        internal_counters.push_back(85454);
        internal_counters.push_back(85532);
        internal_counters.push_back(85610);
        internal_counters.push_back(85688);
        internal_counters.push_back(85766);
        internal_counters.push_back(85844);
        internal_counters.push_back(85922);
        internal_counters.push_back(86000);
        internal_counters.push_back(86078);
        internal_counters.push_back(86156);
        internal_counters.push_back(86234);
        internal_counters.push_back(86312);
        internal_counters.push_back(86390);
        internal_counters.push_back(86468);
        internal_counters.push_back(86546);
        internal_counters.push_back(86624);
        internal_counters.push_back(86702);
        internal_counters.push_back(86780);
        internal_counters.push_back(86858);
        internal_counters.push_back(86936);
        internal_counters.push_back(87014);
        internal_counters.push_back(87092);
        internal_counters.push_back(87170);
        internal_counters.push_back(87248);
        internal_counters.push_back(87326);
        internal_counters.push_back(87404);
        internal_counters.push_back(87482);
        internal_counters.push_back(87560);
        internal_counters.push_back(87638);
        internal_counters.push_back(87716);
        internal_counters.push_back(24);
        internal_counters.push_back(35924);
        internal_counters.push_back(36208);
        internal_counters.push_back(36492);
        internal_counters.push_back(36776);
        internal_counters.push_back(37060);
        internal_counters.push_back(37344);
        internal_counters.push_back(35932);
        internal_counters.push_back(36216);
        internal_counters.push_back(36500);
        internal_counters.push_back(36784);
        internal_counters.push_back(37068);
        internal_counters.push_back(37352);

        c.DefineDerivedCounter("CSMemUnitStalled", "ComputeShader", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96,96,/,(100),*,97,98,99,100,101,102,sum6,103,104,105,106,107,108,sum6,+,ifnotzero", "f18e8679-1511-d533-d9ee-4365197f7d0c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80306);
        internal_counters.push_back(80384);
        internal_counters.push_back(80462);
        internal_counters.push_back(80540);
        internal_counters.push_back(80618);
        internal_counters.push_back(80696);
        internal_counters.push_back(80774);
        internal_counters.push_back(80852);
        internal_counters.push_back(80930);
        internal_counters.push_back(81008);
        internal_counters.push_back(81086);
        internal_counters.push_back(81164);
        internal_counters.push_back(81242);
        internal_counters.push_back(81320);
        internal_counters.push_back(81398);
        internal_counters.push_back(81476);
        internal_counters.push_back(81554);
        internal_counters.push_back(81632);
        internal_counters.push_back(81710);
        internal_counters.push_back(81788);
        internal_counters.push_back(81866);
        internal_counters.push_back(81944);
        internal_counters.push_back(82022);
        internal_counters.push_back(82100);
        internal_counters.push_back(82178);
        internal_counters.push_back(82256);
        internal_counters.push_back(82334);
        internal_counters.push_back(82412);
        internal_counters.push_back(82490);
        internal_counters.push_back(82568);
        internal_counters.push_back(82646);
        internal_counters.push_back(82724);
        internal_counters.push_back(82802);
        internal_counters.push_back(82880);
        internal_counters.push_back(82958);
        internal_counters.push_back(83036);
        internal_counters.push_back(83114);
        internal_counters.push_back(83192);
        internal_counters.push_back(83270);
        internal_counters.push_back(83348);
        internal_counters.push_back(83426);
        internal_counters.push_back(83504);
        internal_counters.push_back(83582);
        internal_counters.push_back(83660);
        internal_counters.push_back(83738);
        internal_counters.push_back(83816);
        internal_counters.push_back(83894);
        internal_counters.push_back(83972);
        internal_counters.push_back(84050);
        internal_counters.push_back(84128);
        internal_counters.push_back(84206);
        internal_counters.push_back(84284);
        internal_counters.push_back(84362);
        internal_counters.push_back(84440);
        internal_counters.push_back(84518);
        internal_counters.push_back(84596);
        internal_counters.push_back(84674);
        internal_counters.push_back(84752);
        internal_counters.push_back(84830);
        internal_counters.push_back(84908);
        internal_counters.push_back(84986);
        internal_counters.push_back(85064);
        internal_counters.push_back(85142);
        internal_counters.push_back(85220);
        internal_counters.push_back(85298);
        internal_counters.push_back(85376);
        internal_counters.push_back(85454);
        internal_counters.push_back(85532);
        internal_counters.push_back(85610);
        internal_counters.push_back(85688);
        internal_counters.push_back(85766);
        internal_counters.push_back(85844);
        internal_counters.push_back(85922);
        internal_counters.push_back(86000);
        internal_counters.push_back(86078);
        internal_counters.push_back(86156);
        internal_counters.push_back(86234);
        internal_counters.push_back(86312);
        internal_counters.push_back(86390);
        internal_counters.push_back(86468);
        internal_counters.push_back(86546);
        internal_counters.push_back(86624);
        internal_counters.push_back(86702);
        internal_counters.push_back(86780);
        internal_counters.push_back(86858);
        internal_counters.push_back(86936);
        internal_counters.push_back(87014);
        internal_counters.push_back(87092);
        internal_counters.push_back(87170);
        internal_counters.push_back(87248);
        internal_counters.push_back(87326);
        internal_counters.push_back(87404);
        internal_counters.push_back(87482);
        internal_counters.push_back(87560);
        internal_counters.push_back(87638);
        internal_counters.push_back(87716);
        internal_counters.push_back(35924);
        internal_counters.push_back(36208);
        internal_counters.push_back(36492);
        internal_counters.push_back(36776);
        internal_counters.push_back(37060);
        internal_counters.push_back(37344);
        internal_counters.push_back(35932);
        internal_counters.push_back(36216);
        internal_counters.push_back(36500);
        internal_counters.push_back(36784);
        internal_counters.push_back(37068);
        internal_counters.push_back(37352);

        c.DefineDerivedCounter("CSMemUnitStalledCycles", "ComputeShader", "Number of GPU cycles the memory unit is stalled. Try reducing the number or size of fetches and writes if possible.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96,96,97,98,99,100,101,sum6,102,103,104,105,106,107,sum6,+,ifnotzero", "51991c84-ed2b-bf31-c4ab-8f8e9eb8f29f");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102525);
        internal_counters.push_back(102784);
        internal_counters.push_back(103043);
        internal_counters.push_back(103302);
        internal_counters.push_back(103561);
        internal_counters.push_back(103820);
        internal_counters.push_back(104079);
        internal_counters.push_back(104338);
        internal_counters.push_back(104597);
        internal_counters.push_back(104856);
        internal_counters.push_back(105115);
        internal_counters.push_back(105374);
        internal_counters.push_back(105633);
        internal_counters.push_back(105892);
        internal_counters.push_back(106151);
        internal_counters.push_back(106410);
        internal_counters.push_back(106669);
        internal_counters.push_back(106928);
        internal_counters.push_back(107187);
        internal_counters.push_back(107446);
        internal_counters.push_back(107705);
        internal_counters.push_back(107964);
        internal_counters.push_back(108223);
        internal_counters.push_back(108482);
        internal_counters.push_back(24);
        internal_counters.push_back(35924);
        internal_counters.push_back(36208);
        internal_counters.push_back(36492);
        internal_counters.push_back(36776);
        internal_counters.push_back(37060);
        internal_counters.push_back(37344);
        internal_counters.push_back(35932);
        internal_counters.push_back(36216);
        internal_counters.push_back(36500);
        internal_counters.push_back(36784);
        internal_counters.push_back(37068);
        internal_counters.push_back(37352);

        c.DefineDerivedCounter("CSWriteUnitStalled", "ComputeShader", "The percentage of GPUTime the write unit is stalled.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,/,(100),*,25,26,27,28,29,30,sum6,31,32,33,34,35,36,sum6,+,ifnotzero", "55118f7a-8f92-726f-78c6-407f689a2eb4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102525);
        internal_counters.push_back(102784);
        internal_counters.push_back(103043);
        internal_counters.push_back(103302);
        internal_counters.push_back(103561);
        internal_counters.push_back(103820);
        internal_counters.push_back(104079);
        internal_counters.push_back(104338);
        internal_counters.push_back(104597);
        internal_counters.push_back(104856);
        internal_counters.push_back(105115);
        internal_counters.push_back(105374);
        internal_counters.push_back(105633);
        internal_counters.push_back(105892);
        internal_counters.push_back(106151);
        internal_counters.push_back(106410);
        internal_counters.push_back(106669);
        internal_counters.push_back(106928);
        internal_counters.push_back(107187);
        internal_counters.push_back(107446);
        internal_counters.push_back(107705);
        internal_counters.push_back(107964);
        internal_counters.push_back(108223);
        internal_counters.push_back(108482);
        internal_counters.push_back(35924);
        internal_counters.push_back(36208);
        internal_counters.push_back(36492);
        internal_counters.push_back(36776);
        internal_counters.push_back(37060);
        internal_counters.push_back(37344);
        internal_counters.push_back(35932);
        internal_counters.push_back(36216);
        internal_counters.push_back(36500);
        internal_counters.push_back(36784);
        internal_counters.push_back(37068);
        internal_counters.push_back(37352);

        c.DefineDerivedCounter("CSWriteUnitStalledCycles", "ComputeShader", "Number of GPU cycles the write unit is stalled.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,25,26,27,28,29,sum6,30,31,32,33,34,35,sum6,+,ifnotzero", "be164c60-5e48-acac-9622-29616d09aa9a");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(208978);
        internal_counters.push_back(209490);
        internal_counters.push_back(210002);
        internal_counters.push_back(210514);
        internal_counters.push_back(211026);
        internal_counters.push_back(211538);
        internal_counters.push_back(212050);
        internal_counters.push_back(212562);
        internal_counters.push_back(213074);
        internal_counters.push_back(213586);
        internal_counters.push_back(214098);
        internal_counters.push_back(214610);
        internal_counters.push_back(215122);
        internal_counters.push_back(215634);
        internal_counters.push_back(216146);
        internal_counters.push_back(216658);
        internal_counters.push_back(217170);
        internal_counters.push_back(217682);
        internal_counters.push_back(218194);
        internal_counters.push_back(218706);
        internal_counters.push_back(219218);
        internal_counters.push_back(219730);
        internal_counters.push_back(220242);
        internal_counters.push_back(220754);
        internal_counters.push_back(221266);
        internal_counters.push_back(221778);
        internal_counters.push_back(222290);
        internal_counters.push_back(222802);
        internal_counters.push_back(223314);
        internal_counters.push_back(223826);
        internal_counters.push_back(224338);
        internal_counters.push_back(224850);
        internal_counters.push_back(225362);
        internal_counters.push_back(225874);
        internal_counters.push_back(226386);
        internal_counters.push_back(226898);
        internal_counters.push_back(227410);
        internal_counters.push_back(227922);
        internal_counters.push_back(228434);
        internal_counters.push_back(228946);
        internal_counters.push_back(229458);
        internal_counters.push_back(229970);
        internal_counters.push_back(230482);
        internal_counters.push_back(230994);
        internal_counters.push_back(231506);
        internal_counters.push_back(232018);
        internal_counters.push_back(232530);
        internal_counters.push_back(233042);
        internal_counters.push_back(38497);
        internal_counters.push_back(38534);
        internal_counters.push_back(38571);
        internal_counters.push_back(38608);
        internal_counters.push_back(38645);
        internal_counters.push_back(38682);
        internal_counters.push_back(24);
        internal_counters.push_back(35924);
        internal_counters.push_back(36208);
        internal_counters.push_back(36492);
        internal_counters.push_back(36776);
        internal_counters.push_back(37060);
        internal_counters.push_back(37344);
        internal_counters.push_back(35932);
        internal_counters.push_back(36216);
        internal_counters.push_back(36500);
        internal_counters.push_back(36784);
        internal_counters.push_back(37068);
        internal_counters.push_back(37352);

        c.DefineDerivedCounter("CSALUStalledByLDS", "ComputeShader", "The percentage of GPUTime ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible. Value range: 0% (optimal) to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum48,48,49,50,51,52,53,sum6,/,54,/,NUM_SHADER_ENGINES,/,(100),*,48,49,50,51,52,53,sum6,ifnotzero,55,56,57,58,59,60,sum6,61,62,63,64,65,66,sum6,+,ifnotzero", "6dc4f1c2-bad0-c9ff-156e-883b319a752a");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(208978);
        internal_counters.push_back(209490);
        internal_counters.push_back(210002);
        internal_counters.push_back(210514);
        internal_counters.push_back(211026);
        internal_counters.push_back(211538);
        internal_counters.push_back(212050);
        internal_counters.push_back(212562);
        internal_counters.push_back(213074);
        internal_counters.push_back(213586);
        internal_counters.push_back(214098);
        internal_counters.push_back(214610);
        internal_counters.push_back(215122);
        internal_counters.push_back(215634);
        internal_counters.push_back(216146);
        internal_counters.push_back(216658);
        internal_counters.push_back(217170);
        internal_counters.push_back(217682);
        internal_counters.push_back(218194);
        internal_counters.push_back(218706);
        internal_counters.push_back(219218);
        internal_counters.push_back(219730);
        internal_counters.push_back(220242);
        internal_counters.push_back(220754);
        internal_counters.push_back(221266);
        internal_counters.push_back(221778);
        internal_counters.push_back(222290);
        internal_counters.push_back(222802);
        internal_counters.push_back(223314);
        internal_counters.push_back(223826);
        internal_counters.push_back(224338);
        internal_counters.push_back(224850);
        internal_counters.push_back(225362);
        internal_counters.push_back(225874);
        internal_counters.push_back(226386);
        internal_counters.push_back(226898);
        internal_counters.push_back(227410);
        internal_counters.push_back(227922);
        internal_counters.push_back(228434);
        internal_counters.push_back(228946);
        internal_counters.push_back(229458);
        internal_counters.push_back(229970);
        internal_counters.push_back(230482);
        internal_counters.push_back(230994);
        internal_counters.push_back(231506);
        internal_counters.push_back(232018);
        internal_counters.push_back(232530);
        internal_counters.push_back(233042);
        internal_counters.push_back(35924);
        internal_counters.push_back(36208);
        internal_counters.push_back(36492);
        internal_counters.push_back(36776);
        internal_counters.push_back(37060);
        internal_counters.push_back(37344);
        internal_counters.push_back(35932);
        internal_counters.push_back(36216);
        internal_counters.push_back(36500);
        internal_counters.push_back(36784);
        internal_counters.push_back(37068);
        internal_counters.push_back(37352);

        c.DefineDerivedCounter("CSALUStalledByLDSCycles", "ComputeShader", "Number of GPU cycles the ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum48,NUM_SHADER_ENGINES,/,48,49,50,51,52,53,sum6,54,55,56,57,58,59,sum6,+,ifnotzero", "8f3d5f25-2159-0374-fafe-e26a7799b6c8");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(209205);
        internal_counters.push_back(209717);
        internal_counters.push_back(210229);
        internal_counters.push_back(210741);
        internal_counters.push_back(211253);
        internal_counters.push_back(211765);
        internal_counters.push_back(212277);
        internal_counters.push_back(212789);
        internal_counters.push_back(213301);
        internal_counters.push_back(213813);
        internal_counters.push_back(214325);
        internal_counters.push_back(214837);
        internal_counters.push_back(215349);
        internal_counters.push_back(215861);
        internal_counters.push_back(216373);
        internal_counters.push_back(216885);
        internal_counters.push_back(217397);
        internal_counters.push_back(217909);
        internal_counters.push_back(218421);
        internal_counters.push_back(218933);
        internal_counters.push_back(219445);
        internal_counters.push_back(219957);
        internal_counters.push_back(220469);
        internal_counters.push_back(220981);
        internal_counters.push_back(221493);
        internal_counters.push_back(222005);
        internal_counters.push_back(222517);
        internal_counters.push_back(223029);
        internal_counters.push_back(223541);
        internal_counters.push_back(224053);
        internal_counters.push_back(224565);
        internal_counters.push_back(225077);
        internal_counters.push_back(225589);
        internal_counters.push_back(226101);
        internal_counters.push_back(226613);
        internal_counters.push_back(227125);
        internal_counters.push_back(227637);
        internal_counters.push_back(228149);
        internal_counters.push_back(228661);
        internal_counters.push_back(229173);
        internal_counters.push_back(229685);
        internal_counters.push_back(230197);
        internal_counters.push_back(230709);
        internal_counters.push_back(231221);
        internal_counters.push_back(231733);
        internal_counters.push_back(232245);
        internal_counters.push_back(232757);
        internal_counters.push_back(233269);
        internal_counters.push_back(24);
        internal_counters.push_back(35924);
        internal_counters.push_back(36208);
        internal_counters.push_back(36492);
        internal_counters.push_back(36776);
        internal_counters.push_back(37060);
        internal_counters.push_back(37344);
        internal_counters.push_back(35932);
        internal_counters.push_back(36216);
        internal_counters.push_back(36500);
        internal_counters.push_back(36784);
        internal_counters.push_back(37068);
        internal_counters.push_back(37352);

        c.DefineDerivedCounter("CSLDSBankConflict", "ComputeShader", "The percentage of GPUTime LDS is stalled by bank conflicts. Value range: 0% (optimal) to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum48,48,/,NUM_SIMDS,/,(100),*,49,50,51,52,53,54,sum6,55,56,57,58,59,60,sum6,+,ifnotzero", "1065ee10-2e41-ea41-1eb3-b61b491752f4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(209205);
        internal_counters.push_back(209717);
        internal_counters.push_back(210229);
        internal_counters.push_back(210741);
        internal_counters.push_back(211253);
        internal_counters.push_back(211765);
        internal_counters.push_back(212277);
        internal_counters.push_back(212789);
        internal_counters.push_back(213301);
        internal_counters.push_back(213813);
        internal_counters.push_back(214325);
        internal_counters.push_back(214837);
        internal_counters.push_back(215349);
        internal_counters.push_back(215861);
        internal_counters.push_back(216373);
        internal_counters.push_back(216885);
        internal_counters.push_back(217397);
        internal_counters.push_back(217909);
        internal_counters.push_back(218421);
        internal_counters.push_back(218933);
        internal_counters.push_back(219445);
        internal_counters.push_back(219957);
        internal_counters.push_back(220469);
        internal_counters.push_back(220981);
        internal_counters.push_back(221493);
        internal_counters.push_back(222005);
        internal_counters.push_back(222517);
        internal_counters.push_back(223029);
        internal_counters.push_back(223541);
        internal_counters.push_back(224053);
        internal_counters.push_back(224565);
        internal_counters.push_back(225077);
        internal_counters.push_back(225589);
        internal_counters.push_back(226101);
        internal_counters.push_back(226613);
        internal_counters.push_back(227125);
        internal_counters.push_back(227637);
        internal_counters.push_back(228149);
        internal_counters.push_back(228661);
        internal_counters.push_back(229173);
        internal_counters.push_back(229685);
        internal_counters.push_back(230197);
        internal_counters.push_back(230709);
        internal_counters.push_back(231221);
        internal_counters.push_back(231733);
        internal_counters.push_back(232245);
        internal_counters.push_back(232757);
        internal_counters.push_back(233269);
        internal_counters.push_back(35924);
        internal_counters.push_back(36208);
        internal_counters.push_back(36492);
        internal_counters.push_back(36776);
        internal_counters.push_back(37060);
        internal_counters.push_back(37344);
        internal_counters.push_back(35932);
        internal_counters.push_back(36216);
        internal_counters.push_back(36500);
        internal_counters.push_back(36784);
        internal_counters.push_back(37068);
        internal_counters.push_back(37352);

        c.DefineDerivedCounter("CSLDSBankConflictCycles", "ComputeShader", "Number of GPU cycles the LDS is stalled by bank conflicts. Value range: 0 (optimal) to GPUBusyCycles (bad).", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum48,NUM_SIMDS,/,48,49,50,51,52,53,sum6,54,55,56,57,58,59,sum6,+,ifnotzero", "1fd1adf3-c51e-94fd-083e-c482a0a0809e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38714);
        internal_counters.push_back(38950);
        internal_counters.push_back(39186);
        internal_counters.push_back(39422);
        internal_counters.push_back(39658);
        internal_counters.push_back(39894);
        internal_counters.push_back(40130);
        internal_counters.push_back(40366);
        internal_counters.push_back(40602);
        internal_counters.push_back(40838);
        internal_counters.push_back(41074);
        internal_counters.push_back(41310);
        internal_counters.push_back(41546);
        internal_counters.push_back(41782);
        internal_counters.push_back(42018);
        internal_counters.push_back(42254);
        internal_counters.push_back(42490);
        internal_counters.push_back(42726);
        internal_counters.push_back(42962);
        internal_counters.push_back(43198);
        internal_counters.push_back(43434);
        internal_counters.push_back(43670);
        internal_counters.push_back(43906);
        internal_counters.push_back(44142);
        internal_counters.push_back(44378);
        internal_counters.push_back(44614);
        internal_counters.push_back(44850);
        internal_counters.push_back(45086);
        internal_counters.push_back(45322);
        internal_counters.push_back(45558);
        internal_counters.push_back(45794);
        internal_counters.push_back(46030);
        internal_counters.push_back(46266);
        internal_counters.push_back(46502);
        internal_counters.push_back(46738);
        internal_counters.push_back(46974);
        internal_counters.push_back(47210);
        internal_counters.push_back(47446);
        internal_counters.push_back(47682);
        internal_counters.push_back(47918);
        internal_counters.push_back(48154);
        internal_counters.push_back(48390);
        internal_counters.push_back(48626);
        internal_counters.push_back(48862);
        internal_counters.push_back(49098);
        internal_counters.push_back(49334);
        internal_counters.push_back(49570);
        internal_counters.push_back(49806);
        internal_counters.push_back(50042);
        internal_counters.push_back(50278);
        internal_counters.push_back(50514);
        internal_counters.push_back(50750);
        internal_counters.push_back(50986);
        internal_counters.push_back(51222);
        internal_counters.push_back(51458);
        internal_counters.push_back(51694);
        internal_counters.push_back(51930);
        internal_counters.push_back(52166);
        internal_counters.push_back(52402);
        internal_counters.push_back(52638);
        internal_counters.push_back(52874);
        internal_counters.push_back(53110);
        internal_counters.push_back(53346);
        internal_counters.push_back(53582);
        internal_counters.push_back(53818);
        internal_counters.push_back(54054);
        internal_counters.push_back(54290);
        internal_counters.push_back(54526);
        internal_counters.push_back(54762);
        internal_counters.push_back(54998);
        internal_counters.push_back(55234);
        internal_counters.push_back(55470);
        internal_counters.push_back(55706);
        internal_counters.push_back(55942);
        internal_counters.push_back(56178);
        internal_counters.push_back(56414);
        internal_counters.push_back(56650);
        internal_counters.push_back(56886);
        internal_counters.push_back(57122);
        internal_counters.push_back(57358);
        internal_counters.push_back(57594);
        internal_counters.push_back(57830);
        internal_counters.push_back(58066);
        internal_counters.push_back(58302);
        internal_counters.push_back(58538);
        internal_counters.push_back(58774);
        internal_counters.push_back(59010);
        internal_counters.push_back(59246);
        internal_counters.push_back(59482);
        internal_counters.push_back(59718);
        internal_counters.push_back(59954);
        internal_counters.push_back(60190);
        internal_counters.push_back(60426);
        internal_counters.push_back(60662);
        internal_counters.push_back(60898);
        internal_counters.push_back(61134);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("TexUnitBusy", "Timing", "The percentage of GPUTime the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96,96,/,(100),*", "36afb8d9-42fc-aafe-66c5-449542153b2c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38714);
        internal_counters.push_back(38950);
        internal_counters.push_back(39186);
        internal_counters.push_back(39422);
        internal_counters.push_back(39658);
        internal_counters.push_back(39894);
        internal_counters.push_back(40130);
        internal_counters.push_back(40366);
        internal_counters.push_back(40602);
        internal_counters.push_back(40838);
        internal_counters.push_back(41074);
        internal_counters.push_back(41310);
        internal_counters.push_back(41546);
        internal_counters.push_back(41782);
        internal_counters.push_back(42018);
        internal_counters.push_back(42254);
        internal_counters.push_back(42490);
        internal_counters.push_back(42726);
        internal_counters.push_back(42962);
        internal_counters.push_back(43198);
        internal_counters.push_back(43434);
        internal_counters.push_back(43670);
        internal_counters.push_back(43906);
        internal_counters.push_back(44142);
        internal_counters.push_back(44378);
        internal_counters.push_back(44614);
        internal_counters.push_back(44850);
        internal_counters.push_back(45086);
        internal_counters.push_back(45322);
        internal_counters.push_back(45558);
        internal_counters.push_back(45794);
        internal_counters.push_back(46030);
        internal_counters.push_back(46266);
        internal_counters.push_back(46502);
        internal_counters.push_back(46738);
        internal_counters.push_back(46974);
        internal_counters.push_back(47210);
        internal_counters.push_back(47446);
        internal_counters.push_back(47682);
        internal_counters.push_back(47918);
        internal_counters.push_back(48154);
        internal_counters.push_back(48390);
        internal_counters.push_back(48626);
        internal_counters.push_back(48862);
        internal_counters.push_back(49098);
        internal_counters.push_back(49334);
        internal_counters.push_back(49570);
        internal_counters.push_back(49806);
        internal_counters.push_back(50042);
        internal_counters.push_back(50278);
        internal_counters.push_back(50514);
        internal_counters.push_back(50750);
        internal_counters.push_back(50986);
        internal_counters.push_back(51222);
        internal_counters.push_back(51458);
        internal_counters.push_back(51694);
        internal_counters.push_back(51930);
        internal_counters.push_back(52166);
        internal_counters.push_back(52402);
        internal_counters.push_back(52638);
        internal_counters.push_back(52874);
        internal_counters.push_back(53110);
        internal_counters.push_back(53346);
        internal_counters.push_back(53582);
        internal_counters.push_back(53818);
        internal_counters.push_back(54054);
        internal_counters.push_back(54290);
        internal_counters.push_back(54526);
        internal_counters.push_back(54762);
        internal_counters.push_back(54998);
        internal_counters.push_back(55234);
        internal_counters.push_back(55470);
        internal_counters.push_back(55706);
        internal_counters.push_back(55942);
        internal_counters.push_back(56178);
        internal_counters.push_back(56414);
        internal_counters.push_back(56650);
        internal_counters.push_back(56886);
        internal_counters.push_back(57122);
        internal_counters.push_back(57358);
        internal_counters.push_back(57594);
        internal_counters.push_back(57830);
        internal_counters.push_back(58066);
        internal_counters.push_back(58302);
        internal_counters.push_back(58538);
        internal_counters.push_back(58774);
        internal_counters.push_back(59010);
        internal_counters.push_back(59246);
        internal_counters.push_back(59482);
        internal_counters.push_back(59718);
        internal_counters.push_back(59954);
        internal_counters.push_back(60190);
        internal_counters.push_back(60426);
        internal_counters.push_back(60662);
        internal_counters.push_back(60898);
        internal_counters.push_back(61134);

        c.DefineDerivedCounter("TexUnitBusyCycles", "Timing", "Number of GPU cycles the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96", "c68761f2-248c-4f39-6528-c308b1c0807c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38768);
        internal_counters.push_back(39004);
        internal_counters.push_back(39240);
        internal_counters.push_back(39476);
        internal_counters.push_back(39712);
        internal_counters.push_back(39948);
        internal_counters.push_back(40184);
        internal_counters.push_back(40420);
        internal_counters.push_back(40656);
        internal_counters.push_back(40892);
        internal_counters.push_back(41128);
        internal_counters.push_back(41364);
        internal_counters.push_back(41600);
        internal_counters.push_back(41836);
        internal_counters.push_back(42072);
        internal_counters.push_back(42308);
        internal_counters.push_back(42544);
        internal_counters.push_back(42780);
        internal_counters.push_back(43016);
        internal_counters.push_back(43252);
        internal_counters.push_back(43488);
        internal_counters.push_back(43724);
        internal_counters.push_back(43960);
        internal_counters.push_back(44196);
        internal_counters.push_back(44432);
        internal_counters.push_back(44668);
        internal_counters.push_back(44904);
        internal_counters.push_back(45140);
        internal_counters.push_back(45376);
        internal_counters.push_back(45612);
        internal_counters.push_back(45848);
        internal_counters.push_back(46084);
        internal_counters.push_back(46320);
        internal_counters.push_back(46556);
        internal_counters.push_back(46792);
        internal_counters.push_back(47028);
        internal_counters.push_back(47264);
        internal_counters.push_back(47500);
        internal_counters.push_back(47736);
        internal_counters.push_back(47972);
        internal_counters.push_back(48208);
        internal_counters.push_back(48444);
        internal_counters.push_back(48680);
        internal_counters.push_back(48916);
        internal_counters.push_back(49152);
        internal_counters.push_back(49388);
        internal_counters.push_back(49624);
        internal_counters.push_back(49860);
        internal_counters.push_back(50096);
        internal_counters.push_back(50332);
        internal_counters.push_back(50568);
        internal_counters.push_back(50804);
        internal_counters.push_back(51040);
        internal_counters.push_back(51276);
        internal_counters.push_back(51512);
        internal_counters.push_back(51748);
        internal_counters.push_back(51984);
        internal_counters.push_back(52220);
        internal_counters.push_back(52456);
        internal_counters.push_back(52692);
        internal_counters.push_back(52928);
        internal_counters.push_back(53164);
        internal_counters.push_back(53400);
        internal_counters.push_back(53636);
        internal_counters.push_back(53872);
        internal_counters.push_back(54108);
        internal_counters.push_back(54344);
        internal_counters.push_back(54580);
        internal_counters.push_back(54816);
        internal_counters.push_back(55052);
        internal_counters.push_back(55288);
        internal_counters.push_back(55524);
        internal_counters.push_back(55760);
        internal_counters.push_back(55996);
        internal_counters.push_back(56232);
        internal_counters.push_back(56468);
        internal_counters.push_back(56704);
        internal_counters.push_back(56940);
        internal_counters.push_back(57176);
        internal_counters.push_back(57412);
        internal_counters.push_back(57648);
        internal_counters.push_back(57884);
        internal_counters.push_back(58120);
        internal_counters.push_back(58356);
        internal_counters.push_back(58592);
        internal_counters.push_back(58828);
        internal_counters.push_back(59064);
        internal_counters.push_back(59300);
        internal_counters.push_back(59536);
        internal_counters.push_back(59772);
        internal_counters.push_back(60008);
        internal_counters.push_back(60244);
        internal_counters.push_back(60480);
        internal_counters.push_back(60716);
        internal_counters.push_back(60952);
        internal_counters.push_back(61188);
        internal_counters.push_back(38767);
        internal_counters.push_back(39003);
        internal_counters.push_back(39239);
        internal_counters.push_back(39475);
        internal_counters.push_back(39711);
        internal_counters.push_back(39947);
        internal_counters.push_back(40183);
        internal_counters.push_back(40419);
        internal_counters.push_back(40655);
        internal_counters.push_back(40891);
        internal_counters.push_back(41127);
        internal_counters.push_back(41363);
        internal_counters.push_back(41599);
        internal_counters.push_back(41835);
        internal_counters.push_back(42071);
        internal_counters.push_back(42307);
        internal_counters.push_back(42543);
        internal_counters.push_back(42779);
        internal_counters.push_back(43015);
        internal_counters.push_back(43251);
        internal_counters.push_back(43487);
        internal_counters.push_back(43723);
        internal_counters.push_back(43959);
        internal_counters.push_back(44195);
        internal_counters.push_back(44431);
        internal_counters.push_back(44667);
        internal_counters.push_back(44903);
        internal_counters.push_back(45139);
        internal_counters.push_back(45375);
        internal_counters.push_back(45611);
        internal_counters.push_back(45847);
        internal_counters.push_back(46083);
        internal_counters.push_back(46319);
        internal_counters.push_back(46555);
        internal_counters.push_back(46791);
        internal_counters.push_back(47027);
        internal_counters.push_back(47263);
        internal_counters.push_back(47499);
        internal_counters.push_back(47735);
        internal_counters.push_back(47971);
        internal_counters.push_back(48207);
        internal_counters.push_back(48443);
        internal_counters.push_back(48679);
        internal_counters.push_back(48915);
        internal_counters.push_back(49151);
        internal_counters.push_back(49387);
        internal_counters.push_back(49623);
        internal_counters.push_back(49859);
        internal_counters.push_back(50095);
        internal_counters.push_back(50331);
        internal_counters.push_back(50567);
        internal_counters.push_back(50803);
        internal_counters.push_back(51039);
        internal_counters.push_back(51275);
        internal_counters.push_back(51511);
        internal_counters.push_back(51747);
        internal_counters.push_back(51983);
        internal_counters.push_back(52219);
        internal_counters.push_back(52455);
        internal_counters.push_back(52691);
        internal_counters.push_back(52927);
        internal_counters.push_back(53163);
        internal_counters.push_back(53399);
        internal_counters.push_back(53635);
        internal_counters.push_back(53871);
        internal_counters.push_back(54107);
        internal_counters.push_back(54343);
        internal_counters.push_back(54579);
        internal_counters.push_back(54815);
        internal_counters.push_back(55051);
        internal_counters.push_back(55287);
        internal_counters.push_back(55523);
        internal_counters.push_back(55759);
        internal_counters.push_back(55995);
        internal_counters.push_back(56231);
        internal_counters.push_back(56467);
        internal_counters.push_back(56703);
        internal_counters.push_back(56939);
        internal_counters.push_back(57175);
        internal_counters.push_back(57411);
        internal_counters.push_back(57647);
        internal_counters.push_back(57883);
        internal_counters.push_back(58119);
        internal_counters.push_back(58355);
        internal_counters.push_back(58591);
        internal_counters.push_back(58827);
        internal_counters.push_back(59063);
        internal_counters.push_back(59299);
        internal_counters.push_back(59535);
        internal_counters.push_back(59771);
        internal_counters.push_back(60007);
        internal_counters.push_back(60243);
        internal_counters.push_back(60479);
        internal_counters.push_back(60715);
        internal_counters.push_back(60951);
        internal_counters.push_back(61187);

        c.DefineDerivedCounter("TexTriFilteringPct", "TextureUnit", "Percentage of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum96,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,+,/,(100),*", "1affc3c8-b917-5c81-622b-7004527208ae");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38768);
        internal_counters.push_back(39004);
        internal_counters.push_back(39240);
        internal_counters.push_back(39476);
        internal_counters.push_back(39712);
        internal_counters.push_back(39948);
        internal_counters.push_back(40184);
        internal_counters.push_back(40420);
        internal_counters.push_back(40656);
        internal_counters.push_back(40892);
        internal_counters.push_back(41128);
        internal_counters.push_back(41364);
        internal_counters.push_back(41600);
        internal_counters.push_back(41836);
        internal_counters.push_back(42072);
        internal_counters.push_back(42308);
        internal_counters.push_back(42544);
        internal_counters.push_back(42780);
        internal_counters.push_back(43016);
        internal_counters.push_back(43252);
        internal_counters.push_back(43488);
        internal_counters.push_back(43724);
        internal_counters.push_back(43960);
        internal_counters.push_back(44196);
        internal_counters.push_back(44432);
        internal_counters.push_back(44668);
        internal_counters.push_back(44904);
        internal_counters.push_back(45140);
        internal_counters.push_back(45376);
        internal_counters.push_back(45612);
        internal_counters.push_back(45848);
        internal_counters.push_back(46084);
        internal_counters.push_back(46320);
        internal_counters.push_back(46556);
        internal_counters.push_back(46792);
        internal_counters.push_back(47028);
        internal_counters.push_back(47264);
        internal_counters.push_back(47500);
        internal_counters.push_back(47736);
        internal_counters.push_back(47972);
        internal_counters.push_back(48208);
        internal_counters.push_back(48444);
        internal_counters.push_back(48680);
        internal_counters.push_back(48916);
        internal_counters.push_back(49152);
        internal_counters.push_back(49388);
        internal_counters.push_back(49624);
        internal_counters.push_back(49860);
        internal_counters.push_back(50096);
        internal_counters.push_back(50332);
        internal_counters.push_back(50568);
        internal_counters.push_back(50804);
        internal_counters.push_back(51040);
        internal_counters.push_back(51276);
        internal_counters.push_back(51512);
        internal_counters.push_back(51748);
        internal_counters.push_back(51984);
        internal_counters.push_back(52220);
        internal_counters.push_back(52456);
        internal_counters.push_back(52692);
        internal_counters.push_back(52928);
        internal_counters.push_back(53164);
        internal_counters.push_back(53400);
        internal_counters.push_back(53636);
        internal_counters.push_back(53872);
        internal_counters.push_back(54108);
        internal_counters.push_back(54344);
        internal_counters.push_back(54580);
        internal_counters.push_back(54816);
        internal_counters.push_back(55052);
        internal_counters.push_back(55288);
        internal_counters.push_back(55524);
        internal_counters.push_back(55760);
        internal_counters.push_back(55996);
        internal_counters.push_back(56232);
        internal_counters.push_back(56468);
        internal_counters.push_back(56704);
        internal_counters.push_back(56940);
        internal_counters.push_back(57176);
        internal_counters.push_back(57412);
        internal_counters.push_back(57648);
        internal_counters.push_back(57884);
        internal_counters.push_back(58120);
        internal_counters.push_back(58356);
        internal_counters.push_back(58592);
        internal_counters.push_back(58828);
        internal_counters.push_back(59064);
        internal_counters.push_back(59300);
        internal_counters.push_back(59536);
        internal_counters.push_back(59772);
        internal_counters.push_back(60008);
        internal_counters.push_back(60244);
        internal_counters.push_back(60480);
        internal_counters.push_back(60716);
        internal_counters.push_back(60952);
        internal_counters.push_back(61188);

        c.DefineDerivedCounter("TexTriFilteringCount", "TextureUnit", "Count of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,(4),*", "5785b3a1-a513-18db-4b1c-bdeef75bb2b6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38767);
        internal_counters.push_back(39003);
        internal_counters.push_back(39239);
        internal_counters.push_back(39475);
        internal_counters.push_back(39711);
        internal_counters.push_back(39947);
        internal_counters.push_back(40183);
        internal_counters.push_back(40419);
        internal_counters.push_back(40655);
        internal_counters.push_back(40891);
        internal_counters.push_back(41127);
        internal_counters.push_back(41363);
        internal_counters.push_back(41599);
        internal_counters.push_back(41835);
        internal_counters.push_back(42071);
        internal_counters.push_back(42307);
        internal_counters.push_back(42543);
        internal_counters.push_back(42779);
        internal_counters.push_back(43015);
        internal_counters.push_back(43251);
        internal_counters.push_back(43487);
        internal_counters.push_back(43723);
        internal_counters.push_back(43959);
        internal_counters.push_back(44195);
        internal_counters.push_back(44431);
        internal_counters.push_back(44667);
        internal_counters.push_back(44903);
        internal_counters.push_back(45139);
        internal_counters.push_back(45375);
        internal_counters.push_back(45611);
        internal_counters.push_back(45847);
        internal_counters.push_back(46083);
        internal_counters.push_back(46319);
        internal_counters.push_back(46555);
        internal_counters.push_back(46791);
        internal_counters.push_back(47027);
        internal_counters.push_back(47263);
        internal_counters.push_back(47499);
        internal_counters.push_back(47735);
        internal_counters.push_back(47971);
        internal_counters.push_back(48207);
        internal_counters.push_back(48443);
        internal_counters.push_back(48679);
        internal_counters.push_back(48915);
        internal_counters.push_back(49151);
        internal_counters.push_back(49387);
        internal_counters.push_back(49623);
        internal_counters.push_back(49859);
        internal_counters.push_back(50095);
        internal_counters.push_back(50331);
        internal_counters.push_back(50567);
        internal_counters.push_back(50803);
        internal_counters.push_back(51039);
        internal_counters.push_back(51275);
        internal_counters.push_back(51511);
        internal_counters.push_back(51747);
        internal_counters.push_back(51983);
        internal_counters.push_back(52219);
        internal_counters.push_back(52455);
        internal_counters.push_back(52691);
        internal_counters.push_back(52927);
        internal_counters.push_back(53163);
        internal_counters.push_back(53399);
        internal_counters.push_back(53635);
        internal_counters.push_back(53871);
        internal_counters.push_back(54107);
        internal_counters.push_back(54343);
        internal_counters.push_back(54579);
        internal_counters.push_back(54815);
        internal_counters.push_back(55051);
        internal_counters.push_back(55287);
        internal_counters.push_back(55523);
        internal_counters.push_back(55759);
        internal_counters.push_back(55995);
        internal_counters.push_back(56231);
        internal_counters.push_back(56467);
        internal_counters.push_back(56703);
        internal_counters.push_back(56939);
        internal_counters.push_back(57175);
        internal_counters.push_back(57411);
        internal_counters.push_back(57647);
        internal_counters.push_back(57883);
        internal_counters.push_back(58119);
        internal_counters.push_back(58355);
        internal_counters.push_back(58591);
        internal_counters.push_back(58827);
        internal_counters.push_back(59063);
        internal_counters.push_back(59299);
        internal_counters.push_back(59535);
        internal_counters.push_back(59771);
        internal_counters.push_back(60007);
        internal_counters.push_back(60243);
        internal_counters.push_back(60479);
        internal_counters.push_back(60715);
        internal_counters.push_back(60951);
        internal_counters.push_back(61187);

        c.DefineDerivedCounter("NoTexTriFilteringCount", "TextureUnit", "Count of pixels that did not receive trilinear filtering.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,(4),*", "179da29a-81af-c06e-ce8c-a0a731ea030d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38770);
        internal_counters.push_back(39006);
        internal_counters.push_back(39242);
        internal_counters.push_back(39478);
        internal_counters.push_back(39714);
        internal_counters.push_back(39950);
        internal_counters.push_back(40186);
        internal_counters.push_back(40422);
        internal_counters.push_back(40658);
        internal_counters.push_back(40894);
        internal_counters.push_back(41130);
        internal_counters.push_back(41366);
        internal_counters.push_back(41602);
        internal_counters.push_back(41838);
        internal_counters.push_back(42074);
        internal_counters.push_back(42310);
        internal_counters.push_back(42546);
        internal_counters.push_back(42782);
        internal_counters.push_back(43018);
        internal_counters.push_back(43254);
        internal_counters.push_back(43490);
        internal_counters.push_back(43726);
        internal_counters.push_back(43962);
        internal_counters.push_back(44198);
        internal_counters.push_back(44434);
        internal_counters.push_back(44670);
        internal_counters.push_back(44906);
        internal_counters.push_back(45142);
        internal_counters.push_back(45378);
        internal_counters.push_back(45614);
        internal_counters.push_back(45850);
        internal_counters.push_back(46086);
        internal_counters.push_back(46322);
        internal_counters.push_back(46558);
        internal_counters.push_back(46794);
        internal_counters.push_back(47030);
        internal_counters.push_back(47266);
        internal_counters.push_back(47502);
        internal_counters.push_back(47738);
        internal_counters.push_back(47974);
        internal_counters.push_back(48210);
        internal_counters.push_back(48446);
        internal_counters.push_back(48682);
        internal_counters.push_back(48918);
        internal_counters.push_back(49154);
        internal_counters.push_back(49390);
        internal_counters.push_back(49626);
        internal_counters.push_back(49862);
        internal_counters.push_back(50098);
        internal_counters.push_back(50334);
        internal_counters.push_back(50570);
        internal_counters.push_back(50806);
        internal_counters.push_back(51042);
        internal_counters.push_back(51278);
        internal_counters.push_back(51514);
        internal_counters.push_back(51750);
        internal_counters.push_back(51986);
        internal_counters.push_back(52222);
        internal_counters.push_back(52458);
        internal_counters.push_back(52694);
        internal_counters.push_back(52930);
        internal_counters.push_back(53166);
        internal_counters.push_back(53402);
        internal_counters.push_back(53638);
        internal_counters.push_back(53874);
        internal_counters.push_back(54110);
        internal_counters.push_back(54346);
        internal_counters.push_back(54582);
        internal_counters.push_back(54818);
        internal_counters.push_back(55054);
        internal_counters.push_back(55290);
        internal_counters.push_back(55526);
        internal_counters.push_back(55762);
        internal_counters.push_back(55998);
        internal_counters.push_back(56234);
        internal_counters.push_back(56470);
        internal_counters.push_back(56706);
        internal_counters.push_back(56942);
        internal_counters.push_back(57178);
        internal_counters.push_back(57414);
        internal_counters.push_back(57650);
        internal_counters.push_back(57886);
        internal_counters.push_back(58122);
        internal_counters.push_back(58358);
        internal_counters.push_back(58594);
        internal_counters.push_back(58830);
        internal_counters.push_back(59066);
        internal_counters.push_back(59302);
        internal_counters.push_back(59538);
        internal_counters.push_back(59774);
        internal_counters.push_back(60010);
        internal_counters.push_back(60246);
        internal_counters.push_back(60482);
        internal_counters.push_back(60718);
        internal_counters.push_back(60954);
        internal_counters.push_back(61190);
        internal_counters.push_back(38769);
        internal_counters.push_back(39005);
        internal_counters.push_back(39241);
        internal_counters.push_back(39477);
        internal_counters.push_back(39713);
        internal_counters.push_back(39949);
        internal_counters.push_back(40185);
        internal_counters.push_back(40421);
        internal_counters.push_back(40657);
        internal_counters.push_back(40893);
        internal_counters.push_back(41129);
        internal_counters.push_back(41365);
        internal_counters.push_back(41601);
        internal_counters.push_back(41837);
        internal_counters.push_back(42073);
        internal_counters.push_back(42309);
        internal_counters.push_back(42545);
        internal_counters.push_back(42781);
        internal_counters.push_back(43017);
        internal_counters.push_back(43253);
        internal_counters.push_back(43489);
        internal_counters.push_back(43725);
        internal_counters.push_back(43961);
        internal_counters.push_back(44197);
        internal_counters.push_back(44433);
        internal_counters.push_back(44669);
        internal_counters.push_back(44905);
        internal_counters.push_back(45141);
        internal_counters.push_back(45377);
        internal_counters.push_back(45613);
        internal_counters.push_back(45849);
        internal_counters.push_back(46085);
        internal_counters.push_back(46321);
        internal_counters.push_back(46557);
        internal_counters.push_back(46793);
        internal_counters.push_back(47029);
        internal_counters.push_back(47265);
        internal_counters.push_back(47501);
        internal_counters.push_back(47737);
        internal_counters.push_back(47973);
        internal_counters.push_back(48209);
        internal_counters.push_back(48445);
        internal_counters.push_back(48681);
        internal_counters.push_back(48917);
        internal_counters.push_back(49153);
        internal_counters.push_back(49389);
        internal_counters.push_back(49625);
        internal_counters.push_back(49861);
        internal_counters.push_back(50097);
        internal_counters.push_back(50333);
        internal_counters.push_back(50569);
        internal_counters.push_back(50805);
        internal_counters.push_back(51041);
        internal_counters.push_back(51277);
        internal_counters.push_back(51513);
        internal_counters.push_back(51749);
        internal_counters.push_back(51985);
        internal_counters.push_back(52221);
        internal_counters.push_back(52457);
        internal_counters.push_back(52693);
        internal_counters.push_back(52929);
        internal_counters.push_back(53165);
        internal_counters.push_back(53401);
        internal_counters.push_back(53637);
        internal_counters.push_back(53873);
        internal_counters.push_back(54109);
        internal_counters.push_back(54345);
        internal_counters.push_back(54581);
        internal_counters.push_back(54817);
        internal_counters.push_back(55053);
        internal_counters.push_back(55289);
        internal_counters.push_back(55525);
        internal_counters.push_back(55761);
        internal_counters.push_back(55997);
        internal_counters.push_back(56233);
        internal_counters.push_back(56469);
        internal_counters.push_back(56705);
        internal_counters.push_back(56941);
        internal_counters.push_back(57177);
        internal_counters.push_back(57413);
        internal_counters.push_back(57649);
        internal_counters.push_back(57885);
        internal_counters.push_back(58121);
        internal_counters.push_back(58357);
        internal_counters.push_back(58593);
        internal_counters.push_back(58829);
        internal_counters.push_back(59065);
        internal_counters.push_back(59301);
        internal_counters.push_back(59537);
        internal_counters.push_back(59773);
        internal_counters.push_back(60009);
        internal_counters.push_back(60245);
        internal_counters.push_back(60481);
        internal_counters.push_back(60717);
        internal_counters.push_back(60953);
        internal_counters.push_back(61189);

        c.DefineDerivedCounter("TexVolFilteringPct", "TextureUnit", "Percentage of pixels that received volume filtering.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum96,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,+,/,(100),*", "b5ff6bed-3178-aee4-42dd-c74391c02a2d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38770);
        internal_counters.push_back(39006);
        internal_counters.push_back(39242);
        internal_counters.push_back(39478);
        internal_counters.push_back(39714);
        internal_counters.push_back(39950);
        internal_counters.push_back(40186);
        internal_counters.push_back(40422);
        internal_counters.push_back(40658);
        internal_counters.push_back(40894);
        internal_counters.push_back(41130);
        internal_counters.push_back(41366);
        internal_counters.push_back(41602);
        internal_counters.push_back(41838);
        internal_counters.push_back(42074);
        internal_counters.push_back(42310);
        internal_counters.push_back(42546);
        internal_counters.push_back(42782);
        internal_counters.push_back(43018);
        internal_counters.push_back(43254);
        internal_counters.push_back(43490);
        internal_counters.push_back(43726);
        internal_counters.push_back(43962);
        internal_counters.push_back(44198);
        internal_counters.push_back(44434);
        internal_counters.push_back(44670);
        internal_counters.push_back(44906);
        internal_counters.push_back(45142);
        internal_counters.push_back(45378);
        internal_counters.push_back(45614);
        internal_counters.push_back(45850);
        internal_counters.push_back(46086);
        internal_counters.push_back(46322);
        internal_counters.push_back(46558);
        internal_counters.push_back(46794);
        internal_counters.push_back(47030);
        internal_counters.push_back(47266);
        internal_counters.push_back(47502);
        internal_counters.push_back(47738);
        internal_counters.push_back(47974);
        internal_counters.push_back(48210);
        internal_counters.push_back(48446);
        internal_counters.push_back(48682);
        internal_counters.push_back(48918);
        internal_counters.push_back(49154);
        internal_counters.push_back(49390);
        internal_counters.push_back(49626);
        internal_counters.push_back(49862);
        internal_counters.push_back(50098);
        internal_counters.push_back(50334);
        internal_counters.push_back(50570);
        internal_counters.push_back(50806);
        internal_counters.push_back(51042);
        internal_counters.push_back(51278);
        internal_counters.push_back(51514);
        internal_counters.push_back(51750);
        internal_counters.push_back(51986);
        internal_counters.push_back(52222);
        internal_counters.push_back(52458);
        internal_counters.push_back(52694);
        internal_counters.push_back(52930);
        internal_counters.push_back(53166);
        internal_counters.push_back(53402);
        internal_counters.push_back(53638);
        internal_counters.push_back(53874);
        internal_counters.push_back(54110);
        internal_counters.push_back(54346);
        internal_counters.push_back(54582);
        internal_counters.push_back(54818);
        internal_counters.push_back(55054);
        internal_counters.push_back(55290);
        internal_counters.push_back(55526);
        internal_counters.push_back(55762);
        internal_counters.push_back(55998);
        internal_counters.push_back(56234);
        internal_counters.push_back(56470);
        internal_counters.push_back(56706);
        internal_counters.push_back(56942);
        internal_counters.push_back(57178);
        internal_counters.push_back(57414);
        internal_counters.push_back(57650);
        internal_counters.push_back(57886);
        internal_counters.push_back(58122);
        internal_counters.push_back(58358);
        internal_counters.push_back(58594);
        internal_counters.push_back(58830);
        internal_counters.push_back(59066);
        internal_counters.push_back(59302);
        internal_counters.push_back(59538);
        internal_counters.push_back(59774);
        internal_counters.push_back(60010);
        internal_counters.push_back(60246);
        internal_counters.push_back(60482);
        internal_counters.push_back(60718);
        internal_counters.push_back(60954);
        internal_counters.push_back(61190);

        c.DefineDerivedCounter("TexVolFilteringCount", "TextureUnit", "Count of pixels that received volume filtering.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,(4),*", "4bddc587-d589-8128-e18c-762eab2c871f");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38769);
        internal_counters.push_back(39005);
        internal_counters.push_back(39241);
        internal_counters.push_back(39477);
        internal_counters.push_back(39713);
        internal_counters.push_back(39949);
        internal_counters.push_back(40185);
        internal_counters.push_back(40421);
        internal_counters.push_back(40657);
        internal_counters.push_back(40893);
        internal_counters.push_back(41129);
        internal_counters.push_back(41365);
        internal_counters.push_back(41601);
        internal_counters.push_back(41837);
        internal_counters.push_back(42073);
        internal_counters.push_back(42309);
        internal_counters.push_back(42545);
        internal_counters.push_back(42781);
        internal_counters.push_back(43017);
        internal_counters.push_back(43253);
        internal_counters.push_back(43489);
        internal_counters.push_back(43725);
        internal_counters.push_back(43961);
        internal_counters.push_back(44197);
        internal_counters.push_back(44433);
        internal_counters.push_back(44669);
        internal_counters.push_back(44905);
        internal_counters.push_back(45141);
        internal_counters.push_back(45377);
        internal_counters.push_back(45613);
        internal_counters.push_back(45849);
        internal_counters.push_back(46085);
        internal_counters.push_back(46321);
        internal_counters.push_back(46557);
        internal_counters.push_back(46793);
        internal_counters.push_back(47029);
        internal_counters.push_back(47265);
        internal_counters.push_back(47501);
        internal_counters.push_back(47737);
        internal_counters.push_back(47973);
        internal_counters.push_back(48209);
        internal_counters.push_back(48445);
        internal_counters.push_back(48681);
        internal_counters.push_back(48917);
        internal_counters.push_back(49153);
        internal_counters.push_back(49389);
        internal_counters.push_back(49625);
        internal_counters.push_back(49861);
        internal_counters.push_back(50097);
        internal_counters.push_back(50333);
        internal_counters.push_back(50569);
        internal_counters.push_back(50805);
        internal_counters.push_back(51041);
        internal_counters.push_back(51277);
        internal_counters.push_back(51513);
        internal_counters.push_back(51749);
        internal_counters.push_back(51985);
        internal_counters.push_back(52221);
        internal_counters.push_back(52457);
        internal_counters.push_back(52693);
        internal_counters.push_back(52929);
        internal_counters.push_back(53165);
        internal_counters.push_back(53401);
        internal_counters.push_back(53637);
        internal_counters.push_back(53873);
        internal_counters.push_back(54109);
        internal_counters.push_back(54345);
        internal_counters.push_back(54581);
        internal_counters.push_back(54817);
        internal_counters.push_back(55053);
        internal_counters.push_back(55289);
        internal_counters.push_back(55525);
        internal_counters.push_back(55761);
        internal_counters.push_back(55997);
        internal_counters.push_back(56233);
        internal_counters.push_back(56469);
        internal_counters.push_back(56705);
        internal_counters.push_back(56941);
        internal_counters.push_back(57177);
        internal_counters.push_back(57413);
        internal_counters.push_back(57649);
        internal_counters.push_back(57885);
        internal_counters.push_back(58121);
        internal_counters.push_back(58357);
        internal_counters.push_back(58593);
        internal_counters.push_back(58829);
        internal_counters.push_back(59065);
        internal_counters.push_back(59301);
        internal_counters.push_back(59537);
        internal_counters.push_back(59773);
        internal_counters.push_back(60009);
        internal_counters.push_back(60245);
        internal_counters.push_back(60481);
        internal_counters.push_back(60717);
        internal_counters.push_back(60953);
        internal_counters.push_back(61189);

        c.DefineDerivedCounter("NoTexVolFilteringCount", "TextureUnit", "Count of pixels that did not receive volume filtering.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,(4),*", "9fe1a854-17c6-9d26-b2b9-80610cd5827d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38788);
        internal_counters.push_back(39024);
        internal_counters.push_back(39260);
        internal_counters.push_back(39496);
        internal_counters.push_back(39732);
        internal_counters.push_back(39968);
        internal_counters.push_back(40204);
        internal_counters.push_back(40440);
        internal_counters.push_back(40676);
        internal_counters.push_back(40912);
        internal_counters.push_back(41148);
        internal_counters.push_back(41384);
        internal_counters.push_back(41620);
        internal_counters.push_back(41856);
        internal_counters.push_back(42092);
        internal_counters.push_back(42328);
        internal_counters.push_back(42564);
        internal_counters.push_back(42800);
        internal_counters.push_back(43036);
        internal_counters.push_back(43272);
        internal_counters.push_back(43508);
        internal_counters.push_back(43744);
        internal_counters.push_back(43980);
        internal_counters.push_back(44216);
        internal_counters.push_back(44452);
        internal_counters.push_back(44688);
        internal_counters.push_back(44924);
        internal_counters.push_back(45160);
        internal_counters.push_back(45396);
        internal_counters.push_back(45632);
        internal_counters.push_back(45868);
        internal_counters.push_back(46104);
        internal_counters.push_back(46340);
        internal_counters.push_back(46576);
        internal_counters.push_back(46812);
        internal_counters.push_back(47048);
        internal_counters.push_back(47284);
        internal_counters.push_back(47520);
        internal_counters.push_back(47756);
        internal_counters.push_back(47992);
        internal_counters.push_back(48228);
        internal_counters.push_back(48464);
        internal_counters.push_back(48700);
        internal_counters.push_back(48936);
        internal_counters.push_back(49172);
        internal_counters.push_back(49408);
        internal_counters.push_back(49644);
        internal_counters.push_back(49880);
        internal_counters.push_back(50116);
        internal_counters.push_back(50352);
        internal_counters.push_back(50588);
        internal_counters.push_back(50824);
        internal_counters.push_back(51060);
        internal_counters.push_back(51296);
        internal_counters.push_back(51532);
        internal_counters.push_back(51768);
        internal_counters.push_back(52004);
        internal_counters.push_back(52240);
        internal_counters.push_back(52476);
        internal_counters.push_back(52712);
        internal_counters.push_back(52948);
        internal_counters.push_back(53184);
        internal_counters.push_back(53420);
        internal_counters.push_back(53656);
        internal_counters.push_back(53892);
        internal_counters.push_back(54128);
        internal_counters.push_back(54364);
        internal_counters.push_back(54600);
        internal_counters.push_back(54836);
        internal_counters.push_back(55072);
        internal_counters.push_back(55308);
        internal_counters.push_back(55544);
        internal_counters.push_back(55780);
        internal_counters.push_back(56016);
        internal_counters.push_back(56252);
        internal_counters.push_back(56488);
        internal_counters.push_back(56724);
        internal_counters.push_back(56960);
        internal_counters.push_back(57196);
        internal_counters.push_back(57432);
        internal_counters.push_back(57668);
        internal_counters.push_back(57904);
        internal_counters.push_back(58140);
        internal_counters.push_back(58376);
        internal_counters.push_back(58612);
        internal_counters.push_back(58848);
        internal_counters.push_back(59084);
        internal_counters.push_back(59320);
        internal_counters.push_back(59556);
        internal_counters.push_back(59792);
        internal_counters.push_back(60028);
        internal_counters.push_back(60264);
        internal_counters.push_back(60500);
        internal_counters.push_back(60736);
        internal_counters.push_back(60972);
        internal_counters.push_back(61208);
        internal_counters.push_back(38789);
        internal_counters.push_back(39025);
        internal_counters.push_back(39261);
        internal_counters.push_back(39497);
        internal_counters.push_back(39733);
        internal_counters.push_back(39969);
        internal_counters.push_back(40205);
        internal_counters.push_back(40441);
        internal_counters.push_back(40677);
        internal_counters.push_back(40913);
        internal_counters.push_back(41149);
        internal_counters.push_back(41385);
        internal_counters.push_back(41621);
        internal_counters.push_back(41857);
        internal_counters.push_back(42093);
        internal_counters.push_back(42329);
        internal_counters.push_back(42565);
        internal_counters.push_back(42801);
        internal_counters.push_back(43037);
        internal_counters.push_back(43273);
        internal_counters.push_back(43509);
        internal_counters.push_back(43745);
        internal_counters.push_back(43981);
        internal_counters.push_back(44217);
        internal_counters.push_back(44453);
        internal_counters.push_back(44689);
        internal_counters.push_back(44925);
        internal_counters.push_back(45161);
        internal_counters.push_back(45397);
        internal_counters.push_back(45633);
        internal_counters.push_back(45869);
        internal_counters.push_back(46105);
        internal_counters.push_back(46341);
        internal_counters.push_back(46577);
        internal_counters.push_back(46813);
        internal_counters.push_back(47049);
        internal_counters.push_back(47285);
        internal_counters.push_back(47521);
        internal_counters.push_back(47757);
        internal_counters.push_back(47993);
        internal_counters.push_back(48229);
        internal_counters.push_back(48465);
        internal_counters.push_back(48701);
        internal_counters.push_back(48937);
        internal_counters.push_back(49173);
        internal_counters.push_back(49409);
        internal_counters.push_back(49645);
        internal_counters.push_back(49881);
        internal_counters.push_back(50117);
        internal_counters.push_back(50353);
        internal_counters.push_back(50589);
        internal_counters.push_back(50825);
        internal_counters.push_back(51061);
        internal_counters.push_back(51297);
        internal_counters.push_back(51533);
        internal_counters.push_back(51769);
        internal_counters.push_back(52005);
        internal_counters.push_back(52241);
        internal_counters.push_back(52477);
        internal_counters.push_back(52713);
        internal_counters.push_back(52949);
        internal_counters.push_back(53185);
        internal_counters.push_back(53421);
        internal_counters.push_back(53657);
        internal_counters.push_back(53893);
        internal_counters.push_back(54129);
        internal_counters.push_back(54365);
        internal_counters.push_back(54601);
        internal_counters.push_back(54837);
        internal_counters.push_back(55073);
        internal_counters.push_back(55309);
        internal_counters.push_back(55545);
        internal_counters.push_back(55781);
        internal_counters.push_back(56017);
        internal_counters.push_back(56253);
        internal_counters.push_back(56489);
        internal_counters.push_back(56725);
        internal_counters.push_back(56961);
        internal_counters.push_back(57197);
        internal_counters.push_back(57433);
        internal_counters.push_back(57669);
        internal_counters.push_back(57905);
        internal_counters.push_back(58141);
        internal_counters.push_back(58377);
        internal_counters.push_back(58613);
        internal_counters.push_back(58849);
        internal_counters.push_back(59085);
        internal_counters.push_back(59321);
        internal_counters.push_back(59557);
        internal_counters.push_back(59793);
        internal_counters.push_back(60029);
        internal_counters.push_back(60265);
        internal_counters.push_back(60501);
        internal_counters.push_back(60737);
        internal_counters.push_back(60973);
        internal_counters.push_back(61209);
        internal_counters.push_back(38790);
        internal_counters.push_back(39026);
        internal_counters.push_back(39262);
        internal_counters.push_back(39498);
        internal_counters.push_back(39734);
        internal_counters.push_back(39970);
        internal_counters.push_back(40206);
        internal_counters.push_back(40442);
        internal_counters.push_back(40678);
        internal_counters.push_back(40914);
        internal_counters.push_back(41150);
        internal_counters.push_back(41386);
        internal_counters.push_back(41622);
        internal_counters.push_back(41858);
        internal_counters.push_back(42094);
        internal_counters.push_back(42330);
        internal_counters.push_back(42566);
        internal_counters.push_back(42802);
        internal_counters.push_back(43038);
        internal_counters.push_back(43274);
        internal_counters.push_back(43510);
        internal_counters.push_back(43746);
        internal_counters.push_back(43982);
        internal_counters.push_back(44218);
        internal_counters.push_back(44454);
        internal_counters.push_back(44690);
        internal_counters.push_back(44926);
        internal_counters.push_back(45162);
        internal_counters.push_back(45398);
        internal_counters.push_back(45634);
        internal_counters.push_back(45870);
        internal_counters.push_back(46106);
        internal_counters.push_back(46342);
        internal_counters.push_back(46578);
        internal_counters.push_back(46814);
        internal_counters.push_back(47050);
        internal_counters.push_back(47286);
        internal_counters.push_back(47522);
        internal_counters.push_back(47758);
        internal_counters.push_back(47994);
        internal_counters.push_back(48230);
        internal_counters.push_back(48466);
        internal_counters.push_back(48702);
        internal_counters.push_back(48938);
        internal_counters.push_back(49174);
        internal_counters.push_back(49410);
        internal_counters.push_back(49646);
        internal_counters.push_back(49882);
        internal_counters.push_back(50118);
        internal_counters.push_back(50354);
        internal_counters.push_back(50590);
        internal_counters.push_back(50826);
        internal_counters.push_back(51062);
        internal_counters.push_back(51298);
        internal_counters.push_back(51534);
        internal_counters.push_back(51770);
        internal_counters.push_back(52006);
        internal_counters.push_back(52242);
        internal_counters.push_back(52478);
        internal_counters.push_back(52714);
        internal_counters.push_back(52950);
        internal_counters.push_back(53186);
        internal_counters.push_back(53422);
        internal_counters.push_back(53658);
        internal_counters.push_back(53894);
        internal_counters.push_back(54130);
        internal_counters.push_back(54366);
        internal_counters.push_back(54602);
        internal_counters.push_back(54838);
        internal_counters.push_back(55074);
        internal_counters.push_back(55310);
        internal_counters.push_back(55546);
        internal_counters.push_back(55782);
        internal_counters.push_back(56018);
        internal_counters.push_back(56254);
        internal_counters.push_back(56490);
        internal_counters.push_back(56726);
        internal_counters.push_back(56962);
        internal_counters.push_back(57198);
        internal_counters.push_back(57434);
        internal_counters.push_back(57670);
        internal_counters.push_back(57906);
        internal_counters.push_back(58142);
        internal_counters.push_back(58378);
        internal_counters.push_back(58614);
        internal_counters.push_back(58850);
        internal_counters.push_back(59086);
        internal_counters.push_back(59322);
        internal_counters.push_back(59558);
        internal_counters.push_back(59794);
        internal_counters.push_back(60030);
        internal_counters.push_back(60266);
        internal_counters.push_back(60502);
        internal_counters.push_back(60738);
        internal_counters.push_back(60974);
        internal_counters.push_back(61210);
        internal_counters.push_back(38791);
        internal_counters.push_back(39027);
        internal_counters.push_back(39263);
        internal_counters.push_back(39499);
        internal_counters.push_back(39735);
        internal_counters.push_back(39971);
        internal_counters.push_back(40207);
        internal_counters.push_back(40443);
        internal_counters.push_back(40679);
        internal_counters.push_back(40915);
        internal_counters.push_back(41151);
        internal_counters.push_back(41387);
        internal_counters.push_back(41623);
        internal_counters.push_back(41859);
        internal_counters.push_back(42095);
        internal_counters.push_back(42331);
        internal_counters.push_back(42567);
        internal_counters.push_back(42803);
        internal_counters.push_back(43039);
        internal_counters.push_back(43275);
        internal_counters.push_back(43511);
        internal_counters.push_back(43747);
        internal_counters.push_back(43983);
        internal_counters.push_back(44219);
        internal_counters.push_back(44455);
        internal_counters.push_back(44691);
        internal_counters.push_back(44927);
        internal_counters.push_back(45163);
        internal_counters.push_back(45399);
        internal_counters.push_back(45635);
        internal_counters.push_back(45871);
        internal_counters.push_back(46107);
        internal_counters.push_back(46343);
        internal_counters.push_back(46579);
        internal_counters.push_back(46815);
        internal_counters.push_back(47051);
        internal_counters.push_back(47287);
        internal_counters.push_back(47523);
        internal_counters.push_back(47759);
        internal_counters.push_back(47995);
        internal_counters.push_back(48231);
        internal_counters.push_back(48467);
        internal_counters.push_back(48703);
        internal_counters.push_back(48939);
        internal_counters.push_back(49175);
        internal_counters.push_back(49411);
        internal_counters.push_back(49647);
        internal_counters.push_back(49883);
        internal_counters.push_back(50119);
        internal_counters.push_back(50355);
        internal_counters.push_back(50591);
        internal_counters.push_back(50827);
        internal_counters.push_back(51063);
        internal_counters.push_back(51299);
        internal_counters.push_back(51535);
        internal_counters.push_back(51771);
        internal_counters.push_back(52007);
        internal_counters.push_back(52243);
        internal_counters.push_back(52479);
        internal_counters.push_back(52715);
        internal_counters.push_back(52951);
        internal_counters.push_back(53187);
        internal_counters.push_back(53423);
        internal_counters.push_back(53659);
        internal_counters.push_back(53895);
        internal_counters.push_back(54131);
        internal_counters.push_back(54367);
        internal_counters.push_back(54603);
        internal_counters.push_back(54839);
        internal_counters.push_back(55075);
        internal_counters.push_back(55311);
        internal_counters.push_back(55547);
        internal_counters.push_back(55783);
        internal_counters.push_back(56019);
        internal_counters.push_back(56255);
        internal_counters.push_back(56491);
        internal_counters.push_back(56727);
        internal_counters.push_back(56963);
        internal_counters.push_back(57199);
        internal_counters.push_back(57435);
        internal_counters.push_back(57671);
        internal_counters.push_back(57907);
        internal_counters.push_back(58143);
        internal_counters.push_back(58379);
        internal_counters.push_back(58615);
        internal_counters.push_back(58851);
        internal_counters.push_back(59087);
        internal_counters.push_back(59323);
        internal_counters.push_back(59559);
        internal_counters.push_back(59795);
        internal_counters.push_back(60031);
        internal_counters.push_back(60267);
        internal_counters.push_back(60503);
        internal_counters.push_back(60739);
        internal_counters.push_back(60975);
        internal_counters.push_back(61211);
        internal_counters.push_back(38792);
        internal_counters.push_back(39028);
        internal_counters.push_back(39264);
        internal_counters.push_back(39500);
        internal_counters.push_back(39736);
        internal_counters.push_back(39972);
        internal_counters.push_back(40208);
        internal_counters.push_back(40444);
        internal_counters.push_back(40680);
        internal_counters.push_back(40916);
        internal_counters.push_back(41152);
        internal_counters.push_back(41388);
        internal_counters.push_back(41624);
        internal_counters.push_back(41860);
        internal_counters.push_back(42096);
        internal_counters.push_back(42332);
        internal_counters.push_back(42568);
        internal_counters.push_back(42804);
        internal_counters.push_back(43040);
        internal_counters.push_back(43276);
        internal_counters.push_back(43512);
        internal_counters.push_back(43748);
        internal_counters.push_back(43984);
        internal_counters.push_back(44220);
        internal_counters.push_back(44456);
        internal_counters.push_back(44692);
        internal_counters.push_back(44928);
        internal_counters.push_back(45164);
        internal_counters.push_back(45400);
        internal_counters.push_back(45636);
        internal_counters.push_back(45872);
        internal_counters.push_back(46108);
        internal_counters.push_back(46344);
        internal_counters.push_back(46580);
        internal_counters.push_back(46816);
        internal_counters.push_back(47052);
        internal_counters.push_back(47288);
        internal_counters.push_back(47524);
        internal_counters.push_back(47760);
        internal_counters.push_back(47996);
        internal_counters.push_back(48232);
        internal_counters.push_back(48468);
        internal_counters.push_back(48704);
        internal_counters.push_back(48940);
        internal_counters.push_back(49176);
        internal_counters.push_back(49412);
        internal_counters.push_back(49648);
        internal_counters.push_back(49884);
        internal_counters.push_back(50120);
        internal_counters.push_back(50356);
        internal_counters.push_back(50592);
        internal_counters.push_back(50828);
        internal_counters.push_back(51064);
        internal_counters.push_back(51300);
        internal_counters.push_back(51536);
        internal_counters.push_back(51772);
        internal_counters.push_back(52008);
        internal_counters.push_back(52244);
        internal_counters.push_back(52480);
        internal_counters.push_back(52716);
        internal_counters.push_back(52952);
        internal_counters.push_back(53188);
        internal_counters.push_back(53424);
        internal_counters.push_back(53660);
        internal_counters.push_back(53896);
        internal_counters.push_back(54132);
        internal_counters.push_back(54368);
        internal_counters.push_back(54604);
        internal_counters.push_back(54840);
        internal_counters.push_back(55076);
        internal_counters.push_back(55312);
        internal_counters.push_back(55548);
        internal_counters.push_back(55784);
        internal_counters.push_back(56020);
        internal_counters.push_back(56256);
        internal_counters.push_back(56492);
        internal_counters.push_back(56728);
        internal_counters.push_back(56964);
        internal_counters.push_back(57200);
        internal_counters.push_back(57436);
        internal_counters.push_back(57672);
        internal_counters.push_back(57908);
        internal_counters.push_back(58144);
        internal_counters.push_back(58380);
        internal_counters.push_back(58616);
        internal_counters.push_back(58852);
        internal_counters.push_back(59088);
        internal_counters.push_back(59324);
        internal_counters.push_back(59560);
        internal_counters.push_back(59796);
        internal_counters.push_back(60032);
        internal_counters.push_back(60268);
        internal_counters.push_back(60504);
        internal_counters.push_back(60740);
        internal_counters.push_back(60976);
        internal_counters.push_back(61212);
        internal_counters.push_back(38793);
        internal_counters.push_back(39029);
        internal_counters.push_back(39265);
        internal_counters.push_back(39501);
        internal_counters.push_back(39737);
        internal_counters.push_back(39973);
        internal_counters.push_back(40209);
        internal_counters.push_back(40445);
        internal_counters.push_back(40681);
        internal_counters.push_back(40917);
        internal_counters.push_back(41153);
        internal_counters.push_back(41389);
        internal_counters.push_back(41625);
        internal_counters.push_back(41861);
        internal_counters.push_back(42097);
        internal_counters.push_back(42333);
        internal_counters.push_back(42569);
        internal_counters.push_back(42805);
        internal_counters.push_back(43041);
        internal_counters.push_back(43277);
        internal_counters.push_back(43513);
        internal_counters.push_back(43749);
        internal_counters.push_back(43985);
        internal_counters.push_back(44221);
        internal_counters.push_back(44457);
        internal_counters.push_back(44693);
        internal_counters.push_back(44929);
        internal_counters.push_back(45165);
        internal_counters.push_back(45401);
        internal_counters.push_back(45637);
        internal_counters.push_back(45873);
        internal_counters.push_back(46109);
        internal_counters.push_back(46345);
        internal_counters.push_back(46581);
        internal_counters.push_back(46817);
        internal_counters.push_back(47053);
        internal_counters.push_back(47289);
        internal_counters.push_back(47525);
        internal_counters.push_back(47761);
        internal_counters.push_back(47997);
        internal_counters.push_back(48233);
        internal_counters.push_back(48469);
        internal_counters.push_back(48705);
        internal_counters.push_back(48941);
        internal_counters.push_back(49177);
        internal_counters.push_back(49413);
        internal_counters.push_back(49649);
        internal_counters.push_back(49885);
        internal_counters.push_back(50121);
        internal_counters.push_back(50357);
        internal_counters.push_back(50593);
        internal_counters.push_back(50829);
        internal_counters.push_back(51065);
        internal_counters.push_back(51301);
        internal_counters.push_back(51537);
        internal_counters.push_back(51773);
        internal_counters.push_back(52009);
        internal_counters.push_back(52245);
        internal_counters.push_back(52481);
        internal_counters.push_back(52717);
        internal_counters.push_back(52953);
        internal_counters.push_back(53189);
        internal_counters.push_back(53425);
        internal_counters.push_back(53661);
        internal_counters.push_back(53897);
        internal_counters.push_back(54133);
        internal_counters.push_back(54369);
        internal_counters.push_back(54605);
        internal_counters.push_back(54841);
        internal_counters.push_back(55077);
        internal_counters.push_back(55313);
        internal_counters.push_back(55549);
        internal_counters.push_back(55785);
        internal_counters.push_back(56021);
        internal_counters.push_back(56257);
        internal_counters.push_back(56493);
        internal_counters.push_back(56729);
        internal_counters.push_back(56965);
        internal_counters.push_back(57201);
        internal_counters.push_back(57437);
        internal_counters.push_back(57673);
        internal_counters.push_back(57909);
        internal_counters.push_back(58145);
        internal_counters.push_back(58381);
        internal_counters.push_back(58617);
        internal_counters.push_back(58853);
        internal_counters.push_back(59089);
        internal_counters.push_back(59325);
        internal_counters.push_back(59561);
        internal_counters.push_back(59797);
        internal_counters.push_back(60033);
        internal_counters.push_back(60269);
        internal_counters.push_back(60505);
        internal_counters.push_back(60741);
        internal_counters.push_back(60977);
        internal_counters.push_back(61213);
        internal_counters.push_back(38794);
        internal_counters.push_back(39030);
        internal_counters.push_back(39266);
        internal_counters.push_back(39502);
        internal_counters.push_back(39738);
        internal_counters.push_back(39974);
        internal_counters.push_back(40210);
        internal_counters.push_back(40446);
        internal_counters.push_back(40682);
        internal_counters.push_back(40918);
        internal_counters.push_back(41154);
        internal_counters.push_back(41390);
        internal_counters.push_back(41626);
        internal_counters.push_back(41862);
        internal_counters.push_back(42098);
        internal_counters.push_back(42334);
        internal_counters.push_back(42570);
        internal_counters.push_back(42806);
        internal_counters.push_back(43042);
        internal_counters.push_back(43278);
        internal_counters.push_back(43514);
        internal_counters.push_back(43750);
        internal_counters.push_back(43986);
        internal_counters.push_back(44222);
        internal_counters.push_back(44458);
        internal_counters.push_back(44694);
        internal_counters.push_back(44930);
        internal_counters.push_back(45166);
        internal_counters.push_back(45402);
        internal_counters.push_back(45638);
        internal_counters.push_back(45874);
        internal_counters.push_back(46110);
        internal_counters.push_back(46346);
        internal_counters.push_back(46582);
        internal_counters.push_back(46818);
        internal_counters.push_back(47054);
        internal_counters.push_back(47290);
        internal_counters.push_back(47526);
        internal_counters.push_back(47762);
        internal_counters.push_back(47998);
        internal_counters.push_back(48234);
        internal_counters.push_back(48470);
        internal_counters.push_back(48706);
        internal_counters.push_back(48942);
        internal_counters.push_back(49178);
        internal_counters.push_back(49414);
        internal_counters.push_back(49650);
        internal_counters.push_back(49886);
        internal_counters.push_back(50122);
        internal_counters.push_back(50358);
        internal_counters.push_back(50594);
        internal_counters.push_back(50830);
        internal_counters.push_back(51066);
        internal_counters.push_back(51302);
        internal_counters.push_back(51538);
        internal_counters.push_back(51774);
        internal_counters.push_back(52010);
        internal_counters.push_back(52246);
        internal_counters.push_back(52482);
        internal_counters.push_back(52718);
        internal_counters.push_back(52954);
        internal_counters.push_back(53190);
        internal_counters.push_back(53426);
        internal_counters.push_back(53662);
        internal_counters.push_back(53898);
        internal_counters.push_back(54134);
        internal_counters.push_back(54370);
        internal_counters.push_back(54606);
        internal_counters.push_back(54842);
        internal_counters.push_back(55078);
        internal_counters.push_back(55314);
        internal_counters.push_back(55550);
        internal_counters.push_back(55786);
        internal_counters.push_back(56022);
        internal_counters.push_back(56258);
        internal_counters.push_back(56494);
        internal_counters.push_back(56730);
        internal_counters.push_back(56966);
        internal_counters.push_back(57202);
        internal_counters.push_back(57438);
        internal_counters.push_back(57674);
        internal_counters.push_back(57910);
        internal_counters.push_back(58146);
        internal_counters.push_back(58382);
        internal_counters.push_back(58618);
        internal_counters.push_back(58854);
        internal_counters.push_back(59090);
        internal_counters.push_back(59326);
        internal_counters.push_back(59562);
        internal_counters.push_back(59798);
        internal_counters.push_back(60034);
        internal_counters.push_back(60270);
        internal_counters.push_back(60506);
        internal_counters.push_back(60742);
        internal_counters.push_back(60978);
        internal_counters.push_back(61214);
        internal_counters.push_back(38795);
        internal_counters.push_back(39031);
        internal_counters.push_back(39267);
        internal_counters.push_back(39503);
        internal_counters.push_back(39739);
        internal_counters.push_back(39975);
        internal_counters.push_back(40211);
        internal_counters.push_back(40447);
        internal_counters.push_back(40683);
        internal_counters.push_back(40919);
        internal_counters.push_back(41155);
        internal_counters.push_back(41391);
        internal_counters.push_back(41627);
        internal_counters.push_back(41863);
        internal_counters.push_back(42099);
        internal_counters.push_back(42335);
        internal_counters.push_back(42571);
        internal_counters.push_back(42807);
        internal_counters.push_back(43043);
        internal_counters.push_back(43279);
        internal_counters.push_back(43515);
        internal_counters.push_back(43751);
        internal_counters.push_back(43987);
        internal_counters.push_back(44223);
        internal_counters.push_back(44459);
        internal_counters.push_back(44695);
        internal_counters.push_back(44931);
        internal_counters.push_back(45167);
        internal_counters.push_back(45403);
        internal_counters.push_back(45639);
        internal_counters.push_back(45875);
        internal_counters.push_back(46111);
        internal_counters.push_back(46347);
        internal_counters.push_back(46583);
        internal_counters.push_back(46819);
        internal_counters.push_back(47055);
        internal_counters.push_back(47291);
        internal_counters.push_back(47527);
        internal_counters.push_back(47763);
        internal_counters.push_back(47999);
        internal_counters.push_back(48235);
        internal_counters.push_back(48471);
        internal_counters.push_back(48707);
        internal_counters.push_back(48943);
        internal_counters.push_back(49179);
        internal_counters.push_back(49415);
        internal_counters.push_back(49651);
        internal_counters.push_back(49887);
        internal_counters.push_back(50123);
        internal_counters.push_back(50359);
        internal_counters.push_back(50595);
        internal_counters.push_back(50831);
        internal_counters.push_back(51067);
        internal_counters.push_back(51303);
        internal_counters.push_back(51539);
        internal_counters.push_back(51775);
        internal_counters.push_back(52011);
        internal_counters.push_back(52247);
        internal_counters.push_back(52483);
        internal_counters.push_back(52719);
        internal_counters.push_back(52955);
        internal_counters.push_back(53191);
        internal_counters.push_back(53427);
        internal_counters.push_back(53663);
        internal_counters.push_back(53899);
        internal_counters.push_back(54135);
        internal_counters.push_back(54371);
        internal_counters.push_back(54607);
        internal_counters.push_back(54843);
        internal_counters.push_back(55079);
        internal_counters.push_back(55315);
        internal_counters.push_back(55551);
        internal_counters.push_back(55787);
        internal_counters.push_back(56023);
        internal_counters.push_back(56259);
        internal_counters.push_back(56495);
        internal_counters.push_back(56731);
        internal_counters.push_back(56967);
        internal_counters.push_back(57203);
        internal_counters.push_back(57439);
        internal_counters.push_back(57675);
        internal_counters.push_back(57911);
        internal_counters.push_back(58147);
        internal_counters.push_back(58383);
        internal_counters.push_back(58619);
        internal_counters.push_back(58855);
        internal_counters.push_back(59091);
        internal_counters.push_back(59327);
        internal_counters.push_back(59563);
        internal_counters.push_back(59799);
        internal_counters.push_back(60035);
        internal_counters.push_back(60271);
        internal_counters.push_back(60507);
        internal_counters.push_back(60743);
        internal_counters.push_back(60979);
        internal_counters.push_back(61215);
        internal_counters.push_back(38796);
        internal_counters.push_back(39032);
        internal_counters.push_back(39268);
        internal_counters.push_back(39504);
        internal_counters.push_back(39740);
        internal_counters.push_back(39976);
        internal_counters.push_back(40212);
        internal_counters.push_back(40448);
        internal_counters.push_back(40684);
        internal_counters.push_back(40920);
        internal_counters.push_back(41156);
        internal_counters.push_back(41392);
        internal_counters.push_back(41628);
        internal_counters.push_back(41864);
        internal_counters.push_back(42100);
        internal_counters.push_back(42336);
        internal_counters.push_back(42572);
        internal_counters.push_back(42808);
        internal_counters.push_back(43044);
        internal_counters.push_back(43280);
        internal_counters.push_back(43516);
        internal_counters.push_back(43752);
        internal_counters.push_back(43988);
        internal_counters.push_back(44224);
        internal_counters.push_back(44460);
        internal_counters.push_back(44696);
        internal_counters.push_back(44932);
        internal_counters.push_back(45168);
        internal_counters.push_back(45404);
        internal_counters.push_back(45640);
        internal_counters.push_back(45876);
        internal_counters.push_back(46112);
        internal_counters.push_back(46348);
        internal_counters.push_back(46584);
        internal_counters.push_back(46820);
        internal_counters.push_back(47056);
        internal_counters.push_back(47292);
        internal_counters.push_back(47528);
        internal_counters.push_back(47764);
        internal_counters.push_back(48000);
        internal_counters.push_back(48236);
        internal_counters.push_back(48472);
        internal_counters.push_back(48708);
        internal_counters.push_back(48944);
        internal_counters.push_back(49180);
        internal_counters.push_back(49416);
        internal_counters.push_back(49652);
        internal_counters.push_back(49888);
        internal_counters.push_back(50124);
        internal_counters.push_back(50360);
        internal_counters.push_back(50596);
        internal_counters.push_back(50832);
        internal_counters.push_back(51068);
        internal_counters.push_back(51304);
        internal_counters.push_back(51540);
        internal_counters.push_back(51776);
        internal_counters.push_back(52012);
        internal_counters.push_back(52248);
        internal_counters.push_back(52484);
        internal_counters.push_back(52720);
        internal_counters.push_back(52956);
        internal_counters.push_back(53192);
        internal_counters.push_back(53428);
        internal_counters.push_back(53664);
        internal_counters.push_back(53900);
        internal_counters.push_back(54136);
        internal_counters.push_back(54372);
        internal_counters.push_back(54608);
        internal_counters.push_back(54844);
        internal_counters.push_back(55080);
        internal_counters.push_back(55316);
        internal_counters.push_back(55552);
        internal_counters.push_back(55788);
        internal_counters.push_back(56024);
        internal_counters.push_back(56260);
        internal_counters.push_back(56496);
        internal_counters.push_back(56732);
        internal_counters.push_back(56968);
        internal_counters.push_back(57204);
        internal_counters.push_back(57440);
        internal_counters.push_back(57676);
        internal_counters.push_back(57912);
        internal_counters.push_back(58148);
        internal_counters.push_back(58384);
        internal_counters.push_back(58620);
        internal_counters.push_back(58856);
        internal_counters.push_back(59092);
        internal_counters.push_back(59328);
        internal_counters.push_back(59564);
        internal_counters.push_back(59800);
        internal_counters.push_back(60036);
        internal_counters.push_back(60272);
        internal_counters.push_back(60508);
        internal_counters.push_back(60744);
        internal_counters.push_back(60980);
        internal_counters.push_back(61216);

        c.DefineDerivedCounter("TexAveAnisotropy", "TextureUnit", "The average degree of anisotropy applied. A number between 1 and 16. The anisotropic filtering algorithm only applies samples where they are required (e.g. there will be no extra anisotropic samples if the view vector is perpendicular to the surface) so this can be much lower than the requested anisotropy.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,(2),96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum96,*,+,(4),192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,sum96,*,+,(6),288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,sum96,*,+,(8),384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,sum96,*,+,(10),480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,sum96,*,+,(12),576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,sum96,*,+,(14),672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,sum96,*,+,(16),768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,sum96,*,+,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum96,+,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,sum96,+,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,sum96,+,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,sum96,+,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,sum96,+,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,sum96,+,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,sum96,+,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,sum96,+,/", "7ca2a2b9-a4eb-ce23-d163-59147e672396");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7724);
        internal_counters.push_back(8112);
        internal_counters.push_back(8500);
        internal_counters.push_back(8888);
        internal_counters.push_back(9276);
        internal_counters.push_back(9664);
        internal_counters.push_back(10052);
        internal_counters.push_back(10440);
        internal_counters.push_back(10828);
        internal_counters.push_back(11216);
        internal_counters.push_back(11604);
        internal_counters.push_back(11992);
        internal_counters.push_back(12380);
        internal_counters.push_back(12768);
        internal_counters.push_back(13156);
        internal_counters.push_back(13544);
        internal_counters.push_back(13932);
        internal_counters.push_back(14320);
        internal_counters.push_back(14708);
        internal_counters.push_back(15096);
        internal_counters.push_back(15484);
        internal_counters.push_back(15872);
        internal_counters.push_back(16260);
        internal_counters.push_back(16648);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("DepthStencilTestBusy", "Timing", "Percentage of time GPU spent performing depth and stencil tests relative to GPUBusy.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,/,(100),*", "6834fb52-42e8-bb50-fd48-ec2f2904e7e0");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7724);
        internal_counters.push_back(8112);
        internal_counters.push_back(8500);
        internal_counters.push_back(8888);
        internal_counters.push_back(9276);
        internal_counters.push_back(9664);
        internal_counters.push_back(10052);
        internal_counters.push_back(10440);
        internal_counters.push_back(10828);
        internal_counters.push_back(11216);
        internal_counters.push_back(11604);
        internal_counters.push_back(11992);
        internal_counters.push_back(12380);
        internal_counters.push_back(12768);
        internal_counters.push_back(13156);
        internal_counters.push_back(13544);
        internal_counters.push_back(13932);
        internal_counters.push_back(14320);
        internal_counters.push_back(14708);
        internal_counters.push_back(15096);
        internal_counters.push_back(15484);
        internal_counters.push_back(15872);
        internal_counters.push_back(16260);
        internal_counters.push_back(16648);

        c.DefineDerivedCounter("DepthStencilTestBusyCycles", "Timing", "Number of GPU cycles spent performing depth and stencil tests.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24", "07ad48f0-49d8-87e7-1ef5-1e24ff2cef49");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7595);
        internal_counters.push_back(7983);
        internal_counters.push_back(8371);
        internal_counters.push_back(8759);
        internal_counters.push_back(9147);
        internal_counters.push_back(9535);
        internal_counters.push_back(9923);
        internal_counters.push_back(10311);
        internal_counters.push_back(10699);
        internal_counters.push_back(11087);
        internal_counters.push_back(11475);
        internal_counters.push_back(11863);
        internal_counters.push_back(12251);
        internal_counters.push_back(12639);
        internal_counters.push_back(13027);
        internal_counters.push_back(13415);
        internal_counters.push_back(13803);
        internal_counters.push_back(14191);
        internal_counters.push_back(14579);
        internal_counters.push_back(14967);
        internal_counters.push_back(15355);
        internal_counters.push_back(15743);
        internal_counters.push_back(16131);
        internal_counters.push_back(16519);
        internal_counters.push_back(7584);
        internal_counters.push_back(7972);
        internal_counters.push_back(8360);
        internal_counters.push_back(8748);
        internal_counters.push_back(9136);
        internal_counters.push_back(9524);
        internal_counters.push_back(9912);
        internal_counters.push_back(10300);
        internal_counters.push_back(10688);
        internal_counters.push_back(11076);
        internal_counters.push_back(11464);
        internal_counters.push_back(11852);
        internal_counters.push_back(12240);
        internal_counters.push_back(12628);
        internal_counters.push_back(13016);
        internal_counters.push_back(13404);
        internal_counters.push_back(13792);
        internal_counters.push_back(14180);
        internal_counters.push_back(14568);
        internal_counters.push_back(14956);
        internal_counters.push_back(15344);
        internal_counters.push_back(15732);
        internal_counters.push_back(16120);
        internal_counters.push_back(16508);

        c.DefineDerivedCounter("HiZTilesAccepted", "DepthAndStencil", "Percentage of tiles accepted by HiZ and will be rendered to the depth or color buffers.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,-,(0),max,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,/,(100),*", "56176f45-d7ff-813d-4f05-3b2f046067e7");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7584);
        internal_counters.push_back(7972);
        internal_counters.push_back(8360);
        internal_counters.push_back(8748);
        internal_counters.push_back(9136);
        internal_counters.push_back(9524);
        internal_counters.push_back(9912);
        internal_counters.push_back(10300);
        internal_counters.push_back(10688);
        internal_counters.push_back(11076);
        internal_counters.push_back(11464);
        internal_counters.push_back(11852);
        internal_counters.push_back(12240);
        internal_counters.push_back(12628);
        internal_counters.push_back(13016);
        internal_counters.push_back(13404);
        internal_counters.push_back(13792);
        internal_counters.push_back(14180);
        internal_counters.push_back(14568);
        internal_counters.push_back(14956);
        internal_counters.push_back(15344);
        internal_counters.push_back(15732);
        internal_counters.push_back(16120);
        internal_counters.push_back(16508);
        internal_counters.push_back(7595);
        internal_counters.push_back(7983);
        internal_counters.push_back(8371);
        internal_counters.push_back(8759);
        internal_counters.push_back(9147);
        internal_counters.push_back(9535);
        internal_counters.push_back(9923);
        internal_counters.push_back(10311);
        internal_counters.push_back(10699);
        internal_counters.push_back(11087);
        internal_counters.push_back(11475);
        internal_counters.push_back(11863);
        internal_counters.push_back(12251);
        internal_counters.push_back(12639);
        internal_counters.push_back(13027);
        internal_counters.push_back(13415);
        internal_counters.push_back(13803);
        internal_counters.push_back(14191);
        internal_counters.push_back(14579);
        internal_counters.push_back(14967);
        internal_counters.push_back(15355);
        internal_counters.push_back(15743);
        internal_counters.push_back(16131);
        internal_counters.push_back(16519);

        c.DefineDerivedCounter("HiZTilesAcceptedCount", "DepthAndStencil", "Count of tiles accepted by HiZ and will be rendered to the depth or color buffers.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(0),max", "95d4e3f6-b2f0-f26e-8423-aacdfaf79ea3");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7595);
        internal_counters.push_back(7983);
        internal_counters.push_back(8371);
        internal_counters.push_back(8759);
        internal_counters.push_back(9147);
        internal_counters.push_back(9535);
        internal_counters.push_back(9923);
        internal_counters.push_back(10311);
        internal_counters.push_back(10699);
        internal_counters.push_back(11087);
        internal_counters.push_back(11475);
        internal_counters.push_back(11863);
        internal_counters.push_back(12251);
        internal_counters.push_back(12639);
        internal_counters.push_back(13027);
        internal_counters.push_back(13415);
        internal_counters.push_back(13803);
        internal_counters.push_back(14191);
        internal_counters.push_back(14579);
        internal_counters.push_back(14967);
        internal_counters.push_back(15355);
        internal_counters.push_back(15743);
        internal_counters.push_back(16131);
        internal_counters.push_back(16519);

        c.DefineDerivedCounter("HiZTilesRejectedCount", "DepthAndStencil", "Count of tiles not accepted by HiZ.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "156ba142-7eeb-aa6e-a00a-f8aea4e41e0b");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7584);
        internal_counters.push_back(7972);
        internal_counters.push_back(8360);
        internal_counters.push_back(8748);
        internal_counters.push_back(9136);
        internal_counters.push_back(9524);
        internal_counters.push_back(9912);
        internal_counters.push_back(10300);
        internal_counters.push_back(10688);
        internal_counters.push_back(11076);
        internal_counters.push_back(11464);
        internal_counters.push_back(11852);
        internal_counters.push_back(12240);
        internal_counters.push_back(12628);
        internal_counters.push_back(13016);
        internal_counters.push_back(13404);
        internal_counters.push_back(13792);
        internal_counters.push_back(14180);
        internal_counters.push_back(14568);
        internal_counters.push_back(14956);
        internal_counters.push_back(15344);
        internal_counters.push_back(15732);
        internal_counters.push_back(16120);
        internal_counters.push_back(16508);
        internal_counters.push_back(7608);
        internal_counters.push_back(7996);
        internal_counters.push_back(8384);
        internal_counters.push_back(8772);
        internal_counters.push_back(9160);
        internal_counters.push_back(9548);
        internal_counters.push_back(9936);
        internal_counters.push_back(10324);
        internal_counters.push_back(10712);
        internal_counters.push_back(11100);
        internal_counters.push_back(11488);
        internal_counters.push_back(11876);
        internal_counters.push_back(12264);
        internal_counters.push_back(12652);
        internal_counters.push_back(13040);
        internal_counters.push_back(13428);
        internal_counters.push_back(13816);
        internal_counters.push_back(14204);
        internal_counters.push_back(14592);
        internal_counters.push_back(14980);
        internal_counters.push_back(15368);
        internal_counters.push_back(15756);
        internal_counters.push_back(16144);
        internal_counters.push_back(16532);

        c.DefineDerivedCounter("PreZTilesDetailCulled", "DepthAndStencil", "Percentage of tiles rejected because the associated prim had no contributing area.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,/,(100),*", "cad7f54d-a044-7574-c472-6f2065cbeeac");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7608);
        internal_counters.push_back(7996);
        internal_counters.push_back(8384);
        internal_counters.push_back(8772);
        internal_counters.push_back(9160);
        internal_counters.push_back(9548);
        internal_counters.push_back(9936);
        internal_counters.push_back(10324);
        internal_counters.push_back(10712);
        internal_counters.push_back(11100);
        internal_counters.push_back(11488);
        internal_counters.push_back(11876);
        internal_counters.push_back(12264);
        internal_counters.push_back(12652);
        internal_counters.push_back(13040);
        internal_counters.push_back(13428);
        internal_counters.push_back(13816);
        internal_counters.push_back(14204);
        internal_counters.push_back(14592);
        internal_counters.push_back(14980);
        internal_counters.push_back(15368);
        internal_counters.push_back(15756);
        internal_counters.push_back(16144);
        internal_counters.push_back(16532);

        c.DefineDerivedCounter("PreZTilesDetailCulledCount", "DepthAndStencil", "Count of tiles rejected because the associated primitive had no contributing area.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "49262c8a-b1e6-90dd-f096-0fc4921715e9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7584);
        internal_counters.push_back(7972);
        internal_counters.push_back(8360);
        internal_counters.push_back(8748);
        internal_counters.push_back(9136);
        internal_counters.push_back(9524);
        internal_counters.push_back(9912);
        internal_counters.push_back(10300);
        internal_counters.push_back(10688);
        internal_counters.push_back(11076);
        internal_counters.push_back(11464);
        internal_counters.push_back(11852);
        internal_counters.push_back(12240);
        internal_counters.push_back(12628);
        internal_counters.push_back(13016);
        internal_counters.push_back(13404);
        internal_counters.push_back(13792);
        internal_counters.push_back(14180);
        internal_counters.push_back(14568);
        internal_counters.push_back(14956);
        internal_counters.push_back(15344);
        internal_counters.push_back(15732);
        internal_counters.push_back(16120);
        internal_counters.push_back(16508);

        c.DefineDerivedCounter("PreZTilesDetailSurvivingCount", "DepthAndStencil", "Count of tiles surviving because the associated primitive had contributing area.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "f803eaa4-bbed-bd39-775f-a64df92e2c08");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19100);
        internal_counters.push_back(19765);
        internal_counters.push_back(20430);
        internal_counters.push_back(21095);
        internal_counters.push_back(21760);
        internal_counters.push_back(22425);
        internal_counters.push_back(23090);
        internal_counters.push_back(23755);
        internal_counters.push_back(24420);
        internal_counters.push_back(25085);
        internal_counters.push_back(25750);
        internal_counters.push_back(26415);
        internal_counters.push_back(27080);
        internal_counters.push_back(27745);
        internal_counters.push_back(28410);
        internal_counters.push_back(29075);
        internal_counters.push_back(29740);
        internal_counters.push_back(30405);
        internal_counters.push_back(31070);
        internal_counters.push_back(31735);
        internal_counters.push_back(32400);
        internal_counters.push_back(33065);
        internal_counters.push_back(33730);
        internal_counters.push_back(34395);
        internal_counters.push_back(19176);
        internal_counters.push_back(19841);
        internal_counters.push_back(20506);
        internal_counters.push_back(21171);
        internal_counters.push_back(21836);
        internal_counters.push_back(22501);
        internal_counters.push_back(23166);
        internal_counters.push_back(23831);
        internal_counters.push_back(24496);
        internal_counters.push_back(25161);
        internal_counters.push_back(25826);
        internal_counters.push_back(26491);
        internal_counters.push_back(27156);
        internal_counters.push_back(27821);
        internal_counters.push_back(28486);
        internal_counters.push_back(29151);
        internal_counters.push_back(29816);
        internal_counters.push_back(30481);
        internal_counters.push_back(31146);
        internal_counters.push_back(31811);
        internal_counters.push_back(32476);
        internal_counters.push_back(33141);
        internal_counters.push_back(33806);
        internal_counters.push_back(34471);

        c.DefineDerivedCounter("HiZQuadsCulled", "DepthAndStencil", "Percentage of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,/,(100),*", "fa0e319b-5573-6d34-5bab-904769925036");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19100);
        internal_counters.push_back(19765);
        internal_counters.push_back(20430);
        internal_counters.push_back(21095);
        internal_counters.push_back(21760);
        internal_counters.push_back(22425);
        internal_counters.push_back(23090);
        internal_counters.push_back(23755);
        internal_counters.push_back(24420);
        internal_counters.push_back(25085);
        internal_counters.push_back(25750);
        internal_counters.push_back(26415);
        internal_counters.push_back(27080);
        internal_counters.push_back(27745);
        internal_counters.push_back(28410);
        internal_counters.push_back(29075);
        internal_counters.push_back(29740);
        internal_counters.push_back(30405);
        internal_counters.push_back(31070);
        internal_counters.push_back(31735);
        internal_counters.push_back(32400);
        internal_counters.push_back(33065);
        internal_counters.push_back(33730);
        internal_counters.push_back(34395);
        internal_counters.push_back(19176);
        internal_counters.push_back(19841);
        internal_counters.push_back(20506);
        internal_counters.push_back(21171);
        internal_counters.push_back(21836);
        internal_counters.push_back(22501);
        internal_counters.push_back(23166);
        internal_counters.push_back(23831);
        internal_counters.push_back(24496);
        internal_counters.push_back(25161);
        internal_counters.push_back(25826);
        internal_counters.push_back(26491);
        internal_counters.push_back(27156);
        internal_counters.push_back(27821);
        internal_counters.push_back(28486);
        internal_counters.push_back(29151);
        internal_counters.push_back(29816);
        internal_counters.push_back(30481);
        internal_counters.push_back(31146);
        internal_counters.push_back(31811);
        internal_counters.push_back(32476);
        internal_counters.push_back(33141);
        internal_counters.push_back(33806);
        internal_counters.push_back(34471);

        c.DefineDerivedCounter("HiZQuadsCulledCount", "DepthAndStencil", "Count of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(0),max", "73b0b39d-6df2-3e24-0b5c-7cb0ac8b6f39");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19176);
        internal_counters.push_back(19841);
        internal_counters.push_back(20506);
        internal_counters.push_back(21171);
        internal_counters.push_back(21836);
        internal_counters.push_back(22501);
        internal_counters.push_back(23166);
        internal_counters.push_back(23831);
        internal_counters.push_back(24496);
        internal_counters.push_back(25161);
        internal_counters.push_back(25826);
        internal_counters.push_back(26491);
        internal_counters.push_back(27156);
        internal_counters.push_back(27821);
        internal_counters.push_back(28486);
        internal_counters.push_back(29151);
        internal_counters.push_back(29816);
        internal_counters.push_back(30481);
        internal_counters.push_back(31146);
        internal_counters.push_back(31811);
        internal_counters.push_back(32476);
        internal_counters.push_back(33141);
        internal_counters.push_back(33806);
        internal_counters.push_back(34471);

        c.DefineDerivedCounter("HiZQuadsAcceptedCount", "DepthAndStencil", "Count of quads that did continue on in the pipeline after HiZ.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "59049ad9-42b5-c7cb-3616-6a8f6a8e4894");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19176);
        internal_counters.push_back(19841);
        internal_counters.push_back(20506);
        internal_counters.push_back(21171);
        internal_counters.push_back(21836);
        internal_counters.push_back(22501);
        internal_counters.push_back(23166);
        internal_counters.push_back(23831);
        internal_counters.push_back(24496);
        internal_counters.push_back(25161);
        internal_counters.push_back(25826);
        internal_counters.push_back(26491);
        internal_counters.push_back(27156);
        internal_counters.push_back(27821);
        internal_counters.push_back(28486);
        internal_counters.push_back(29151);
        internal_counters.push_back(29816);
        internal_counters.push_back(30481);
        internal_counters.push_back(31146);
        internal_counters.push_back(31811);
        internal_counters.push_back(32476);
        internal_counters.push_back(33141);
        internal_counters.push_back(33806);
        internal_counters.push_back(34471);
        internal_counters.push_back(19200);
        internal_counters.push_back(19865);
        internal_counters.push_back(20530);
        internal_counters.push_back(21195);
        internal_counters.push_back(21860);
        internal_counters.push_back(22525);
        internal_counters.push_back(23190);
        internal_counters.push_back(23855);
        internal_counters.push_back(24520);
        internal_counters.push_back(25185);
        internal_counters.push_back(25850);
        internal_counters.push_back(26515);
        internal_counters.push_back(27180);
        internal_counters.push_back(27845);
        internal_counters.push_back(28510);
        internal_counters.push_back(29175);
        internal_counters.push_back(29840);
        internal_counters.push_back(30505);
        internal_counters.push_back(31170);
        internal_counters.push_back(31835);
        internal_counters.push_back(32500);
        internal_counters.push_back(33165);
        internal_counters.push_back(33830);
        internal_counters.push_back(34495);
        internal_counters.push_back(19100);
        internal_counters.push_back(19765);
        internal_counters.push_back(20430);
        internal_counters.push_back(21095);
        internal_counters.push_back(21760);
        internal_counters.push_back(22425);
        internal_counters.push_back(23090);
        internal_counters.push_back(23755);
        internal_counters.push_back(24420);
        internal_counters.push_back(25085);
        internal_counters.push_back(25750);
        internal_counters.push_back(26415);
        internal_counters.push_back(27080);
        internal_counters.push_back(27745);
        internal_counters.push_back(28410);
        internal_counters.push_back(29075);
        internal_counters.push_back(29740);
        internal_counters.push_back(30405);
        internal_counters.push_back(31070);
        internal_counters.push_back(31735);
        internal_counters.push_back(32400);
        internal_counters.push_back(33065);
        internal_counters.push_back(33730);
        internal_counters.push_back(34395);

        c.DefineDerivedCounter("PreZQuadsCulled", "DepthAndStencil", "Percentage of quads rejected based on the detailZ and earlyZ tests.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(0),max,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,sum24,/,(100),*", "4e77547b-ec55-5663-f034-af59be66d77d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19176);
        internal_counters.push_back(19841);
        internal_counters.push_back(20506);
        internal_counters.push_back(21171);
        internal_counters.push_back(21836);
        internal_counters.push_back(22501);
        internal_counters.push_back(23166);
        internal_counters.push_back(23831);
        internal_counters.push_back(24496);
        internal_counters.push_back(25161);
        internal_counters.push_back(25826);
        internal_counters.push_back(26491);
        internal_counters.push_back(27156);
        internal_counters.push_back(27821);
        internal_counters.push_back(28486);
        internal_counters.push_back(29151);
        internal_counters.push_back(29816);
        internal_counters.push_back(30481);
        internal_counters.push_back(31146);
        internal_counters.push_back(31811);
        internal_counters.push_back(32476);
        internal_counters.push_back(33141);
        internal_counters.push_back(33806);
        internal_counters.push_back(34471);
        internal_counters.push_back(19200);
        internal_counters.push_back(19865);
        internal_counters.push_back(20530);
        internal_counters.push_back(21195);
        internal_counters.push_back(21860);
        internal_counters.push_back(22525);
        internal_counters.push_back(23190);
        internal_counters.push_back(23855);
        internal_counters.push_back(24520);
        internal_counters.push_back(25185);
        internal_counters.push_back(25850);
        internal_counters.push_back(26515);
        internal_counters.push_back(27180);
        internal_counters.push_back(27845);
        internal_counters.push_back(28510);
        internal_counters.push_back(29175);
        internal_counters.push_back(29840);
        internal_counters.push_back(30505);
        internal_counters.push_back(31170);
        internal_counters.push_back(31835);
        internal_counters.push_back(32500);
        internal_counters.push_back(33165);
        internal_counters.push_back(33830);
        internal_counters.push_back(34495);

        c.DefineDerivedCounter("PreZQuadsCulledCount", "DepthAndStencil", "Count of quads rejected based on the detailZ and earlyZ tests.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(0),max", "1bf169e6-9304-834e-df5f-0c44d7890a08");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19200);
        internal_counters.push_back(19865);
        internal_counters.push_back(20530);
        internal_counters.push_back(21195);
        internal_counters.push_back(21860);
        internal_counters.push_back(22525);
        internal_counters.push_back(23190);
        internal_counters.push_back(23855);
        internal_counters.push_back(24520);
        internal_counters.push_back(25185);
        internal_counters.push_back(25850);
        internal_counters.push_back(26515);
        internal_counters.push_back(27180);
        internal_counters.push_back(27845);
        internal_counters.push_back(28510);
        internal_counters.push_back(29175);
        internal_counters.push_back(29840);
        internal_counters.push_back(30505);
        internal_counters.push_back(31170);
        internal_counters.push_back(31835);
        internal_counters.push_back(32500);
        internal_counters.push_back(33165);
        internal_counters.push_back(33830);
        internal_counters.push_back(34495);

        c.DefineDerivedCounter("PreZQuadsSurvivingCount", "DepthAndStencil", "Count of quads surviving detailZ and earlyZ tests.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "50e25e51-3713-89cb-7f92-559cde5e5532");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19200);
        internal_counters.push_back(19865);
        internal_counters.push_back(20530);
        internal_counters.push_back(21195);
        internal_counters.push_back(21860);
        internal_counters.push_back(22525);
        internal_counters.push_back(23190);
        internal_counters.push_back(23855);
        internal_counters.push_back(24520);
        internal_counters.push_back(25185);
        internal_counters.push_back(25850);
        internal_counters.push_back(26515);
        internal_counters.push_back(27180);
        internal_counters.push_back(27845);
        internal_counters.push_back(28510);
        internal_counters.push_back(29175);
        internal_counters.push_back(29840);
        internal_counters.push_back(30505);
        internal_counters.push_back(31170);
        internal_counters.push_back(31835);
        internal_counters.push_back(32500);
        internal_counters.push_back(33165);
        internal_counters.push_back(33830);
        internal_counters.push_back(34495);
        internal_counters.push_back(19100);
        internal_counters.push_back(19765);
        internal_counters.push_back(20430);
        internal_counters.push_back(21095);
        internal_counters.push_back(21760);
        internal_counters.push_back(22425);
        internal_counters.push_back(23090);
        internal_counters.push_back(23755);
        internal_counters.push_back(24420);
        internal_counters.push_back(25085);
        internal_counters.push_back(25750);
        internal_counters.push_back(26415);
        internal_counters.push_back(27080);
        internal_counters.push_back(27745);
        internal_counters.push_back(28410);
        internal_counters.push_back(29075);
        internal_counters.push_back(29740);
        internal_counters.push_back(30405);
        internal_counters.push_back(31070);
        internal_counters.push_back(31735);
        internal_counters.push_back(32400);
        internal_counters.push_back(33065);
        internal_counters.push_back(33730);
        internal_counters.push_back(34395);

        c.DefineDerivedCounter("PostZQuads", "DepthAndStencil", "Percentage of quads for which the pixel shader will run and may be postZ tested.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,/,(100),*", "58f0d34b-eeb8-e8db-abce-cb72584144be");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19200);
        internal_counters.push_back(19865);
        internal_counters.push_back(20530);
        internal_counters.push_back(21195);
        internal_counters.push_back(21860);
        internal_counters.push_back(22525);
        internal_counters.push_back(23190);
        internal_counters.push_back(23855);
        internal_counters.push_back(24520);
        internal_counters.push_back(25185);
        internal_counters.push_back(25850);
        internal_counters.push_back(26515);
        internal_counters.push_back(27180);
        internal_counters.push_back(27845);
        internal_counters.push_back(28510);
        internal_counters.push_back(29175);
        internal_counters.push_back(29840);
        internal_counters.push_back(30505);
        internal_counters.push_back(31170);
        internal_counters.push_back(31835);
        internal_counters.push_back(32500);
        internal_counters.push_back(33165);
        internal_counters.push_back(33830);
        internal_counters.push_back(34495);

        c.DefineDerivedCounter("PostZQuadCount", "DepthAndStencil", "Count of quads for which the pixel shader will run and may be postZ tested.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "08404526-ce35-939b-34c8-a7a35a0ff4d6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7757);
        internal_counters.push_back(8145);
        internal_counters.push_back(8533);
        internal_counters.push_back(8921);
        internal_counters.push_back(9309);
        internal_counters.push_back(9697);
        internal_counters.push_back(10085);
        internal_counters.push_back(10473);
        internal_counters.push_back(10861);
        internal_counters.push_back(11249);
        internal_counters.push_back(11637);
        internal_counters.push_back(12025);
        internal_counters.push_back(12413);
        internal_counters.push_back(12801);
        internal_counters.push_back(13189);
        internal_counters.push_back(13577);
        internal_counters.push_back(13965);
        internal_counters.push_back(14353);
        internal_counters.push_back(14741);
        internal_counters.push_back(15129);
        internal_counters.push_back(15517);
        internal_counters.push_back(15905);
        internal_counters.push_back(16293);
        internal_counters.push_back(16681);

        c.DefineDerivedCounter("PreZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z before shading and passed.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "3bfe6c4d-7422-ca03-7ea5-e67ff1a00136");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7759);
        internal_counters.push_back(8147);
        internal_counters.push_back(8535);
        internal_counters.push_back(8923);
        internal_counters.push_back(9311);
        internal_counters.push_back(9699);
        internal_counters.push_back(10087);
        internal_counters.push_back(10475);
        internal_counters.push_back(10863);
        internal_counters.push_back(11251);
        internal_counters.push_back(11639);
        internal_counters.push_back(12027);
        internal_counters.push_back(12415);
        internal_counters.push_back(12803);
        internal_counters.push_back(13191);
        internal_counters.push_back(13579);
        internal_counters.push_back(13967);
        internal_counters.push_back(14355);
        internal_counters.push_back(14743);
        internal_counters.push_back(15131);
        internal_counters.push_back(15519);
        internal_counters.push_back(15907);
        internal_counters.push_back(16295);
        internal_counters.push_back(16683);

        c.DefineDerivedCounter("PreZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z before shading and failed stencil test.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "df7f705e-5162-d3b5-da8b-63466cf9c4e5");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7758);
        internal_counters.push_back(8146);
        internal_counters.push_back(8534);
        internal_counters.push_back(8922);
        internal_counters.push_back(9310);
        internal_counters.push_back(9698);
        internal_counters.push_back(10086);
        internal_counters.push_back(10474);
        internal_counters.push_back(10862);
        internal_counters.push_back(11250);
        internal_counters.push_back(11638);
        internal_counters.push_back(12026);
        internal_counters.push_back(12414);
        internal_counters.push_back(12802);
        internal_counters.push_back(13190);
        internal_counters.push_back(13578);
        internal_counters.push_back(13966);
        internal_counters.push_back(14354);
        internal_counters.push_back(14742);
        internal_counters.push_back(15130);
        internal_counters.push_back(15518);
        internal_counters.push_back(15906);
        internal_counters.push_back(16294);
        internal_counters.push_back(16682);

        c.DefineDerivedCounter("PreZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z before shading and failed Z test.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "4484e950-f7a4-3800-bc74-78dd297f017e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7754);
        internal_counters.push_back(8142);
        internal_counters.push_back(8530);
        internal_counters.push_back(8918);
        internal_counters.push_back(9306);
        internal_counters.push_back(9694);
        internal_counters.push_back(10082);
        internal_counters.push_back(10470);
        internal_counters.push_back(10858);
        internal_counters.push_back(11246);
        internal_counters.push_back(11634);
        internal_counters.push_back(12022);
        internal_counters.push_back(12410);
        internal_counters.push_back(12798);
        internal_counters.push_back(13186);
        internal_counters.push_back(13574);
        internal_counters.push_back(13962);
        internal_counters.push_back(14350);
        internal_counters.push_back(14738);
        internal_counters.push_back(15126);
        internal_counters.push_back(15514);
        internal_counters.push_back(15902);
        internal_counters.push_back(16290);
        internal_counters.push_back(16678);

        c.DefineDerivedCounter("PostZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z after shading and passed.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "4995d5d6-2330-b986-508b-fae24856f44c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7756);
        internal_counters.push_back(8144);
        internal_counters.push_back(8532);
        internal_counters.push_back(8920);
        internal_counters.push_back(9308);
        internal_counters.push_back(9696);
        internal_counters.push_back(10084);
        internal_counters.push_back(10472);
        internal_counters.push_back(10860);
        internal_counters.push_back(11248);
        internal_counters.push_back(11636);
        internal_counters.push_back(12024);
        internal_counters.push_back(12412);
        internal_counters.push_back(12800);
        internal_counters.push_back(13188);
        internal_counters.push_back(13576);
        internal_counters.push_back(13964);
        internal_counters.push_back(14352);
        internal_counters.push_back(14740);
        internal_counters.push_back(15128);
        internal_counters.push_back(15516);
        internal_counters.push_back(15904);
        internal_counters.push_back(16292);
        internal_counters.push_back(16680);

        c.DefineDerivedCounter("PostZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z after shading and failed stencil test.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "ae558af4-f4be-3dd4-7316-b2c4dcf0def8");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7755);
        internal_counters.push_back(8143);
        internal_counters.push_back(8531);
        internal_counters.push_back(8919);
        internal_counters.push_back(9307);
        internal_counters.push_back(9695);
        internal_counters.push_back(10083);
        internal_counters.push_back(10471);
        internal_counters.push_back(10859);
        internal_counters.push_back(11247);
        internal_counters.push_back(11635);
        internal_counters.push_back(12023);
        internal_counters.push_back(12411);
        internal_counters.push_back(12799);
        internal_counters.push_back(13187);
        internal_counters.push_back(13575);
        internal_counters.push_back(13963);
        internal_counters.push_back(14351);
        internal_counters.push_back(14739);
        internal_counters.push_back(15127);
        internal_counters.push_back(15515);
        internal_counters.push_back(15903);
        internal_counters.push_back(16291);
        internal_counters.push_back(16679);

        c.DefineDerivedCounter("PostZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z after shading and failed Z test.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "b3684c94-814a-c695-c85d-a5b6ab798b35");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7626);
        internal_counters.push_back(8014);
        internal_counters.push_back(8402);
        internal_counters.push_back(8790);
        internal_counters.push_back(9178);
        internal_counters.push_back(9566);
        internal_counters.push_back(9954);
        internal_counters.push_back(10342);
        internal_counters.push_back(10730);
        internal_counters.push_back(11118);
        internal_counters.push_back(11506);
        internal_counters.push_back(11894);
        internal_counters.push_back(12282);
        internal_counters.push_back(12670);
        internal_counters.push_back(13058);
        internal_counters.push_back(13446);
        internal_counters.push_back(13834);
        internal_counters.push_back(14222);
        internal_counters.push_back(14610);
        internal_counters.push_back(14998);
        internal_counters.push_back(15386);
        internal_counters.push_back(15774);
        internal_counters.push_back(16162);
        internal_counters.push_back(16550);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("ZUnitStalled", "DepthAndStencil", "The percentage of GPUTime the depth buffer spends waiting for the color buffer to be ready to accept data. High figures here indicate a bottleneck in color buffer operations.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,/,(100),*", "5e86c3ad-1726-3157-1d01-7ed188bf854d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7626);
        internal_counters.push_back(8014);
        internal_counters.push_back(8402);
        internal_counters.push_back(8790);
        internal_counters.push_back(9178);
        internal_counters.push_back(9566);
        internal_counters.push_back(9954);
        internal_counters.push_back(10342);
        internal_counters.push_back(10730);
        internal_counters.push_back(11118);
        internal_counters.push_back(11506);
        internal_counters.push_back(11894);
        internal_counters.push_back(12282);
        internal_counters.push_back(12670);
        internal_counters.push_back(13058);
        internal_counters.push_back(13446);
        internal_counters.push_back(13834);
        internal_counters.push_back(14222);
        internal_counters.push_back(14610);
        internal_counters.push_back(14998);
        internal_counters.push_back(15386);
        internal_counters.push_back(15774);
        internal_counters.push_back(16162);
        internal_counters.push_back(16550);

        c.DefineDerivedCounter("ZUnitStalledCycles", "DepthAndStencil", "Number of GPU cycles the depth buffer spends waiting for the color buffer to be ready to accept data. Larger numbers indicate a bottleneck in color buffer operations.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24", "4351fa7f-6737-2c3e-3ffb-b3addbdceedd");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7628);
        internal_counters.push_back(8016);
        internal_counters.push_back(8404);
        internal_counters.push_back(8792);
        internal_counters.push_back(9180);
        internal_counters.push_back(9568);
        internal_counters.push_back(9956);
        internal_counters.push_back(10344);
        internal_counters.push_back(10732);
        internal_counters.push_back(11120);
        internal_counters.push_back(11508);
        internal_counters.push_back(11896);
        internal_counters.push_back(12284);
        internal_counters.push_back(12672);
        internal_counters.push_back(13060);
        internal_counters.push_back(13448);
        internal_counters.push_back(13836);
        internal_counters.push_back(14224);
        internal_counters.push_back(14612);
        internal_counters.push_back(15000);
        internal_counters.push_back(15388);
        internal_counters.push_back(15776);
        internal_counters.push_back(16164);
        internal_counters.push_back(16552);
        internal_counters.push_back(7635);
        internal_counters.push_back(8023);
        internal_counters.push_back(8411);
        internal_counters.push_back(8799);
        internal_counters.push_back(9187);
        internal_counters.push_back(9575);
        internal_counters.push_back(9963);
        internal_counters.push_back(10351);
        internal_counters.push_back(10739);
        internal_counters.push_back(11127);
        internal_counters.push_back(11515);
        internal_counters.push_back(11903);
        internal_counters.push_back(12291);
        internal_counters.push_back(12679);
        internal_counters.push_back(13067);
        internal_counters.push_back(13455);
        internal_counters.push_back(13843);
        internal_counters.push_back(14231);
        internal_counters.push_back(14619);
        internal_counters.push_back(15007);
        internal_counters.push_back(15395);
        internal_counters.push_back(15783);
        internal_counters.push_back(16171);
        internal_counters.push_back(16559);

        c.DefineDerivedCounter("DBMemRead", "DepthAndStencil", "Number of bytes read from the depth buffer.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,(256),*,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,(32),*,+", "dcdb4ee7-bd50-00f7-c028-9e5f4ce888c0");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7640);
        internal_counters.push_back(8028);
        internal_counters.push_back(8416);
        internal_counters.push_back(8804);
        internal_counters.push_back(9192);
        internal_counters.push_back(9580);
        internal_counters.push_back(9968);
        internal_counters.push_back(10356);
        internal_counters.push_back(10744);
        internal_counters.push_back(11132);
        internal_counters.push_back(11520);
        internal_counters.push_back(11908);
        internal_counters.push_back(12296);
        internal_counters.push_back(12684);
        internal_counters.push_back(13072);
        internal_counters.push_back(13460);
        internal_counters.push_back(13848);
        internal_counters.push_back(14236);
        internal_counters.push_back(14624);
        internal_counters.push_back(15012);
        internal_counters.push_back(15400);
        internal_counters.push_back(15788);
        internal_counters.push_back(16176);
        internal_counters.push_back(16564);
        internal_counters.push_back(7643);
        internal_counters.push_back(8031);
        internal_counters.push_back(8419);
        internal_counters.push_back(8807);
        internal_counters.push_back(9195);
        internal_counters.push_back(9583);
        internal_counters.push_back(9971);
        internal_counters.push_back(10359);
        internal_counters.push_back(10747);
        internal_counters.push_back(11135);
        internal_counters.push_back(11523);
        internal_counters.push_back(11911);
        internal_counters.push_back(12299);
        internal_counters.push_back(12687);
        internal_counters.push_back(13075);
        internal_counters.push_back(13463);
        internal_counters.push_back(13851);
        internal_counters.push_back(14239);
        internal_counters.push_back(14627);
        internal_counters.push_back(15015);
        internal_counters.push_back(15403);
        internal_counters.push_back(15791);
        internal_counters.push_back(16179);
        internal_counters.push_back(16567);

        c.DefineDerivedCounter("DBMemWritten", "DepthAndStencil", "Number of bytes written to the depth buffer.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,(32),*,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,(32),*,+", "de5717f8-8a49-ee44-4645-10de51b37dcf");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(65);
        internal_counters.push_back(379);
        internal_counters.push_back(693);
        internal_counters.push_back(1007);
        internal_counters.push_back(1321);
        internal_counters.push_back(1635);
        internal_counters.push_back(1949);
        internal_counters.push_back(2263);
        internal_counters.push_back(2577);
        internal_counters.push_back(2891);
        internal_counters.push_back(3205);
        internal_counters.push_back(3519);
        internal_counters.push_back(3833);
        internal_counters.push_back(4147);
        internal_counters.push_back(4461);
        internal_counters.push_back(4775);
        internal_counters.push_back(5089);
        internal_counters.push_back(5403);
        internal_counters.push_back(5717);
        internal_counters.push_back(6031);
        internal_counters.push_back(6345);
        internal_counters.push_back(6659);
        internal_counters.push_back(6973);
        internal_counters.push_back(7287);

        c.DefineDerivedCounter("CBMemRead", "ColorBuffer", "Number of bytes read from the color buffer.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,(32),*", "84b531d8-a1f8-7f49-7c27-7bc97801f1e6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(76);
        internal_counters.push_back(390);
        internal_counters.push_back(704);
        internal_counters.push_back(1018);
        internal_counters.push_back(1332);
        internal_counters.push_back(1646);
        internal_counters.push_back(1960);
        internal_counters.push_back(2274);
        internal_counters.push_back(2588);
        internal_counters.push_back(2902);
        internal_counters.push_back(3216);
        internal_counters.push_back(3530);
        internal_counters.push_back(3844);
        internal_counters.push_back(4158);
        internal_counters.push_back(4472);
        internal_counters.push_back(4786);
        internal_counters.push_back(5100);
        internal_counters.push_back(5414);
        internal_counters.push_back(5728);
        internal_counters.push_back(6042);
        internal_counters.push_back(6356);
        internal_counters.push_back(6670);
        internal_counters.push_back(6984);
        internal_counters.push_back(7298);
        internal_counters.push_back(65);
        internal_counters.push_back(379);
        internal_counters.push_back(693);
        internal_counters.push_back(1007);
        internal_counters.push_back(1321);
        internal_counters.push_back(1635);
        internal_counters.push_back(1949);
        internal_counters.push_back(2263);
        internal_counters.push_back(2577);
        internal_counters.push_back(2891);
        internal_counters.push_back(3205);
        internal_counters.push_back(3519);
        internal_counters.push_back(3833);
        internal_counters.push_back(4147);
        internal_counters.push_back(4461);
        internal_counters.push_back(4775);
        internal_counters.push_back(5089);
        internal_counters.push_back(5403);
        internal_counters.push_back(5717);
        internal_counters.push_back(6031);
        internal_counters.push_back(6345);
        internal_counters.push_back(6659);
        internal_counters.push_back(6973);
        internal_counters.push_back(7287);

        c.DefineDerivedCounter("CBColorAndMaskRead", "ColorBuffer", "Total number of bytes read from the color and mask buffers.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,+,(32),*", "da41660e-eb6f-32ec-8a64-b32ca17bd7eb");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(63);
        internal_counters.push_back(377);
        internal_counters.push_back(691);
        internal_counters.push_back(1005);
        internal_counters.push_back(1319);
        internal_counters.push_back(1633);
        internal_counters.push_back(1947);
        internal_counters.push_back(2261);
        internal_counters.push_back(2575);
        internal_counters.push_back(2889);
        internal_counters.push_back(3203);
        internal_counters.push_back(3517);
        internal_counters.push_back(3831);
        internal_counters.push_back(4145);
        internal_counters.push_back(4459);
        internal_counters.push_back(4773);
        internal_counters.push_back(5087);
        internal_counters.push_back(5401);
        internal_counters.push_back(5715);
        internal_counters.push_back(6029);
        internal_counters.push_back(6343);
        internal_counters.push_back(6657);
        internal_counters.push_back(6971);
        internal_counters.push_back(7285);

        c.DefineDerivedCounter("CBMemWritten", "ColorBuffer", "Number of bytes written to the color buffer.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,(32),*", "550f8ff8-60b6-a6bf-87d0-25ac9e87de70");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(74);
        internal_counters.push_back(388);
        internal_counters.push_back(702);
        internal_counters.push_back(1016);
        internal_counters.push_back(1330);
        internal_counters.push_back(1644);
        internal_counters.push_back(1958);
        internal_counters.push_back(2272);
        internal_counters.push_back(2586);
        internal_counters.push_back(2900);
        internal_counters.push_back(3214);
        internal_counters.push_back(3528);
        internal_counters.push_back(3842);
        internal_counters.push_back(4156);
        internal_counters.push_back(4470);
        internal_counters.push_back(4784);
        internal_counters.push_back(5098);
        internal_counters.push_back(5412);
        internal_counters.push_back(5726);
        internal_counters.push_back(6040);
        internal_counters.push_back(6354);
        internal_counters.push_back(6668);
        internal_counters.push_back(6982);
        internal_counters.push_back(7296);
        internal_counters.push_back(63);
        internal_counters.push_back(377);
        internal_counters.push_back(691);
        internal_counters.push_back(1005);
        internal_counters.push_back(1319);
        internal_counters.push_back(1633);
        internal_counters.push_back(1947);
        internal_counters.push_back(2261);
        internal_counters.push_back(2575);
        internal_counters.push_back(2889);
        internal_counters.push_back(3203);
        internal_counters.push_back(3517);
        internal_counters.push_back(3831);
        internal_counters.push_back(4145);
        internal_counters.push_back(4459);
        internal_counters.push_back(4773);
        internal_counters.push_back(5087);
        internal_counters.push_back(5401);
        internal_counters.push_back(5715);
        internal_counters.push_back(6029);
        internal_counters.push_back(6343);
        internal_counters.push_back(6657);
        internal_counters.push_back(6971);
        internal_counters.push_back(7285);

        c.DefineDerivedCounter("CBColorAndMaskWritten", "ColorBuffer", "Total number of bytes written to the color and mask buffers.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,+,(32),*", "29a04b69-8f5f-b770-a0f2-3453e2c99e49");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80276);
        internal_counters.push_back(80354);
        internal_counters.push_back(80432);
        internal_counters.push_back(80510);
        internal_counters.push_back(80588);
        internal_counters.push_back(80666);
        internal_counters.push_back(80744);
        internal_counters.push_back(80822);
        internal_counters.push_back(80900);
        internal_counters.push_back(80978);
        internal_counters.push_back(81056);
        internal_counters.push_back(81134);
        internal_counters.push_back(81212);
        internal_counters.push_back(81290);
        internal_counters.push_back(81368);
        internal_counters.push_back(81446);
        internal_counters.push_back(81524);
        internal_counters.push_back(81602);
        internal_counters.push_back(81680);
        internal_counters.push_back(81758);
        internal_counters.push_back(81836);
        internal_counters.push_back(81914);
        internal_counters.push_back(81992);
        internal_counters.push_back(82070);
        internal_counters.push_back(82148);
        internal_counters.push_back(82226);
        internal_counters.push_back(82304);
        internal_counters.push_back(82382);
        internal_counters.push_back(82460);
        internal_counters.push_back(82538);
        internal_counters.push_back(82616);
        internal_counters.push_back(82694);
        internal_counters.push_back(82772);
        internal_counters.push_back(82850);
        internal_counters.push_back(82928);
        internal_counters.push_back(83006);
        internal_counters.push_back(83084);
        internal_counters.push_back(83162);
        internal_counters.push_back(83240);
        internal_counters.push_back(83318);
        internal_counters.push_back(83396);
        internal_counters.push_back(83474);
        internal_counters.push_back(83552);
        internal_counters.push_back(83630);
        internal_counters.push_back(83708);
        internal_counters.push_back(83786);
        internal_counters.push_back(83864);
        internal_counters.push_back(83942);
        internal_counters.push_back(84020);
        internal_counters.push_back(84098);
        internal_counters.push_back(84176);
        internal_counters.push_back(84254);
        internal_counters.push_back(84332);
        internal_counters.push_back(84410);
        internal_counters.push_back(84488);
        internal_counters.push_back(84566);
        internal_counters.push_back(84644);
        internal_counters.push_back(84722);
        internal_counters.push_back(84800);
        internal_counters.push_back(84878);
        internal_counters.push_back(84956);
        internal_counters.push_back(85034);
        internal_counters.push_back(85112);
        internal_counters.push_back(85190);
        internal_counters.push_back(85268);
        internal_counters.push_back(85346);
        internal_counters.push_back(85424);
        internal_counters.push_back(85502);
        internal_counters.push_back(85580);
        internal_counters.push_back(85658);
        internal_counters.push_back(85736);
        internal_counters.push_back(85814);
        internal_counters.push_back(85892);
        internal_counters.push_back(85970);
        internal_counters.push_back(86048);
        internal_counters.push_back(86126);
        internal_counters.push_back(86204);
        internal_counters.push_back(86282);
        internal_counters.push_back(86360);
        internal_counters.push_back(86438);
        internal_counters.push_back(86516);
        internal_counters.push_back(86594);
        internal_counters.push_back(86672);
        internal_counters.push_back(86750);
        internal_counters.push_back(86828);
        internal_counters.push_back(86906);
        internal_counters.push_back(86984);
        internal_counters.push_back(87062);
        internal_counters.push_back(87140);
        internal_counters.push_back(87218);
        internal_counters.push_back(87296);
        internal_counters.push_back(87374);
        internal_counters.push_back(87452);
        internal_counters.push_back(87530);
        internal_counters.push_back(87608);
        internal_counters.push_back(87686);
        internal_counters.push_back(80284);
        internal_counters.push_back(80362);
        internal_counters.push_back(80440);
        internal_counters.push_back(80518);
        internal_counters.push_back(80596);
        internal_counters.push_back(80674);
        internal_counters.push_back(80752);
        internal_counters.push_back(80830);
        internal_counters.push_back(80908);
        internal_counters.push_back(80986);
        internal_counters.push_back(81064);
        internal_counters.push_back(81142);
        internal_counters.push_back(81220);
        internal_counters.push_back(81298);
        internal_counters.push_back(81376);
        internal_counters.push_back(81454);
        internal_counters.push_back(81532);
        internal_counters.push_back(81610);
        internal_counters.push_back(81688);
        internal_counters.push_back(81766);
        internal_counters.push_back(81844);
        internal_counters.push_back(81922);
        internal_counters.push_back(82000);
        internal_counters.push_back(82078);
        internal_counters.push_back(82156);
        internal_counters.push_back(82234);
        internal_counters.push_back(82312);
        internal_counters.push_back(82390);
        internal_counters.push_back(82468);
        internal_counters.push_back(82546);
        internal_counters.push_back(82624);
        internal_counters.push_back(82702);
        internal_counters.push_back(82780);
        internal_counters.push_back(82858);
        internal_counters.push_back(82936);
        internal_counters.push_back(83014);
        internal_counters.push_back(83092);
        internal_counters.push_back(83170);
        internal_counters.push_back(83248);
        internal_counters.push_back(83326);
        internal_counters.push_back(83404);
        internal_counters.push_back(83482);
        internal_counters.push_back(83560);
        internal_counters.push_back(83638);
        internal_counters.push_back(83716);
        internal_counters.push_back(83794);
        internal_counters.push_back(83872);
        internal_counters.push_back(83950);
        internal_counters.push_back(84028);
        internal_counters.push_back(84106);
        internal_counters.push_back(84184);
        internal_counters.push_back(84262);
        internal_counters.push_back(84340);
        internal_counters.push_back(84418);
        internal_counters.push_back(84496);
        internal_counters.push_back(84574);
        internal_counters.push_back(84652);
        internal_counters.push_back(84730);
        internal_counters.push_back(84808);
        internal_counters.push_back(84886);
        internal_counters.push_back(84964);
        internal_counters.push_back(85042);
        internal_counters.push_back(85120);
        internal_counters.push_back(85198);
        internal_counters.push_back(85276);
        internal_counters.push_back(85354);
        internal_counters.push_back(85432);
        internal_counters.push_back(85510);
        internal_counters.push_back(85588);
        internal_counters.push_back(85666);
        internal_counters.push_back(85744);
        internal_counters.push_back(85822);
        internal_counters.push_back(85900);
        internal_counters.push_back(85978);
        internal_counters.push_back(86056);
        internal_counters.push_back(86134);
        internal_counters.push_back(86212);
        internal_counters.push_back(86290);
        internal_counters.push_back(86368);
        internal_counters.push_back(86446);
        internal_counters.push_back(86524);
        internal_counters.push_back(86602);
        internal_counters.push_back(86680);
        internal_counters.push_back(86758);
        internal_counters.push_back(86836);
        internal_counters.push_back(86914);
        internal_counters.push_back(86992);
        internal_counters.push_back(87070);
        internal_counters.push_back(87148);
        internal_counters.push_back(87226);
        internal_counters.push_back(87304);
        internal_counters.push_back(87382);
        internal_counters.push_back(87460);
        internal_counters.push_back(87538);
        internal_counters.push_back(87616);
        internal_counters.push_back(87694);

        c.DefineDerivedCounter("L0CacheHit", "MemoryCache", "The percentage of read requests that hit the data in the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),(1),96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum96,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,ifnotzero", "286c786e-9a42-3371-9dea-dd54e6e612e9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80276);
        internal_counters.push_back(80354);
        internal_counters.push_back(80432);
        internal_counters.push_back(80510);
        internal_counters.push_back(80588);
        internal_counters.push_back(80666);
        internal_counters.push_back(80744);
        internal_counters.push_back(80822);
        internal_counters.push_back(80900);
        internal_counters.push_back(80978);
        internal_counters.push_back(81056);
        internal_counters.push_back(81134);
        internal_counters.push_back(81212);
        internal_counters.push_back(81290);
        internal_counters.push_back(81368);
        internal_counters.push_back(81446);
        internal_counters.push_back(81524);
        internal_counters.push_back(81602);
        internal_counters.push_back(81680);
        internal_counters.push_back(81758);
        internal_counters.push_back(81836);
        internal_counters.push_back(81914);
        internal_counters.push_back(81992);
        internal_counters.push_back(82070);
        internal_counters.push_back(82148);
        internal_counters.push_back(82226);
        internal_counters.push_back(82304);
        internal_counters.push_back(82382);
        internal_counters.push_back(82460);
        internal_counters.push_back(82538);
        internal_counters.push_back(82616);
        internal_counters.push_back(82694);
        internal_counters.push_back(82772);
        internal_counters.push_back(82850);
        internal_counters.push_back(82928);
        internal_counters.push_back(83006);
        internal_counters.push_back(83084);
        internal_counters.push_back(83162);
        internal_counters.push_back(83240);
        internal_counters.push_back(83318);
        internal_counters.push_back(83396);
        internal_counters.push_back(83474);
        internal_counters.push_back(83552);
        internal_counters.push_back(83630);
        internal_counters.push_back(83708);
        internal_counters.push_back(83786);
        internal_counters.push_back(83864);
        internal_counters.push_back(83942);
        internal_counters.push_back(84020);
        internal_counters.push_back(84098);
        internal_counters.push_back(84176);
        internal_counters.push_back(84254);
        internal_counters.push_back(84332);
        internal_counters.push_back(84410);
        internal_counters.push_back(84488);
        internal_counters.push_back(84566);
        internal_counters.push_back(84644);
        internal_counters.push_back(84722);
        internal_counters.push_back(84800);
        internal_counters.push_back(84878);
        internal_counters.push_back(84956);
        internal_counters.push_back(85034);
        internal_counters.push_back(85112);
        internal_counters.push_back(85190);
        internal_counters.push_back(85268);
        internal_counters.push_back(85346);
        internal_counters.push_back(85424);
        internal_counters.push_back(85502);
        internal_counters.push_back(85580);
        internal_counters.push_back(85658);
        internal_counters.push_back(85736);
        internal_counters.push_back(85814);
        internal_counters.push_back(85892);
        internal_counters.push_back(85970);
        internal_counters.push_back(86048);
        internal_counters.push_back(86126);
        internal_counters.push_back(86204);
        internal_counters.push_back(86282);
        internal_counters.push_back(86360);
        internal_counters.push_back(86438);
        internal_counters.push_back(86516);
        internal_counters.push_back(86594);
        internal_counters.push_back(86672);
        internal_counters.push_back(86750);
        internal_counters.push_back(86828);
        internal_counters.push_back(86906);
        internal_counters.push_back(86984);
        internal_counters.push_back(87062);
        internal_counters.push_back(87140);
        internal_counters.push_back(87218);
        internal_counters.push_back(87296);
        internal_counters.push_back(87374);
        internal_counters.push_back(87452);
        internal_counters.push_back(87530);
        internal_counters.push_back(87608);
        internal_counters.push_back(87686);

        c.DefineDerivedCounter("L0CacheRequestCount", "MemoryCache", "The number of read requests made to the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96", "74983cae-ee57-2e1b-d990-5128fef84e1f");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80276);
        internal_counters.push_back(80354);
        internal_counters.push_back(80432);
        internal_counters.push_back(80510);
        internal_counters.push_back(80588);
        internal_counters.push_back(80666);
        internal_counters.push_back(80744);
        internal_counters.push_back(80822);
        internal_counters.push_back(80900);
        internal_counters.push_back(80978);
        internal_counters.push_back(81056);
        internal_counters.push_back(81134);
        internal_counters.push_back(81212);
        internal_counters.push_back(81290);
        internal_counters.push_back(81368);
        internal_counters.push_back(81446);
        internal_counters.push_back(81524);
        internal_counters.push_back(81602);
        internal_counters.push_back(81680);
        internal_counters.push_back(81758);
        internal_counters.push_back(81836);
        internal_counters.push_back(81914);
        internal_counters.push_back(81992);
        internal_counters.push_back(82070);
        internal_counters.push_back(82148);
        internal_counters.push_back(82226);
        internal_counters.push_back(82304);
        internal_counters.push_back(82382);
        internal_counters.push_back(82460);
        internal_counters.push_back(82538);
        internal_counters.push_back(82616);
        internal_counters.push_back(82694);
        internal_counters.push_back(82772);
        internal_counters.push_back(82850);
        internal_counters.push_back(82928);
        internal_counters.push_back(83006);
        internal_counters.push_back(83084);
        internal_counters.push_back(83162);
        internal_counters.push_back(83240);
        internal_counters.push_back(83318);
        internal_counters.push_back(83396);
        internal_counters.push_back(83474);
        internal_counters.push_back(83552);
        internal_counters.push_back(83630);
        internal_counters.push_back(83708);
        internal_counters.push_back(83786);
        internal_counters.push_back(83864);
        internal_counters.push_back(83942);
        internal_counters.push_back(84020);
        internal_counters.push_back(84098);
        internal_counters.push_back(84176);
        internal_counters.push_back(84254);
        internal_counters.push_back(84332);
        internal_counters.push_back(84410);
        internal_counters.push_back(84488);
        internal_counters.push_back(84566);
        internal_counters.push_back(84644);
        internal_counters.push_back(84722);
        internal_counters.push_back(84800);
        internal_counters.push_back(84878);
        internal_counters.push_back(84956);
        internal_counters.push_back(85034);
        internal_counters.push_back(85112);
        internal_counters.push_back(85190);
        internal_counters.push_back(85268);
        internal_counters.push_back(85346);
        internal_counters.push_back(85424);
        internal_counters.push_back(85502);
        internal_counters.push_back(85580);
        internal_counters.push_back(85658);
        internal_counters.push_back(85736);
        internal_counters.push_back(85814);
        internal_counters.push_back(85892);
        internal_counters.push_back(85970);
        internal_counters.push_back(86048);
        internal_counters.push_back(86126);
        internal_counters.push_back(86204);
        internal_counters.push_back(86282);
        internal_counters.push_back(86360);
        internal_counters.push_back(86438);
        internal_counters.push_back(86516);
        internal_counters.push_back(86594);
        internal_counters.push_back(86672);
        internal_counters.push_back(86750);
        internal_counters.push_back(86828);
        internal_counters.push_back(86906);
        internal_counters.push_back(86984);
        internal_counters.push_back(87062);
        internal_counters.push_back(87140);
        internal_counters.push_back(87218);
        internal_counters.push_back(87296);
        internal_counters.push_back(87374);
        internal_counters.push_back(87452);
        internal_counters.push_back(87530);
        internal_counters.push_back(87608);
        internal_counters.push_back(87686);
        internal_counters.push_back(80284);
        internal_counters.push_back(80362);
        internal_counters.push_back(80440);
        internal_counters.push_back(80518);
        internal_counters.push_back(80596);
        internal_counters.push_back(80674);
        internal_counters.push_back(80752);
        internal_counters.push_back(80830);
        internal_counters.push_back(80908);
        internal_counters.push_back(80986);
        internal_counters.push_back(81064);
        internal_counters.push_back(81142);
        internal_counters.push_back(81220);
        internal_counters.push_back(81298);
        internal_counters.push_back(81376);
        internal_counters.push_back(81454);
        internal_counters.push_back(81532);
        internal_counters.push_back(81610);
        internal_counters.push_back(81688);
        internal_counters.push_back(81766);
        internal_counters.push_back(81844);
        internal_counters.push_back(81922);
        internal_counters.push_back(82000);
        internal_counters.push_back(82078);
        internal_counters.push_back(82156);
        internal_counters.push_back(82234);
        internal_counters.push_back(82312);
        internal_counters.push_back(82390);
        internal_counters.push_back(82468);
        internal_counters.push_back(82546);
        internal_counters.push_back(82624);
        internal_counters.push_back(82702);
        internal_counters.push_back(82780);
        internal_counters.push_back(82858);
        internal_counters.push_back(82936);
        internal_counters.push_back(83014);
        internal_counters.push_back(83092);
        internal_counters.push_back(83170);
        internal_counters.push_back(83248);
        internal_counters.push_back(83326);
        internal_counters.push_back(83404);
        internal_counters.push_back(83482);
        internal_counters.push_back(83560);
        internal_counters.push_back(83638);
        internal_counters.push_back(83716);
        internal_counters.push_back(83794);
        internal_counters.push_back(83872);
        internal_counters.push_back(83950);
        internal_counters.push_back(84028);
        internal_counters.push_back(84106);
        internal_counters.push_back(84184);
        internal_counters.push_back(84262);
        internal_counters.push_back(84340);
        internal_counters.push_back(84418);
        internal_counters.push_back(84496);
        internal_counters.push_back(84574);
        internal_counters.push_back(84652);
        internal_counters.push_back(84730);
        internal_counters.push_back(84808);
        internal_counters.push_back(84886);
        internal_counters.push_back(84964);
        internal_counters.push_back(85042);
        internal_counters.push_back(85120);
        internal_counters.push_back(85198);
        internal_counters.push_back(85276);
        internal_counters.push_back(85354);
        internal_counters.push_back(85432);
        internal_counters.push_back(85510);
        internal_counters.push_back(85588);
        internal_counters.push_back(85666);
        internal_counters.push_back(85744);
        internal_counters.push_back(85822);
        internal_counters.push_back(85900);
        internal_counters.push_back(85978);
        internal_counters.push_back(86056);
        internal_counters.push_back(86134);
        internal_counters.push_back(86212);
        internal_counters.push_back(86290);
        internal_counters.push_back(86368);
        internal_counters.push_back(86446);
        internal_counters.push_back(86524);
        internal_counters.push_back(86602);
        internal_counters.push_back(86680);
        internal_counters.push_back(86758);
        internal_counters.push_back(86836);
        internal_counters.push_back(86914);
        internal_counters.push_back(86992);
        internal_counters.push_back(87070);
        internal_counters.push_back(87148);
        internal_counters.push_back(87226);
        internal_counters.push_back(87304);
        internal_counters.push_back(87382);
        internal_counters.push_back(87460);
        internal_counters.push_back(87538);
        internal_counters.push_back(87616);
        internal_counters.push_back(87694);

        c.DefineDerivedCounter("L0CacheHitCount", "MemoryCache", "The number of read requests which result in a cache hit from the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum96,-", "c0de7338-069b-c5ba-ead3-c65e030cd2ac");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80284);
        internal_counters.push_back(80362);
        internal_counters.push_back(80440);
        internal_counters.push_back(80518);
        internal_counters.push_back(80596);
        internal_counters.push_back(80674);
        internal_counters.push_back(80752);
        internal_counters.push_back(80830);
        internal_counters.push_back(80908);
        internal_counters.push_back(80986);
        internal_counters.push_back(81064);
        internal_counters.push_back(81142);
        internal_counters.push_back(81220);
        internal_counters.push_back(81298);
        internal_counters.push_back(81376);
        internal_counters.push_back(81454);
        internal_counters.push_back(81532);
        internal_counters.push_back(81610);
        internal_counters.push_back(81688);
        internal_counters.push_back(81766);
        internal_counters.push_back(81844);
        internal_counters.push_back(81922);
        internal_counters.push_back(82000);
        internal_counters.push_back(82078);
        internal_counters.push_back(82156);
        internal_counters.push_back(82234);
        internal_counters.push_back(82312);
        internal_counters.push_back(82390);
        internal_counters.push_back(82468);
        internal_counters.push_back(82546);
        internal_counters.push_back(82624);
        internal_counters.push_back(82702);
        internal_counters.push_back(82780);
        internal_counters.push_back(82858);
        internal_counters.push_back(82936);
        internal_counters.push_back(83014);
        internal_counters.push_back(83092);
        internal_counters.push_back(83170);
        internal_counters.push_back(83248);
        internal_counters.push_back(83326);
        internal_counters.push_back(83404);
        internal_counters.push_back(83482);
        internal_counters.push_back(83560);
        internal_counters.push_back(83638);
        internal_counters.push_back(83716);
        internal_counters.push_back(83794);
        internal_counters.push_back(83872);
        internal_counters.push_back(83950);
        internal_counters.push_back(84028);
        internal_counters.push_back(84106);
        internal_counters.push_back(84184);
        internal_counters.push_back(84262);
        internal_counters.push_back(84340);
        internal_counters.push_back(84418);
        internal_counters.push_back(84496);
        internal_counters.push_back(84574);
        internal_counters.push_back(84652);
        internal_counters.push_back(84730);
        internal_counters.push_back(84808);
        internal_counters.push_back(84886);
        internal_counters.push_back(84964);
        internal_counters.push_back(85042);
        internal_counters.push_back(85120);
        internal_counters.push_back(85198);
        internal_counters.push_back(85276);
        internal_counters.push_back(85354);
        internal_counters.push_back(85432);
        internal_counters.push_back(85510);
        internal_counters.push_back(85588);
        internal_counters.push_back(85666);
        internal_counters.push_back(85744);
        internal_counters.push_back(85822);
        internal_counters.push_back(85900);
        internal_counters.push_back(85978);
        internal_counters.push_back(86056);
        internal_counters.push_back(86134);
        internal_counters.push_back(86212);
        internal_counters.push_back(86290);
        internal_counters.push_back(86368);
        internal_counters.push_back(86446);
        internal_counters.push_back(86524);
        internal_counters.push_back(86602);
        internal_counters.push_back(86680);
        internal_counters.push_back(86758);
        internal_counters.push_back(86836);
        internal_counters.push_back(86914);
        internal_counters.push_back(86992);
        internal_counters.push_back(87070);
        internal_counters.push_back(87148);
        internal_counters.push_back(87226);
        internal_counters.push_back(87304);
        internal_counters.push_back(87382);
        internal_counters.push_back(87460);
        internal_counters.push_back(87538);
        internal_counters.push_back(87616);
        internal_counters.push_back(87694);

        c.DefineDerivedCounter("L0CacheMissCount", "MemoryCache", "The number of read requests which result in a cache miss from the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96", "a2f08766-ea1b-6eae-6eaf-faa04125d3e6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(97987);
        internal_counters.push_back(98071);
        internal_counters.push_back(98155);
        internal_counters.push_back(98239);
        internal_counters.push_back(98323);
        internal_counters.push_back(98407);
        internal_counters.push_back(98491);
        internal_counters.push_back(98575);
        internal_counters.push_back(98659);
        internal_counters.push_back(98743);
        internal_counters.push_back(98827);
        internal_counters.push_back(98911);
        internal_counters.push_back(98995);
        internal_counters.push_back(99079);
        internal_counters.push_back(99163);
        internal_counters.push_back(99247);
        internal_counters.push_back(99331);
        internal_counters.push_back(99415);
        internal_counters.push_back(99499);
        internal_counters.push_back(99583);
        internal_counters.push_back(99667);
        internal_counters.push_back(99751);
        internal_counters.push_back(99835);
        internal_counters.push_back(99919);
        internal_counters.push_back(100003);
        internal_counters.push_back(100087);
        internal_counters.push_back(100171);
        internal_counters.push_back(100255);
        internal_counters.push_back(100339);
        internal_counters.push_back(100423);
        internal_counters.push_back(100507);
        internal_counters.push_back(100591);
        internal_counters.push_back(100675);
        internal_counters.push_back(100759);
        internal_counters.push_back(100843);
        internal_counters.push_back(100927);
        internal_counters.push_back(101011);
        internal_counters.push_back(101095);
        internal_counters.push_back(101179);
        internal_counters.push_back(101263);
        internal_counters.push_back(101347);
        internal_counters.push_back(101431);
        internal_counters.push_back(101515);
        internal_counters.push_back(101599);
        internal_counters.push_back(101683);
        internal_counters.push_back(101767);
        internal_counters.push_back(101851);
        internal_counters.push_back(101935);
        internal_counters.push_back(97991);
        internal_counters.push_back(98075);
        internal_counters.push_back(98159);
        internal_counters.push_back(98243);
        internal_counters.push_back(98327);
        internal_counters.push_back(98411);
        internal_counters.push_back(98495);
        internal_counters.push_back(98579);
        internal_counters.push_back(98663);
        internal_counters.push_back(98747);
        internal_counters.push_back(98831);
        internal_counters.push_back(98915);
        internal_counters.push_back(98999);
        internal_counters.push_back(99083);
        internal_counters.push_back(99167);
        internal_counters.push_back(99251);
        internal_counters.push_back(99335);
        internal_counters.push_back(99419);
        internal_counters.push_back(99503);
        internal_counters.push_back(99587);
        internal_counters.push_back(99671);
        internal_counters.push_back(99755);
        internal_counters.push_back(99839);
        internal_counters.push_back(99923);
        internal_counters.push_back(100007);
        internal_counters.push_back(100091);
        internal_counters.push_back(100175);
        internal_counters.push_back(100259);
        internal_counters.push_back(100343);
        internal_counters.push_back(100427);
        internal_counters.push_back(100511);
        internal_counters.push_back(100595);
        internal_counters.push_back(100679);
        internal_counters.push_back(100763);
        internal_counters.push_back(100847);
        internal_counters.push_back(100931);
        internal_counters.push_back(101015);
        internal_counters.push_back(101099);
        internal_counters.push_back(101183);
        internal_counters.push_back(101267);
        internal_counters.push_back(101351);
        internal_counters.push_back(101435);
        internal_counters.push_back(101519);
        internal_counters.push_back(101603);
        internal_counters.push_back(101687);
        internal_counters.push_back(101771);
        internal_counters.push_back(101855);
        internal_counters.push_back(101939);

        c.DefineDerivedCounter("L1CacheHit", "MemoryCache", "The percentage of read or write requests that hit the data in the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(1),48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum48,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum48,/,-,(100),*", "5a34915a-24b8-8baf-2bf8-5878e7894ae3");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(97987);
        internal_counters.push_back(98071);
        internal_counters.push_back(98155);
        internal_counters.push_back(98239);
        internal_counters.push_back(98323);
        internal_counters.push_back(98407);
        internal_counters.push_back(98491);
        internal_counters.push_back(98575);
        internal_counters.push_back(98659);
        internal_counters.push_back(98743);
        internal_counters.push_back(98827);
        internal_counters.push_back(98911);
        internal_counters.push_back(98995);
        internal_counters.push_back(99079);
        internal_counters.push_back(99163);
        internal_counters.push_back(99247);
        internal_counters.push_back(99331);
        internal_counters.push_back(99415);
        internal_counters.push_back(99499);
        internal_counters.push_back(99583);
        internal_counters.push_back(99667);
        internal_counters.push_back(99751);
        internal_counters.push_back(99835);
        internal_counters.push_back(99919);
        internal_counters.push_back(100003);
        internal_counters.push_back(100087);
        internal_counters.push_back(100171);
        internal_counters.push_back(100255);
        internal_counters.push_back(100339);
        internal_counters.push_back(100423);
        internal_counters.push_back(100507);
        internal_counters.push_back(100591);
        internal_counters.push_back(100675);
        internal_counters.push_back(100759);
        internal_counters.push_back(100843);
        internal_counters.push_back(100927);
        internal_counters.push_back(101011);
        internal_counters.push_back(101095);
        internal_counters.push_back(101179);
        internal_counters.push_back(101263);
        internal_counters.push_back(101347);
        internal_counters.push_back(101431);
        internal_counters.push_back(101515);
        internal_counters.push_back(101599);
        internal_counters.push_back(101683);
        internal_counters.push_back(101767);
        internal_counters.push_back(101851);
        internal_counters.push_back(101935);

        c.DefineDerivedCounter("L1CacheRequestCount", "MemoryCache", "The number of read or write requests made to the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum48", "29c76c67-4611-205d-0b88-d08668df03c5");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(97987);
        internal_counters.push_back(98071);
        internal_counters.push_back(98155);
        internal_counters.push_back(98239);
        internal_counters.push_back(98323);
        internal_counters.push_back(98407);
        internal_counters.push_back(98491);
        internal_counters.push_back(98575);
        internal_counters.push_back(98659);
        internal_counters.push_back(98743);
        internal_counters.push_back(98827);
        internal_counters.push_back(98911);
        internal_counters.push_back(98995);
        internal_counters.push_back(99079);
        internal_counters.push_back(99163);
        internal_counters.push_back(99247);
        internal_counters.push_back(99331);
        internal_counters.push_back(99415);
        internal_counters.push_back(99499);
        internal_counters.push_back(99583);
        internal_counters.push_back(99667);
        internal_counters.push_back(99751);
        internal_counters.push_back(99835);
        internal_counters.push_back(99919);
        internal_counters.push_back(100003);
        internal_counters.push_back(100087);
        internal_counters.push_back(100171);
        internal_counters.push_back(100255);
        internal_counters.push_back(100339);
        internal_counters.push_back(100423);
        internal_counters.push_back(100507);
        internal_counters.push_back(100591);
        internal_counters.push_back(100675);
        internal_counters.push_back(100759);
        internal_counters.push_back(100843);
        internal_counters.push_back(100927);
        internal_counters.push_back(101011);
        internal_counters.push_back(101095);
        internal_counters.push_back(101179);
        internal_counters.push_back(101263);
        internal_counters.push_back(101347);
        internal_counters.push_back(101431);
        internal_counters.push_back(101515);
        internal_counters.push_back(101599);
        internal_counters.push_back(101683);
        internal_counters.push_back(101767);
        internal_counters.push_back(101851);
        internal_counters.push_back(101935);
        internal_counters.push_back(97991);
        internal_counters.push_back(98075);
        internal_counters.push_back(98159);
        internal_counters.push_back(98243);
        internal_counters.push_back(98327);
        internal_counters.push_back(98411);
        internal_counters.push_back(98495);
        internal_counters.push_back(98579);
        internal_counters.push_back(98663);
        internal_counters.push_back(98747);
        internal_counters.push_back(98831);
        internal_counters.push_back(98915);
        internal_counters.push_back(98999);
        internal_counters.push_back(99083);
        internal_counters.push_back(99167);
        internal_counters.push_back(99251);
        internal_counters.push_back(99335);
        internal_counters.push_back(99419);
        internal_counters.push_back(99503);
        internal_counters.push_back(99587);
        internal_counters.push_back(99671);
        internal_counters.push_back(99755);
        internal_counters.push_back(99839);
        internal_counters.push_back(99923);
        internal_counters.push_back(100007);
        internal_counters.push_back(100091);
        internal_counters.push_back(100175);
        internal_counters.push_back(100259);
        internal_counters.push_back(100343);
        internal_counters.push_back(100427);
        internal_counters.push_back(100511);
        internal_counters.push_back(100595);
        internal_counters.push_back(100679);
        internal_counters.push_back(100763);
        internal_counters.push_back(100847);
        internal_counters.push_back(100931);
        internal_counters.push_back(101015);
        internal_counters.push_back(101099);
        internal_counters.push_back(101183);
        internal_counters.push_back(101267);
        internal_counters.push_back(101351);
        internal_counters.push_back(101435);
        internal_counters.push_back(101519);
        internal_counters.push_back(101603);
        internal_counters.push_back(101687);
        internal_counters.push_back(101771);
        internal_counters.push_back(101855);
        internal_counters.push_back(101939);

        c.DefineDerivedCounter("L1CacheHitCount", "MemoryCache", "The number of read or write requests which result in a cache hit from the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum48,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum48,-", "1ae150c3-f2d0-82c6-a51b-a77fd8d5fc33");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(97991);
        internal_counters.push_back(98075);
        internal_counters.push_back(98159);
        internal_counters.push_back(98243);
        internal_counters.push_back(98327);
        internal_counters.push_back(98411);
        internal_counters.push_back(98495);
        internal_counters.push_back(98579);
        internal_counters.push_back(98663);
        internal_counters.push_back(98747);
        internal_counters.push_back(98831);
        internal_counters.push_back(98915);
        internal_counters.push_back(98999);
        internal_counters.push_back(99083);
        internal_counters.push_back(99167);
        internal_counters.push_back(99251);
        internal_counters.push_back(99335);
        internal_counters.push_back(99419);
        internal_counters.push_back(99503);
        internal_counters.push_back(99587);
        internal_counters.push_back(99671);
        internal_counters.push_back(99755);
        internal_counters.push_back(99839);
        internal_counters.push_back(99923);
        internal_counters.push_back(100007);
        internal_counters.push_back(100091);
        internal_counters.push_back(100175);
        internal_counters.push_back(100259);
        internal_counters.push_back(100343);
        internal_counters.push_back(100427);
        internal_counters.push_back(100511);
        internal_counters.push_back(100595);
        internal_counters.push_back(100679);
        internal_counters.push_back(100763);
        internal_counters.push_back(100847);
        internal_counters.push_back(100931);
        internal_counters.push_back(101015);
        internal_counters.push_back(101099);
        internal_counters.push_back(101183);
        internal_counters.push_back(101267);
        internal_counters.push_back(101351);
        internal_counters.push_back(101435);
        internal_counters.push_back(101519);
        internal_counters.push_back(101603);
        internal_counters.push_back(101687);
        internal_counters.push_back(101771);
        internal_counters.push_back(101855);
        internal_counters.push_back(101939);

        c.DefineDerivedCounter("L1CacheMissCount", "MemoryCache", "The number of read or write requests which result in a cache miss from the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum48", "71bfec6d-257b-849d-e212-cdf5c1b1de65");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102440);
        internal_counters.push_back(102699);
        internal_counters.push_back(102958);
        internal_counters.push_back(103217);
        internal_counters.push_back(103476);
        internal_counters.push_back(103735);
        internal_counters.push_back(103994);
        internal_counters.push_back(104253);
        internal_counters.push_back(104512);
        internal_counters.push_back(104771);
        internal_counters.push_back(105030);
        internal_counters.push_back(105289);
        internal_counters.push_back(105548);
        internal_counters.push_back(105807);
        internal_counters.push_back(106066);
        internal_counters.push_back(106325);
        internal_counters.push_back(106584);
        internal_counters.push_back(106843);
        internal_counters.push_back(107102);
        internal_counters.push_back(107361);
        internal_counters.push_back(107620);
        internal_counters.push_back(107879);
        internal_counters.push_back(108138);
        internal_counters.push_back(108397);
        internal_counters.push_back(102480);
        internal_counters.push_back(102739);
        internal_counters.push_back(102998);
        internal_counters.push_back(103257);
        internal_counters.push_back(103516);
        internal_counters.push_back(103775);
        internal_counters.push_back(104034);
        internal_counters.push_back(104293);
        internal_counters.push_back(104552);
        internal_counters.push_back(104811);
        internal_counters.push_back(105070);
        internal_counters.push_back(105329);
        internal_counters.push_back(105588);
        internal_counters.push_back(105847);
        internal_counters.push_back(106106);
        internal_counters.push_back(106365);
        internal_counters.push_back(106624);
        internal_counters.push_back(106883);
        internal_counters.push_back(107142);
        internal_counters.push_back(107401);
        internal_counters.push_back(107660);
        internal_counters.push_back(107919);
        internal_counters.push_back(108178);
        internal_counters.push_back(108437);

        c.DefineDerivedCounter("L2CacheHit", "MemoryCache", "The percentage of read or write requests that hit the data in the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),(1),24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,ifnotzero", "47694e4d-6ce6-f387-080d-b1f3d00b73ac");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102480);
        internal_counters.push_back(102739);
        internal_counters.push_back(102998);
        internal_counters.push_back(103257);
        internal_counters.push_back(103516);
        internal_counters.push_back(103775);
        internal_counters.push_back(104034);
        internal_counters.push_back(104293);
        internal_counters.push_back(104552);
        internal_counters.push_back(104811);
        internal_counters.push_back(105070);
        internal_counters.push_back(105329);
        internal_counters.push_back(105588);
        internal_counters.push_back(105847);
        internal_counters.push_back(106106);
        internal_counters.push_back(106365);
        internal_counters.push_back(106624);
        internal_counters.push_back(106883);
        internal_counters.push_back(107142);
        internal_counters.push_back(107401);
        internal_counters.push_back(107660);
        internal_counters.push_back(107919);
        internal_counters.push_back(108178);
        internal_counters.push_back(108437);
        internal_counters.push_back(102440);
        internal_counters.push_back(102699);
        internal_counters.push_back(102958);
        internal_counters.push_back(103217);
        internal_counters.push_back(103476);
        internal_counters.push_back(103735);
        internal_counters.push_back(103994);
        internal_counters.push_back(104253);
        internal_counters.push_back(104512);
        internal_counters.push_back(104771);
        internal_counters.push_back(105030);
        internal_counters.push_back(105289);
        internal_counters.push_back(105548);
        internal_counters.push_back(105807);
        internal_counters.push_back(106066);
        internal_counters.push_back(106325);
        internal_counters.push_back(106584);
        internal_counters.push_back(106843);
        internal_counters.push_back(107102);
        internal_counters.push_back(107361);
        internal_counters.push_back(107620);
        internal_counters.push_back(107879);
        internal_counters.push_back(108138);
        internal_counters.push_back(108397);

        c.DefineDerivedCounter("L2CacheMiss", "MemoryCache", "The percentage of read or write requests that miss the data in the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size. Value range: 0% (optimal) to 100% (all miss).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,/,(100),*", "8aee5458-a58e-11b6-5131-7f19ed070117");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102440);
        internal_counters.push_back(102699);
        internal_counters.push_back(102958);
        internal_counters.push_back(103217);
        internal_counters.push_back(103476);
        internal_counters.push_back(103735);
        internal_counters.push_back(103994);
        internal_counters.push_back(104253);
        internal_counters.push_back(104512);
        internal_counters.push_back(104771);
        internal_counters.push_back(105030);
        internal_counters.push_back(105289);
        internal_counters.push_back(105548);
        internal_counters.push_back(105807);
        internal_counters.push_back(106066);
        internal_counters.push_back(106325);
        internal_counters.push_back(106584);
        internal_counters.push_back(106843);
        internal_counters.push_back(107102);
        internal_counters.push_back(107361);
        internal_counters.push_back(107620);
        internal_counters.push_back(107879);
        internal_counters.push_back(108138);
        internal_counters.push_back(108397);

        c.DefineDerivedCounter("L2CacheRequestCount", "MemoryCache", "The number of read or write requests made to the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "21e9219c-e725-0d96-06b1-b21698b736b2");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102440);
        internal_counters.push_back(102699);
        internal_counters.push_back(102958);
        internal_counters.push_back(103217);
        internal_counters.push_back(103476);
        internal_counters.push_back(103735);
        internal_counters.push_back(103994);
        internal_counters.push_back(104253);
        internal_counters.push_back(104512);
        internal_counters.push_back(104771);
        internal_counters.push_back(105030);
        internal_counters.push_back(105289);
        internal_counters.push_back(105548);
        internal_counters.push_back(105807);
        internal_counters.push_back(106066);
        internal_counters.push_back(106325);
        internal_counters.push_back(106584);
        internal_counters.push_back(106843);
        internal_counters.push_back(107102);
        internal_counters.push_back(107361);
        internal_counters.push_back(107620);
        internal_counters.push_back(107879);
        internal_counters.push_back(108138);
        internal_counters.push_back(108397);
        internal_counters.push_back(102480);
        internal_counters.push_back(102739);
        internal_counters.push_back(102998);
        internal_counters.push_back(103257);
        internal_counters.push_back(103516);
        internal_counters.push_back(103775);
        internal_counters.push_back(104034);
        internal_counters.push_back(104293);
        internal_counters.push_back(104552);
        internal_counters.push_back(104811);
        internal_counters.push_back(105070);
        internal_counters.push_back(105329);
        internal_counters.push_back(105588);
        internal_counters.push_back(105847);
        internal_counters.push_back(106106);
        internal_counters.push_back(106365);
        internal_counters.push_back(106624);
        internal_counters.push_back(106883);
        internal_counters.push_back(107142);
        internal_counters.push_back(107401);
        internal_counters.push_back(107660);
        internal_counters.push_back(107919);
        internal_counters.push_back(108178);
        internal_counters.push_back(108437);

        c.DefineDerivedCounter("L2CacheHitCount", "MemoryCache", "The number of read or write requests which result in a cache hit from the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-", "29ddcb92-d3dd-951b-1b23-efe52e4eeee4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102480);
        internal_counters.push_back(102739);
        internal_counters.push_back(102998);
        internal_counters.push_back(103257);
        internal_counters.push_back(103516);
        internal_counters.push_back(103775);
        internal_counters.push_back(104034);
        internal_counters.push_back(104293);
        internal_counters.push_back(104552);
        internal_counters.push_back(104811);
        internal_counters.push_back(105070);
        internal_counters.push_back(105329);
        internal_counters.push_back(105588);
        internal_counters.push_back(105847);
        internal_counters.push_back(106106);
        internal_counters.push_back(106365);
        internal_counters.push_back(106624);
        internal_counters.push_back(106883);
        internal_counters.push_back(107142);
        internal_counters.push_back(107401);
        internal_counters.push_back(107660);
        internal_counters.push_back(107919);
        internal_counters.push_back(108178);
        internal_counters.push_back(108437);

        c.DefineDerivedCounter("L2CacheMissCount", "MemoryCache", "The number of read or write requests which result in a cache miss from the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "376eec7b-ab25-9012-06b5-63291a17fd47");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102536);
        internal_counters.push_back(102795);
        internal_counters.push_back(103054);
        internal_counters.push_back(103313);
        internal_counters.push_back(103572);
        internal_counters.push_back(103831);
        internal_counters.push_back(104090);
        internal_counters.push_back(104349);
        internal_counters.push_back(104608);
        internal_counters.push_back(104867);
        internal_counters.push_back(105126);
        internal_counters.push_back(105385);
        internal_counters.push_back(105644);
        internal_counters.push_back(105903);
        internal_counters.push_back(106162);
        internal_counters.push_back(106421);
        internal_counters.push_back(106680);
        internal_counters.push_back(106939);
        internal_counters.push_back(107198);
        internal_counters.push_back(107457);
        internal_counters.push_back(107716);
        internal_counters.push_back(107975);
        internal_counters.push_back(108234);
        internal_counters.push_back(108493);
        internal_counters.push_back(102537);
        internal_counters.push_back(102796);
        internal_counters.push_back(103055);
        internal_counters.push_back(103314);
        internal_counters.push_back(103573);
        internal_counters.push_back(103832);
        internal_counters.push_back(104091);
        internal_counters.push_back(104350);
        internal_counters.push_back(104609);
        internal_counters.push_back(104868);
        internal_counters.push_back(105127);
        internal_counters.push_back(105386);
        internal_counters.push_back(105645);
        internal_counters.push_back(105904);
        internal_counters.push_back(106163);
        internal_counters.push_back(106422);
        internal_counters.push_back(106681);
        internal_counters.push_back(106940);
        internal_counters.push_back(107199);
        internal_counters.push_back(107458);
        internal_counters.push_back(107717);
        internal_counters.push_back(107976);
        internal_counters.push_back(108235);
        internal_counters.push_back(108494);
        internal_counters.push_back(102538);
        internal_counters.push_back(102797);
        internal_counters.push_back(103056);
        internal_counters.push_back(103315);
        internal_counters.push_back(103574);
        internal_counters.push_back(103833);
        internal_counters.push_back(104092);
        internal_counters.push_back(104351);
        internal_counters.push_back(104610);
        internal_counters.push_back(104869);
        internal_counters.push_back(105128);
        internal_counters.push_back(105387);
        internal_counters.push_back(105646);
        internal_counters.push_back(105905);
        internal_counters.push_back(106164);
        internal_counters.push_back(106423);
        internal_counters.push_back(106682);
        internal_counters.push_back(106941);
        internal_counters.push_back(107200);
        internal_counters.push_back(107459);
        internal_counters.push_back(107718);
        internal_counters.push_back(107977);
        internal_counters.push_back(108236);
        internal_counters.push_back(108495);
        internal_counters.push_back(102539);
        internal_counters.push_back(102798);
        internal_counters.push_back(103057);
        internal_counters.push_back(103316);
        internal_counters.push_back(103575);
        internal_counters.push_back(103834);
        internal_counters.push_back(104093);
        internal_counters.push_back(104352);
        internal_counters.push_back(104611);
        internal_counters.push_back(104870);
        internal_counters.push_back(105129);
        internal_counters.push_back(105388);
        internal_counters.push_back(105647);
        internal_counters.push_back(105906);
        internal_counters.push_back(106165);
        internal_counters.push_back(106424);
        internal_counters.push_back(106683);
        internal_counters.push_back(106942);
        internal_counters.push_back(107201);
        internal_counters.push_back(107460);
        internal_counters.push_back(107719);
        internal_counters.push_back(107978);
        internal_counters.push_back(108237);
        internal_counters.push_back(108496);

        c.DefineDerivedCounter("FetchSize", "GlobalMemory", "The total bytes fetched from the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,(32),*,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,(64),*,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,sum24,(96),*,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum24,(128),*,sum4", "664bb3ef-6eca-86b1-1e2d-30cb897b5fa9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102520);
        internal_counters.push_back(102779);
        internal_counters.push_back(103038);
        internal_counters.push_back(103297);
        internal_counters.push_back(103556);
        internal_counters.push_back(103815);
        internal_counters.push_back(104074);
        internal_counters.push_back(104333);
        internal_counters.push_back(104592);
        internal_counters.push_back(104851);
        internal_counters.push_back(105110);
        internal_counters.push_back(105369);
        internal_counters.push_back(105628);
        internal_counters.push_back(105887);
        internal_counters.push_back(106146);
        internal_counters.push_back(106405);
        internal_counters.push_back(106664);
        internal_counters.push_back(106923);
        internal_counters.push_back(107182);
        internal_counters.push_back(107441);
        internal_counters.push_back(107700);
        internal_counters.push_back(107959);
        internal_counters.push_back(108218);
        internal_counters.push_back(108477);
        internal_counters.push_back(102522);
        internal_counters.push_back(102781);
        internal_counters.push_back(103040);
        internal_counters.push_back(103299);
        internal_counters.push_back(103558);
        internal_counters.push_back(103817);
        internal_counters.push_back(104076);
        internal_counters.push_back(104335);
        internal_counters.push_back(104594);
        internal_counters.push_back(104853);
        internal_counters.push_back(105112);
        internal_counters.push_back(105371);
        internal_counters.push_back(105630);
        internal_counters.push_back(105889);
        internal_counters.push_back(106148);
        internal_counters.push_back(106407);
        internal_counters.push_back(106666);
        internal_counters.push_back(106925);
        internal_counters.push_back(107184);
        internal_counters.push_back(107443);
        internal_counters.push_back(107702);
        internal_counters.push_back(107961);
        internal_counters.push_back(108220);
        internal_counters.push_back(108479);

        c.DefineDerivedCounter("WriteSize", "GlobalMemory", "The total bytes written to the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(32),*,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,(64),*,+", "f96f2c16-b1b4-4ec4-229c-fc82e6f80a82");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38714);
        internal_counters.push_back(38950);
        internal_counters.push_back(39186);
        internal_counters.push_back(39422);
        internal_counters.push_back(39658);
        internal_counters.push_back(39894);
        internal_counters.push_back(40130);
        internal_counters.push_back(40366);
        internal_counters.push_back(40602);
        internal_counters.push_back(40838);
        internal_counters.push_back(41074);
        internal_counters.push_back(41310);
        internal_counters.push_back(41546);
        internal_counters.push_back(41782);
        internal_counters.push_back(42018);
        internal_counters.push_back(42254);
        internal_counters.push_back(42490);
        internal_counters.push_back(42726);
        internal_counters.push_back(42962);
        internal_counters.push_back(43198);
        internal_counters.push_back(43434);
        internal_counters.push_back(43670);
        internal_counters.push_back(43906);
        internal_counters.push_back(44142);
        internal_counters.push_back(44378);
        internal_counters.push_back(44614);
        internal_counters.push_back(44850);
        internal_counters.push_back(45086);
        internal_counters.push_back(45322);
        internal_counters.push_back(45558);
        internal_counters.push_back(45794);
        internal_counters.push_back(46030);
        internal_counters.push_back(46266);
        internal_counters.push_back(46502);
        internal_counters.push_back(46738);
        internal_counters.push_back(46974);
        internal_counters.push_back(47210);
        internal_counters.push_back(47446);
        internal_counters.push_back(47682);
        internal_counters.push_back(47918);
        internal_counters.push_back(48154);
        internal_counters.push_back(48390);
        internal_counters.push_back(48626);
        internal_counters.push_back(48862);
        internal_counters.push_back(49098);
        internal_counters.push_back(49334);
        internal_counters.push_back(49570);
        internal_counters.push_back(49806);
        internal_counters.push_back(50042);
        internal_counters.push_back(50278);
        internal_counters.push_back(50514);
        internal_counters.push_back(50750);
        internal_counters.push_back(50986);
        internal_counters.push_back(51222);
        internal_counters.push_back(51458);
        internal_counters.push_back(51694);
        internal_counters.push_back(51930);
        internal_counters.push_back(52166);
        internal_counters.push_back(52402);
        internal_counters.push_back(52638);
        internal_counters.push_back(52874);
        internal_counters.push_back(53110);
        internal_counters.push_back(53346);
        internal_counters.push_back(53582);
        internal_counters.push_back(53818);
        internal_counters.push_back(54054);
        internal_counters.push_back(54290);
        internal_counters.push_back(54526);
        internal_counters.push_back(54762);
        internal_counters.push_back(54998);
        internal_counters.push_back(55234);
        internal_counters.push_back(55470);
        internal_counters.push_back(55706);
        internal_counters.push_back(55942);
        internal_counters.push_back(56178);
        internal_counters.push_back(56414);
        internal_counters.push_back(56650);
        internal_counters.push_back(56886);
        internal_counters.push_back(57122);
        internal_counters.push_back(57358);
        internal_counters.push_back(57594);
        internal_counters.push_back(57830);
        internal_counters.push_back(58066);
        internal_counters.push_back(58302);
        internal_counters.push_back(58538);
        internal_counters.push_back(58774);
        internal_counters.push_back(59010);
        internal_counters.push_back(59246);
        internal_counters.push_back(59482);
        internal_counters.push_back(59718);
        internal_counters.push_back(59954);
        internal_counters.push_back(60190);
        internal_counters.push_back(60426);
        internal_counters.push_back(60662);
        internal_counters.push_back(60898);
        internal_counters.push_back(61134);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("MemUnitBusy", "GlobalMemory", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96,96,/,(100),*", "a1efa380-4a72-e066-e06a-2ab71a488521");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38714);
        internal_counters.push_back(38950);
        internal_counters.push_back(39186);
        internal_counters.push_back(39422);
        internal_counters.push_back(39658);
        internal_counters.push_back(39894);
        internal_counters.push_back(40130);
        internal_counters.push_back(40366);
        internal_counters.push_back(40602);
        internal_counters.push_back(40838);
        internal_counters.push_back(41074);
        internal_counters.push_back(41310);
        internal_counters.push_back(41546);
        internal_counters.push_back(41782);
        internal_counters.push_back(42018);
        internal_counters.push_back(42254);
        internal_counters.push_back(42490);
        internal_counters.push_back(42726);
        internal_counters.push_back(42962);
        internal_counters.push_back(43198);
        internal_counters.push_back(43434);
        internal_counters.push_back(43670);
        internal_counters.push_back(43906);
        internal_counters.push_back(44142);
        internal_counters.push_back(44378);
        internal_counters.push_back(44614);
        internal_counters.push_back(44850);
        internal_counters.push_back(45086);
        internal_counters.push_back(45322);
        internal_counters.push_back(45558);
        internal_counters.push_back(45794);
        internal_counters.push_back(46030);
        internal_counters.push_back(46266);
        internal_counters.push_back(46502);
        internal_counters.push_back(46738);
        internal_counters.push_back(46974);
        internal_counters.push_back(47210);
        internal_counters.push_back(47446);
        internal_counters.push_back(47682);
        internal_counters.push_back(47918);
        internal_counters.push_back(48154);
        internal_counters.push_back(48390);
        internal_counters.push_back(48626);
        internal_counters.push_back(48862);
        internal_counters.push_back(49098);
        internal_counters.push_back(49334);
        internal_counters.push_back(49570);
        internal_counters.push_back(49806);
        internal_counters.push_back(50042);
        internal_counters.push_back(50278);
        internal_counters.push_back(50514);
        internal_counters.push_back(50750);
        internal_counters.push_back(50986);
        internal_counters.push_back(51222);
        internal_counters.push_back(51458);
        internal_counters.push_back(51694);
        internal_counters.push_back(51930);
        internal_counters.push_back(52166);
        internal_counters.push_back(52402);
        internal_counters.push_back(52638);
        internal_counters.push_back(52874);
        internal_counters.push_back(53110);
        internal_counters.push_back(53346);
        internal_counters.push_back(53582);
        internal_counters.push_back(53818);
        internal_counters.push_back(54054);
        internal_counters.push_back(54290);
        internal_counters.push_back(54526);
        internal_counters.push_back(54762);
        internal_counters.push_back(54998);
        internal_counters.push_back(55234);
        internal_counters.push_back(55470);
        internal_counters.push_back(55706);
        internal_counters.push_back(55942);
        internal_counters.push_back(56178);
        internal_counters.push_back(56414);
        internal_counters.push_back(56650);
        internal_counters.push_back(56886);
        internal_counters.push_back(57122);
        internal_counters.push_back(57358);
        internal_counters.push_back(57594);
        internal_counters.push_back(57830);
        internal_counters.push_back(58066);
        internal_counters.push_back(58302);
        internal_counters.push_back(58538);
        internal_counters.push_back(58774);
        internal_counters.push_back(59010);
        internal_counters.push_back(59246);
        internal_counters.push_back(59482);
        internal_counters.push_back(59718);
        internal_counters.push_back(59954);
        internal_counters.push_back(60190);
        internal_counters.push_back(60426);
        internal_counters.push_back(60662);
        internal_counters.push_back(60898);
        internal_counters.push_back(61134);

        c.DefineDerivedCounter("MemUnitBusyCycles", "GlobalMemory", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalledCycles). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96", "168f077c-4797-b2f5-717f-105c725266c8");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80306);
        internal_counters.push_back(80384);
        internal_counters.push_back(80462);
        internal_counters.push_back(80540);
        internal_counters.push_back(80618);
        internal_counters.push_back(80696);
        internal_counters.push_back(80774);
        internal_counters.push_back(80852);
        internal_counters.push_back(80930);
        internal_counters.push_back(81008);
        internal_counters.push_back(81086);
        internal_counters.push_back(81164);
        internal_counters.push_back(81242);
        internal_counters.push_back(81320);
        internal_counters.push_back(81398);
        internal_counters.push_back(81476);
        internal_counters.push_back(81554);
        internal_counters.push_back(81632);
        internal_counters.push_back(81710);
        internal_counters.push_back(81788);
        internal_counters.push_back(81866);
        internal_counters.push_back(81944);
        internal_counters.push_back(82022);
        internal_counters.push_back(82100);
        internal_counters.push_back(82178);
        internal_counters.push_back(82256);
        internal_counters.push_back(82334);
        internal_counters.push_back(82412);
        internal_counters.push_back(82490);
        internal_counters.push_back(82568);
        internal_counters.push_back(82646);
        internal_counters.push_back(82724);
        internal_counters.push_back(82802);
        internal_counters.push_back(82880);
        internal_counters.push_back(82958);
        internal_counters.push_back(83036);
        internal_counters.push_back(83114);
        internal_counters.push_back(83192);
        internal_counters.push_back(83270);
        internal_counters.push_back(83348);
        internal_counters.push_back(83426);
        internal_counters.push_back(83504);
        internal_counters.push_back(83582);
        internal_counters.push_back(83660);
        internal_counters.push_back(83738);
        internal_counters.push_back(83816);
        internal_counters.push_back(83894);
        internal_counters.push_back(83972);
        internal_counters.push_back(84050);
        internal_counters.push_back(84128);
        internal_counters.push_back(84206);
        internal_counters.push_back(84284);
        internal_counters.push_back(84362);
        internal_counters.push_back(84440);
        internal_counters.push_back(84518);
        internal_counters.push_back(84596);
        internal_counters.push_back(84674);
        internal_counters.push_back(84752);
        internal_counters.push_back(84830);
        internal_counters.push_back(84908);
        internal_counters.push_back(84986);
        internal_counters.push_back(85064);
        internal_counters.push_back(85142);
        internal_counters.push_back(85220);
        internal_counters.push_back(85298);
        internal_counters.push_back(85376);
        internal_counters.push_back(85454);
        internal_counters.push_back(85532);
        internal_counters.push_back(85610);
        internal_counters.push_back(85688);
        internal_counters.push_back(85766);
        internal_counters.push_back(85844);
        internal_counters.push_back(85922);
        internal_counters.push_back(86000);
        internal_counters.push_back(86078);
        internal_counters.push_back(86156);
        internal_counters.push_back(86234);
        internal_counters.push_back(86312);
        internal_counters.push_back(86390);
        internal_counters.push_back(86468);
        internal_counters.push_back(86546);
        internal_counters.push_back(86624);
        internal_counters.push_back(86702);
        internal_counters.push_back(86780);
        internal_counters.push_back(86858);
        internal_counters.push_back(86936);
        internal_counters.push_back(87014);
        internal_counters.push_back(87092);
        internal_counters.push_back(87170);
        internal_counters.push_back(87248);
        internal_counters.push_back(87326);
        internal_counters.push_back(87404);
        internal_counters.push_back(87482);
        internal_counters.push_back(87560);
        internal_counters.push_back(87638);
        internal_counters.push_back(87716);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("MemUnitStalled", "GlobalMemory", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96,96,/,(100),*", "465ba54f-d250-1453-790a-731b10d230b1");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80306);
        internal_counters.push_back(80384);
        internal_counters.push_back(80462);
        internal_counters.push_back(80540);
        internal_counters.push_back(80618);
        internal_counters.push_back(80696);
        internal_counters.push_back(80774);
        internal_counters.push_back(80852);
        internal_counters.push_back(80930);
        internal_counters.push_back(81008);
        internal_counters.push_back(81086);
        internal_counters.push_back(81164);
        internal_counters.push_back(81242);
        internal_counters.push_back(81320);
        internal_counters.push_back(81398);
        internal_counters.push_back(81476);
        internal_counters.push_back(81554);
        internal_counters.push_back(81632);
        internal_counters.push_back(81710);
        internal_counters.push_back(81788);
        internal_counters.push_back(81866);
        internal_counters.push_back(81944);
        internal_counters.push_back(82022);
        internal_counters.push_back(82100);
        internal_counters.push_back(82178);
        internal_counters.push_back(82256);
        internal_counters.push_back(82334);
        internal_counters.push_back(82412);
        internal_counters.push_back(82490);
        internal_counters.push_back(82568);
        internal_counters.push_back(82646);
        internal_counters.push_back(82724);
        internal_counters.push_back(82802);
        internal_counters.push_back(82880);
        internal_counters.push_back(82958);
        internal_counters.push_back(83036);
        internal_counters.push_back(83114);
        internal_counters.push_back(83192);
        internal_counters.push_back(83270);
        internal_counters.push_back(83348);
        internal_counters.push_back(83426);
        internal_counters.push_back(83504);
        internal_counters.push_back(83582);
        internal_counters.push_back(83660);
        internal_counters.push_back(83738);
        internal_counters.push_back(83816);
        internal_counters.push_back(83894);
        internal_counters.push_back(83972);
        internal_counters.push_back(84050);
        internal_counters.push_back(84128);
        internal_counters.push_back(84206);
        internal_counters.push_back(84284);
        internal_counters.push_back(84362);
        internal_counters.push_back(84440);
        internal_counters.push_back(84518);
        internal_counters.push_back(84596);
        internal_counters.push_back(84674);
        internal_counters.push_back(84752);
        internal_counters.push_back(84830);
        internal_counters.push_back(84908);
        internal_counters.push_back(84986);
        internal_counters.push_back(85064);
        internal_counters.push_back(85142);
        internal_counters.push_back(85220);
        internal_counters.push_back(85298);
        internal_counters.push_back(85376);
        internal_counters.push_back(85454);
        internal_counters.push_back(85532);
        internal_counters.push_back(85610);
        internal_counters.push_back(85688);
        internal_counters.push_back(85766);
        internal_counters.push_back(85844);
        internal_counters.push_back(85922);
        internal_counters.push_back(86000);
        internal_counters.push_back(86078);
        internal_counters.push_back(86156);
        internal_counters.push_back(86234);
        internal_counters.push_back(86312);
        internal_counters.push_back(86390);
        internal_counters.push_back(86468);
        internal_counters.push_back(86546);
        internal_counters.push_back(86624);
        internal_counters.push_back(86702);
        internal_counters.push_back(86780);
        internal_counters.push_back(86858);
        internal_counters.push_back(86936);
        internal_counters.push_back(87014);
        internal_counters.push_back(87092);
        internal_counters.push_back(87170);
        internal_counters.push_back(87248);
        internal_counters.push_back(87326);
        internal_counters.push_back(87404);
        internal_counters.push_back(87482);
        internal_counters.push_back(87560);
        internal_counters.push_back(87638);
        internal_counters.push_back(87716);

        c.DefineDerivedCounter("MemUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the memory unit is stalled.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96", "2745659a-0e40-bace-3b9b-86a54f8e4623");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102525);
        internal_counters.push_back(102784);
        internal_counters.push_back(103043);
        internal_counters.push_back(103302);
        internal_counters.push_back(103561);
        internal_counters.push_back(103820);
        internal_counters.push_back(104079);
        internal_counters.push_back(104338);
        internal_counters.push_back(104597);
        internal_counters.push_back(104856);
        internal_counters.push_back(105115);
        internal_counters.push_back(105374);
        internal_counters.push_back(105633);
        internal_counters.push_back(105892);
        internal_counters.push_back(106151);
        internal_counters.push_back(106410);
        internal_counters.push_back(106669);
        internal_counters.push_back(106928);
        internal_counters.push_back(107187);
        internal_counters.push_back(107446);
        internal_counters.push_back(107705);
        internal_counters.push_back(107964);
        internal_counters.push_back(108223);
        internal_counters.push_back(108482);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("WriteUnitStalled", "GlobalMemory", "The percentage of GPUTime the Write unit is stalled. Value range: 0% to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,/,(100),*", "594ad3ce-d1ec-10fc-7d59-25738e397d72");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102525);
        internal_counters.push_back(102784);
        internal_counters.push_back(103043);
        internal_counters.push_back(103302);
        internal_counters.push_back(103561);
        internal_counters.push_back(103820);
        internal_counters.push_back(104079);
        internal_counters.push_back(104338);
        internal_counters.push_back(104597);
        internal_counters.push_back(104856);
        internal_counters.push_back(105115);
        internal_counters.push_back(105374);
        internal_counters.push_back(105633);
        internal_counters.push_back(105892);
        internal_counters.push_back(106151);
        internal_counters.push_back(106410);
        internal_counters.push_back(106669);
        internal_counters.push_back(106928);
        internal_counters.push_back(107187);
        internal_counters.push_back(107446);
        internal_counters.push_back(107705);
        internal_counters.push_back(107964);
        internal_counters.push_back(108223);
        internal_counters.push_back(108482);

        c.DefineDerivedCounter("WriteUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the Write unit is stalled.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24", "ede3305e-abd4-d6bf-6b00-ffc57a29fce3");
    }
}

