//==============================================================================
// Copyright (c) 2010-2023 Advanced Micro Devices, Inc. All rights reserved.
/// @author AMD Developer Tools Team
/// @file
/// @brief Public Counter Definitions for DX11 GFX11.
//==============================================================================

#include "gpu_perf_api_counter_generator/gpa_counter.h"
#include "auto_generated/gpu_perf_api_counter_generator/public_counter_definitions_dx11_gfx11.h"

// *** Note, this is an auto-generated file. Do not edit. Execute PublicCounterCompiler to rebuild.

void AutoDefinePublicDerivedCountersDx11Gfx11(GpaDerivedCounters& c)
{
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(234203);

        c.DefineDerivedCounter("GPUTime", "Timing", "Time this API command took to execute on the GPU in nanoseconds from the time the previous command reached the bottom of the pipeline (BOP) to the time this command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "0,TS_FREQ,/,(1000000000),*", "cbd338f2-de6c-7b14-92ad-ba724ca2e501");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24);
        internal_counters.push_back(0);

        c.DefineDerivedCounter("GPUBusy", "Timing", "The percentage of time the GPU command processor was busy.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,/,(100),*,(100),min", "b1ba5363-1abc-fe66-2fdd-1fe6ee8989a0");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24);

        c.DefineDerivedCounter("GPUBusyCycles", "Timing", "Number of GPU cycles that the GPU command processor was busy.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0", "451cb045-23af-ac44-4603-d5832fa041d9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(110732);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("TessellatorBusy", "Timing", "The percentage of time the tessellation engine is busy.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,/,(100),*", "36af6c72-dcfb-8102-4fd4-ce8ddc573365");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(110732);

        c.DefineDerivedCounter("TessellatorBusyCycles", "Timing", "Number of GPU cycles that the tessellation engine is busy.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0", "60289dcb-7b33-46e7-26d1-8a2121605543");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35935);
        internal_counters.push_back(36219);
        internal_counters.push_back(36503);
        internal_counters.push_back(36787);
        internal_counters.push_back(37071);
        internal_counters.push_back(37355);
        internal_counters.push_back(35960);
        internal_counters.push_back(36244);
        internal_counters.push_back(36528);
        internal_counters.push_back(36812);
        internal_counters.push_back(37096);
        internal_counters.push_back(37380);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("VsGsBusy", "Timing", "The percentage of time the ShaderUnit has VS or GS work to do in a VS-[GS-]PS pipeline.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,max6,(0),6,7,8,9,10,11,sum6,ifnotzero,12,/,(100),*,(100),min", "969c41c7-eb0b-9706-a7a1-98f27c3af56b");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35935);
        internal_counters.push_back(36219);
        internal_counters.push_back(36503);
        internal_counters.push_back(36787);
        internal_counters.push_back(37071);
        internal_counters.push_back(37355);
        internal_counters.push_back(35960);
        internal_counters.push_back(36244);
        internal_counters.push_back(36528);
        internal_counters.push_back(36812);
        internal_counters.push_back(37096);
        internal_counters.push_back(37380);

        c.DefineDerivedCounter("VsGsBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has VS or GS work to do in a VS-[GS-]PS pipeline.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,max6,(0),6,7,8,9,10,11,sum6,ifnotzero", "a8420bb7-6bd8-930a-9088-d73b9c039851");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(234203);
        internal_counters.push_back(35935);
        internal_counters.push_back(36219);
        internal_counters.push_back(36503);
        internal_counters.push_back(36787);
        internal_counters.push_back(37071);
        internal_counters.push_back(37355);
        internal_counters.push_back(35960);
        internal_counters.push_back(36244);
        internal_counters.push_back(36528);
        internal_counters.push_back(36812);
        internal_counters.push_back(37096);
        internal_counters.push_back(37380);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("VsGsTime", "Timing", "Time VS or GS are busy in nanoseconds in a VS-[GS-]PS pipeline.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "1,2,3,4,5,6,max6,(0),7,8,9,10,11,12,sum6,ifnotzero,13,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "3ce33b11-210d-b3de-9b6c-b9f3cd04beff");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35955);
        internal_counters.push_back(36239);
        internal_counters.push_back(36523);
        internal_counters.push_back(36807);
        internal_counters.push_back(37091);
        internal_counters.push_back(37375);
        internal_counters.push_back(35960);
        internal_counters.push_back(36244);
        internal_counters.push_back(36528);
        internal_counters.push_back(36812);
        internal_counters.push_back(37096);
        internal_counters.push_back(37380);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PreTessellationBusy", "Timing", "The percentage of time the ShaderUnit has VS and HS work to do in a pipeline that uses tessellation.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,max6,6,7,8,9,10,11,sum6,ifnotzero,12,/,(100),*,(100),min", "346c7430-4666-7065-b5b7-1cb8cbb1c01c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35955);
        internal_counters.push_back(36239);
        internal_counters.push_back(36523);
        internal_counters.push_back(36807);
        internal_counters.push_back(37091);
        internal_counters.push_back(37375);
        internal_counters.push_back(35960);
        internal_counters.push_back(36244);
        internal_counters.push_back(36528);
        internal_counters.push_back(36812);
        internal_counters.push_back(37096);
        internal_counters.push_back(37380);

        c.DefineDerivedCounter("PreTessellationBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has VS and HS work to do in a pipeline that uses tessellation.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,max6,6,7,8,9,10,11,sum6,ifnotzero", "dac68e38-0e3a-9364-2674-308e63bee2d2");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(234203);
        internal_counters.push_back(35955);
        internal_counters.push_back(36239);
        internal_counters.push_back(36523);
        internal_counters.push_back(36807);
        internal_counters.push_back(37091);
        internal_counters.push_back(37375);
        internal_counters.push_back(35960);
        internal_counters.push_back(36244);
        internal_counters.push_back(36528);
        internal_counters.push_back(36812);
        internal_counters.push_back(37096);
        internal_counters.push_back(37380);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PreTessellationTime", "Timing", "Time VS and HS are busy in nanoseconds in a pipeline that uses tessellation.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "(0),1,2,3,4,5,6,max6,7,8,9,10,11,12,sum6,ifnotzero,13,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "d5e6c54c-5ffb-b173-6118-bece61f0281c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35935);
        internal_counters.push_back(36219);
        internal_counters.push_back(36503);
        internal_counters.push_back(36787);
        internal_counters.push_back(37071);
        internal_counters.push_back(37355);
        internal_counters.push_back(35960);
        internal_counters.push_back(36244);
        internal_counters.push_back(36528);
        internal_counters.push_back(36812);
        internal_counters.push_back(37096);
        internal_counters.push_back(37380);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PostTessellationBusy", "Timing", "The percentage of time the ShaderUnit has DS or GS work to do in a pipeline that uses tessellation.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,max6,6,7,8,9,10,11,sum6,ifnotzero,12,/,(100),*,(100),min", "1a275c68-9340-f358-71c6-a2648390381d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35935);
        internal_counters.push_back(36219);
        internal_counters.push_back(36503);
        internal_counters.push_back(36787);
        internal_counters.push_back(37071);
        internal_counters.push_back(37355);
        internal_counters.push_back(35960);
        internal_counters.push_back(36244);
        internal_counters.push_back(36528);
        internal_counters.push_back(36812);
        internal_counters.push_back(37096);
        internal_counters.push_back(37380);

        c.DefineDerivedCounter("PostTessellationBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has DS or GS work to do in a pipeline that uses tessellation.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,max6,6,7,8,9,10,11,sum6,ifnotzero", "a5ed943b-13ef-942b-56fb-6d519eeb7337");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(234203);
        internal_counters.push_back(35935);
        internal_counters.push_back(36219);
        internal_counters.push_back(36503);
        internal_counters.push_back(36787);
        internal_counters.push_back(37071);
        internal_counters.push_back(37355);
        internal_counters.push_back(35960);
        internal_counters.push_back(36244);
        internal_counters.push_back(36528);
        internal_counters.push_back(36812);
        internal_counters.push_back(37096);
        internal_counters.push_back(37380);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PostTessellationTime", "Timing", "Time DS or GS are busy in nanoseconds in a pipeline that uses tessellation.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "(0),1,2,3,4,5,6,max6,7,8,9,10,11,12,sum6,ifnotzero,13,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "9f8dfa40-faee-2014-3467-2630a7d95c1e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35990);
        internal_counters.push_back(36274);
        internal_counters.push_back(36558);
        internal_counters.push_back(36842);
        internal_counters.push_back(37126);
        internal_counters.push_back(37410);
        internal_counters.push_back(36006);
        internal_counters.push_back(36290);
        internal_counters.push_back(36574);
        internal_counters.push_back(36858);
        internal_counters.push_back(37142);
        internal_counters.push_back(37426);
        internal_counters.push_back(35991);
        internal_counters.push_back(36275);
        internal_counters.push_back(36559);
        internal_counters.push_back(36843);
        internal_counters.push_back(37127);
        internal_counters.push_back(37411);
        internal_counters.push_back(36007);
        internal_counters.push_back(36291);
        internal_counters.push_back(36575);
        internal_counters.push_back(36859);
        internal_counters.push_back(37143);
        internal_counters.push_back(37427);
        internal_counters.push_back(35992);
        internal_counters.push_back(36276);
        internal_counters.push_back(36560);
        internal_counters.push_back(36844);
        internal_counters.push_back(37128);
        internal_counters.push_back(37412);
        internal_counters.push_back(36008);
        internal_counters.push_back(36292);
        internal_counters.push_back(36576);
        internal_counters.push_back(36860);
        internal_counters.push_back(37144);
        internal_counters.push_back(37428);
        internal_counters.push_back(35993);
        internal_counters.push_back(36277);
        internal_counters.push_back(36561);
        internal_counters.push_back(36845);
        internal_counters.push_back(37129);
        internal_counters.push_back(37413);
        internal_counters.push_back(36009);
        internal_counters.push_back(36293);
        internal_counters.push_back(36577);
        internal_counters.push_back(36861);
        internal_counters.push_back(37145);
        internal_counters.push_back(37429);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSBusy", "Timing", "The percentage of time the ShaderUnit has pixel shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,max6,6,7,8,9,10,11,sum6,ifnotzero,(0),12,13,14,15,16,17,max6,18,19,20,21,22,23,sum6,ifnotzero,(0),24,25,26,27,28,29,max6,30,31,32,33,34,35,sum6,ifnotzero,(0),36,37,38,39,40,41,max6,42,43,44,45,46,47,sum6,ifnotzero,max4,48,/,(100),*,(100),min", "7e772beb-d82c-bd9a-aed0-fe504d416ce5");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35990);
        internal_counters.push_back(36274);
        internal_counters.push_back(36558);
        internal_counters.push_back(36842);
        internal_counters.push_back(37126);
        internal_counters.push_back(37410);
        internal_counters.push_back(36006);
        internal_counters.push_back(36290);
        internal_counters.push_back(36574);
        internal_counters.push_back(36858);
        internal_counters.push_back(37142);
        internal_counters.push_back(37426);
        internal_counters.push_back(35991);
        internal_counters.push_back(36275);
        internal_counters.push_back(36559);
        internal_counters.push_back(36843);
        internal_counters.push_back(37127);
        internal_counters.push_back(37411);
        internal_counters.push_back(36007);
        internal_counters.push_back(36291);
        internal_counters.push_back(36575);
        internal_counters.push_back(36859);
        internal_counters.push_back(37143);
        internal_counters.push_back(37427);
        internal_counters.push_back(35992);
        internal_counters.push_back(36276);
        internal_counters.push_back(36560);
        internal_counters.push_back(36844);
        internal_counters.push_back(37128);
        internal_counters.push_back(37412);
        internal_counters.push_back(36008);
        internal_counters.push_back(36292);
        internal_counters.push_back(36576);
        internal_counters.push_back(36860);
        internal_counters.push_back(37144);
        internal_counters.push_back(37428);
        internal_counters.push_back(35993);
        internal_counters.push_back(36277);
        internal_counters.push_back(36561);
        internal_counters.push_back(36845);
        internal_counters.push_back(37129);
        internal_counters.push_back(37413);
        internal_counters.push_back(36009);
        internal_counters.push_back(36293);
        internal_counters.push_back(36577);
        internal_counters.push_back(36861);
        internal_counters.push_back(37145);
        internal_counters.push_back(37429);

        c.DefineDerivedCounter("PSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has pixel shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,max6,6,7,8,9,10,11,sum6,ifnotzero,(0),12,13,14,15,16,17,max6,18,19,20,21,22,23,sum6,ifnotzero,(0),24,25,26,27,28,29,max6,30,31,32,33,34,35,sum6,ifnotzero,(0),36,37,38,39,40,41,max6,42,43,44,45,46,47,sum6,ifnotzero,max4", "b58bea04-ce8e-2984-80f4-8aba7d4c817b");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(234203);
        internal_counters.push_back(35990);
        internal_counters.push_back(36274);
        internal_counters.push_back(36558);
        internal_counters.push_back(36842);
        internal_counters.push_back(37126);
        internal_counters.push_back(37410);
        internal_counters.push_back(36006);
        internal_counters.push_back(36290);
        internal_counters.push_back(36574);
        internal_counters.push_back(36858);
        internal_counters.push_back(37142);
        internal_counters.push_back(37426);
        internal_counters.push_back(35991);
        internal_counters.push_back(36275);
        internal_counters.push_back(36559);
        internal_counters.push_back(36843);
        internal_counters.push_back(37127);
        internal_counters.push_back(37411);
        internal_counters.push_back(36007);
        internal_counters.push_back(36291);
        internal_counters.push_back(36575);
        internal_counters.push_back(36859);
        internal_counters.push_back(37143);
        internal_counters.push_back(37427);
        internal_counters.push_back(35992);
        internal_counters.push_back(36276);
        internal_counters.push_back(36560);
        internal_counters.push_back(36844);
        internal_counters.push_back(37128);
        internal_counters.push_back(37412);
        internal_counters.push_back(36008);
        internal_counters.push_back(36292);
        internal_counters.push_back(36576);
        internal_counters.push_back(36860);
        internal_counters.push_back(37144);
        internal_counters.push_back(37428);
        internal_counters.push_back(35993);
        internal_counters.push_back(36277);
        internal_counters.push_back(36561);
        internal_counters.push_back(36845);
        internal_counters.push_back(37129);
        internal_counters.push_back(37413);
        internal_counters.push_back(36009);
        internal_counters.push_back(36293);
        internal_counters.push_back(36577);
        internal_counters.push_back(36861);
        internal_counters.push_back(37145);
        internal_counters.push_back(37429);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSTime", "Timing", "Time pixel shaders are busy in nanoseconds.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "(0),1,2,3,4,5,6,max6,7,8,9,10,11,12,sum6,ifnotzero,(0),13,14,15,16,17,18,max6,19,20,21,22,23,24,sum6,ifnotzero,(0),25,26,27,28,29,30,max6,31,32,33,34,35,36,sum6,ifnotzero,(0),37,38,39,40,41,42,max6,43,44,45,46,47,48,sum6,ifnotzero,max4,49,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "edca7694-7416-e8a6-0c5a-63a5ad5f3d74");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35971);
        internal_counters.push_back(36255);
        internal_counters.push_back(36539);
        internal_counters.push_back(36823);
        internal_counters.push_back(37107);
        internal_counters.push_back(37391);
        internal_counters.push_back(35975);
        internal_counters.push_back(36259);
        internal_counters.push_back(36543);
        internal_counters.push_back(36827);
        internal_counters.push_back(37111);
        internal_counters.push_back(37395);
        internal_counters.push_back(35979);
        internal_counters.push_back(36263);
        internal_counters.push_back(36547);
        internal_counters.push_back(36831);
        internal_counters.push_back(37115);
        internal_counters.push_back(37399);
        internal_counters.push_back(35983);
        internal_counters.push_back(36267);
        internal_counters.push_back(36551);
        internal_counters.push_back(36835);
        internal_counters.push_back(37119);
        internal_counters.push_back(37403);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("CSBusy", "Timing", "The percentage of time the ShaderUnit has compute shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,comparemax6,12,13,14,15,16,17,18,19,20,21,22,23,comparemax6,max,24,/,(100),*,(100),min", "493fdd90-8d2b-a055-5e4e-2d29c3396b8c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35971);
        internal_counters.push_back(36255);
        internal_counters.push_back(36539);
        internal_counters.push_back(36823);
        internal_counters.push_back(37107);
        internal_counters.push_back(37391);
        internal_counters.push_back(35975);
        internal_counters.push_back(36259);
        internal_counters.push_back(36543);
        internal_counters.push_back(36827);
        internal_counters.push_back(37111);
        internal_counters.push_back(37395);
        internal_counters.push_back(35979);
        internal_counters.push_back(36263);
        internal_counters.push_back(36547);
        internal_counters.push_back(36831);
        internal_counters.push_back(37115);
        internal_counters.push_back(37399);
        internal_counters.push_back(35983);
        internal_counters.push_back(36267);
        internal_counters.push_back(36551);
        internal_counters.push_back(36835);
        internal_counters.push_back(37119);
        internal_counters.push_back(37403);

        c.DefineDerivedCounter("CSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has compute shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,comparemax6,12,13,14,15,16,17,18,19,20,21,22,23,comparemax6,max", "39bcf1b8-f6b2-4c37-f9af-0a2bb59512f9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(234203);
        internal_counters.push_back(35971);
        internal_counters.push_back(36255);
        internal_counters.push_back(36539);
        internal_counters.push_back(36823);
        internal_counters.push_back(37107);
        internal_counters.push_back(37391);
        internal_counters.push_back(35975);
        internal_counters.push_back(36259);
        internal_counters.push_back(36543);
        internal_counters.push_back(36827);
        internal_counters.push_back(37111);
        internal_counters.push_back(37395);
        internal_counters.push_back(35979);
        internal_counters.push_back(36263);
        internal_counters.push_back(36547);
        internal_counters.push_back(36831);
        internal_counters.push_back(37115);
        internal_counters.push_back(37399);
        internal_counters.push_back(35983);
        internal_counters.push_back(36267);
        internal_counters.push_back(36551);
        internal_counters.push_back(36835);
        internal_counters.push_back(37119);
        internal_counters.push_back(37403);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("CSTime", "Timing", "Time compute shaders are busy in nanoseconds.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "1,2,3,4,5,6,7,8,9,10,11,12,comparemax6,13,14,15,16,17,18,19,20,21,22,23,24,comparemax6,max,25,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "dbc24916-ecb2-7eef-8d63-7afadaaab6bc");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(110806);
        internal_counters.push_back(110894);
        internal_counters.push_back(110982);
        internal_counters.push_back(111070);
        internal_counters.push_back(111158);
        internal_counters.push_back(111246);
        internal_counters.push_back(35960);
        internal_counters.push_back(36244);
        internal_counters.push_back(36528);
        internal_counters.push_back(36812);
        internal_counters.push_back(37096);
        internal_counters.push_back(37380);

        c.DefineDerivedCounter("VsGsVerticesIn", "VertexGeometry", "The number of unique vertices processed by the VS and GS.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,sum6,(0),6,7,8,9,10,11,sum6,ifnotzero", "17d0c775-3ed5-affb-d5ac-5391a198a4aa");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(110811);
        internal_counters.push_back(110899);
        internal_counters.push_back(110987);
        internal_counters.push_back(111075);
        internal_counters.push_back(111163);
        internal_counters.push_back(111251);
        internal_counters.push_back(35960);
        internal_counters.push_back(36244);
        internal_counters.push_back(36528);
        internal_counters.push_back(36812);
        internal_counters.push_back(37096);
        internal_counters.push_back(37380);

        c.DefineDerivedCounter("VsGsPrimsIn", "VertexGeometry", "The number of primitives passed into the GS.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,sum6,(0),6,7,8,9,10,11,sum6,ifnotzero", "d9fa5ce8-5329-f5d4-c378-8fbc7e80d9a6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(110817);
        internal_counters.push_back(110905);
        internal_counters.push_back(110993);
        internal_counters.push_back(111081);
        internal_counters.push_back(111169);
        internal_counters.push_back(111257);
        internal_counters.push_back(35960);
        internal_counters.push_back(36244);
        internal_counters.push_back(36528);
        internal_counters.push_back(36812);
        internal_counters.push_back(37096);
        internal_counters.push_back(37380);

        c.DefineDerivedCounter("PreTessVerticesIn", "PreTessellation", "The number of unique vertices processed by the VS and HS when using tessellation.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,4,5,sum6,6,7,8,9,10,11,sum6,ifnotzero", "84145f0c-ff96-0dfb-ffb7-ccf4c9b3f4c4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(110794);
        internal_counters.push_back(110882);
        internal_counters.push_back(110970);
        internal_counters.push_back(111058);
        internal_counters.push_back(111146);
        internal_counters.push_back(111234);
        internal_counters.push_back(35960);
        internal_counters.push_back(36244);
        internal_counters.push_back(36528);
        internal_counters.push_back(36812);
        internal_counters.push_back(37096);
        internal_counters.push_back(37380);

        c.DefineDerivedCounter("PostTessPrimsOut", "PostTessellation", "The number of primitives output by the DS and GS when using tessellation.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,4,5,sum6,6,7,8,9,10,11,sum6,ifnotzero", "d38dabe8-1f13-ea34-d3c1-eb5783b737f1");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(17180);
        internal_counters.push_back(17491);
        internal_counters.push_back(17802);
        internal_counters.push_back(18113);
        internal_counters.push_back(18424);
        internal_counters.push_back(18735);
        internal_counters.push_back(17184);
        internal_counters.push_back(17495);
        internal_counters.push_back(17806);
        internal_counters.push_back(18117);
        internal_counters.push_back(18428);
        internal_counters.push_back(18739);
        internal_counters.push_back(17136);
        internal_counters.push_back(17447);
        internal_counters.push_back(17758);
        internal_counters.push_back(18069);
        internal_counters.push_back(18380);
        internal_counters.push_back(18691);
        internal_counters.push_back(17148);
        internal_counters.push_back(17459);
        internal_counters.push_back(17770);
        internal_counters.push_back(18081);
        internal_counters.push_back(18392);
        internal_counters.push_back(18703);
        internal_counters.push_back(17137);
        internal_counters.push_back(17448);
        internal_counters.push_back(17759);
        internal_counters.push_back(18070);
        internal_counters.push_back(18381);
        internal_counters.push_back(18692);
        internal_counters.push_back(17149);
        internal_counters.push_back(17460);
        internal_counters.push_back(17771);
        internal_counters.push_back(18082);
        internal_counters.push_back(18393);
        internal_counters.push_back(18704);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PrimitiveAssemblyBusy", "Timing", "The percentage of GPUTime that primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,vecsub6,SU_CLOCKS_PRIM,12,13,14,15,16,17,18,19,20,21,22,23,vecsum6,24,25,26,27,28,29,vecsum6,(2),30,31,32,33,34,35,scalarmul6,vecsum6,scalarmul6,vecsub6,max6,(0),max,36,/,(100),*,(100),min", "54ac5640-c4d7-95e2-20e0-6a9fdfc07333");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(17180);
        internal_counters.push_back(17491);
        internal_counters.push_back(17802);
        internal_counters.push_back(18113);
        internal_counters.push_back(18424);
        internal_counters.push_back(18735);
        internal_counters.push_back(17184);
        internal_counters.push_back(17495);
        internal_counters.push_back(17806);
        internal_counters.push_back(18117);
        internal_counters.push_back(18428);
        internal_counters.push_back(18739);
        internal_counters.push_back(17136);
        internal_counters.push_back(17447);
        internal_counters.push_back(17758);
        internal_counters.push_back(18069);
        internal_counters.push_back(18380);
        internal_counters.push_back(18691);
        internal_counters.push_back(17148);
        internal_counters.push_back(17459);
        internal_counters.push_back(17770);
        internal_counters.push_back(18081);
        internal_counters.push_back(18392);
        internal_counters.push_back(18703);
        internal_counters.push_back(17137);
        internal_counters.push_back(17448);
        internal_counters.push_back(17759);
        internal_counters.push_back(18070);
        internal_counters.push_back(18381);
        internal_counters.push_back(18692);
        internal_counters.push_back(17149);
        internal_counters.push_back(17460);
        internal_counters.push_back(17771);
        internal_counters.push_back(18082);
        internal_counters.push_back(18393);
        internal_counters.push_back(18704);

        c.DefineDerivedCounter("PrimitiveAssemblyBusyCycles", "Timing", "Number of GPU cycles the primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,vecsub6,SU_CLOCKS_PRIM,12,13,14,15,16,17,18,19,20,21,22,23,vecsum6,24,25,26,27,28,29,vecsum6,(2),30,31,32,33,34,35,scalarmul6,vecsum6,scalarmul6,vecsub6,max6,(0),max", "99777f2d-9626-c78a-a97c-c4505eba1e5f");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(17083);
        internal_counters.push_back(17394);
        internal_counters.push_back(17705);
        internal_counters.push_back(18016);
        internal_counters.push_back(18327);
        internal_counters.push_back(18638);

        c.DefineDerivedCounter("PrimitivesIn", "PrimitiveAssembly", "The number of primitives received by the hardware. This includes primitives generated by tessellation.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,sum6", "a515b80d-75c3-c7d2-0d2f-d7766b4759a6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(17089);
        internal_counters.push_back(17400);
        internal_counters.push_back(17711);
        internal_counters.push_back(18022);
        internal_counters.push_back(18333);
        internal_counters.push_back(18644);
        internal_counters.push_back(17129);
        internal_counters.push_back(17440);
        internal_counters.push_back(17751);
        internal_counters.push_back(18062);
        internal_counters.push_back(18373);
        internal_counters.push_back(18684);
        internal_counters.push_back(17130);
        internal_counters.push_back(17441);
        internal_counters.push_back(17752);
        internal_counters.push_back(18063);
        internal_counters.push_back(18374);
        internal_counters.push_back(18685);
        internal_counters.push_back(17131);
        internal_counters.push_back(17442);
        internal_counters.push_back(17753);
        internal_counters.push_back(18064);
        internal_counters.push_back(18375);
        internal_counters.push_back(18686);
        internal_counters.push_back(17132);
        internal_counters.push_back(17443);
        internal_counters.push_back(17754);
        internal_counters.push_back(18065);
        internal_counters.push_back(18376);
        internal_counters.push_back(18687);

        c.DefineDerivedCounter("CulledPrims", "PrimitiveAssembly", "The number of culled primitives. Typical reasons include scissor, the primitive having zero area, and back or front face culling.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,sum6,6,7,8,9,10,11,sum6,+,12,13,14,15,16,17,sum6,+,18,19,20,21,22,23,sum6,+,24,25,26,27,28,29,sum6,+", "589bdf55-9192-280a-41c3-584bc94f2562");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(17096);
        internal_counters.push_back(17407);
        internal_counters.push_back(17718);
        internal_counters.push_back(18029);
        internal_counters.push_back(18340);
        internal_counters.push_back(18651);

        c.DefineDerivedCounter("ClippedPrims", "PrimitiveAssembly", "The number of primitives that required one or more clipping operations due to intersecting the view volume or user clip planes.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,sum6", "5ef6f9d5-155e-5baa-163f-8359d9ea9bbf");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(17184);
        internal_counters.push_back(17495);
        internal_counters.push_back(17806);
        internal_counters.push_back(18117);
        internal_counters.push_back(18428);
        internal_counters.push_back(18739);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PAStalledOnRasterizer", "PrimitiveAssembly", "Percentage of GPUTime that primitive assembly waits for rasterization to be ready to accept data. This roughly indicates for what percentage of time the pipeline is bottlenecked by pixel operations.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,max6,6,/,(100),*", "6f9f416b-53c1-0457-f88c-7b6ba8973974");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(17184);
        internal_counters.push_back(17495);
        internal_counters.push_back(17806);
        internal_counters.push_back(18117);
        internal_counters.push_back(18428);
        internal_counters.push_back(18739);

        c.DefineDerivedCounter("PAStalledOnRasterizerCycles", "PrimitiveAssembly", "Number of GPU cycles the primitive assembly waits for rasterization to be ready to accept data. Indicates the number of GPU cycles the pipeline is bottlenecked by pixel operations.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,max6", "7a8c492a-c566-9328-6805-760dbff5c0f2");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(34961);
        internal_counters.push_back(35043);
        internal_counters.push_back(35125);
        internal_counters.push_back(35207);
        internal_counters.push_back(35289);
        internal_counters.push_back(35371);
        internal_counters.push_back(35453);
        internal_counters.push_back(35535);
        internal_counters.push_back(35617);
        internal_counters.push_back(35699);
        internal_counters.push_back(35781);
        internal_counters.push_back(35863);
        internal_counters.push_back(34966);
        internal_counters.push_back(35048);
        internal_counters.push_back(35130);
        internal_counters.push_back(35212);
        internal_counters.push_back(35294);
        internal_counters.push_back(35376);
        internal_counters.push_back(35458);
        internal_counters.push_back(35540);
        internal_counters.push_back(35622);
        internal_counters.push_back(35704);
        internal_counters.push_back(35786);
        internal_counters.push_back(35868);
        internal_counters.push_back(34971);
        internal_counters.push_back(35053);
        internal_counters.push_back(35135);
        internal_counters.push_back(35217);
        internal_counters.push_back(35299);
        internal_counters.push_back(35381);
        internal_counters.push_back(35463);
        internal_counters.push_back(35545);
        internal_counters.push_back(35627);
        internal_counters.push_back(35709);
        internal_counters.push_back(35791);
        internal_counters.push_back(35873);
        internal_counters.push_back(34976);
        internal_counters.push_back(35058);
        internal_counters.push_back(35140);
        internal_counters.push_back(35222);
        internal_counters.push_back(35304);
        internal_counters.push_back(35386);
        internal_counters.push_back(35468);
        internal_counters.push_back(35550);
        internal_counters.push_back(35632);
        internal_counters.push_back(35714);
        internal_counters.push_back(35796);
        internal_counters.push_back(35878);

        c.DefineDerivedCounter("PSPixelsOut", "PixelShader", "Pixels exported from shader to color buffers. Does not include killed or alpha tested pixels; if there are multiple render targets, each render target receives one export, so this will be 2 for 1 pixel written to two RTs.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,sum12,12,13,14,15,16,17,18,19,20,21,22,23,sum12,24,25,26,27,28,29,30,31,32,33,34,35,sum12,36,37,38,39,40,41,42,43,44,45,46,47,sum12,sum4", "24cba16c-baa6-6ecd-95ad-92ecb1338da1");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(34963);
        internal_counters.push_back(35045);
        internal_counters.push_back(35127);
        internal_counters.push_back(35209);
        internal_counters.push_back(35291);
        internal_counters.push_back(35373);
        internal_counters.push_back(35455);
        internal_counters.push_back(35537);
        internal_counters.push_back(35619);
        internal_counters.push_back(35701);
        internal_counters.push_back(35783);
        internal_counters.push_back(35865);
        internal_counters.push_back(34968);
        internal_counters.push_back(35050);
        internal_counters.push_back(35132);
        internal_counters.push_back(35214);
        internal_counters.push_back(35296);
        internal_counters.push_back(35378);
        internal_counters.push_back(35460);
        internal_counters.push_back(35542);
        internal_counters.push_back(35624);
        internal_counters.push_back(35706);
        internal_counters.push_back(35788);
        internal_counters.push_back(35870);
        internal_counters.push_back(34973);
        internal_counters.push_back(35055);
        internal_counters.push_back(35137);
        internal_counters.push_back(35219);
        internal_counters.push_back(35301);
        internal_counters.push_back(35383);
        internal_counters.push_back(35465);
        internal_counters.push_back(35547);
        internal_counters.push_back(35629);
        internal_counters.push_back(35711);
        internal_counters.push_back(35793);
        internal_counters.push_back(35875);
        internal_counters.push_back(34978);
        internal_counters.push_back(35060);
        internal_counters.push_back(35142);
        internal_counters.push_back(35224);
        internal_counters.push_back(35306);
        internal_counters.push_back(35388);
        internal_counters.push_back(35470);
        internal_counters.push_back(35552);
        internal_counters.push_back(35634);
        internal_counters.push_back(35716);
        internal_counters.push_back(35798);
        internal_counters.push_back(35880);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSExportStalls", "PixelShader", "Pixel shader output stalls. Percentage of GPUBusy. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,max12,12,13,14,15,16,17,18,19,20,21,22,23,max12,24,25,26,27,28,29,30,31,32,33,34,35,36,37,max12,38,39,40,41,42,43,44,45,46,47,max12,max4,48,/,(100),*", "9b4f466c-ff97-22bb-557d-84d3c4c51895");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(34963);
        internal_counters.push_back(35045);
        internal_counters.push_back(35127);
        internal_counters.push_back(35209);
        internal_counters.push_back(35291);
        internal_counters.push_back(35373);
        internal_counters.push_back(35455);
        internal_counters.push_back(35537);
        internal_counters.push_back(35619);
        internal_counters.push_back(35701);
        internal_counters.push_back(35783);
        internal_counters.push_back(35865);
        internal_counters.push_back(34968);
        internal_counters.push_back(35050);
        internal_counters.push_back(35132);
        internal_counters.push_back(35214);
        internal_counters.push_back(35296);
        internal_counters.push_back(35378);
        internal_counters.push_back(35460);
        internal_counters.push_back(35542);
        internal_counters.push_back(35624);
        internal_counters.push_back(35706);
        internal_counters.push_back(35788);
        internal_counters.push_back(35870);
        internal_counters.push_back(34973);
        internal_counters.push_back(35055);
        internal_counters.push_back(35137);
        internal_counters.push_back(35219);
        internal_counters.push_back(35301);
        internal_counters.push_back(35383);
        internal_counters.push_back(35465);
        internal_counters.push_back(35547);
        internal_counters.push_back(35629);
        internal_counters.push_back(35711);
        internal_counters.push_back(35793);
        internal_counters.push_back(35875);
        internal_counters.push_back(34978);
        internal_counters.push_back(35060);
        internal_counters.push_back(35142);
        internal_counters.push_back(35224);
        internal_counters.push_back(35306);
        internal_counters.push_back(35388);
        internal_counters.push_back(35470);
        internal_counters.push_back(35552);
        internal_counters.push_back(35634);
        internal_counters.push_back(35716);
        internal_counters.push_back(35798);
        internal_counters.push_back(35880);

        c.DefineDerivedCounter("PSExportStallsCycles", "PixelShader", "Number of GPU cycles the pixel shader output stalls. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,max12,12,13,14,15,16,17,18,19,20,21,22,23,max12,24,25,26,27,28,29,30,31,32,33,34,35,36,37,max12,38,39,40,41,42,43,44,45,46,47,max12,max4", "47c72aad-64e6-0864-d533-d8e0bc27c156");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35972);
        internal_counters.push_back(36256);
        internal_counters.push_back(36540);
        internal_counters.push_back(36824);
        internal_counters.push_back(37108);
        internal_counters.push_back(37392);
        internal_counters.push_back(35980);
        internal_counters.push_back(36264);
        internal_counters.push_back(36548);
        internal_counters.push_back(36832);
        internal_counters.push_back(37116);
        internal_counters.push_back(37400);

        c.DefineDerivedCounter("CSThreadGroups", "ComputeShader", "Total number of thread groups.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,sum6,6,7,8,9,10,11,sum6,+", "8ce3fc80-56b2-97f9-8e70-2e8c747cea68");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35975);
        internal_counters.push_back(36259);
        internal_counters.push_back(36543);
        internal_counters.push_back(36827);
        internal_counters.push_back(37111);
        internal_counters.push_back(37395);
        internal_counters.push_back(35983);
        internal_counters.push_back(36267);
        internal_counters.push_back(36551);
        internal_counters.push_back(36835);
        internal_counters.push_back(37119);
        internal_counters.push_back(37403);

        c.DefineDerivedCounter("CSWavefronts", "ComputeShader", "The total number of wavefronts used for the CS.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,sum6,6,7,8,9,10,11,sum6,+", "42379c6e-369b-c237-8b25-cdb9cdc65c4d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38549);
        internal_counters.push_back(38586);
        internal_counters.push_back(38623);
        internal_counters.push_back(38660);
        internal_counters.push_back(38697);
        internal_counters.push_back(38734);
        internal_counters.push_back(35972);
        internal_counters.push_back(36256);
        internal_counters.push_back(36540);
        internal_counters.push_back(36824);
        internal_counters.push_back(37108);
        internal_counters.push_back(37392);
        internal_counters.push_back(35980);
        internal_counters.push_back(36264);
        internal_counters.push_back(36548);
        internal_counters.push_back(36832);
        internal_counters.push_back(37116);
        internal_counters.push_back(37400);

        c.DefineDerivedCounter("CSThreads", "ComputeShader", "The number of CS threads processed by the hardware.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,4,5,sum6,6,7,8,9,10,11,sum6,12,13,14,15,16,17,sum6,+,ifnotzero", "7a648013-6eac-2665-ac36-13c6f4ac9c26");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38549);
        internal_counters.push_back(38586);
        internal_counters.push_back(38623);
        internal_counters.push_back(38660);
        internal_counters.push_back(38697);
        internal_counters.push_back(38734);
        internal_counters.push_back(35972);
        internal_counters.push_back(36256);
        internal_counters.push_back(36540);
        internal_counters.push_back(36824);
        internal_counters.push_back(37108);
        internal_counters.push_back(37392);
        internal_counters.push_back(35980);
        internal_counters.push_back(36264);
        internal_counters.push_back(36548);
        internal_counters.push_back(36832);
        internal_counters.push_back(37116);
        internal_counters.push_back(37400);

        c.DefineDerivedCounter("CSThreadGroupSize", "ComputeShader", "The number of CS threads within each thread group.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,4,5,sum6,6,7,8,9,10,11,sum6,12,13,14,15,16,17,sum6,+,/,6,7,8,9,10,11,sum6,12,13,14,15,16,17,sum6,+,ifnotzero", "8c65008a-9957-7ca6-4199-f6fe940420f6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38762);
        internal_counters.push_back(38998);
        internal_counters.push_back(39234);
        internal_counters.push_back(39470);
        internal_counters.push_back(39706);
        internal_counters.push_back(39942);
        internal_counters.push_back(40178);
        internal_counters.push_back(40414);
        internal_counters.push_back(40650);
        internal_counters.push_back(40886);
        internal_counters.push_back(41122);
        internal_counters.push_back(41358);
        internal_counters.push_back(41594);
        internal_counters.push_back(41830);
        internal_counters.push_back(42066);
        internal_counters.push_back(42302);
        internal_counters.push_back(42538);
        internal_counters.push_back(42774);
        internal_counters.push_back(43010);
        internal_counters.push_back(43246);
        internal_counters.push_back(43482);
        internal_counters.push_back(43718);
        internal_counters.push_back(43954);
        internal_counters.push_back(44190);
        internal_counters.push_back(44426);
        internal_counters.push_back(44662);
        internal_counters.push_back(44898);
        internal_counters.push_back(45134);
        internal_counters.push_back(45370);
        internal_counters.push_back(45606);
        internal_counters.push_back(45842);
        internal_counters.push_back(46078);
        internal_counters.push_back(46314);
        internal_counters.push_back(46550);
        internal_counters.push_back(46786);
        internal_counters.push_back(47022);
        internal_counters.push_back(47258);
        internal_counters.push_back(47494);
        internal_counters.push_back(47730);
        internal_counters.push_back(47966);
        internal_counters.push_back(48202);
        internal_counters.push_back(48438);
        internal_counters.push_back(48674);
        internal_counters.push_back(48910);
        internal_counters.push_back(49146);
        internal_counters.push_back(49382);
        internal_counters.push_back(49618);
        internal_counters.push_back(49854);
        internal_counters.push_back(50090);
        internal_counters.push_back(50326);
        internal_counters.push_back(50562);
        internal_counters.push_back(50798);
        internal_counters.push_back(51034);
        internal_counters.push_back(51270);
        internal_counters.push_back(51506);
        internal_counters.push_back(51742);
        internal_counters.push_back(51978);
        internal_counters.push_back(52214);
        internal_counters.push_back(52450);
        internal_counters.push_back(52686);
        internal_counters.push_back(52922);
        internal_counters.push_back(53158);
        internal_counters.push_back(53394);
        internal_counters.push_back(53630);
        internal_counters.push_back(53866);
        internal_counters.push_back(54102);
        internal_counters.push_back(54338);
        internal_counters.push_back(54574);
        internal_counters.push_back(54810);
        internal_counters.push_back(55046);
        internal_counters.push_back(55282);
        internal_counters.push_back(55518);
        internal_counters.push_back(55754);
        internal_counters.push_back(55990);
        internal_counters.push_back(56226);
        internal_counters.push_back(56462);
        internal_counters.push_back(56698);
        internal_counters.push_back(56934);
        internal_counters.push_back(57170);
        internal_counters.push_back(57406);
        internal_counters.push_back(57642);
        internal_counters.push_back(57878);
        internal_counters.push_back(58114);
        internal_counters.push_back(58350);
        internal_counters.push_back(58586);
        internal_counters.push_back(58822);
        internal_counters.push_back(59058);
        internal_counters.push_back(59294);
        internal_counters.push_back(59530);
        internal_counters.push_back(59766);
        internal_counters.push_back(60002);
        internal_counters.push_back(60238);
        internal_counters.push_back(60474);
        internal_counters.push_back(60710);
        internal_counters.push_back(60946);
        internal_counters.push_back(61182);
        internal_counters.push_back(24);
        internal_counters.push_back(35972);
        internal_counters.push_back(36256);
        internal_counters.push_back(36540);
        internal_counters.push_back(36824);
        internal_counters.push_back(37108);
        internal_counters.push_back(37392);
        internal_counters.push_back(35980);
        internal_counters.push_back(36264);
        internal_counters.push_back(36548);
        internal_counters.push_back(36832);
        internal_counters.push_back(37116);
        internal_counters.push_back(37400);

        c.DefineDerivedCounter("CSMemUnitBusy", "ComputeShader", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96,96,/,(100),*,97,98,99,100,101,102,sum6,103,104,105,106,107,108,sum6,+,ifnotzero", "42ab96e1-0a24-96c8-c4ff-098fa267d78e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38762);
        internal_counters.push_back(38998);
        internal_counters.push_back(39234);
        internal_counters.push_back(39470);
        internal_counters.push_back(39706);
        internal_counters.push_back(39942);
        internal_counters.push_back(40178);
        internal_counters.push_back(40414);
        internal_counters.push_back(40650);
        internal_counters.push_back(40886);
        internal_counters.push_back(41122);
        internal_counters.push_back(41358);
        internal_counters.push_back(41594);
        internal_counters.push_back(41830);
        internal_counters.push_back(42066);
        internal_counters.push_back(42302);
        internal_counters.push_back(42538);
        internal_counters.push_back(42774);
        internal_counters.push_back(43010);
        internal_counters.push_back(43246);
        internal_counters.push_back(43482);
        internal_counters.push_back(43718);
        internal_counters.push_back(43954);
        internal_counters.push_back(44190);
        internal_counters.push_back(44426);
        internal_counters.push_back(44662);
        internal_counters.push_back(44898);
        internal_counters.push_back(45134);
        internal_counters.push_back(45370);
        internal_counters.push_back(45606);
        internal_counters.push_back(45842);
        internal_counters.push_back(46078);
        internal_counters.push_back(46314);
        internal_counters.push_back(46550);
        internal_counters.push_back(46786);
        internal_counters.push_back(47022);
        internal_counters.push_back(47258);
        internal_counters.push_back(47494);
        internal_counters.push_back(47730);
        internal_counters.push_back(47966);
        internal_counters.push_back(48202);
        internal_counters.push_back(48438);
        internal_counters.push_back(48674);
        internal_counters.push_back(48910);
        internal_counters.push_back(49146);
        internal_counters.push_back(49382);
        internal_counters.push_back(49618);
        internal_counters.push_back(49854);
        internal_counters.push_back(50090);
        internal_counters.push_back(50326);
        internal_counters.push_back(50562);
        internal_counters.push_back(50798);
        internal_counters.push_back(51034);
        internal_counters.push_back(51270);
        internal_counters.push_back(51506);
        internal_counters.push_back(51742);
        internal_counters.push_back(51978);
        internal_counters.push_back(52214);
        internal_counters.push_back(52450);
        internal_counters.push_back(52686);
        internal_counters.push_back(52922);
        internal_counters.push_back(53158);
        internal_counters.push_back(53394);
        internal_counters.push_back(53630);
        internal_counters.push_back(53866);
        internal_counters.push_back(54102);
        internal_counters.push_back(54338);
        internal_counters.push_back(54574);
        internal_counters.push_back(54810);
        internal_counters.push_back(55046);
        internal_counters.push_back(55282);
        internal_counters.push_back(55518);
        internal_counters.push_back(55754);
        internal_counters.push_back(55990);
        internal_counters.push_back(56226);
        internal_counters.push_back(56462);
        internal_counters.push_back(56698);
        internal_counters.push_back(56934);
        internal_counters.push_back(57170);
        internal_counters.push_back(57406);
        internal_counters.push_back(57642);
        internal_counters.push_back(57878);
        internal_counters.push_back(58114);
        internal_counters.push_back(58350);
        internal_counters.push_back(58586);
        internal_counters.push_back(58822);
        internal_counters.push_back(59058);
        internal_counters.push_back(59294);
        internal_counters.push_back(59530);
        internal_counters.push_back(59766);
        internal_counters.push_back(60002);
        internal_counters.push_back(60238);
        internal_counters.push_back(60474);
        internal_counters.push_back(60710);
        internal_counters.push_back(60946);
        internal_counters.push_back(61182);
        internal_counters.push_back(35972);
        internal_counters.push_back(36256);
        internal_counters.push_back(36540);
        internal_counters.push_back(36824);
        internal_counters.push_back(37108);
        internal_counters.push_back(37392);
        internal_counters.push_back(35980);
        internal_counters.push_back(36264);
        internal_counters.push_back(36548);
        internal_counters.push_back(36832);
        internal_counters.push_back(37116);
        internal_counters.push_back(37400);

        c.DefineDerivedCounter("CSMemUnitBusyCycles", "ComputeShader", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96,96,97,98,99,100,101,sum6,102,103,104,105,106,107,sum6,+,ifnotzero", "39d5687f-c727-7c0c-af82-bb711d3897ed");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80354);
        internal_counters.push_back(80432);
        internal_counters.push_back(80510);
        internal_counters.push_back(80588);
        internal_counters.push_back(80666);
        internal_counters.push_back(80744);
        internal_counters.push_back(80822);
        internal_counters.push_back(80900);
        internal_counters.push_back(80978);
        internal_counters.push_back(81056);
        internal_counters.push_back(81134);
        internal_counters.push_back(81212);
        internal_counters.push_back(81290);
        internal_counters.push_back(81368);
        internal_counters.push_back(81446);
        internal_counters.push_back(81524);
        internal_counters.push_back(81602);
        internal_counters.push_back(81680);
        internal_counters.push_back(81758);
        internal_counters.push_back(81836);
        internal_counters.push_back(81914);
        internal_counters.push_back(81992);
        internal_counters.push_back(82070);
        internal_counters.push_back(82148);
        internal_counters.push_back(82226);
        internal_counters.push_back(82304);
        internal_counters.push_back(82382);
        internal_counters.push_back(82460);
        internal_counters.push_back(82538);
        internal_counters.push_back(82616);
        internal_counters.push_back(82694);
        internal_counters.push_back(82772);
        internal_counters.push_back(82850);
        internal_counters.push_back(82928);
        internal_counters.push_back(83006);
        internal_counters.push_back(83084);
        internal_counters.push_back(83162);
        internal_counters.push_back(83240);
        internal_counters.push_back(83318);
        internal_counters.push_back(83396);
        internal_counters.push_back(83474);
        internal_counters.push_back(83552);
        internal_counters.push_back(83630);
        internal_counters.push_back(83708);
        internal_counters.push_back(83786);
        internal_counters.push_back(83864);
        internal_counters.push_back(83942);
        internal_counters.push_back(84020);
        internal_counters.push_back(84098);
        internal_counters.push_back(84176);
        internal_counters.push_back(84254);
        internal_counters.push_back(84332);
        internal_counters.push_back(84410);
        internal_counters.push_back(84488);
        internal_counters.push_back(84566);
        internal_counters.push_back(84644);
        internal_counters.push_back(84722);
        internal_counters.push_back(84800);
        internal_counters.push_back(84878);
        internal_counters.push_back(84956);
        internal_counters.push_back(85034);
        internal_counters.push_back(85112);
        internal_counters.push_back(85190);
        internal_counters.push_back(85268);
        internal_counters.push_back(85346);
        internal_counters.push_back(85424);
        internal_counters.push_back(85502);
        internal_counters.push_back(85580);
        internal_counters.push_back(85658);
        internal_counters.push_back(85736);
        internal_counters.push_back(85814);
        internal_counters.push_back(85892);
        internal_counters.push_back(85970);
        internal_counters.push_back(86048);
        internal_counters.push_back(86126);
        internal_counters.push_back(86204);
        internal_counters.push_back(86282);
        internal_counters.push_back(86360);
        internal_counters.push_back(86438);
        internal_counters.push_back(86516);
        internal_counters.push_back(86594);
        internal_counters.push_back(86672);
        internal_counters.push_back(86750);
        internal_counters.push_back(86828);
        internal_counters.push_back(86906);
        internal_counters.push_back(86984);
        internal_counters.push_back(87062);
        internal_counters.push_back(87140);
        internal_counters.push_back(87218);
        internal_counters.push_back(87296);
        internal_counters.push_back(87374);
        internal_counters.push_back(87452);
        internal_counters.push_back(87530);
        internal_counters.push_back(87608);
        internal_counters.push_back(87686);
        internal_counters.push_back(87764);
        internal_counters.push_back(24);
        internal_counters.push_back(35972);
        internal_counters.push_back(36256);
        internal_counters.push_back(36540);
        internal_counters.push_back(36824);
        internal_counters.push_back(37108);
        internal_counters.push_back(37392);
        internal_counters.push_back(35980);
        internal_counters.push_back(36264);
        internal_counters.push_back(36548);
        internal_counters.push_back(36832);
        internal_counters.push_back(37116);
        internal_counters.push_back(37400);

        c.DefineDerivedCounter("CSMemUnitStalled", "ComputeShader", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96,96,/,(100),*,97,98,99,100,101,102,sum6,103,104,105,106,107,108,sum6,+,ifnotzero", "f18e8679-1511-d533-d9ee-4365197f7d0c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80354);
        internal_counters.push_back(80432);
        internal_counters.push_back(80510);
        internal_counters.push_back(80588);
        internal_counters.push_back(80666);
        internal_counters.push_back(80744);
        internal_counters.push_back(80822);
        internal_counters.push_back(80900);
        internal_counters.push_back(80978);
        internal_counters.push_back(81056);
        internal_counters.push_back(81134);
        internal_counters.push_back(81212);
        internal_counters.push_back(81290);
        internal_counters.push_back(81368);
        internal_counters.push_back(81446);
        internal_counters.push_back(81524);
        internal_counters.push_back(81602);
        internal_counters.push_back(81680);
        internal_counters.push_back(81758);
        internal_counters.push_back(81836);
        internal_counters.push_back(81914);
        internal_counters.push_back(81992);
        internal_counters.push_back(82070);
        internal_counters.push_back(82148);
        internal_counters.push_back(82226);
        internal_counters.push_back(82304);
        internal_counters.push_back(82382);
        internal_counters.push_back(82460);
        internal_counters.push_back(82538);
        internal_counters.push_back(82616);
        internal_counters.push_back(82694);
        internal_counters.push_back(82772);
        internal_counters.push_back(82850);
        internal_counters.push_back(82928);
        internal_counters.push_back(83006);
        internal_counters.push_back(83084);
        internal_counters.push_back(83162);
        internal_counters.push_back(83240);
        internal_counters.push_back(83318);
        internal_counters.push_back(83396);
        internal_counters.push_back(83474);
        internal_counters.push_back(83552);
        internal_counters.push_back(83630);
        internal_counters.push_back(83708);
        internal_counters.push_back(83786);
        internal_counters.push_back(83864);
        internal_counters.push_back(83942);
        internal_counters.push_back(84020);
        internal_counters.push_back(84098);
        internal_counters.push_back(84176);
        internal_counters.push_back(84254);
        internal_counters.push_back(84332);
        internal_counters.push_back(84410);
        internal_counters.push_back(84488);
        internal_counters.push_back(84566);
        internal_counters.push_back(84644);
        internal_counters.push_back(84722);
        internal_counters.push_back(84800);
        internal_counters.push_back(84878);
        internal_counters.push_back(84956);
        internal_counters.push_back(85034);
        internal_counters.push_back(85112);
        internal_counters.push_back(85190);
        internal_counters.push_back(85268);
        internal_counters.push_back(85346);
        internal_counters.push_back(85424);
        internal_counters.push_back(85502);
        internal_counters.push_back(85580);
        internal_counters.push_back(85658);
        internal_counters.push_back(85736);
        internal_counters.push_back(85814);
        internal_counters.push_back(85892);
        internal_counters.push_back(85970);
        internal_counters.push_back(86048);
        internal_counters.push_back(86126);
        internal_counters.push_back(86204);
        internal_counters.push_back(86282);
        internal_counters.push_back(86360);
        internal_counters.push_back(86438);
        internal_counters.push_back(86516);
        internal_counters.push_back(86594);
        internal_counters.push_back(86672);
        internal_counters.push_back(86750);
        internal_counters.push_back(86828);
        internal_counters.push_back(86906);
        internal_counters.push_back(86984);
        internal_counters.push_back(87062);
        internal_counters.push_back(87140);
        internal_counters.push_back(87218);
        internal_counters.push_back(87296);
        internal_counters.push_back(87374);
        internal_counters.push_back(87452);
        internal_counters.push_back(87530);
        internal_counters.push_back(87608);
        internal_counters.push_back(87686);
        internal_counters.push_back(87764);
        internal_counters.push_back(35972);
        internal_counters.push_back(36256);
        internal_counters.push_back(36540);
        internal_counters.push_back(36824);
        internal_counters.push_back(37108);
        internal_counters.push_back(37392);
        internal_counters.push_back(35980);
        internal_counters.push_back(36264);
        internal_counters.push_back(36548);
        internal_counters.push_back(36832);
        internal_counters.push_back(37116);
        internal_counters.push_back(37400);

        c.DefineDerivedCounter("CSMemUnitStalledCycles", "ComputeShader", "Number of GPU cycles the memory unit is stalled. Try reducing the number or size of fetches and writes if possible.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96,96,97,98,99,100,101,sum6,102,103,104,105,106,107,sum6,+,ifnotzero", "51991c84-ed2b-bf31-c4ab-8f8e9eb8f29f");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102573);
        internal_counters.push_back(102832);
        internal_counters.push_back(103091);
        internal_counters.push_back(103350);
        internal_counters.push_back(103609);
        internal_counters.push_back(103868);
        internal_counters.push_back(104127);
        internal_counters.push_back(104386);
        internal_counters.push_back(104645);
        internal_counters.push_back(104904);
        internal_counters.push_back(105163);
        internal_counters.push_back(105422);
        internal_counters.push_back(105681);
        internal_counters.push_back(105940);
        internal_counters.push_back(106199);
        internal_counters.push_back(106458);
        internal_counters.push_back(106717);
        internal_counters.push_back(106976);
        internal_counters.push_back(107235);
        internal_counters.push_back(107494);
        internal_counters.push_back(107753);
        internal_counters.push_back(108012);
        internal_counters.push_back(108271);
        internal_counters.push_back(108530);
        internal_counters.push_back(24);
        internal_counters.push_back(35972);
        internal_counters.push_back(36256);
        internal_counters.push_back(36540);
        internal_counters.push_back(36824);
        internal_counters.push_back(37108);
        internal_counters.push_back(37392);
        internal_counters.push_back(35980);
        internal_counters.push_back(36264);
        internal_counters.push_back(36548);
        internal_counters.push_back(36832);
        internal_counters.push_back(37116);
        internal_counters.push_back(37400);

        c.DefineDerivedCounter("CSWriteUnitStalled", "ComputeShader", "The percentage of GPUTime the write unit is stalled.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,/,(100),*,25,26,27,28,29,30,sum6,31,32,33,34,35,36,sum6,+,ifnotzero", "55118f7a-8f92-726f-78c6-407f689a2eb4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102573);
        internal_counters.push_back(102832);
        internal_counters.push_back(103091);
        internal_counters.push_back(103350);
        internal_counters.push_back(103609);
        internal_counters.push_back(103868);
        internal_counters.push_back(104127);
        internal_counters.push_back(104386);
        internal_counters.push_back(104645);
        internal_counters.push_back(104904);
        internal_counters.push_back(105163);
        internal_counters.push_back(105422);
        internal_counters.push_back(105681);
        internal_counters.push_back(105940);
        internal_counters.push_back(106199);
        internal_counters.push_back(106458);
        internal_counters.push_back(106717);
        internal_counters.push_back(106976);
        internal_counters.push_back(107235);
        internal_counters.push_back(107494);
        internal_counters.push_back(107753);
        internal_counters.push_back(108012);
        internal_counters.push_back(108271);
        internal_counters.push_back(108530);
        internal_counters.push_back(35972);
        internal_counters.push_back(36256);
        internal_counters.push_back(36540);
        internal_counters.push_back(36824);
        internal_counters.push_back(37108);
        internal_counters.push_back(37392);
        internal_counters.push_back(35980);
        internal_counters.push_back(36264);
        internal_counters.push_back(36548);
        internal_counters.push_back(36832);
        internal_counters.push_back(37116);
        internal_counters.push_back(37400);

        c.DefineDerivedCounter("CSWriteUnitStalledCycles", "ComputeShader", "Number of GPU cycles the write unit is stalled.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,25,26,27,28,29,sum6,30,31,32,33,34,35,sum6,+,ifnotzero", "be164c60-5e48-acac-9622-29616d09aa9a");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(209655);
        internal_counters.push_back(210167);
        internal_counters.push_back(210679);
        internal_counters.push_back(211191);
        internal_counters.push_back(211703);
        internal_counters.push_back(212215);
        internal_counters.push_back(212727);
        internal_counters.push_back(213239);
        internal_counters.push_back(213751);
        internal_counters.push_back(214263);
        internal_counters.push_back(214775);
        internal_counters.push_back(215287);
        internal_counters.push_back(215799);
        internal_counters.push_back(216311);
        internal_counters.push_back(216823);
        internal_counters.push_back(217335);
        internal_counters.push_back(217847);
        internal_counters.push_back(218359);
        internal_counters.push_back(218871);
        internal_counters.push_back(219383);
        internal_counters.push_back(219895);
        internal_counters.push_back(220407);
        internal_counters.push_back(220919);
        internal_counters.push_back(221431);
        internal_counters.push_back(221943);
        internal_counters.push_back(222455);
        internal_counters.push_back(222967);
        internal_counters.push_back(223479);
        internal_counters.push_back(223991);
        internal_counters.push_back(224503);
        internal_counters.push_back(225015);
        internal_counters.push_back(225527);
        internal_counters.push_back(226039);
        internal_counters.push_back(226551);
        internal_counters.push_back(227063);
        internal_counters.push_back(227575);
        internal_counters.push_back(228087);
        internal_counters.push_back(228599);
        internal_counters.push_back(229111);
        internal_counters.push_back(229623);
        internal_counters.push_back(230135);
        internal_counters.push_back(230647);
        internal_counters.push_back(231159);
        internal_counters.push_back(231671);
        internal_counters.push_back(232183);
        internal_counters.push_back(232695);
        internal_counters.push_back(233207);
        internal_counters.push_back(233719);
        internal_counters.push_back(38545);
        internal_counters.push_back(38582);
        internal_counters.push_back(38619);
        internal_counters.push_back(38656);
        internal_counters.push_back(38693);
        internal_counters.push_back(38730);
        internal_counters.push_back(24);
        internal_counters.push_back(35972);
        internal_counters.push_back(36256);
        internal_counters.push_back(36540);
        internal_counters.push_back(36824);
        internal_counters.push_back(37108);
        internal_counters.push_back(37392);
        internal_counters.push_back(35980);
        internal_counters.push_back(36264);
        internal_counters.push_back(36548);
        internal_counters.push_back(36832);
        internal_counters.push_back(37116);
        internal_counters.push_back(37400);

        c.DefineDerivedCounter("CSALUStalledByLDS", "ComputeShader", "The percentage of GPUTime ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible. Value range: 0% (optimal) to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum48,48,49,50,51,52,53,sum6,/,54,/,NUM_SHADER_ENGINES,/,(100),*,48,49,50,51,52,53,sum6,ifnotzero,55,56,57,58,59,60,sum6,61,62,63,64,65,66,sum6,+,ifnotzero", "6dc4f1c2-bad0-c9ff-156e-883b319a752a");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(209655);
        internal_counters.push_back(210167);
        internal_counters.push_back(210679);
        internal_counters.push_back(211191);
        internal_counters.push_back(211703);
        internal_counters.push_back(212215);
        internal_counters.push_back(212727);
        internal_counters.push_back(213239);
        internal_counters.push_back(213751);
        internal_counters.push_back(214263);
        internal_counters.push_back(214775);
        internal_counters.push_back(215287);
        internal_counters.push_back(215799);
        internal_counters.push_back(216311);
        internal_counters.push_back(216823);
        internal_counters.push_back(217335);
        internal_counters.push_back(217847);
        internal_counters.push_back(218359);
        internal_counters.push_back(218871);
        internal_counters.push_back(219383);
        internal_counters.push_back(219895);
        internal_counters.push_back(220407);
        internal_counters.push_back(220919);
        internal_counters.push_back(221431);
        internal_counters.push_back(221943);
        internal_counters.push_back(222455);
        internal_counters.push_back(222967);
        internal_counters.push_back(223479);
        internal_counters.push_back(223991);
        internal_counters.push_back(224503);
        internal_counters.push_back(225015);
        internal_counters.push_back(225527);
        internal_counters.push_back(226039);
        internal_counters.push_back(226551);
        internal_counters.push_back(227063);
        internal_counters.push_back(227575);
        internal_counters.push_back(228087);
        internal_counters.push_back(228599);
        internal_counters.push_back(229111);
        internal_counters.push_back(229623);
        internal_counters.push_back(230135);
        internal_counters.push_back(230647);
        internal_counters.push_back(231159);
        internal_counters.push_back(231671);
        internal_counters.push_back(232183);
        internal_counters.push_back(232695);
        internal_counters.push_back(233207);
        internal_counters.push_back(233719);
        internal_counters.push_back(35972);
        internal_counters.push_back(36256);
        internal_counters.push_back(36540);
        internal_counters.push_back(36824);
        internal_counters.push_back(37108);
        internal_counters.push_back(37392);
        internal_counters.push_back(35980);
        internal_counters.push_back(36264);
        internal_counters.push_back(36548);
        internal_counters.push_back(36832);
        internal_counters.push_back(37116);
        internal_counters.push_back(37400);

        c.DefineDerivedCounter("CSALUStalledByLDSCycles", "ComputeShader", "Number of GPU cycles the ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum48,NUM_SHADER_ENGINES,/,48,49,50,51,52,53,sum6,54,55,56,57,58,59,sum6,+,ifnotzero", "8f3d5f25-2159-0374-fafe-e26a7799b6c8");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(209882);
        internal_counters.push_back(210394);
        internal_counters.push_back(210906);
        internal_counters.push_back(211418);
        internal_counters.push_back(211930);
        internal_counters.push_back(212442);
        internal_counters.push_back(212954);
        internal_counters.push_back(213466);
        internal_counters.push_back(213978);
        internal_counters.push_back(214490);
        internal_counters.push_back(215002);
        internal_counters.push_back(215514);
        internal_counters.push_back(216026);
        internal_counters.push_back(216538);
        internal_counters.push_back(217050);
        internal_counters.push_back(217562);
        internal_counters.push_back(218074);
        internal_counters.push_back(218586);
        internal_counters.push_back(219098);
        internal_counters.push_back(219610);
        internal_counters.push_back(220122);
        internal_counters.push_back(220634);
        internal_counters.push_back(221146);
        internal_counters.push_back(221658);
        internal_counters.push_back(222170);
        internal_counters.push_back(222682);
        internal_counters.push_back(223194);
        internal_counters.push_back(223706);
        internal_counters.push_back(224218);
        internal_counters.push_back(224730);
        internal_counters.push_back(225242);
        internal_counters.push_back(225754);
        internal_counters.push_back(226266);
        internal_counters.push_back(226778);
        internal_counters.push_back(227290);
        internal_counters.push_back(227802);
        internal_counters.push_back(228314);
        internal_counters.push_back(228826);
        internal_counters.push_back(229338);
        internal_counters.push_back(229850);
        internal_counters.push_back(230362);
        internal_counters.push_back(230874);
        internal_counters.push_back(231386);
        internal_counters.push_back(231898);
        internal_counters.push_back(232410);
        internal_counters.push_back(232922);
        internal_counters.push_back(233434);
        internal_counters.push_back(233946);
        internal_counters.push_back(24);
        internal_counters.push_back(35972);
        internal_counters.push_back(36256);
        internal_counters.push_back(36540);
        internal_counters.push_back(36824);
        internal_counters.push_back(37108);
        internal_counters.push_back(37392);
        internal_counters.push_back(35980);
        internal_counters.push_back(36264);
        internal_counters.push_back(36548);
        internal_counters.push_back(36832);
        internal_counters.push_back(37116);
        internal_counters.push_back(37400);

        c.DefineDerivedCounter("CSLDSBankConflict", "ComputeShader", "The percentage of GPUTime LDS is stalled by bank conflicts. Value range: 0% (optimal) to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum48,48,/,NUM_SIMDS,/,(100),*,49,50,51,52,53,54,sum6,55,56,57,58,59,60,sum6,+,ifnotzero", "1065ee10-2e41-ea41-1eb3-b61b491752f4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(209882);
        internal_counters.push_back(210394);
        internal_counters.push_back(210906);
        internal_counters.push_back(211418);
        internal_counters.push_back(211930);
        internal_counters.push_back(212442);
        internal_counters.push_back(212954);
        internal_counters.push_back(213466);
        internal_counters.push_back(213978);
        internal_counters.push_back(214490);
        internal_counters.push_back(215002);
        internal_counters.push_back(215514);
        internal_counters.push_back(216026);
        internal_counters.push_back(216538);
        internal_counters.push_back(217050);
        internal_counters.push_back(217562);
        internal_counters.push_back(218074);
        internal_counters.push_back(218586);
        internal_counters.push_back(219098);
        internal_counters.push_back(219610);
        internal_counters.push_back(220122);
        internal_counters.push_back(220634);
        internal_counters.push_back(221146);
        internal_counters.push_back(221658);
        internal_counters.push_back(222170);
        internal_counters.push_back(222682);
        internal_counters.push_back(223194);
        internal_counters.push_back(223706);
        internal_counters.push_back(224218);
        internal_counters.push_back(224730);
        internal_counters.push_back(225242);
        internal_counters.push_back(225754);
        internal_counters.push_back(226266);
        internal_counters.push_back(226778);
        internal_counters.push_back(227290);
        internal_counters.push_back(227802);
        internal_counters.push_back(228314);
        internal_counters.push_back(228826);
        internal_counters.push_back(229338);
        internal_counters.push_back(229850);
        internal_counters.push_back(230362);
        internal_counters.push_back(230874);
        internal_counters.push_back(231386);
        internal_counters.push_back(231898);
        internal_counters.push_back(232410);
        internal_counters.push_back(232922);
        internal_counters.push_back(233434);
        internal_counters.push_back(233946);
        internal_counters.push_back(35972);
        internal_counters.push_back(36256);
        internal_counters.push_back(36540);
        internal_counters.push_back(36824);
        internal_counters.push_back(37108);
        internal_counters.push_back(37392);
        internal_counters.push_back(35980);
        internal_counters.push_back(36264);
        internal_counters.push_back(36548);
        internal_counters.push_back(36832);
        internal_counters.push_back(37116);
        internal_counters.push_back(37400);

        c.DefineDerivedCounter("CSLDSBankConflictCycles", "ComputeShader", "Number of GPU cycles the LDS is stalled by bank conflicts. Value range: 0 (optimal) to GPUBusyCycles (bad).", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum48,NUM_SIMDS,/,48,49,50,51,52,53,sum6,54,55,56,57,58,59,sum6,+,ifnotzero", "1fd1adf3-c51e-94fd-083e-c482a0a0809e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38762);
        internal_counters.push_back(38998);
        internal_counters.push_back(39234);
        internal_counters.push_back(39470);
        internal_counters.push_back(39706);
        internal_counters.push_back(39942);
        internal_counters.push_back(40178);
        internal_counters.push_back(40414);
        internal_counters.push_back(40650);
        internal_counters.push_back(40886);
        internal_counters.push_back(41122);
        internal_counters.push_back(41358);
        internal_counters.push_back(41594);
        internal_counters.push_back(41830);
        internal_counters.push_back(42066);
        internal_counters.push_back(42302);
        internal_counters.push_back(42538);
        internal_counters.push_back(42774);
        internal_counters.push_back(43010);
        internal_counters.push_back(43246);
        internal_counters.push_back(43482);
        internal_counters.push_back(43718);
        internal_counters.push_back(43954);
        internal_counters.push_back(44190);
        internal_counters.push_back(44426);
        internal_counters.push_back(44662);
        internal_counters.push_back(44898);
        internal_counters.push_back(45134);
        internal_counters.push_back(45370);
        internal_counters.push_back(45606);
        internal_counters.push_back(45842);
        internal_counters.push_back(46078);
        internal_counters.push_back(46314);
        internal_counters.push_back(46550);
        internal_counters.push_back(46786);
        internal_counters.push_back(47022);
        internal_counters.push_back(47258);
        internal_counters.push_back(47494);
        internal_counters.push_back(47730);
        internal_counters.push_back(47966);
        internal_counters.push_back(48202);
        internal_counters.push_back(48438);
        internal_counters.push_back(48674);
        internal_counters.push_back(48910);
        internal_counters.push_back(49146);
        internal_counters.push_back(49382);
        internal_counters.push_back(49618);
        internal_counters.push_back(49854);
        internal_counters.push_back(50090);
        internal_counters.push_back(50326);
        internal_counters.push_back(50562);
        internal_counters.push_back(50798);
        internal_counters.push_back(51034);
        internal_counters.push_back(51270);
        internal_counters.push_back(51506);
        internal_counters.push_back(51742);
        internal_counters.push_back(51978);
        internal_counters.push_back(52214);
        internal_counters.push_back(52450);
        internal_counters.push_back(52686);
        internal_counters.push_back(52922);
        internal_counters.push_back(53158);
        internal_counters.push_back(53394);
        internal_counters.push_back(53630);
        internal_counters.push_back(53866);
        internal_counters.push_back(54102);
        internal_counters.push_back(54338);
        internal_counters.push_back(54574);
        internal_counters.push_back(54810);
        internal_counters.push_back(55046);
        internal_counters.push_back(55282);
        internal_counters.push_back(55518);
        internal_counters.push_back(55754);
        internal_counters.push_back(55990);
        internal_counters.push_back(56226);
        internal_counters.push_back(56462);
        internal_counters.push_back(56698);
        internal_counters.push_back(56934);
        internal_counters.push_back(57170);
        internal_counters.push_back(57406);
        internal_counters.push_back(57642);
        internal_counters.push_back(57878);
        internal_counters.push_back(58114);
        internal_counters.push_back(58350);
        internal_counters.push_back(58586);
        internal_counters.push_back(58822);
        internal_counters.push_back(59058);
        internal_counters.push_back(59294);
        internal_counters.push_back(59530);
        internal_counters.push_back(59766);
        internal_counters.push_back(60002);
        internal_counters.push_back(60238);
        internal_counters.push_back(60474);
        internal_counters.push_back(60710);
        internal_counters.push_back(60946);
        internal_counters.push_back(61182);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("TexUnitBusy", "Timing", "The percentage of GPUTime the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96,96,/,(100),*", "36afb8d9-42fc-aafe-66c5-449542153b2c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38762);
        internal_counters.push_back(38998);
        internal_counters.push_back(39234);
        internal_counters.push_back(39470);
        internal_counters.push_back(39706);
        internal_counters.push_back(39942);
        internal_counters.push_back(40178);
        internal_counters.push_back(40414);
        internal_counters.push_back(40650);
        internal_counters.push_back(40886);
        internal_counters.push_back(41122);
        internal_counters.push_back(41358);
        internal_counters.push_back(41594);
        internal_counters.push_back(41830);
        internal_counters.push_back(42066);
        internal_counters.push_back(42302);
        internal_counters.push_back(42538);
        internal_counters.push_back(42774);
        internal_counters.push_back(43010);
        internal_counters.push_back(43246);
        internal_counters.push_back(43482);
        internal_counters.push_back(43718);
        internal_counters.push_back(43954);
        internal_counters.push_back(44190);
        internal_counters.push_back(44426);
        internal_counters.push_back(44662);
        internal_counters.push_back(44898);
        internal_counters.push_back(45134);
        internal_counters.push_back(45370);
        internal_counters.push_back(45606);
        internal_counters.push_back(45842);
        internal_counters.push_back(46078);
        internal_counters.push_back(46314);
        internal_counters.push_back(46550);
        internal_counters.push_back(46786);
        internal_counters.push_back(47022);
        internal_counters.push_back(47258);
        internal_counters.push_back(47494);
        internal_counters.push_back(47730);
        internal_counters.push_back(47966);
        internal_counters.push_back(48202);
        internal_counters.push_back(48438);
        internal_counters.push_back(48674);
        internal_counters.push_back(48910);
        internal_counters.push_back(49146);
        internal_counters.push_back(49382);
        internal_counters.push_back(49618);
        internal_counters.push_back(49854);
        internal_counters.push_back(50090);
        internal_counters.push_back(50326);
        internal_counters.push_back(50562);
        internal_counters.push_back(50798);
        internal_counters.push_back(51034);
        internal_counters.push_back(51270);
        internal_counters.push_back(51506);
        internal_counters.push_back(51742);
        internal_counters.push_back(51978);
        internal_counters.push_back(52214);
        internal_counters.push_back(52450);
        internal_counters.push_back(52686);
        internal_counters.push_back(52922);
        internal_counters.push_back(53158);
        internal_counters.push_back(53394);
        internal_counters.push_back(53630);
        internal_counters.push_back(53866);
        internal_counters.push_back(54102);
        internal_counters.push_back(54338);
        internal_counters.push_back(54574);
        internal_counters.push_back(54810);
        internal_counters.push_back(55046);
        internal_counters.push_back(55282);
        internal_counters.push_back(55518);
        internal_counters.push_back(55754);
        internal_counters.push_back(55990);
        internal_counters.push_back(56226);
        internal_counters.push_back(56462);
        internal_counters.push_back(56698);
        internal_counters.push_back(56934);
        internal_counters.push_back(57170);
        internal_counters.push_back(57406);
        internal_counters.push_back(57642);
        internal_counters.push_back(57878);
        internal_counters.push_back(58114);
        internal_counters.push_back(58350);
        internal_counters.push_back(58586);
        internal_counters.push_back(58822);
        internal_counters.push_back(59058);
        internal_counters.push_back(59294);
        internal_counters.push_back(59530);
        internal_counters.push_back(59766);
        internal_counters.push_back(60002);
        internal_counters.push_back(60238);
        internal_counters.push_back(60474);
        internal_counters.push_back(60710);
        internal_counters.push_back(60946);
        internal_counters.push_back(61182);

        c.DefineDerivedCounter("TexUnitBusyCycles", "Timing", "Number of GPU cycles the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96", "c68761f2-248c-4f39-6528-c308b1c0807c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38816);
        internal_counters.push_back(39052);
        internal_counters.push_back(39288);
        internal_counters.push_back(39524);
        internal_counters.push_back(39760);
        internal_counters.push_back(39996);
        internal_counters.push_back(40232);
        internal_counters.push_back(40468);
        internal_counters.push_back(40704);
        internal_counters.push_back(40940);
        internal_counters.push_back(41176);
        internal_counters.push_back(41412);
        internal_counters.push_back(41648);
        internal_counters.push_back(41884);
        internal_counters.push_back(42120);
        internal_counters.push_back(42356);
        internal_counters.push_back(42592);
        internal_counters.push_back(42828);
        internal_counters.push_back(43064);
        internal_counters.push_back(43300);
        internal_counters.push_back(43536);
        internal_counters.push_back(43772);
        internal_counters.push_back(44008);
        internal_counters.push_back(44244);
        internal_counters.push_back(44480);
        internal_counters.push_back(44716);
        internal_counters.push_back(44952);
        internal_counters.push_back(45188);
        internal_counters.push_back(45424);
        internal_counters.push_back(45660);
        internal_counters.push_back(45896);
        internal_counters.push_back(46132);
        internal_counters.push_back(46368);
        internal_counters.push_back(46604);
        internal_counters.push_back(46840);
        internal_counters.push_back(47076);
        internal_counters.push_back(47312);
        internal_counters.push_back(47548);
        internal_counters.push_back(47784);
        internal_counters.push_back(48020);
        internal_counters.push_back(48256);
        internal_counters.push_back(48492);
        internal_counters.push_back(48728);
        internal_counters.push_back(48964);
        internal_counters.push_back(49200);
        internal_counters.push_back(49436);
        internal_counters.push_back(49672);
        internal_counters.push_back(49908);
        internal_counters.push_back(50144);
        internal_counters.push_back(50380);
        internal_counters.push_back(50616);
        internal_counters.push_back(50852);
        internal_counters.push_back(51088);
        internal_counters.push_back(51324);
        internal_counters.push_back(51560);
        internal_counters.push_back(51796);
        internal_counters.push_back(52032);
        internal_counters.push_back(52268);
        internal_counters.push_back(52504);
        internal_counters.push_back(52740);
        internal_counters.push_back(52976);
        internal_counters.push_back(53212);
        internal_counters.push_back(53448);
        internal_counters.push_back(53684);
        internal_counters.push_back(53920);
        internal_counters.push_back(54156);
        internal_counters.push_back(54392);
        internal_counters.push_back(54628);
        internal_counters.push_back(54864);
        internal_counters.push_back(55100);
        internal_counters.push_back(55336);
        internal_counters.push_back(55572);
        internal_counters.push_back(55808);
        internal_counters.push_back(56044);
        internal_counters.push_back(56280);
        internal_counters.push_back(56516);
        internal_counters.push_back(56752);
        internal_counters.push_back(56988);
        internal_counters.push_back(57224);
        internal_counters.push_back(57460);
        internal_counters.push_back(57696);
        internal_counters.push_back(57932);
        internal_counters.push_back(58168);
        internal_counters.push_back(58404);
        internal_counters.push_back(58640);
        internal_counters.push_back(58876);
        internal_counters.push_back(59112);
        internal_counters.push_back(59348);
        internal_counters.push_back(59584);
        internal_counters.push_back(59820);
        internal_counters.push_back(60056);
        internal_counters.push_back(60292);
        internal_counters.push_back(60528);
        internal_counters.push_back(60764);
        internal_counters.push_back(61000);
        internal_counters.push_back(61236);
        internal_counters.push_back(38815);
        internal_counters.push_back(39051);
        internal_counters.push_back(39287);
        internal_counters.push_back(39523);
        internal_counters.push_back(39759);
        internal_counters.push_back(39995);
        internal_counters.push_back(40231);
        internal_counters.push_back(40467);
        internal_counters.push_back(40703);
        internal_counters.push_back(40939);
        internal_counters.push_back(41175);
        internal_counters.push_back(41411);
        internal_counters.push_back(41647);
        internal_counters.push_back(41883);
        internal_counters.push_back(42119);
        internal_counters.push_back(42355);
        internal_counters.push_back(42591);
        internal_counters.push_back(42827);
        internal_counters.push_back(43063);
        internal_counters.push_back(43299);
        internal_counters.push_back(43535);
        internal_counters.push_back(43771);
        internal_counters.push_back(44007);
        internal_counters.push_back(44243);
        internal_counters.push_back(44479);
        internal_counters.push_back(44715);
        internal_counters.push_back(44951);
        internal_counters.push_back(45187);
        internal_counters.push_back(45423);
        internal_counters.push_back(45659);
        internal_counters.push_back(45895);
        internal_counters.push_back(46131);
        internal_counters.push_back(46367);
        internal_counters.push_back(46603);
        internal_counters.push_back(46839);
        internal_counters.push_back(47075);
        internal_counters.push_back(47311);
        internal_counters.push_back(47547);
        internal_counters.push_back(47783);
        internal_counters.push_back(48019);
        internal_counters.push_back(48255);
        internal_counters.push_back(48491);
        internal_counters.push_back(48727);
        internal_counters.push_back(48963);
        internal_counters.push_back(49199);
        internal_counters.push_back(49435);
        internal_counters.push_back(49671);
        internal_counters.push_back(49907);
        internal_counters.push_back(50143);
        internal_counters.push_back(50379);
        internal_counters.push_back(50615);
        internal_counters.push_back(50851);
        internal_counters.push_back(51087);
        internal_counters.push_back(51323);
        internal_counters.push_back(51559);
        internal_counters.push_back(51795);
        internal_counters.push_back(52031);
        internal_counters.push_back(52267);
        internal_counters.push_back(52503);
        internal_counters.push_back(52739);
        internal_counters.push_back(52975);
        internal_counters.push_back(53211);
        internal_counters.push_back(53447);
        internal_counters.push_back(53683);
        internal_counters.push_back(53919);
        internal_counters.push_back(54155);
        internal_counters.push_back(54391);
        internal_counters.push_back(54627);
        internal_counters.push_back(54863);
        internal_counters.push_back(55099);
        internal_counters.push_back(55335);
        internal_counters.push_back(55571);
        internal_counters.push_back(55807);
        internal_counters.push_back(56043);
        internal_counters.push_back(56279);
        internal_counters.push_back(56515);
        internal_counters.push_back(56751);
        internal_counters.push_back(56987);
        internal_counters.push_back(57223);
        internal_counters.push_back(57459);
        internal_counters.push_back(57695);
        internal_counters.push_back(57931);
        internal_counters.push_back(58167);
        internal_counters.push_back(58403);
        internal_counters.push_back(58639);
        internal_counters.push_back(58875);
        internal_counters.push_back(59111);
        internal_counters.push_back(59347);
        internal_counters.push_back(59583);
        internal_counters.push_back(59819);
        internal_counters.push_back(60055);
        internal_counters.push_back(60291);
        internal_counters.push_back(60527);
        internal_counters.push_back(60763);
        internal_counters.push_back(60999);
        internal_counters.push_back(61235);

        c.DefineDerivedCounter("TexTriFilteringPct", "TextureUnit", "Percentage of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum96,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,+,/,(100),*", "1affc3c8-b917-5c81-622b-7004527208ae");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38816);
        internal_counters.push_back(39052);
        internal_counters.push_back(39288);
        internal_counters.push_back(39524);
        internal_counters.push_back(39760);
        internal_counters.push_back(39996);
        internal_counters.push_back(40232);
        internal_counters.push_back(40468);
        internal_counters.push_back(40704);
        internal_counters.push_back(40940);
        internal_counters.push_back(41176);
        internal_counters.push_back(41412);
        internal_counters.push_back(41648);
        internal_counters.push_back(41884);
        internal_counters.push_back(42120);
        internal_counters.push_back(42356);
        internal_counters.push_back(42592);
        internal_counters.push_back(42828);
        internal_counters.push_back(43064);
        internal_counters.push_back(43300);
        internal_counters.push_back(43536);
        internal_counters.push_back(43772);
        internal_counters.push_back(44008);
        internal_counters.push_back(44244);
        internal_counters.push_back(44480);
        internal_counters.push_back(44716);
        internal_counters.push_back(44952);
        internal_counters.push_back(45188);
        internal_counters.push_back(45424);
        internal_counters.push_back(45660);
        internal_counters.push_back(45896);
        internal_counters.push_back(46132);
        internal_counters.push_back(46368);
        internal_counters.push_back(46604);
        internal_counters.push_back(46840);
        internal_counters.push_back(47076);
        internal_counters.push_back(47312);
        internal_counters.push_back(47548);
        internal_counters.push_back(47784);
        internal_counters.push_back(48020);
        internal_counters.push_back(48256);
        internal_counters.push_back(48492);
        internal_counters.push_back(48728);
        internal_counters.push_back(48964);
        internal_counters.push_back(49200);
        internal_counters.push_back(49436);
        internal_counters.push_back(49672);
        internal_counters.push_back(49908);
        internal_counters.push_back(50144);
        internal_counters.push_back(50380);
        internal_counters.push_back(50616);
        internal_counters.push_back(50852);
        internal_counters.push_back(51088);
        internal_counters.push_back(51324);
        internal_counters.push_back(51560);
        internal_counters.push_back(51796);
        internal_counters.push_back(52032);
        internal_counters.push_back(52268);
        internal_counters.push_back(52504);
        internal_counters.push_back(52740);
        internal_counters.push_back(52976);
        internal_counters.push_back(53212);
        internal_counters.push_back(53448);
        internal_counters.push_back(53684);
        internal_counters.push_back(53920);
        internal_counters.push_back(54156);
        internal_counters.push_back(54392);
        internal_counters.push_back(54628);
        internal_counters.push_back(54864);
        internal_counters.push_back(55100);
        internal_counters.push_back(55336);
        internal_counters.push_back(55572);
        internal_counters.push_back(55808);
        internal_counters.push_back(56044);
        internal_counters.push_back(56280);
        internal_counters.push_back(56516);
        internal_counters.push_back(56752);
        internal_counters.push_back(56988);
        internal_counters.push_back(57224);
        internal_counters.push_back(57460);
        internal_counters.push_back(57696);
        internal_counters.push_back(57932);
        internal_counters.push_back(58168);
        internal_counters.push_back(58404);
        internal_counters.push_back(58640);
        internal_counters.push_back(58876);
        internal_counters.push_back(59112);
        internal_counters.push_back(59348);
        internal_counters.push_back(59584);
        internal_counters.push_back(59820);
        internal_counters.push_back(60056);
        internal_counters.push_back(60292);
        internal_counters.push_back(60528);
        internal_counters.push_back(60764);
        internal_counters.push_back(61000);
        internal_counters.push_back(61236);

        c.DefineDerivedCounter("TexTriFilteringCount", "TextureUnit", "Count of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,(4),*", "5785b3a1-a513-18db-4b1c-bdeef75bb2b6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38815);
        internal_counters.push_back(39051);
        internal_counters.push_back(39287);
        internal_counters.push_back(39523);
        internal_counters.push_back(39759);
        internal_counters.push_back(39995);
        internal_counters.push_back(40231);
        internal_counters.push_back(40467);
        internal_counters.push_back(40703);
        internal_counters.push_back(40939);
        internal_counters.push_back(41175);
        internal_counters.push_back(41411);
        internal_counters.push_back(41647);
        internal_counters.push_back(41883);
        internal_counters.push_back(42119);
        internal_counters.push_back(42355);
        internal_counters.push_back(42591);
        internal_counters.push_back(42827);
        internal_counters.push_back(43063);
        internal_counters.push_back(43299);
        internal_counters.push_back(43535);
        internal_counters.push_back(43771);
        internal_counters.push_back(44007);
        internal_counters.push_back(44243);
        internal_counters.push_back(44479);
        internal_counters.push_back(44715);
        internal_counters.push_back(44951);
        internal_counters.push_back(45187);
        internal_counters.push_back(45423);
        internal_counters.push_back(45659);
        internal_counters.push_back(45895);
        internal_counters.push_back(46131);
        internal_counters.push_back(46367);
        internal_counters.push_back(46603);
        internal_counters.push_back(46839);
        internal_counters.push_back(47075);
        internal_counters.push_back(47311);
        internal_counters.push_back(47547);
        internal_counters.push_back(47783);
        internal_counters.push_back(48019);
        internal_counters.push_back(48255);
        internal_counters.push_back(48491);
        internal_counters.push_back(48727);
        internal_counters.push_back(48963);
        internal_counters.push_back(49199);
        internal_counters.push_back(49435);
        internal_counters.push_back(49671);
        internal_counters.push_back(49907);
        internal_counters.push_back(50143);
        internal_counters.push_back(50379);
        internal_counters.push_back(50615);
        internal_counters.push_back(50851);
        internal_counters.push_back(51087);
        internal_counters.push_back(51323);
        internal_counters.push_back(51559);
        internal_counters.push_back(51795);
        internal_counters.push_back(52031);
        internal_counters.push_back(52267);
        internal_counters.push_back(52503);
        internal_counters.push_back(52739);
        internal_counters.push_back(52975);
        internal_counters.push_back(53211);
        internal_counters.push_back(53447);
        internal_counters.push_back(53683);
        internal_counters.push_back(53919);
        internal_counters.push_back(54155);
        internal_counters.push_back(54391);
        internal_counters.push_back(54627);
        internal_counters.push_back(54863);
        internal_counters.push_back(55099);
        internal_counters.push_back(55335);
        internal_counters.push_back(55571);
        internal_counters.push_back(55807);
        internal_counters.push_back(56043);
        internal_counters.push_back(56279);
        internal_counters.push_back(56515);
        internal_counters.push_back(56751);
        internal_counters.push_back(56987);
        internal_counters.push_back(57223);
        internal_counters.push_back(57459);
        internal_counters.push_back(57695);
        internal_counters.push_back(57931);
        internal_counters.push_back(58167);
        internal_counters.push_back(58403);
        internal_counters.push_back(58639);
        internal_counters.push_back(58875);
        internal_counters.push_back(59111);
        internal_counters.push_back(59347);
        internal_counters.push_back(59583);
        internal_counters.push_back(59819);
        internal_counters.push_back(60055);
        internal_counters.push_back(60291);
        internal_counters.push_back(60527);
        internal_counters.push_back(60763);
        internal_counters.push_back(60999);
        internal_counters.push_back(61235);

        c.DefineDerivedCounter("NoTexTriFilteringCount", "TextureUnit", "Count of pixels that did not receive trilinear filtering.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,(4),*", "179da29a-81af-c06e-ce8c-a0a731ea030d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38818);
        internal_counters.push_back(39054);
        internal_counters.push_back(39290);
        internal_counters.push_back(39526);
        internal_counters.push_back(39762);
        internal_counters.push_back(39998);
        internal_counters.push_back(40234);
        internal_counters.push_back(40470);
        internal_counters.push_back(40706);
        internal_counters.push_back(40942);
        internal_counters.push_back(41178);
        internal_counters.push_back(41414);
        internal_counters.push_back(41650);
        internal_counters.push_back(41886);
        internal_counters.push_back(42122);
        internal_counters.push_back(42358);
        internal_counters.push_back(42594);
        internal_counters.push_back(42830);
        internal_counters.push_back(43066);
        internal_counters.push_back(43302);
        internal_counters.push_back(43538);
        internal_counters.push_back(43774);
        internal_counters.push_back(44010);
        internal_counters.push_back(44246);
        internal_counters.push_back(44482);
        internal_counters.push_back(44718);
        internal_counters.push_back(44954);
        internal_counters.push_back(45190);
        internal_counters.push_back(45426);
        internal_counters.push_back(45662);
        internal_counters.push_back(45898);
        internal_counters.push_back(46134);
        internal_counters.push_back(46370);
        internal_counters.push_back(46606);
        internal_counters.push_back(46842);
        internal_counters.push_back(47078);
        internal_counters.push_back(47314);
        internal_counters.push_back(47550);
        internal_counters.push_back(47786);
        internal_counters.push_back(48022);
        internal_counters.push_back(48258);
        internal_counters.push_back(48494);
        internal_counters.push_back(48730);
        internal_counters.push_back(48966);
        internal_counters.push_back(49202);
        internal_counters.push_back(49438);
        internal_counters.push_back(49674);
        internal_counters.push_back(49910);
        internal_counters.push_back(50146);
        internal_counters.push_back(50382);
        internal_counters.push_back(50618);
        internal_counters.push_back(50854);
        internal_counters.push_back(51090);
        internal_counters.push_back(51326);
        internal_counters.push_back(51562);
        internal_counters.push_back(51798);
        internal_counters.push_back(52034);
        internal_counters.push_back(52270);
        internal_counters.push_back(52506);
        internal_counters.push_back(52742);
        internal_counters.push_back(52978);
        internal_counters.push_back(53214);
        internal_counters.push_back(53450);
        internal_counters.push_back(53686);
        internal_counters.push_back(53922);
        internal_counters.push_back(54158);
        internal_counters.push_back(54394);
        internal_counters.push_back(54630);
        internal_counters.push_back(54866);
        internal_counters.push_back(55102);
        internal_counters.push_back(55338);
        internal_counters.push_back(55574);
        internal_counters.push_back(55810);
        internal_counters.push_back(56046);
        internal_counters.push_back(56282);
        internal_counters.push_back(56518);
        internal_counters.push_back(56754);
        internal_counters.push_back(56990);
        internal_counters.push_back(57226);
        internal_counters.push_back(57462);
        internal_counters.push_back(57698);
        internal_counters.push_back(57934);
        internal_counters.push_back(58170);
        internal_counters.push_back(58406);
        internal_counters.push_back(58642);
        internal_counters.push_back(58878);
        internal_counters.push_back(59114);
        internal_counters.push_back(59350);
        internal_counters.push_back(59586);
        internal_counters.push_back(59822);
        internal_counters.push_back(60058);
        internal_counters.push_back(60294);
        internal_counters.push_back(60530);
        internal_counters.push_back(60766);
        internal_counters.push_back(61002);
        internal_counters.push_back(61238);
        internal_counters.push_back(38817);
        internal_counters.push_back(39053);
        internal_counters.push_back(39289);
        internal_counters.push_back(39525);
        internal_counters.push_back(39761);
        internal_counters.push_back(39997);
        internal_counters.push_back(40233);
        internal_counters.push_back(40469);
        internal_counters.push_back(40705);
        internal_counters.push_back(40941);
        internal_counters.push_back(41177);
        internal_counters.push_back(41413);
        internal_counters.push_back(41649);
        internal_counters.push_back(41885);
        internal_counters.push_back(42121);
        internal_counters.push_back(42357);
        internal_counters.push_back(42593);
        internal_counters.push_back(42829);
        internal_counters.push_back(43065);
        internal_counters.push_back(43301);
        internal_counters.push_back(43537);
        internal_counters.push_back(43773);
        internal_counters.push_back(44009);
        internal_counters.push_back(44245);
        internal_counters.push_back(44481);
        internal_counters.push_back(44717);
        internal_counters.push_back(44953);
        internal_counters.push_back(45189);
        internal_counters.push_back(45425);
        internal_counters.push_back(45661);
        internal_counters.push_back(45897);
        internal_counters.push_back(46133);
        internal_counters.push_back(46369);
        internal_counters.push_back(46605);
        internal_counters.push_back(46841);
        internal_counters.push_back(47077);
        internal_counters.push_back(47313);
        internal_counters.push_back(47549);
        internal_counters.push_back(47785);
        internal_counters.push_back(48021);
        internal_counters.push_back(48257);
        internal_counters.push_back(48493);
        internal_counters.push_back(48729);
        internal_counters.push_back(48965);
        internal_counters.push_back(49201);
        internal_counters.push_back(49437);
        internal_counters.push_back(49673);
        internal_counters.push_back(49909);
        internal_counters.push_back(50145);
        internal_counters.push_back(50381);
        internal_counters.push_back(50617);
        internal_counters.push_back(50853);
        internal_counters.push_back(51089);
        internal_counters.push_back(51325);
        internal_counters.push_back(51561);
        internal_counters.push_back(51797);
        internal_counters.push_back(52033);
        internal_counters.push_back(52269);
        internal_counters.push_back(52505);
        internal_counters.push_back(52741);
        internal_counters.push_back(52977);
        internal_counters.push_back(53213);
        internal_counters.push_back(53449);
        internal_counters.push_back(53685);
        internal_counters.push_back(53921);
        internal_counters.push_back(54157);
        internal_counters.push_back(54393);
        internal_counters.push_back(54629);
        internal_counters.push_back(54865);
        internal_counters.push_back(55101);
        internal_counters.push_back(55337);
        internal_counters.push_back(55573);
        internal_counters.push_back(55809);
        internal_counters.push_back(56045);
        internal_counters.push_back(56281);
        internal_counters.push_back(56517);
        internal_counters.push_back(56753);
        internal_counters.push_back(56989);
        internal_counters.push_back(57225);
        internal_counters.push_back(57461);
        internal_counters.push_back(57697);
        internal_counters.push_back(57933);
        internal_counters.push_back(58169);
        internal_counters.push_back(58405);
        internal_counters.push_back(58641);
        internal_counters.push_back(58877);
        internal_counters.push_back(59113);
        internal_counters.push_back(59349);
        internal_counters.push_back(59585);
        internal_counters.push_back(59821);
        internal_counters.push_back(60057);
        internal_counters.push_back(60293);
        internal_counters.push_back(60529);
        internal_counters.push_back(60765);
        internal_counters.push_back(61001);
        internal_counters.push_back(61237);

        c.DefineDerivedCounter("TexVolFilteringPct", "TextureUnit", "Percentage of pixels that received volume filtering.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum96,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,+,/,(100),*", "b5ff6bed-3178-aee4-42dd-c74391c02a2d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38818);
        internal_counters.push_back(39054);
        internal_counters.push_back(39290);
        internal_counters.push_back(39526);
        internal_counters.push_back(39762);
        internal_counters.push_back(39998);
        internal_counters.push_back(40234);
        internal_counters.push_back(40470);
        internal_counters.push_back(40706);
        internal_counters.push_back(40942);
        internal_counters.push_back(41178);
        internal_counters.push_back(41414);
        internal_counters.push_back(41650);
        internal_counters.push_back(41886);
        internal_counters.push_back(42122);
        internal_counters.push_back(42358);
        internal_counters.push_back(42594);
        internal_counters.push_back(42830);
        internal_counters.push_back(43066);
        internal_counters.push_back(43302);
        internal_counters.push_back(43538);
        internal_counters.push_back(43774);
        internal_counters.push_back(44010);
        internal_counters.push_back(44246);
        internal_counters.push_back(44482);
        internal_counters.push_back(44718);
        internal_counters.push_back(44954);
        internal_counters.push_back(45190);
        internal_counters.push_back(45426);
        internal_counters.push_back(45662);
        internal_counters.push_back(45898);
        internal_counters.push_back(46134);
        internal_counters.push_back(46370);
        internal_counters.push_back(46606);
        internal_counters.push_back(46842);
        internal_counters.push_back(47078);
        internal_counters.push_back(47314);
        internal_counters.push_back(47550);
        internal_counters.push_back(47786);
        internal_counters.push_back(48022);
        internal_counters.push_back(48258);
        internal_counters.push_back(48494);
        internal_counters.push_back(48730);
        internal_counters.push_back(48966);
        internal_counters.push_back(49202);
        internal_counters.push_back(49438);
        internal_counters.push_back(49674);
        internal_counters.push_back(49910);
        internal_counters.push_back(50146);
        internal_counters.push_back(50382);
        internal_counters.push_back(50618);
        internal_counters.push_back(50854);
        internal_counters.push_back(51090);
        internal_counters.push_back(51326);
        internal_counters.push_back(51562);
        internal_counters.push_back(51798);
        internal_counters.push_back(52034);
        internal_counters.push_back(52270);
        internal_counters.push_back(52506);
        internal_counters.push_back(52742);
        internal_counters.push_back(52978);
        internal_counters.push_back(53214);
        internal_counters.push_back(53450);
        internal_counters.push_back(53686);
        internal_counters.push_back(53922);
        internal_counters.push_back(54158);
        internal_counters.push_back(54394);
        internal_counters.push_back(54630);
        internal_counters.push_back(54866);
        internal_counters.push_back(55102);
        internal_counters.push_back(55338);
        internal_counters.push_back(55574);
        internal_counters.push_back(55810);
        internal_counters.push_back(56046);
        internal_counters.push_back(56282);
        internal_counters.push_back(56518);
        internal_counters.push_back(56754);
        internal_counters.push_back(56990);
        internal_counters.push_back(57226);
        internal_counters.push_back(57462);
        internal_counters.push_back(57698);
        internal_counters.push_back(57934);
        internal_counters.push_back(58170);
        internal_counters.push_back(58406);
        internal_counters.push_back(58642);
        internal_counters.push_back(58878);
        internal_counters.push_back(59114);
        internal_counters.push_back(59350);
        internal_counters.push_back(59586);
        internal_counters.push_back(59822);
        internal_counters.push_back(60058);
        internal_counters.push_back(60294);
        internal_counters.push_back(60530);
        internal_counters.push_back(60766);
        internal_counters.push_back(61002);
        internal_counters.push_back(61238);

        c.DefineDerivedCounter("TexVolFilteringCount", "TextureUnit", "Count of pixels that received volume filtering.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,(4),*", "4bddc587-d589-8128-e18c-762eab2c871f");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38817);
        internal_counters.push_back(39053);
        internal_counters.push_back(39289);
        internal_counters.push_back(39525);
        internal_counters.push_back(39761);
        internal_counters.push_back(39997);
        internal_counters.push_back(40233);
        internal_counters.push_back(40469);
        internal_counters.push_back(40705);
        internal_counters.push_back(40941);
        internal_counters.push_back(41177);
        internal_counters.push_back(41413);
        internal_counters.push_back(41649);
        internal_counters.push_back(41885);
        internal_counters.push_back(42121);
        internal_counters.push_back(42357);
        internal_counters.push_back(42593);
        internal_counters.push_back(42829);
        internal_counters.push_back(43065);
        internal_counters.push_back(43301);
        internal_counters.push_back(43537);
        internal_counters.push_back(43773);
        internal_counters.push_back(44009);
        internal_counters.push_back(44245);
        internal_counters.push_back(44481);
        internal_counters.push_back(44717);
        internal_counters.push_back(44953);
        internal_counters.push_back(45189);
        internal_counters.push_back(45425);
        internal_counters.push_back(45661);
        internal_counters.push_back(45897);
        internal_counters.push_back(46133);
        internal_counters.push_back(46369);
        internal_counters.push_back(46605);
        internal_counters.push_back(46841);
        internal_counters.push_back(47077);
        internal_counters.push_back(47313);
        internal_counters.push_back(47549);
        internal_counters.push_back(47785);
        internal_counters.push_back(48021);
        internal_counters.push_back(48257);
        internal_counters.push_back(48493);
        internal_counters.push_back(48729);
        internal_counters.push_back(48965);
        internal_counters.push_back(49201);
        internal_counters.push_back(49437);
        internal_counters.push_back(49673);
        internal_counters.push_back(49909);
        internal_counters.push_back(50145);
        internal_counters.push_back(50381);
        internal_counters.push_back(50617);
        internal_counters.push_back(50853);
        internal_counters.push_back(51089);
        internal_counters.push_back(51325);
        internal_counters.push_back(51561);
        internal_counters.push_back(51797);
        internal_counters.push_back(52033);
        internal_counters.push_back(52269);
        internal_counters.push_back(52505);
        internal_counters.push_back(52741);
        internal_counters.push_back(52977);
        internal_counters.push_back(53213);
        internal_counters.push_back(53449);
        internal_counters.push_back(53685);
        internal_counters.push_back(53921);
        internal_counters.push_back(54157);
        internal_counters.push_back(54393);
        internal_counters.push_back(54629);
        internal_counters.push_back(54865);
        internal_counters.push_back(55101);
        internal_counters.push_back(55337);
        internal_counters.push_back(55573);
        internal_counters.push_back(55809);
        internal_counters.push_back(56045);
        internal_counters.push_back(56281);
        internal_counters.push_back(56517);
        internal_counters.push_back(56753);
        internal_counters.push_back(56989);
        internal_counters.push_back(57225);
        internal_counters.push_back(57461);
        internal_counters.push_back(57697);
        internal_counters.push_back(57933);
        internal_counters.push_back(58169);
        internal_counters.push_back(58405);
        internal_counters.push_back(58641);
        internal_counters.push_back(58877);
        internal_counters.push_back(59113);
        internal_counters.push_back(59349);
        internal_counters.push_back(59585);
        internal_counters.push_back(59821);
        internal_counters.push_back(60057);
        internal_counters.push_back(60293);
        internal_counters.push_back(60529);
        internal_counters.push_back(60765);
        internal_counters.push_back(61001);
        internal_counters.push_back(61237);

        c.DefineDerivedCounter("NoTexVolFilteringCount", "TextureUnit", "Count of pixels that did not receive volume filtering.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,(4),*", "9fe1a854-17c6-9d26-b2b9-80610cd5827d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38836);
        internal_counters.push_back(39072);
        internal_counters.push_back(39308);
        internal_counters.push_back(39544);
        internal_counters.push_back(39780);
        internal_counters.push_back(40016);
        internal_counters.push_back(40252);
        internal_counters.push_back(40488);
        internal_counters.push_back(40724);
        internal_counters.push_back(40960);
        internal_counters.push_back(41196);
        internal_counters.push_back(41432);
        internal_counters.push_back(41668);
        internal_counters.push_back(41904);
        internal_counters.push_back(42140);
        internal_counters.push_back(42376);
        internal_counters.push_back(42612);
        internal_counters.push_back(42848);
        internal_counters.push_back(43084);
        internal_counters.push_back(43320);
        internal_counters.push_back(43556);
        internal_counters.push_back(43792);
        internal_counters.push_back(44028);
        internal_counters.push_back(44264);
        internal_counters.push_back(44500);
        internal_counters.push_back(44736);
        internal_counters.push_back(44972);
        internal_counters.push_back(45208);
        internal_counters.push_back(45444);
        internal_counters.push_back(45680);
        internal_counters.push_back(45916);
        internal_counters.push_back(46152);
        internal_counters.push_back(46388);
        internal_counters.push_back(46624);
        internal_counters.push_back(46860);
        internal_counters.push_back(47096);
        internal_counters.push_back(47332);
        internal_counters.push_back(47568);
        internal_counters.push_back(47804);
        internal_counters.push_back(48040);
        internal_counters.push_back(48276);
        internal_counters.push_back(48512);
        internal_counters.push_back(48748);
        internal_counters.push_back(48984);
        internal_counters.push_back(49220);
        internal_counters.push_back(49456);
        internal_counters.push_back(49692);
        internal_counters.push_back(49928);
        internal_counters.push_back(50164);
        internal_counters.push_back(50400);
        internal_counters.push_back(50636);
        internal_counters.push_back(50872);
        internal_counters.push_back(51108);
        internal_counters.push_back(51344);
        internal_counters.push_back(51580);
        internal_counters.push_back(51816);
        internal_counters.push_back(52052);
        internal_counters.push_back(52288);
        internal_counters.push_back(52524);
        internal_counters.push_back(52760);
        internal_counters.push_back(52996);
        internal_counters.push_back(53232);
        internal_counters.push_back(53468);
        internal_counters.push_back(53704);
        internal_counters.push_back(53940);
        internal_counters.push_back(54176);
        internal_counters.push_back(54412);
        internal_counters.push_back(54648);
        internal_counters.push_back(54884);
        internal_counters.push_back(55120);
        internal_counters.push_back(55356);
        internal_counters.push_back(55592);
        internal_counters.push_back(55828);
        internal_counters.push_back(56064);
        internal_counters.push_back(56300);
        internal_counters.push_back(56536);
        internal_counters.push_back(56772);
        internal_counters.push_back(57008);
        internal_counters.push_back(57244);
        internal_counters.push_back(57480);
        internal_counters.push_back(57716);
        internal_counters.push_back(57952);
        internal_counters.push_back(58188);
        internal_counters.push_back(58424);
        internal_counters.push_back(58660);
        internal_counters.push_back(58896);
        internal_counters.push_back(59132);
        internal_counters.push_back(59368);
        internal_counters.push_back(59604);
        internal_counters.push_back(59840);
        internal_counters.push_back(60076);
        internal_counters.push_back(60312);
        internal_counters.push_back(60548);
        internal_counters.push_back(60784);
        internal_counters.push_back(61020);
        internal_counters.push_back(61256);
        internal_counters.push_back(38837);
        internal_counters.push_back(39073);
        internal_counters.push_back(39309);
        internal_counters.push_back(39545);
        internal_counters.push_back(39781);
        internal_counters.push_back(40017);
        internal_counters.push_back(40253);
        internal_counters.push_back(40489);
        internal_counters.push_back(40725);
        internal_counters.push_back(40961);
        internal_counters.push_back(41197);
        internal_counters.push_back(41433);
        internal_counters.push_back(41669);
        internal_counters.push_back(41905);
        internal_counters.push_back(42141);
        internal_counters.push_back(42377);
        internal_counters.push_back(42613);
        internal_counters.push_back(42849);
        internal_counters.push_back(43085);
        internal_counters.push_back(43321);
        internal_counters.push_back(43557);
        internal_counters.push_back(43793);
        internal_counters.push_back(44029);
        internal_counters.push_back(44265);
        internal_counters.push_back(44501);
        internal_counters.push_back(44737);
        internal_counters.push_back(44973);
        internal_counters.push_back(45209);
        internal_counters.push_back(45445);
        internal_counters.push_back(45681);
        internal_counters.push_back(45917);
        internal_counters.push_back(46153);
        internal_counters.push_back(46389);
        internal_counters.push_back(46625);
        internal_counters.push_back(46861);
        internal_counters.push_back(47097);
        internal_counters.push_back(47333);
        internal_counters.push_back(47569);
        internal_counters.push_back(47805);
        internal_counters.push_back(48041);
        internal_counters.push_back(48277);
        internal_counters.push_back(48513);
        internal_counters.push_back(48749);
        internal_counters.push_back(48985);
        internal_counters.push_back(49221);
        internal_counters.push_back(49457);
        internal_counters.push_back(49693);
        internal_counters.push_back(49929);
        internal_counters.push_back(50165);
        internal_counters.push_back(50401);
        internal_counters.push_back(50637);
        internal_counters.push_back(50873);
        internal_counters.push_back(51109);
        internal_counters.push_back(51345);
        internal_counters.push_back(51581);
        internal_counters.push_back(51817);
        internal_counters.push_back(52053);
        internal_counters.push_back(52289);
        internal_counters.push_back(52525);
        internal_counters.push_back(52761);
        internal_counters.push_back(52997);
        internal_counters.push_back(53233);
        internal_counters.push_back(53469);
        internal_counters.push_back(53705);
        internal_counters.push_back(53941);
        internal_counters.push_back(54177);
        internal_counters.push_back(54413);
        internal_counters.push_back(54649);
        internal_counters.push_back(54885);
        internal_counters.push_back(55121);
        internal_counters.push_back(55357);
        internal_counters.push_back(55593);
        internal_counters.push_back(55829);
        internal_counters.push_back(56065);
        internal_counters.push_back(56301);
        internal_counters.push_back(56537);
        internal_counters.push_back(56773);
        internal_counters.push_back(57009);
        internal_counters.push_back(57245);
        internal_counters.push_back(57481);
        internal_counters.push_back(57717);
        internal_counters.push_back(57953);
        internal_counters.push_back(58189);
        internal_counters.push_back(58425);
        internal_counters.push_back(58661);
        internal_counters.push_back(58897);
        internal_counters.push_back(59133);
        internal_counters.push_back(59369);
        internal_counters.push_back(59605);
        internal_counters.push_back(59841);
        internal_counters.push_back(60077);
        internal_counters.push_back(60313);
        internal_counters.push_back(60549);
        internal_counters.push_back(60785);
        internal_counters.push_back(61021);
        internal_counters.push_back(61257);
        internal_counters.push_back(38838);
        internal_counters.push_back(39074);
        internal_counters.push_back(39310);
        internal_counters.push_back(39546);
        internal_counters.push_back(39782);
        internal_counters.push_back(40018);
        internal_counters.push_back(40254);
        internal_counters.push_back(40490);
        internal_counters.push_back(40726);
        internal_counters.push_back(40962);
        internal_counters.push_back(41198);
        internal_counters.push_back(41434);
        internal_counters.push_back(41670);
        internal_counters.push_back(41906);
        internal_counters.push_back(42142);
        internal_counters.push_back(42378);
        internal_counters.push_back(42614);
        internal_counters.push_back(42850);
        internal_counters.push_back(43086);
        internal_counters.push_back(43322);
        internal_counters.push_back(43558);
        internal_counters.push_back(43794);
        internal_counters.push_back(44030);
        internal_counters.push_back(44266);
        internal_counters.push_back(44502);
        internal_counters.push_back(44738);
        internal_counters.push_back(44974);
        internal_counters.push_back(45210);
        internal_counters.push_back(45446);
        internal_counters.push_back(45682);
        internal_counters.push_back(45918);
        internal_counters.push_back(46154);
        internal_counters.push_back(46390);
        internal_counters.push_back(46626);
        internal_counters.push_back(46862);
        internal_counters.push_back(47098);
        internal_counters.push_back(47334);
        internal_counters.push_back(47570);
        internal_counters.push_back(47806);
        internal_counters.push_back(48042);
        internal_counters.push_back(48278);
        internal_counters.push_back(48514);
        internal_counters.push_back(48750);
        internal_counters.push_back(48986);
        internal_counters.push_back(49222);
        internal_counters.push_back(49458);
        internal_counters.push_back(49694);
        internal_counters.push_back(49930);
        internal_counters.push_back(50166);
        internal_counters.push_back(50402);
        internal_counters.push_back(50638);
        internal_counters.push_back(50874);
        internal_counters.push_back(51110);
        internal_counters.push_back(51346);
        internal_counters.push_back(51582);
        internal_counters.push_back(51818);
        internal_counters.push_back(52054);
        internal_counters.push_back(52290);
        internal_counters.push_back(52526);
        internal_counters.push_back(52762);
        internal_counters.push_back(52998);
        internal_counters.push_back(53234);
        internal_counters.push_back(53470);
        internal_counters.push_back(53706);
        internal_counters.push_back(53942);
        internal_counters.push_back(54178);
        internal_counters.push_back(54414);
        internal_counters.push_back(54650);
        internal_counters.push_back(54886);
        internal_counters.push_back(55122);
        internal_counters.push_back(55358);
        internal_counters.push_back(55594);
        internal_counters.push_back(55830);
        internal_counters.push_back(56066);
        internal_counters.push_back(56302);
        internal_counters.push_back(56538);
        internal_counters.push_back(56774);
        internal_counters.push_back(57010);
        internal_counters.push_back(57246);
        internal_counters.push_back(57482);
        internal_counters.push_back(57718);
        internal_counters.push_back(57954);
        internal_counters.push_back(58190);
        internal_counters.push_back(58426);
        internal_counters.push_back(58662);
        internal_counters.push_back(58898);
        internal_counters.push_back(59134);
        internal_counters.push_back(59370);
        internal_counters.push_back(59606);
        internal_counters.push_back(59842);
        internal_counters.push_back(60078);
        internal_counters.push_back(60314);
        internal_counters.push_back(60550);
        internal_counters.push_back(60786);
        internal_counters.push_back(61022);
        internal_counters.push_back(61258);
        internal_counters.push_back(38839);
        internal_counters.push_back(39075);
        internal_counters.push_back(39311);
        internal_counters.push_back(39547);
        internal_counters.push_back(39783);
        internal_counters.push_back(40019);
        internal_counters.push_back(40255);
        internal_counters.push_back(40491);
        internal_counters.push_back(40727);
        internal_counters.push_back(40963);
        internal_counters.push_back(41199);
        internal_counters.push_back(41435);
        internal_counters.push_back(41671);
        internal_counters.push_back(41907);
        internal_counters.push_back(42143);
        internal_counters.push_back(42379);
        internal_counters.push_back(42615);
        internal_counters.push_back(42851);
        internal_counters.push_back(43087);
        internal_counters.push_back(43323);
        internal_counters.push_back(43559);
        internal_counters.push_back(43795);
        internal_counters.push_back(44031);
        internal_counters.push_back(44267);
        internal_counters.push_back(44503);
        internal_counters.push_back(44739);
        internal_counters.push_back(44975);
        internal_counters.push_back(45211);
        internal_counters.push_back(45447);
        internal_counters.push_back(45683);
        internal_counters.push_back(45919);
        internal_counters.push_back(46155);
        internal_counters.push_back(46391);
        internal_counters.push_back(46627);
        internal_counters.push_back(46863);
        internal_counters.push_back(47099);
        internal_counters.push_back(47335);
        internal_counters.push_back(47571);
        internal_counters.push_back(47807);
        internal_counters.push_back(48043);
        internal_counters.push_back(48279);
        internal_counters.push_back(48515);
        internal_counters.push_back(48751);
        internal_counters.push_back(48987);
        internal_counters.push_back(49223);
        internal_counters.push_back(49459);
        internal_counters.push_back(49695);
        internal_counters.push_back(49931);
        internal_counters.push_back(50167);
        internal_counters.push_back(50403);
        internal_counters.push_back(50639);
        internal_counters.push_back(50875);
        internal_counters.push_back(51111);
        internal_counters.push_back(51347);
        internal_counters.push_back(51583);
        internal_counters.push_back(51819);
        internal_counters.push_back(52055);
        internal_counters.push_back(52291);
        internal_counters.push_back(52527);
        internal_counters.push_back(52763);
        internal_counters.push_back(52999);
        internal_counters.push_back(53235);
        internal_counters.push_back(53471);
        internal_counters.push_back(53707);
        internal_counters.push_back(53943);
        internal_counters.push_back(54179);
        internal_counters.push_back(54415);
        internal_counters.push_back(54651);
        internal_counters.push_back(54887);
        internal_counters.push_back(55123);
        internal_counters.push_back(55359);
        internal_counters.push_back(55595);
        internal_counters.push_back(55831);
        internal_counters.push_back(56067);
        internal_counters.push_back(56303);
        internal_counters.push_back(56539);
        internal_counters.push_back(56775);
        internal_counters.push_back(57011);
        internal_counters.push_back(57247);
        internal_counters.push_back(57483);
        internal_counters.push_back(57719);
        internal_counters.push_back(57955);
        internal_counters.push_back(58191);
        internal_counters.push_back(58427);
        internal_counters.push_back(58663);
        internal_counters.push_back(58899);
        internal_counters.push_back(59135);
        internal_counters.push_back(59371);
        internal_counters.push_back(59607);
        internal_counters.push_back(59843);
        internal_counters.push_back(60079);
        internal_counters.push_back(60315);
        internal_counters.push_back(60551);
        internal_counters.push_back(60787);
        internal_counters.push_back(61023);
        internal_counters.push_back(61259);
        internal_counters.push_back(38840);
        internal_counters.push_back(39076);
        internal_counters.push_back(39312);
        internal_counters.push_back(39548);
        internal_counters.push_back(39784);
        internal_counters.push_back(40020);
        internal_counters.push_back(40256);
        internal_counters.push_back(40492);
        internal_counters.push_back(40728);
        internal_counters.push_back(40964);
        internal_counters.push_back(41200);
        internal_counters.push_back(41436);
        internal_counters.push_back(41672);
        internal_counters.push_back(41908);
        internal_counters.push_back(42144);
        internal_counters.push_back(42380);
        internal_counters.push_back(42616);
        internal_counters.push_back(42852);
        internal_counters.push_back(43088);
        internal_counters.push_back(43324);
        internal_counters.push_back(43560);
        internal_counters.push_back(43796);
        internal_counters.push_back(44032);
        internal_counters.push_back(44268);
        internal_counters.push_back(44504);
        internal_counters.push_back(44740);
        internal_counters.push_back(44976);
        internal_counters.push_back(45212);
        internal_counters.push_back(45448);
        internal_counters.push_back(45684);
        internal_counters.push_back(45920);
        internal_counters.push_back(46156);
        internal_counters.push_back(46392);
        internal_counters.push_back(46628);
        internal_counters.push_back(46864);
        internal_counters.push_back(47100);
        internal_counters.push_back(47336);
        internal_counters.push_back(47572);
        internal_counters.push_back(47808);
        internal_counters.push_back(48044);
        internal_counters.push_back(48280);
        internal_counters.push_back(48516);
        internal_counters.push_back(48752);
        internal_counters.push_back(48988);
        internal_counters.push_back(49224);
        internal_counters.push_back(49460);
        internal_counters.push_back(49696);
        internal_counters.push_back(49932);
        internal_counters.push_back(50168);
        internal_counters.push_back(50404);
        internal_counters.push_back(50640);
        internal_counters.push_back(50876);
        internal_counters.push_back(51112);
        internal_counters.push_back(51348);
        internal_counters.push_back(51584);
        internal_counters.push_back(51820);
        internal_counters.push_back(52056);
        internal_counters.push_back(52292);
        internal_counters.push_back(52528);
        internal_counters.push_back(52764);
        internal_counters.push_back(53000);
        internal_counters.push_back(53236);
        internal_counters.push_back(53472);
        internal_counters.push_back(53708);
        internal_counters.push_back(53944);
        internal_counters.push_back(54180);
        internal_counters.push_back(54416);
        internal_counters.push_back(54652);
        internal_counters.push_back(54888);
        internal_counters.push_back(55124);
        internal_counters.push_back(55360);
        internal_counters.push_back(55596);
        internal_counters.push_back(55832);
        internal_counters.push_back(56068);
        internal_counters.push_back(56304);
        internal_counters.push_back(56540);
        internal_counters.push_back(56776);
        internal_counters.push_back(57012);
        internal_counters.push_back(57248);
        internal_counters.push_back(57484);
        internal_counters.push_back(57720);
        internal_counters.push_back(57956);
        internal_counters.push_back(58192);
        internal_counters.push_back(58428);
        internal_counters.push_back(58664);
        internal_counters.push_back(58900);
        internal_counters.push_back(59136);
        internal_counters.push_back(59372);
        internal_counters.push_back(59608);
        internal_counters.push_back(59844);
        internal_counters.push_back(60080);
        internal_counters.push_back(60316);
        internal_counters.push_back(60552);
        internal_counters.push_back(60788);
        internal_counters.push_back(61024);
        internal_counters.push_back(61260);
        internal_counters.push_back(38841);
        internal_counters.push_back(39077);
        internal_counters.push_back(39313);
        internal_counters.push_back(39549);
        internal_counters.push_back(39785);
        internal_counters.push_back(40021);
        internal_counters.push_back(40257);
        internal_counters.push_back(40493);
        internal_counters.push_back(40729);
        internal_counters.push_back(40965);
        internal_counters.push_back(41201);
        internal_counters.push_back(41437);
        internal_counters.push_back(41673);
        internal_counters.push_back(41909);
        internal_counters.push_back(42145);
        internal_counters.push_back(42381);
        internal_counters.push_back(42617);
        internal_counters.push_back(42853);
        internal_counters.push_back(43089);
        internal_counters.push_back(43325);
        internal_counters.push_back(43561);
        internal_counters.push_back(43797);
        internal_counters.push_back(44033);
        internal_counters.push_back(44269);
        internal_counters.push_back(44505);
        internal_counters.push_back(44741);
        internal_counters.push_back(44977);
        internal_counters.push_back(45213);
        internal_counters.push_back(45449);
        internal_counters.push_back(45685);
        internal_counters.push_back(45921);
        internal_counters.push_back(46157);
        internal_counters.push_back(46393);
        internal_counters.push_back(46629);
        internal_counters.push_back(46865);
        internal_counters.push_back(47101);
        internal_counters.push_back(47337);
        internal_counters.push_back(47573);
        internal_counters.push_back(47809);
        internal_counters.push_back(48045);
        internal_counters.push_back(48281);
        internal_counters.push_back(48517);
        internal_counters.push_back(48753);
        internal_counters.push_back(48989);
        internal_counters.push_back(49225);
        internal_counters.push_back(49461);
        internal_counters.push_back(49697);
        internal_counters.push_back(49933);
        internal_counters.push_back(50169);
        internal_counters.push_back(50405);
        internal_counters.push_back(50641);
        internal_counters.push_back(50877);
        internal_counters.push_back(51113);
        internal_counters.push_back(51349);
        internal_counters.push_back(51585);
        internal_counters.push_back(51821);
        internal_counters.push_back(52057);
        internal_counters.push_back(52293);
        internal_counters.push_back(52529);
        internal_counters.push_back(52765);
        internal_counters.push_back(53001);
        internal_counters.push_back(53237);
        internal_counters.push_back(53473);
        internal_counters.push_back(53709);
        internal_counters.push_back(53945);
        internal_counters.push_back(54181);
        internal_counters.push_back(54417);
        internal_counters.push_back(54653);
        internal_counters.push_back(54889);
        internal_counters.push_back(55125);
        internal_counters.push_back(55361);
        internal_counters.push_back(55597);
        internal_counters.push_back(55833);
        internal_counters.push_back(56069);
        internal_counters.push_back(56305);
        internal_counters.push_back(56541);
        internal_counters.push_back(56777);
        internal_counters.push_back(57013);
        internal_counters.push_back(57249);
        internal_counters.push_back(57485);
        internal_counters.push_back(57721);
        internal_counters.push_back(57957);
        internal_counters.push_back(58193);
        internal_counters.push_back(58429);
        internal_counters.push_back(58665);
        internal_counters.push_back(58901);
        internal_counters.push_back(59137);
        internal_counters.push_back(59373);
        internal_counters.push_back(59609);
        internal_counters.push_back(59845);
        internal_counters.push_back(60081);
        internal_counters.push_back(60317);
        internal_counters.push_back(60553);
        internal_counters.push_back(60789);
        internal_counters.push_back(61025);
        internal_counters.push_back(61261);
        internal_counters.push_back(38842);
        internal_counters.push_back(39078);
        internal_counters.push_back(39314);
        internal_counters.push_back(39550);
        internal_counters.push_back(39786);
        internal_counters.push_back(40022);
        internal_counters.push_back(40258);
        internal_counters.push_back(40494);
        internal_counters.push_back(40730);
        internal_counters.push_back(40966);
        internal_counters.push_back(41202);
        internal_counters.push_back(41438);
        internal_counters.push_back(41674);
        internal_counters.push_back(41910);
        internal_counters.push_back(42146);
        internal_counters.push_back(42382);
        internal_counters.push_back(42618);
        internal_counters.push_back(42854);
        internal_counters.push_back(43090);
        internal_counters.push_back(43326);
        internal_counters.push_back(43562);
        internal_counters.push_back(43798);
        internal_counters.push_back(44034);
        internal_counters.push_back(44270);
        internal_counters.push_back(44506);
        internal_counters.push_back(44742);
        internal_counters.push_back(44978);
        internal_counters.push_back(45214);
        internal_counters.push_back(45450);
        internal_counters.push_back(45686);
        internal_counters.push_back(45922);
        internal_counters.push_back(46158);
        internal_counters.push_back(46394);
        internal_counters.push_back(46630);
        internal_counters.push_back(46866);
        internal_counters.push_back(47102);
        internal_counters.push_back(47338);
        internal_counters.push_back(47574);
        internal_counters.push_back(47810);
        internal_counters.push_back(48046);
        internal_counters.push_back(48282);
        internal_counters.push_back(48518);
        internal_counters.push_back(48754);
        internal_counters.push_back(48990);
        internal_counters.push_back(49226);
        internal_counters.push_back(49462);
        internal_counters.push_back(49698);
        internal_counters.push_back(49934);
        internal_counters.push_back(50170);
        internal_counters.push_back(50406);
        internal_counters.push_back(50642);
        internal_counters.push_back(50878);
        internal_counters.push_back(51114);
        internal_counters.push_back(51350);
        internal_counters.push_back(51586);
        internal_counters.push_back(51822);
        internal_counters.push_back(52058);
        internal_counters.push_back(52294);
        internal_counters.push_back(52530);
        internal_counters.push_back(52766);
        internal_counters.push_back(53002);
        internal_counters.push_back(53238);
        internal_counters.push_back(53474);
        internal_counters.push_back(53710);
        internal_counters.push_back(53946);
        internal_counters.push_back(54182);
        internal_counters.push_back(54418);
        internal_counters.push_back(54654);
        internal_counters.push_back(54890);
        internal_counters.push_back(55126);
        internal_counters.push_back(55362);
        internal_counters.push_back(55598);
        internal_counters.push_back(55834);
        internal_counters.push_back(56070);
        internal_counters.push_back(56306);
        internal_counters.push_back(56542);
        internal_counters.push_back(56778);
        internal_counters.push_back(57014);
        internal_counters.push_back(57250);
        internal_counters.push_back(57486);
        internal_counters.push_back(57722);
        internal_counters.push_back(57958);
        internal_counters.push_back(58194);
        internal_counters.push_back(58430);
        internal_counters.push_back(58666);
        internal_counters.push_back(58902);
        internal_counters.push_back(59138);
        internal_counters.push_back(59374);
        internal_counters.push_back(59610);
        internal_counters.push_back(59846);
        internal_counters.push_back(60082);
        internal_counters.push_back(60318);
        internal_counters.push_back(60554);
        internal_counters.push_back(60790);
        internal_counters.push_back(61026);
        internal_counters.push_back(61262);
        internal_counters.push_back(38843);
        internal_counters.push_back(39079);
        internal_counters.push_back(39315);
        internal_counters.push_back(39551);
        internal_counters.push_back(39787);
        internal_counters.push_back(40023);
        internal_counters.push_back(40259);
        internal_counters.push_back(40495);
        internal_counters.push_back(40731);
        internal_counters.push_back(40967);
        internal_counters.push_back(41203);
        internal_counters.push_back(41439);
        internal_counters.push_back(41675);
        internal_counters.push_back(41911);
        internal_counters.push_back(42147);
        internal_counters.push_back(42383);
        internal_counters.push_back(42619);
        internal_counters.push_back(42855);
        internal_counters.push_back(43091);
        internal_counters.push_back(43327);
        internal_counters.push_back(43563);
        internal_counters.push_back(43799);
        internal_counters.push_back(44035);
        internal_counters.push_back(44271);
        internal_counters.push_back(44507);
        internal_counters.push_back(44743);
        internal_counters.push_back(44979);
        internal_counters.push_back(45215);
        internal_counters.push_back(45451);
        internal_counters.push_back(45687);
        internal_counters.push_back(45923);
        internal_counters.push_back(46159);
        internal_counters.push_back(46395);
        internal_counters.push_back(46631);
        internal_counters.push_back(46867);
        internal_counters.push_back(47103);
        internal_counters.push_back(47339);
        internal_counters.push_back(47575);
        internal_counters.push_back(47811);
        internal_counters.push_back(48047);
        internal_counters.push_back(48283);
        internal_counters.push_back(48519);
        internal_counters.push_back(48755);
        internal_counters.push_back(48991);
        internal_counters.push_back(49227);
        internal_counters.push_back(49463);
        internal_counters.push_back(49699);
        internal_counters.push_back(49935);
        internal_counters.push_back(50171);
        internal_counters.push_back(50407);
        internal_counters.push_back(50643);
        internal_counters.push_back(50879);
        internal_counters.push_back(51115);
        internal_counters.push_back(51351);
        internal_counters.push_back(51587);
        internal_counters.push_back(51823);
        internal_counters.push_back(52059);
        internal_counters.push_back(52295);
        internal_counters.push_back(52531);
        internal_counters.push_back(52767);
        internal_counters.push_back(53003);
        internal_counters.push_back(53239);
        internal_counters.push_back(53475);
        internal_counters.push_back(53711);
        internal_counters.push_back(53947);
        internal_counters.push_back(54183);
        internal_counters.push_back(54419);
        internal_counters.push_back(54655);
        internal_counters.push_back(54891);
        internal_counters.push_back(55127);
        internal_counters.push_back(55363);
        internal_counters.push_back(55599);
        internal_counters.push_back(55835);
        internal_counters.push_back(56071);
        internal_counters.push_back(56307);
        internal_counters.push_back(56543);
        internal_counters.push_back(56779);
        internal_counters.push_back(57015);
        internal_counters.push_back(57251);
        internal_counters.push_back(57487);
        internal_counters.push_back(57723);
        internal_counters.push_back(57959);
        internal_counters.push_back(58195);
        internal_counters.push_back(58431);
        internal_counters.push_back(58667);
        internal_counters.push_back(58903);
        internal_counters.push_back(59139);
        internal_counters.push_back(59375);
        internal_counters.push_back(59611);
        internal_counters.push_back(59847);
        internal_counters.push_back(60083);
        internal_counters.push_back(60319);
        internal_counters.push_back(60555);
        internal_counters.push_back(60791);
        internal_counters.push_back(61027);
        internal_counters.push_back(61263);
        internal_counters.push_back(38844);
        internal_counters.push_back(39080);
        internal_counters.push_back(39316);
        internal_counters.push_back(39552);
        internal_counters.push_back(39788);
        internal_counters.push_back(40024);
        internal_counters.push_back(40260);
        internal_counters.push_back(40496);
        internal_counters.push_back(40732);
        internal_counters.push_back(40968);
        internal_counters.push_back(41204);
        internal_counters.push_back(41440);
        internal_counters.push_back(41676);
        internal_counters.push_back(41912);
        internal_counters.push_back(42148);
        internal_counters.push_back(42384);
        internal_counters.push_back(42620);
        internal_counters.push_back(42856);
        internal_counters.push_back(43092);
        internal_counters.push_back(43328);
        internal_counters.push_back(43564);
        internal_counters.push_back(43800);
        internal_counters.push_back(44036);
        internal_counters.push_back(44272);
        internal_counters.push_back(44508);
        internal_counters.push_back(44744);
        internal_counters.push_back(44980);
        internal_counters.push_back(45216);
        internal_counters.push_back(45452);
        internal_counters.push_back(45688);
        internal_counters.push_back(45924);
        internal_counters.push_back(46160);
        internal_counters.push_back(46396);
        internal_counters.push_back(46632);
        internal_counters.push_back(46868);
        internal_counters.push_back(47104);
        internal_counters.push_back(47340);
        internal_counters.push_back(47576);
        internal_counters.push_back(47812);
        internal_counters.push_back(48048);
        internal_counters.push_back(48284);
        internal_counters.push_back(48520);
        internal_counters.push_back(48756);
        internal_counters.push_back(48992);
        internal_counters.push_back(49228);
        internal_counters.push_back(49464);
        internal_counters.push_back(49700);
        internal_counters.push_back(49936);
        internal_counters.push_back(50172);
        internal_counters.push_back(50408);
        internal_counters.push_back(50644);
        internal_counters.push_back(50880);
        internal_counters.push_back(51116);
        internal_counters.push_back(51352);
        internal_counters.push_back(51588);
        internal_counters.push_back(51824);
        internal_counters.push_back(52060);
        internal_counters.push_back(52296);
        internal_counters.push_back(52532);
        internal_counters.push_back(52768);
        internal_counters.push_back(53004);
        internal_counters.push_back(53240);
        internal_counters.push_back(53476);
        internal_counters.push_back(53712);
        internal_counters.push_back(53948);
        internal_counters.push_back(54184);
        internal_counters.push_back(54420);
        internal_counters.push_back(54656);
        internal_counters.push_back(54892);
        internal_counters.push_back(55128);
        internal_counters.push_back(55364);
        internal_counters.push_back(55600);
        internal_counters.push_back(55836);
        internal_counters.push_back(56072);
        internal_counters.push_back(56308);
        internal_counters.push_back(56544);
        internal_counters.push_back(56780);
        internal_counters.push_back(57016);
        internal_counters.push_back(57252);
        internal_counters.push_back(57488);
        internal_counters.push_back(57724);
        internal_counters.push_back(57960);
        internal_counters.push_back(58196);
        internal_counters.push_back(58432);
        internal_counters.push_back(58668);
        internal_counters.push_back(58904);
        internal_counters.push_back(59140);
        internal_counters.push_back(59376);
        internal_counters.push_back(59612);
        internal_counters.push_back(59848);
        internal_counters.push_back(60084);
        internal_counters.push_back(60320);
        internal_counters.push_back(60556);
        internal_counters.push_back(60792);
        internal_counters.push_back(61028);
        internal_counters.push_back(61264);

        c.DefineDerivedCounter("TexAveAnisotropy", "TextureUnit", "The average degree of anisotropy applied. A number between 1 and 16. The anisotropic filtering algorithm only applies samples where they are required (e.g. there will be no extra anisotropic samples if the view vector is perpendicular to the surface) so this can be much lower than the requested anisotropy.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,(2),96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum96,*,+,(4),192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,sum96,*,+,(6),288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,sum96,*,+,(8),384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,sum96,*,+,(10),480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,sum96,*,+,(12),576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,sum96,*,+,(14),672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,sum96,*,+,(16),768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,sum96,*,+,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum96,+,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,sum96,+,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,sum96,+,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,sum96,+,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,sum96,+,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,sum96,+,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,sum96,+,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,sum96,+,/", "7ca2a2b9-a4eb-ce23-d163-59147e672396");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7724);
        internal_counters.push_back(8112);
        internal_counters.push_back(8500);
        internal_counters.push_back(8888);
        internal_counters.push_back(9276);
        internal_counters.push_back(9664);
        internal_counters.push_back(10052);
        internal_counters.push_back(10440);
        internal_counters.push_back(10828);
        internal_counters.push_back(11216);
        internal_counters.push_back(11604);
        internal_counters.push_back(11992);
        internal_counters.push_back(12380);
        internal_counters.push_back(12768);
        internal_counters.push_back(13156);
        internal_counters.push_back(13544);
        internal_counters.push_back(13932);
        internal_counters.push_back(14320);
        internal_counters.push_back(14708);
        internal_counters.push_back(15096);
        internal_counters.push_back(15484);
        internal_counters.push_back(15872);
        internal_counters.push_back(16260);
        internal_counters.push_back(16648);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("DepthStencilTestBusy", "Timing", "Percentage of time GPU spent performing depth and stencil tests relative to GPUBusy.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,/,(100),*", "6834fb52-42e8-bb50-fd48-ec2f2904e7e0");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7724);
        internal_counters.push_back(8112);
        internal_counters.push_back(8500);
        internal_counters.push_back(8888);
        internal_counters.push_back(9276);
        internal_counters.push_back(9664);
        internal_counters.push_back(10052);
        internal_counters.push_back(10440);
        internal_counters.push_back(10828);
        internal_counters.push_back(11216);
        internal_counters.push_back(11604);
        internal_counters.push_back(11992);
        internal_counters.push_back(12380);
        internal_counters.push_back(12768);
        internal_counters.push_back(13156);
        internal_counters.push_back(13544);
        internal_counters.push_back(13932);
        internal_counters.push_back(14320);
        internal_counters.push_back(14708);
        internal_counters.push_back(15096);
        internal_counters.push_back(15484);
        internal_counters.push_back(15872);
        internal_counters.push_back(16260);
        internal_counters.push_back(16648);

        c.DefineDerivedCounter("DepthStencilTestBusyCycles", "Timing", "Number of GPU cycles spent performing depth and stencil tests.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24", "07ad48f0-49d8-87e7-1ef5-1e24ff2cef49");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7595);
        internal_counters.push_back(7983);
        internal_counters.push_back(8371);
        internal_counters.push_back(8759);
        internal_counters.push_back(9147);
        internal_counters.push_back(9535);
        internal_counters.push_back(9923);
        internal_counters.push_back(10311);
        internal_counters.push_back(10699);
        internal_counters.push_back(11087);
        internal_counters.push_back(11475);
        internal_counters.push_back(11863);
        internal_counters.push_back(12251);
        internal_counters.push_back(12639);
        internal_counters.push_back(13027);
        internal_counters.push_back(13415);
        internal_counters.push_back(13803);
        internal_counters.push_back(14191);
        internal_counters.push_back(14579);
        internal_counters.push_back(14967);
        internal_counters.push_back(15355);
        internal_counters.push_back(15743);
        internal_counters.push_back(16131);
        internal_counters.push_back(16519);
        internal_counters.push_back(7584);
        internal_counters.push_back(7972);
        internal_counters.push_back(8360);
        internal_counters.push_back(8748);
        internal_counters.push_back(9136);
        internal_counters.push_back(9524);
        internal_counters.push_back(9912);
        internal_counters.push_back(10300);
        internal_counters.push_back(10688);
        internal_counters.push_back(11076);
        internal_counters.push_back(11464);
        internal_counters.push_back(11852);
        internal_counters.push_back(12240);
        internal_counters.push_back(12628);
        internal_counters.push_back(13016);
        internal_counters.push_back(13404);
        internal_counters.push_back(13792);
        internal_counters.push_back(14180);
        internal_counters.push_back(14568);
        internal_counters.push_back(14956);
        internal_counters.push_back(15344);
        internal_counters.push_back(15732);
        internal_counters.push_back(16120);
        internal_counters.push_back(16508);

        c.DefineDerivedCounter("HiZTilesAccepted", "DepthAndStencil", "Percentage of tiles accepted by HiZ and will be rendered to the depth or color buffers.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,-,(0),max,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,/,(100),*", "56176f45-d7ff-813d-4f05-3b2f046067e7");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7584);
        internal_counters.push_back(7972);
        internal_counters.push_back(8360);
        internal_counters.push_back(8748);
        internal_counters.push_back(9136);
        internal_counters.push_back(9524);
        internal_counters.push_back(9912);
        internal_counters.push_back(10300);
        internal_counters.push_back(10688);
        internal_counters.push_back(11076);
        internal_counters.push_back(11464);
        internal_counters.push_back(11852);
        internal_counters.push_back(12240);
        internal_counters.push_back(12628);
        internal_counters.push_back(13016);
        internal_counters.push_back(13404);
        internal_counters.push_back(13792);
        internal_counters.push_back(14180);
        internal_counters.push_back(14568);
        internal_counters.push_back(14956);
        internal_counters.push_back(15344);
        internal_counters.push_back(15732);
        internal_counters.push_back(16120);
        internal_counters.push_back(16508);
        internal_counters.push_back(7595);
        internal_counters.push_back(7983);
        internal_counters.push_back(8371);
        internal_counters.push_back(8759);
        internal_counters.push_back(9147);
        internal_counters.push_back(9535);
        internal_counters.push_back(9923);
        internal_counters.push_back(10311);
        internal_counters.push_back(10699);
        internal_counters.push_back(11087);
        internal_counters.push_back(11475);
        internal_counters.push_back(11863);
        internal_counters.push_back(12251);
        internal_counters.push_back(12639);
        internal_counters.push_back(13027);
        internal_counters.push_back(13415);
        internal_counters.push_back(13803);
        internal_counters.push_back(14191);
        internal_counters.push_back(14579);
        internal_counters.push_back(14967);
        internal_counters.push_back(15355);
        internal_counters.push_back(15743);
        internal_counters.push_back(16131);
        internal_counters.push_back(16519);

        c.DefineDerivedCounter("HiZTilesAcceptedCount", "DepthAndStencil", "Count of tiles accepted by HiZ and will be rendered to the depth or color buffers.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(0),max", "95d4e3f6-b2f0-f26e-8423-aacdfaf79ea3");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7595);
        internal_counters.push_back(7983);
        internal_counters.push_back(8371);
        internal_counters.push_back(8759);
        internal_counters.push_back(9147);
        internal_counters.push_back(9535);
        internal_counters.push_back(9923);
        internal_counters.push_back(10311);
        internal_counters.push_back(10699);
        internal_counters.push_back(11087);
        internal_counters.push_back(11475);
        internal_counters.push_back(11863);
        internal_counters.push_back(12251);
        internal_counters.push_back(12639);
        internal_counters.push_back(13027);
        internal_counters.push_back(13415);
        internal_counters.push_back(13803);
        internal_counters.push_back(14191);
        internal_counters.push_back(14579);
        internal_counters.push_back(14967);
        internal_counters.push_back(15355);
        internal_counters.push_back(15743);
        internal_counters.push_back(16131);
        internal_counters.push_back(16519);

        c.DefineDerivedCounter("HiZTilesRejectedCount", "DepthAndStencil", "Count of tiles not accepted by HiZ.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "156ba142-7eeb-aa6e-a00a-f8aea4e41e0b");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7584);
        internal_counters.push_back(7972);
        internal_counters.push_back(8360);
        internal_counters.push_back(8748);
        internal_counters.push_back(9136);
        internal_counters.push_back(9524);
        internal_counters.push_back(9912);
        internal_counters.push_back(10300);
        internal_counters.push_back(10688);
        internal_counters.push_back(11076);
        internal_counters.push_back(11464);
        internal_counters.push_back(11852);
        internal_counters.push_back(12240);
        internal_counters.push_back(12628);
        internal_counters.push_back(13016);
        internal_counters.push_back(13404);
        internal_counters.push_back(13792);
        internal_counters.push_back(14180);
        internal_counters.push_back(14568);
        internal_counters.push_back(14956);
        internal_counters.push_back(15344);
        internal_counters.push_back(15732);
        internal_counters.push_back(16120);
        internal_counters.push_back(16508);
        internal_counters.push_back(7608);
        internal_counters.push_back(7996);
        internal_counters.push_back(8384);
        internal_counters.push_back(8772);
        internal_counters.push_back(9160);
        internal_counters.push_back(9548);
        internal_counters.push_back(9936);
        internal_counters.push_back(10324);
        internal_counters.push_back(10712);
        internal_counters.push_back(11100);
        internal_counters.push_back(11488);
        internal_counters.push_back(11876);
        internal_counters.push_back(12264);
        internal_counters.push_back(12652);
        internal_counters.push_back(13040);
        internal_counters.push_back(13428);
        internal_counters.push_back(13816);
        internal_counters.push_back(14204);
        internal_counters.push_back(14592);
        internal_counters.push_back(14980);
        internal_counters.push_back(15368);
        internal_counters.push_back(15756);
        internal_counters.push_back(16144);
        internal_counters.push_back(16532);

        c.DefineDerivedCounter("PreZTilesDetailCulled", "DepthAndStencil", "Percentage of tiles rejected because the associated prim had no contributing area.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,/,(100),*", "cad7f54d-a044-7574-c472-6f2065cbeeac");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7608);
        internal_counters.push_back(7996);
        internal_counters.push_back(8384);
        internal_counters.push_back(8772);
        internal_counters.push_back(9160);
        internal_counters.push_back(9548);
        internal_counters.push_back(9936);
        internal_counters.push_back(10324);
        internal_counters.push_back(10712);
        internal_counters.push_back(11100);
        internal_counters.push_back(11488);
        internal_counters.push_back(11876);
        internal_counters.push_back(12264);
        internal_counters.push_back(12652);
        internal_counters.push_back(13040);
        internal_counters.push_back(13428);
        internal_counters.push_back(13816);
        internal_counters.push_back(14204);
        internal_counters.push_back(14592);
        internal_counters.push_back(14980);
        internal_counters.push_back(15368);
        internal_counters.push_back(15756);
        internal_counters.push_back(16144);
        internal_counters.push_back(16532);

        c.DefineDerivedCounter("PreZTilesDetailCulledCount", "DepthAndStencil", "Count of tiles rejected because the associated primitive had no contributing area.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "49262c8a-b1e6-90dd-f096-0fc4921715e9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7584);
        internal_counters.push_back(7972);
        internal_counters.push_back(8360);
        internal_counters.push_back(8748);
        internal_counters.push_back(9136);
        internal_counters.push_back(9524);
        internal_counters.push_back(9912);
        internal_counters.push_back(10300);
        internal_counters.push_back(10688);
        internal_counters.push_back(11076);
        internal_counters.push_back(11464);
        internal_counters.push_back(11852);
        internal_counters.push_back(12240);
        internal_counters.push_back(12628);
        internal_counters.push_back(13016);
        internal_counters.push_back(13404);
        internal_counters.push_back(13792);
        internal_counters.push_back(14180);
        internal_counters.push_back(14568);
        internal_counters.push_back(14956);
        internal_counters.push_back(15344);
        internal_counters.push_back(15732);
        internal_counters.push_back(16120);
        internal_counters.push_back(16508);

        c.DefineDerivedCounter("PreZTilesDetailSurvivingCount", "DepthAndStencil", "Count of tiles surviving because the associated primitive had contributing area.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "f803eaa4-bbed-bd39-775f-a64df92e2c08");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19100);
        internal_counters.push_back(19767);
        internal_counters.push_back(20434);
        internal_counters.push_back(21101);
        internal_counters.push_back(21768);
        internal_counters.push_back(22435);
        internal_counters.push_back(23102);
        internal_counters.push_back(23769);
        internal_counters.push_back(24436);
        internal_counters.push_back(25103);
        internal_counters.push_back(25770);
        internal_counters.push_back(26437);
        internal_counters.push_back(27104);
        internal_counters.push_back(27771);
        internal_counters.push_back(28438);
        internal_counters.push_back(29105);
        internal_counters.push_back(29772);
        internal_counters.push_back(30439);
        internal_counters.push_back(31106);
        internal_counters.push_back(31773);
        internal_counters.push_back(32440);
        internal_counters.push_back(33107);
        internal_counters.push_back(33774);
        internal_counters.push_back(34441);
        internal_counters.push_back(19176);
        internal_counters.push_back(19843);
        internal_counters.push_back(20510);
        internal_counters.push_back(21177);
        internal_counters.push_back(21844);
        internal_counters.push_back(22511);
        internal_counters.push_back(23178);
        internal_counters.push_back(23845);
        internal_counters.push_back(24512);
        internal_counters.push_back(25179);
        internal_counters.push_back(25846);
        internal_counters.push_back(26513);
        internal_counters.push_back(27180);
        internal_counters.push_back(27847);
        internal_counters.push_back(28514);
        internal_counters.push_back(29181);
        internal_counters.push_back(29848);
        internal_counters.push_back(30515);
        internal_counters.push_back(31182);
        internal_counters.push_back(31849);
        internal_counters.push_back(32516);
        internal_counters.push_back(33183);
        internal_counters.push_back(33850);
        internal_counters.push_back(34517);

        c.DefineDerivedCounter("HiZQuadsCulled", "DepthAndStencil", "Percentage of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,/,(100),*", "fa0e319b-5573-6d34-5bab-904769925036");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19100);
        internal_counters.push_back(19767);
        internal_counters.push_back(20434);
        internal_counters.push_back(21101);
        internal_counters.push_back(21768);
        internal_counters.push_back(22435);
        internal_counters.push_back(23102);
        internal_counters.push_back(23769);
        internal_counters.push_back(24436);
        internal_counters.push_back(25103);
        internal_counters.push_back(25770);
        internal_counters.push_back(26437);
        internal_counters.push_back(27104);
        internal_counters.push_back(27771);
        internal_counters.push_back(28438);
        internal_counters.push_back(29105);
        internal_counters.push_back(29772);
        internal_counters.push_back(30439);
        internal_counters.push_back(31106);
        internal_counters.push_back(31773);
        internal_counters.push_back(32440);
        internal_counters.push_back(33107);
        internal_counters.push_back(33774);
        internal_counters.push_back(34441);
        internal_counters.push_back(19176);
        internal_counters.push_back(19843);
        internal_counters.push_back(20510);
        internal_counters.push_back(21177);
        internal_counters.push_back(21844);
        internal_counters.push_back(22511);
        internal_counters.push_back(23178);
        internal_counters.push_back(23845);
        internal_counters.push_back(24512);
        internal_counters.push_back(25179);
        internal_counters.push_back(25846);
        internal_counters.push_back(26513);
        internal_counters.push_back(27180);
        internal_counters.push_back(27847);
        internal_counters.push_back(28514);
        internal_counters.push_back(29181);
        internal_counters.push_back(29848);
        internal_counters.push_back(30515);
        internal_counters.push_back(31182);
        internal_counters.push_back(31849);
        internal_counters.push_back(32516);
        internal_counters.push_back(33183);
        internal_counters.push_back(33850);
        internal_counters.push_back(34517);

        c.DefineDerivedCounter("HiZQuadsCulledCount", "DepthAndStencil", "Count of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(0),max", "73b0b39d-6df2-3e24-0b5c-7cb0ac8b6f39");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19176);
        internal_counters.push_back(19843);
        internal_counters.push_back(20510);
        internal_counters.push_back(21177);
        internal_counters.push_back(21844);
        internal_counters.push_back(22511);
        internal_counters.push_back(23178);
        internal_counters.push_back(23845);
        internal_counters.push_back(24512);
        internal_counters.push_back(25179);
        internal_counters.push_back(25846);
        internal_counters.push_back(26513);
        internal_counters.push_back(27180);
        internal_counters.push_back(27847);
        internal_counters.push_back(28514);
        internal_counters.push_back(29181);
        internal_counters.push_back(29848);
        internal_counters.push_back(30515);
        internal_counters.push_back(31182);
        internal_counters.push_back(31849);
        internal_counters.push_back(32516);
        internal_counters.push_back(33183);
        internal_counters.push_back(33850);
        internal_counters.push_back(34517);

        c.DefineDerivedCounter("HiZQuadsAcceptedCount", "DepthAndStencil", "Count of quads that did continue on in the pipeline after HiZ.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "59049ad9-42b5-c7cb-3616-6a8f6a8e4894");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19176);
        internal_counters.push_back(19843);
        internal_counters.push_back(20510);
        internal_counters.push_back(21177);
        internal_counters.push_back(21844);
        internal_counters.push_back(22511);
        internal_counters.push_back(23178);
        internal_counters.push_back(23845);
        internal_counters.push_back(24512);
        internal_counters.push_back(25179);
        internal_counters.push_back(25846);
        internal_counters.push_back(26513);
        internal_counters.push_back(27180);
        internal_counters.push_back(27847);
        internal_counters.push_back(28514);
        internal_counters.push_back(29181);
        internal_counters.push_back(29848);
        internal_counters.push_back(30515);
        internal_counters.push_back(31182);
        internal_counters.push_back(31849);
        internal_counters.push_back(32516);
        internal_counters.push_back(33183);
        internal_counters.push_back(33850);
        internal_counters.push_back(34517);
        internal_counters.push_back(19200);
        internal_counters.push_back(19867);
        internal_counters.push_back(20534);
        internal_counters.push_back(21201);
        internal_counters.push_back(21868);
        internal_counters.push_back(22535);
        internal_counters.push_back(23202);
        internal_counters.push_back(23869);
        internal_counters.push_back(24536);
        internal_counters.push_back(25203);
        internal_counters.push_back(25870);
        internal_counters.push_back(26537);
        internal_counters.push_back(27204);
        internal_counters.push_back(27871);
        internal_counters.push_back(28538);
        internal_counters.push_back(29205);
        internal_counters.push_back(29872);
        internal_counters.push_back(30539);
        internal_counters.push_back(31206);
        internal_counters.push_back(31873);
        internal_counters.push_back(32540);
        internal_counters.push_back(33207);
        internal_counters.push_back(33874);
        internal_counters.push_back(34541);
        internal_counters.push_back(19100);
        internal_counters.push_back(19767);
        internal_counters.push_back(20434);
        internal_counters.push_back(21101);
        internal_counters.push_back(21768);
        internal_counters.push_back(22435);
        internal_counters.push_back(23102);
        internal_counters.push_back(23769);
        internal_counters.push_back(24436);
        internal_counters.push_back(25103);
        internal_counters.push_back(25770);
        internal_counters.push_back(26437);
        internal_counters.push_back(27104);
        internal_counters.push_back(27771);
        internal_counters.push_back(28438);
        internal_counters.push_back(29105);
        internal_counters.push_back(29772);
        internal_counters.push_back(30439);
        internal_counters.push_back(31106);
        internal_counters.push_back(31773);
        internal_counters.push_back(32440);
        internal_counters.push_back(33107);
        internal_counters.push_back(33774);
        internal_counters.push_back(34441);

        c.DefineDerivedCounter("PreZQuadsCulled", "DepthAndStencil", "Percentage of quads rejected based on the detailZ and earlyZ tests.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(0),max,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,sum24,/,(100),*", "4e77547b-ec55-5663-f034-af59be66d77d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19176);
        internal_counters.push_back(19843);
        internal_counters.push_back(20510);
        internal_counters.push_back(21177);
        internal_counters.push_back(21844);
        internal_counters.push_back(22511);
        internal_counters.push_back(23178);
        internal_counters.push_back(23845);
        internal_counters.push_back(24512);
        internal_counters.push_back(25179);
        internal_counters.push_back(25846);
        internal_counters.push_back(26513);
        internal_counters.push_back(27180);
        internal_counters.push_back(27847);
        internal_counters.push_back(28514);
        internal_counters.push_back(29181);
        internal_counters.push_back(29848);
        internal_counters.push_back(30515);
        internal_counters.push_back(31182);
        internal_counters.push_back(31849);
        internal_counters.push_back(32516);
        internal_counters.push_back(33183);
        internal_counters.push_back(33850);
        internal_counters.push_back(34517);
        internal_counters.push_back(19200);
        internal_counters.push_back(19867);
        internal_counters.push_back(20534);
        internal_counters.push_back(21201);
        internal_counters.push_back(21868);
        internal_counters.push_back(22535);
        internal_counters.push_back(23202);
        internal_counters.push_back(23869);
        internal_counters.push_back(24536);
        internal_counters.push_back(25203);
        internal_counters.push_back(25870);
        internal_counters.push_back(26537);
        internal_counters.push_back(27204);
        internal_counters.push_back(27871);
        internal_counters.push_back(28538);
        internal_counters.push_back(29205);
        internal_counters.push_back(29872);
        internal_counters.push_back(30539);
        internal_counters.push_back(31206);
        internal_counters.push_back(31873);
        internal_counters.push_back(32540);
        internal_counters.push_back(33207);
        internal_counters.push_back(33874);
        internal_counters.push_back(34541);

        c.DefineDerivedCounter("PreZQuadsCulledCount", "DepthAndStencil", "Count of quads rejected based on the detailZ and earlyZ tests.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(0),max", "1bf169e6-9304-834e-df5f-0c44d7890a08");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19200);
        internal_counters.push_back(19867);
        internal_counters.push_back(20534);
        internal_counters.push_back(21201);
        internal_counters.push_back(21868);
        internal_counters.push_back(22535);
        internal_counters.push_back(23202);
        internal_counters.push_back(23869);
        internal_counters.push_back(24536);
        internal_counters.push_back(25203);
        internal_counters.push_back(25870);
        internal_counters.push_back(26537);
        internal_counters.push_back(27204);
        internal_counters.push_back(27871);
        internal_counters.push_back(28538);
        internal_counters.push_back(29205);
        internal_counters.push_back(29872);
        internal_counters.push_back(30539);
        internal_counters.push_back(31206);
        internal_counters.push_back(31873);
        internal_counters.push_back(32540);
        internal_counters.push_back(33207);
        internal_counters.push_back(33874);
        internal_counters.push_back(34541);

        c.DefineDerivedCounter("PreZQuadsSurvivingCount", "DepthAndStencil", "Count of quads surviving detailZ and earlyZ tests.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "50e25e51-3713-89cb-7f92-559cde5e5532");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19200);
        internal_counters.push_back(19867);
        internal_counters.push_back(20534);
        internal_counters.push_back(21201);
        internal_counters.push_back(21868);
        internal_counters.push_back(22535);
        internal_counters.push_back(23202);
        internal_counters.push_back(23869);
        internal_counters.push_back(24536);
        internal_counters.push_back(25203);
        internal_counters.push_back(25870);
        internal_counters.push_back(26537);
        internal_counters.push_back(27204);
        internal_counters.push_back(27871);
        internal_counters.push_back(28538);
        internal_counters.push_back(29205);
        internal_counters.push_back(29872);
        internal_counters.push_back(30539);
        internal_counters.push_back(31206);
        internal_counters.push_back(31873);
        internal_counters.push_back(32540);
        internal_counters.push_back(33207);
        internal_counters.push_back(33874);
        internal_counters.push_back(34541);
        internal_counters.push_back(19100);
        internal_counters.push_back(19767);
        internal_counters.push_back(20434);
        internal_counters.push_back(21101);
        internal_counters.push_back(21768);
        internal_counters.push_back(22435);
        internal_counters.push_back(23102);
        internal_counters.push_back(23769);
        internal_counters.push_back(24436);
        internal_counters.push_back(25103);
        internal_counters.push_back(25770);
        internal_counters.push_back(26437);
        internal_counters.push_back(27104);
        internal_counters.push_back(27771);
        internal_counters.push_back(28438);
        internal_counters.push_back(29105);
        internal_counters.push_back(29772);
        internal_counters.push_back(30439);
        internal_counters.push_back(31106);
        internal_counters.push_back(31773);
        internal_counters.push_back(32440);
        internal_counters.push_back(33107);
        internal_counters.push_back(33774);
        internal_counters.push_back(34441);

        c.DefineDerivedCounter("PostZQuads", "DepthAndStencil", "Percentage of quads for which the pixel shader will run and may be postZ tested.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,/,(100),*", "58f0d34b-eeb8-e8db-abce-cb72584144be");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19200);
        internal_counters.push_back(19867);
        internal_counters.push_back(20534);
        internal_counters.push_back(21201);
        internal_counters.push_back(21868);
        internal_counters.push_back(22535);
        internal_counters.push_back(23202);
        internal_counters.push_back(23869);
        internal_counters.push_back(24536);
        internal_counters.push_back(25203);
        internal_counters.push_back(25870);
        internal_counters.push_back(26537);
        internal_counters.push_back(27204);
        internal_counters.push_back(27871);
        internal_counters.push_back(28538);
        internal_counters.push_back(29205);
        internal_counters.push_back(29872);
        internal_counters.push_back(30539);
        internal_counters.push_back(31206);
        internal_counters.push_back(31873);
        internal_counters.push_back(32540);
        internal_counters.push_back(33207);
        internal_counters.push_back(33874);
        internal_counters.push_back(34541);

        c.DefineDerivedCounter("PostZQuadCount", "DepthAndStencil", "Count of quads for which the pixel shader will run and may be postZ tested.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "08404526-ce35-939b-34c8-a7a35a0ff4d6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7757);
        internal_counters.push_back(8145);
        internal_counters.push_back(8533);
        internal_counters.push_back(8921);
        internal_counters.push_back(9309);
        internal_counters.push_back(9697);
        internal_counters.push_back(10085);
        internal_counters.push_back(10473);
        internal_counters.push_back(10861);
        internal_counters.push_back(11249);
        internal_counters.push_back(11637);
        internal_counters.push_back(12025);
        internal_counters.push_back(12413);
        internal_counters.push_back(12801);
        internal_counters.push_back(13189);
        internal_counters.push_back(13577);
        internal_counters.push_back(13965);
        internal_counters.push_back(14353);
        internal_counters.push_back(14741);
        internal_counters.push_back(15129);
        internal_counters.push_back(15517);
        internal_counters.push_back(15905);
        internal_counters.push_back(16293);
        internal_counters.push_back(16681);

        c.DefineDerivedCounter("PreZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z before shading and passed.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "3bfe6c4d-7422-ca03-7ea5-e67ff1a00136");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7759);
        internal_counters.push_back(8147);
        internal_counters.push_back(8535);
        internal_counters.push_back(8923);
        internal_counters.push_back(9311);
        internal_counters.push_back(9699);
        internal_counters.push_back(10087);
        internal_counters.push_back(10475);
        internal_counters.push_back(10863);
        internal_counters.push_back(11251);
        internal_counters.push_back(11639);
        internal_counters.push_back(12027);
        internal_counters.push_back(12415);
        internal_counters.push_back(12803);
        internal_counters.push_back(13191);
        internal_counters.push_back(13579);
        internal_counters.push_back(13967);
        internal_counters.push_back(14355);
        internal_counters.push_back(14743);
        internal_counters.push_back(15131);
        internal_counters.push_back(15519);
        internal_counters.push_back(15907);
        internal_counters.push_back(16295);
        internal_counters.push_back(16683);

        c.DefineDerivedCounter("PreZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z before shading and failed stencil test.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "df7f705e-5162-d3b5-da8b-63466cf9c4e5");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7758);
        internal_counters.push_back(8146);
        internal_counters.push_back(8534);
        internal_counters.push_back(8922);
        internal_counters.push_back(9310);
        internal_counters.push_back(9698);
        internal_counters.push_back(10086);
        internal_counters.push_back(10474);
        internal_counters.push_back(10862);
        internal_counters.push_back(11250);
        internal_counters.push_back(11638);
        internal_counters.push_back(12026);
        internal_counters.push_back(12414);
        internal_counters.push_back(12802);
        internal_counters.push_back(13190);
        internal_counters.push_back(13578);
        internal_counters.push_back(13966);
        internal_counters.push_back(14354);
        internal_counters.push_back(14742);
        internal_counters.push_back(15130);
        internal_counters.push_back(15518);
        internal_counters.push_back(15906);
        internal_counters.push_back(16294);
        internal_counters.push_back(16682);

        c.DefineDerivedCounter("PreZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z before shading and failed Z test.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "4484e950-f7a4-3800-bc74-78dd297f017e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7754);
        internal_counters.push_back(8142);
        internal_counters.push_back(8530);
        internal_counters.push_back(8918);
        internal_counters.push_back(9306);
        internal_counters.push_back(9694);
        internal_counters.push_back(10082);
        internal_counters.push_back(10470);
        internal_counters.push_back(10858);
        internal_counters.push_back(11246);
        internal_counters.push_back(11634);
        internal_counters.push_back(12022);
        internal_counters.push_back(12410);
        internal_counters.push_back(12798);
        internal_counters.push_back(13186);
        internal_counters.push_back(13574);
        internal_counters.push_back(13962);
        internal_counters.push_back(14350);
        internal_counters.push_back(14738);
        internal_counters.push_back(15126);
        internal_counters.push_back(15514);
        internal_counters.push_back(15902);
        internal_counters.push_back(16290);
        internal_counters.push_back(16678);

        c.DefineDerivedCounter("PostZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z after shading and passed.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "4995d5d6-2330-b986-508b-fae24856f44c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7756);
        internal_counters.push_back(8144);
        internal_counters.push_back(8532);
        internal_counters.push_back(8920);
        internal_counters.push_back(9308);
        internal_counters.push_back(9696);
        internal_counters.push_back(10084);
        internal_counters.push_back(10472);
        internal_counters.push_back(10860);
        internal_counters.push_back(11248);
        internal_counters.push_back(11636);
        internal_counters.push_back(12024);
        internal_counters.push_back(12412);
        internal_counters.push_back(12800);
        internal_counters.push_back(13188);
        internal_counters.push_back(13576);
        internal_counters.push_back(13964);
        internal_counters.push_back(14352);
        internal_counters.push_back(14740);
        internal_counters.push_back(15128);
        internal_counters.push_back(15516);
        internal_counters.push_back(15904);
        internal_counters.push_back(16292);
        internal_counters.push_back(16680);

        c.DefineDerivedCounter("PostZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z after shading and failed stencil test.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "ae558af4-f4be-3dd4-7316-b2c4dcf0def8");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7755);
        internal_counters.push_back(8143);
        internal_counters.push_back(8531);
        internal_counters.push_back(8919);
        internal_counters.push_back(9307);
        internal_counters.push_back(9695);
        internal_counters.push_back(10083);
        internal_counters.push_back(10471);
        internal_counters.push_back(10859);
        internal_counters.push_back(11247);
        internal_counters.push_back(11635);
        internal_counters.push_back(12023);
        internal_counters.push_back(12411);
        internal_counters.push_back(12799);
        internal_counters.push_back(13187);
        internal_counters.push_back(13575);
        internal_counters.push_back(13963);
        internal_counters.push_back(14351);
        internal_counters.push_back(14739);
        internal_counters.push_back(15127);
        internal_counters.push_back(15515);
        internal_counters.push_back(15903);
        internal_counters.push_back(16291);
        internal_counters.push_back(16679);

        c.DefineDerivedCounter("PostZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z after shading and failed Z test.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "b3684c94-814a-c695-c85d-a5b6ab798b35");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7626);
        internal_counters.push_back(8014);
        internal_counters.push_back(8402);
        internal_counters.push_back(8790);
        internal_counters.push_back(9178);
        internal_counters.push_back(9566);
        internal_counters.push_back(9954);
        internal_counters.push_back(10342);
        internal_counters.push_back(10730);
        internal_counters.push_back(11118);
        internal_counters.push_back(11506);
        internal_counters.push_back(11894);
        internal_counters.push_back(12282);
        internal_counters.push_back(12670);
        internal_counters.push_back(13058);
        internal_counters.push_back(13446);
        internal_counters.push_back(13834);
        internal_counters.push_back(14222);
        internal_counters.push_back(14610);
        internal_counters.push_back(14998);
        internal_counters.push_back(15386);
        internal_counters.push_back(15774);
        internal_counters.push_back(16162);
        internal_counters.push_back(16550);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("ZUnitStalled", "DepthAndStencil", "The percentage of GPUTime the depth buffer spends waiting for the color buffer to be ready to accept data. High figures here indicate a bottleneck in color buffer operations.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,/,(100),*", "5e86c3ad-1726-3157-1d01-7ed188bf854d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7626);
        internal_counters.push_back(8014);
        internal_counters.push_back(8402);
        internal_counters.push_back(8790);
        internal_counters.push_back(9178);
        internal_counters.push_back(9566);
        internal_counters.push_back(9954);
        internal_counters.push_back(10342);
        internal_counters.push_back(10730);
        internal_counters.push_back(11118);
        internal_counters.push_back(11506);
        internal_counters.push_back(11894);
        internal_counters.push_back(12282);
        internal_counters.push_back(12670);
        internal_counters.push_back(13058);
        internal_counters.push_back(13446);
        internal_counters.push_back(13834);
        internal_counters.push_back(14222);
        internal_counters.push_back(14610);
        internal_counters.push_back(14998);
        internal_counters.push_back(15386);
        internal_counters.push_back(15774);
        internal_counters.push_back(16162);
        internal_counters.push_back(16550);

        c.DefineDerivedCounter("ZUnitStalledCycles", "DepthAndStencil", "Number of GPU cycles the depth buffer spends waiting for the color buffer to be ready to accept data. Larger numbers indicate a bottleneck in color buffer operations.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24", "4351fa7f-6737-2c3e-3ffb-b3addbdceedd");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7628);
        internal_counters.push_back(8016);
        internal_counters.push_back(8404);
        internal_counters.push_back(8792);
        internal_counters.push_back(9180);
        internal_counters.push_back(9568);
        internal_counters.push_back(9956);
        internal_counters.push_back(10344);
        internal_counters.push_back(10732);
        internal_counters.push_back(11120);
        internal_counters.push_back(11508);
        internal_counters.push_back(11896);
        internal_counters.push_back(12284);
        internal_counters.push_back(12672);
        internal_counters.push_back(13060);
        internal_counters.push_back(13448);
        internal_counters.push_back(13836);
        internal_counters.push_back(14224);
        internal_counters.push_back(14612);
        internal_counters.push_back(15000);
        internal_counters.push_back(15388);
        internal_counters.push_back(15776);
        internal_counters.push_back(16164);
        internal_counters.push_back(16552);
        internal_counters.push_back(7635);
        internal_counters.push_back(8023);
        internal_counters.push_back(8411);
        internal_counters.push_back(8799);
        internal_counters.push_back(9187);
        internal_counters.push_back(9575);
        internal_counters.push_back(9963);
        internal_counters.push_back(10351);
        internal_counters.push_back(10739);
        internal_counters.push_back(11127);
        internal_counters.push_back(11515);
        internal_counters.push_back(11903);
        internal_counters.push_back(12291);
        internal_counters.push_back(12679);
        internal_counters.push_back(13067);
        internal_counters.push_back(13455);
        internal_counters.push_back(13843);
        internal_counters.push_back(14231);
        internal_counters.push_back(14619);
        internal_counters.push_back(15007);
        internal_counters.push_back(15395);
        internal_counters.push_back(15783);
        internal_counters.push_back(16171);
        internal_counters.push_back(16559);

        c.DefineDerivedCounter("DBMemRead", "DepthAndStencil", "Number of bytes read from the depth buffer.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,(256),*,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,(32),*,+", "dcdb4ee7-bd50-00f7-c028-9e5f4ce888c0");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7640);
        internal_counters.push_back(8028);
        internal_counters.push_back(8416);
        internal_counters.push_back(8804);
        internal_counters.push_back(9192);
        internal_counters.push_back(9580);
        internal_counters.push_back(9968);
        internal_counters.push_back(10356);
        internal_counters.push_back(10744);
        internal_counters.push_back(11132);
        internal_counters.push_back(11520);
        internal_counters.push_back(11908);
        internal_counters.push_back(12296);
        internal_counters.push_back(12684);
        internal_counters.push_back(13072);
        internal_counters.push_back(13460);
        internal_counters.push_back(13848);
        internal_counters.push_back(14236);
        internal_counters.push_back(14624);
        internal_counters.push_back(15012);
        internal_counters.push_back(15400);
        internal_counters.push_back(15788);
        internal_counters.push_back(16176);
        internal_counters.push_back(16564);
        internal_counters.push_back(7643);
        internal_counters.push_back(8031);
        internal_counters.push_back(8419);
        internal_counters.push_back(8807);
        internal_counters.push_back(9195);
        internal_counters.push_back(9583);
        internal_counters.push_back(9971);
        internal_counters.push_back(10359);
        internal_counters.push_back(10747);
        internal_counters.push_back(11135);
        internal_counters.push_back(11523);
        internal_counters.push_back(11911);
        internal_counters.push_back(12299);
        internal_counters.push_back(12687);
        internal_counters.push_back(13075);
        internal_counters.push_back(13463);
        internal_counters.push_back(13851);
        internal_counters.push_back(14239);
        internal_counters.push_back(14627);
        internal_counters.push_back(15015);
        internal_counters.push_back(15403);
        internal_counters.push_back(15791);
        internal_counters.push_back(16179);
        internal_counters.push_back(16567);

        c.DefineDerivedCounter("DBMemWritten", "DepthAndStencil", "Number of bytes written to the depth buffer.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,(32),*,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,(32),*,+", "de5717f8-8a49-ee44-4645-10de51b37dcf");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(65);
        internal_counters.push_back(379);
        internal_counters.push_back(693);
        internal_counters.push_back(1007);
        internal_counters.push_back(1321);
        internal_counters.push_back(1635);
        internal_counters.push_back(1949);
        internal_counters.push_back(2263);
        internal_counters.push_back(2577);
        internal_counters.push_back(2891);
        internal_counters.push_back(3205);
        internal_counters.push_back(3519);
        internal_counters.push_back(3833);
        internal_counters.push_back(4147);
        internal_counters.push_back(4461);
        internal_counters.push_back(4775);
        internal_counters.push_back(5089);
        internal_counters.push_back(5403);
        internal_counters.push_back(5717);
        internal_counters.push_back(6031);
        internal_counters.push_back(6345);
        internal_counters.push_back(6659);
        internal_counters.push_back(6973);
        internal_counters.push_back(7287);

        c.DefineDerivedCounter("CBMemRead", "ColorBuffer", "Number of bytes read from the color buffer.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,(32),*", "84b531d8-a1f8-7f49-7c27-7bc97801f1e6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(76);
        internal_counters.push_back(390);
        internal_counters.push_back(704);
        internal_counters.push_back(1018);
        internal_counters.push_back(1332);
        internal_counters.push_back(1646);
        internal_counters.push_back(1960);
        internal_counters.push_back(2274);
        internal_counters.push_back(2588);
        internal_counters.push_back(2902);
        internal_counters.push_back(3216);
        internal_counters.push_back(3530);
        internal_counters.push_back(3844);
        internal_counters.push_back(4158);
        internal_counters.push_back(4472);
        internal_counters.push_back(4786);
        internal_counters.push_back(5100);
        internal_counters.push_back(5414);
        internal_counters.push_back(5728);
        internal_counters.push_back(6042);
        internal_counters.push_back(6356);
        internal_counters.push_back(6670);
        internal_counters.push_back(6984);
        internal_counters.push_back(7298);
        internal_counters.push_back(65);
        internal_counters.push_back(379);
        internal_counters.push_back(693);
        internal_counters.push_back(1007);
        internal_counters.push_back(1321);
        internal_counters.push_back(1635);
        internal_counters.push_back(1949);
        internal_counters.push_back(2263);
        internal_counters.push_back(2577);
        internal_counters.push_back(2891);
        internal_counters.push_back(3205);
        internal_counters.push_back(3519);
        internal_counters.push_back(3833);
        internal_counters.push_back(4147);
        internal_counters.push_back(4461);
        internal_counters.push_back(4775);
        internal_counters.push_back(5089);
        internal_counters.push_back(5403);
        internal_counters.push_back(5717);
        internal_counters.push_back(6031);
        internal_counters.push_back(6345);
        internal_counters.push_back(6659);
        internal_counters.push_back(6973);
        internal_counters.push_back(7287);

        c.DefineDerivedCounter("CBColorAndMaskRead", "ColorBuffer", "Total number of bytes read from the color and mask buffers.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,+,(32),*", "da41660e-eb6f-32ec-8a64-b32ca17bd7eb");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(63);
        internal_counters.push_back(377);
        internal_counters.push_back(691);
        internal_counters.push_back(1005);
        internal_counters.push_back(1319);
        internal_counters.push_back(1633);
        internal_counters.push_back(1947);
        internal_counters.push_back(2261);
        internal_counters.push_back(2575);
        internal_counters.push_back(2889);
        internal_counters.push_back(3203);
        internal_counters.push_back(3517);
        internal_counters.push_back(3831);
        internal_counters.push_back(4145);
        internal_counters.push_back(4459);
        internal_counters.push_back(4773);
        internal_counters.push_back(5087);
        internal_counters.push_back(5401);
        internal_counters.push_back(5715);
        internal_counters.push_back(6029);
        internal_counters.push_back(6343);
        internal_counters.push_back(6657);
        internal_counters.push_back(6971);
        internal_counters.push_back(7285);

        c.DefineDerivedCounter("CBMemWritten", "ColorBuffer", "Number of bytes written to the color buffer.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,(32),*", "550f8ff8-60b6-a6bf-87d0-25ac9e87de70");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(74);
        internal_counters.push_back(388);
        internal_counters.push_back(702);
        internal_counters.push_back(1016);
        internal_counters.push_back(1330);
        internal_counters.push_back(1644);
        internal_counters.push_back(1958);
        internal_counters.push_back(2272);
        internal_counters.push_back(2586);
        internal_counters.push_back(2900);
        internal_counters.push_back(3214);
        internal_counters.push_back(3528);
        internal_counters.push_back(3842);
        internal_counters.push_back(4156);
        internal_counters.push_back(4470);
        internal_counters.push_back(4784);
        internal_counters.push_back(5098);
        internal_counters.push_back(5412);
        internal_counters.push_back(5726);
        internal_counters.push_back(6040);
        internal_counters.push_back(6354);
        internal_counters.push_back(6668);
        internal_counters.push_back(6982);
        internal_counters.push_back(7296);
        internal_counters.push_back(63);
        internal_counters.push_back(377);
        internal_counters.push_back(691);
        internal_counters.push_back(1005);
        internal_counters.push_back(1319);
        internal_counters.push_back(1633);
        internal_counters.push_back(1947);
        internal_counters.push_back(2261);
        internal_counters.push_back(2575);
        internal_counters.push_back(2889);
        internal_counters.push_back(3203);
        internal_counters.push_back(3517);
        internal_counters.push_back(3831);
        internal_counters.push_back(4145);
        internal_counters.push_back(4459);
        internal_counters.push_back(4773);
        internal_counters.push_back(5087);
        internal_counters.push_back(5401);
        internal_counters.push_back(5715);
        internal_counters.push_back(6029);
        internal_counters.push_back(6343);
        internal_counters.push_back(6657);
        internal_counters.push_back(6971);
        internal_counters.push_back(7285);

        c.DefineDerivedCounter("CBColorAndMaskWritten", "ColorBuffer", "Total number of bytes written to the color and mask buffers.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,+,(32),*", "29a04b69-8f5f-b770-a0f2-3453e2c99e49");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80324);
        internal_counters.push_back(80402);
        internal_counters.push_back(80480);
        internal_counters.push_back(80558);
        internal_counters.push_back(80636);
        internal_counters.push_back(80714);
        internal_counters.push_back(80792);
        internal_counters.push_back(80870);
        internal_counters.push_back(80948);
        internal_counters.push_back(81026);
        internal_counters.push_back(81104);
        internal_counters.push_back(81182);
        internal_counters.push_back(81260);
        internal_counters.push_back(81338);
        internal_counters.push_back(81416);
        internal_counters.push_back(81494);
        internal_counters.push_back(81572);
        internal_counters.push_back(81650);
        internal_counters.push_back(81728);
        internal_counters.push_back(81806);
        internal_counters.push_back(81884);
        internal_counters.push_back(81962);
        internal_counters.push_back(82040);
        internal_counters.push_back(82118);
        internal_counters.push_back(82196);
        internal_counters.push_back(82274);
        internal_counters.push_back(82352);
        internal_counters.push_back(82430);
        internal_counters.push_back(82508);
        internal_counters.push_back(82586);
        internal_counters.push_back(82664);
        internal_counters.push_back(82742);
        internal_counters.push_back(82820);
        internal_counters.push_back(82898);
        internal_counters.push_back(82976);
        internal_counters.push_back(83054);
        internal_counters.push_back(83132);
        internal_counters.push_back(83210);
        internal_counters.push_back(83288);
        internal_counters.push_back(83366);
        internal_counters.push_back(83444);
        internal_counters.push_back(83522);
        internal_counters.push_back(83600);
        internal_counters.push_back(83678);
        internal_counters.push_back(83756);
        internal_counters.push_back(83834);
        internal_counters.push_back(83912);
        internal_counters.push_back(83990);
        internal_counters.push_back(84068);
        internal_counters.push_back(84146);
        internal_counters.push_back(84224);
        internal_counters.push_back(84302);
        internal_counters.push_back(84380);
        internal_counters.push_back(84458);
        internal_counters.push_back(84536);
        internal_counters.push_back(84614);
        internal_counters.push_back(84692);
        internal_counters.push_back(84770);
        internal_counters.push_back(84848);
        internal_counters.push_back(84926);
        internal_counters.push_back(85004);
        internal_counters.push_back(85082);
        internal_counters.push_back(85160);
        internal_counters.push_back(85238);
        internal_counters.push_back(85316);
        internal_counters.push_back(85394);
        internal_counters.push_back(85472);
        internal_counters.push_back(85550);
        internal_counters.push_back(85628);
        internal_counters.push_back(85706);
        internal_counters.push_back(85784);
        internal_counters.push_back(85862);
        internal_counters.push_back(85940);
        internal_counters.push_back(86018);
        internal_counters.push_back(86096);
        internal_counters.push_back(86174);
        internal_counters.push_back(86252);
        internal_counters.push_back(86330);
        internal_counters.push_back(86408);
        internal_counters.push_back(86486);
        internal_counters.push_back(86564);
        internal_counters.push_back(86642);
        internal_counters.push_back(86720);
        internal_counters.push_back(86798);
        internal_counters.push_back(86876);
        internal_counters.push_back(86954);
        internal_counters.push_back(87032);
        internal_counters.push_back(87110);
        internal_counters.push_back(87188);
        internal_counters.push_back(87266);
        internal_counters.push_back(87344);
        internal_counters.push_back(87422);
        internal_counters.push_back(87500);
        internal_counters.push_back(87578);
        internal_counters.push_back(87656);
        internal_counters.push_back(87734);
        internal_counters.push_back(80332);
        internal_counters.push_back(80410);
        internal_counters.push_back(80488);
        internal_counters.push_back(80566);
        internal_counters.push_back(80644);
        internal_counters.push_back(80722);
        internal_counters.push_back(80800);
        internal_counters.push_back(80878);
        internal_counters.push_back(80956);
        internal_counters.push_back(81034);
        internal_counters.push_back(81112);
        internal_counters.push_back(81190);
        internal_counters.push_back(81268);
        internal_counters.push_back(81346);
        internal_counters.push_back(81424);
        internal_counters.push_back(81502);
        internal_counters.push_back(81580);
        internal_counters.push_back(81658);
        internal_counters.push_back(81736);
        internal_counters.push_back(81814);
        internal_counters.push_back(81892);
        internal_counters.push_back(81970);
        internal_counters.push_back(82048);
        internal_counters.push_back(82126);
        internal_counters.push_back(82204);
        internal_counters.push_back(82282);
        internal_counters.push_back(82360);
        internal_counters.push_back(82438);
        internal_counters.push_back(82516);
        internal_counters.push_back(82594);
        internal_counters.push_back(82672);
        internal_counters.push_back(82750);
        internal_counters.push_back(82828);
        internal_counters.push_back(82906);
        internal_counters.push_back(82984);
        internal_counters.push_back(83062);
        internal_counters.push_back(83140);
        internal_counters.push_back(83218);
        internal_counters.push_back(83296);
        internal_counters.push_back(83374);
        internal_counters.push_back(83452);
        internal_counters.push_back(83530);
        internal_counters.push_back(83608);
        internal_counters.push_back(83686);
        internal_counters.push_back(83764);
        internal_counters.push_back(83842);
        internal_counters.push_back(83920);
        internal_counters.push_back(83998);
        internal_counters.push_back(84076);
        internal_counters.push_back(84154);
        internal_counters.push_back(84232);
        internal_counters.push_back(84310);
        internal_counters.push_back(84388);
        internal_counters.push_back(84466);
        internal_counters.push_back(84544);
        internal_counters.push_back(84622);
        internal_counters.push_back(84700);
        internal_counters.push_back(84778);
        internal_counters.push_back(84856);
        internal_counters.push_back(84934);
        internal_counters.push_back(85012);
        internal_counters.push_back(85090);
        internal_counters.push_back(85168);
        internal_counters.push_back(85246);
        internal_counters.push_back(85324);
        internal_counters.push_back(85402);
        internal_counters.push_back(85480);
        internal_counters.push_back(85558);
        internal_counters.push_back(85636);
        internal_counters.push_back(85714);
        internal_counters.push_back(85792);
        internal_counters.push_back(85870);
        internal_counters.push_back(85948);
        internal_counters.push_back(86026);
        internal_counters.push_back(86104);
        internal_counters.push_back(86182);
        internal_counters.push_back(86260);
        internal_counters.push_back(86338);
        internal_counters.push_back(86416);
        internal_counters.push_back(86494);
        internal_counters.push_back(86572);
        internal_counters.push_back(86650);
        internal_counters.push_back(86728);
        internal_counters.push_back(86806);
        internal_counters.push_back(86884);
        internal_counters.push_back(86962);
        internal_counters.push_back(87040);
        internal_counters.push_back(87118);
        internal_counters.push_back(87196);
        internal_counters.push_back(87274);
        internal_counters.push_back(87352);
        internal_counters.push_back(87430);
        internal_counters.push_back(87508);
        internal_counters.push_back(87586);
        internal_counters.push_back(87664);
        internal_counters.push_back(87742);

        c.DefineDerivedCounter("L0CacheHit", "MemoryCache", "The percentage of read requests that hit the data in the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),(1),96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum96,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,ifnotzero", "286c786e-9a42-3371-9dea-dd54e6e612e9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80324);
        internal_counters.push_back(80402);
        internal_counters.push_back(80480);
        internal_counters.push_back(80558);
        internal_counters.push_back(80636);
        internal_counters.push_back(80714);
        internal_counters.push_back(80792);
        internal_counters.push_back(80870);
        internal_counters.push_back(80948);
        internal_counters.push_back(81026);
        internal_counters.push_back(81104);
        internal_counters.push_back(81182);
        internal_counters.push_back(81260);
        internal_counters.push_back(81338);
        internal_counters.push_back(81416);
        internal_counters.push_back(81494);
        internal_counters.push_back(81572);
        internal_counters.push_back(81650);
        internal_counters.push_back(81728);
        internal_counters.push_back(81806);
        internal_counters.push_back(81884);
        internal_counters.push_back(81962);
        internal_counters.push_back(82040);
        internal_counters.push_back(82118);
        internal_counters.push_back(82196);
        internal_counters.push_back(82274);
        internal_counters.push_back(82352);
        internal_counters.push_back(82430);
        internal_counters.push_back(82508);
        internal_counters.push_back(82586);
        internal_counters.push_back(82664);
        internal_counters.push_back(82742);
        internal_counters.push_back(82820);
        internal_counters.push_back(82898);
        internal_counters.push_back(82976);
        internal_counters.push_back(83054);
        internal_counters.push_back(83132);
        internal_counters.push_back(83210);
        internal_counters.push_back(83288);
        internal_counters.push_back(83366);
        internal_counters.push_back(83444);
        internal_counters.push_back(83522);
        internal_counters.push_back(83600);
        internal_counters.push_back(83678);
        internal_counters.push_back(83756);
        internal_counters.push_back(83834);
        internal_counters.push_back(83912);
        internal_counters.push_back(83990);
        internal_counters.push_back(84068);
        internal_counters.push_back(84146);
        internal_counters.push_back(84224);
        internal_counters.push_back(84302);
        internal_counters.push_back(84380);
        internal_counters.push_back(84458);
        internal_counters.push_back(84536);
        internal_counters.push_back(84614);
        internal_counters.push_back(84692);
        internal_counters.push_back(84770);
        internal_counters.push_back(84848);
        internal_counters.push_back(84926);
        internal_counters.push_back(85004);
        internal_counters.push_back(85082);
        internal_counters.push_back(85160);
        internal_counters.push_back(85238);
        internal_counters.push_back(85316);
        internal_counters.push_back(85394);
        internal_counters.push_back(85472);
        internal_counters.push_back(85550);
        internal_counters.push_back(85628);
        internal_counters.push_back(85706);
        internal_counters.push_back(85784);
        internal_counters.push_back(85862);
        internal_counters.push_back(85940);
        internal_counters.push_back(86018);
        internal_counters.push_back(86096);
        internal_counters.push_back(86174);
        internal_counters.push_back(86252);
        internal_counters.push_back(86330);
        internal_counters.push_back(86408);
        internal_counters.push_back(86486);
        internal_counters.push_back(86564);
        internal_counters.push_back(86642);
        internal_counters.push_back(86720);
        internal_counters.push_back(86798);
        internal_counters.push_back(86876);
        internal_counters.push_back(86954);
        internal_counters.push_back(87032);
        internal_counters.push_back(87110);
        internal_counters.push_back(87188);
        internal_counters.push_back(87266);
        internal_counters.push_back(87344);
        internal_counters.push_back(87422);
        internal_counters.push_back(87500);
        internal_counters.push_back(87578);
        internal_counters.push_back(87656);
        internal_counters.push_back(87734);

        c.DefineDerivedCounter("L0CacheRequestCount", "MemoryCache", "The number of read requests made to the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96", "74983cae-ee57-2e1b-d990-5128fef84e1f");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80324);
        internal_counters.push_back(80402);
        internal_counters.push_back(80480);
        internal_counters.push_back(80558);
        internal_counters.push_back(80636);
        internal_counters.push_back(80714);
        internal_counters.push_back(80792);
        internal_counters.push_back(80870);
        internal_counters.push_back(80948);
        internal_counters.push_back(81026);
        internal_counters.push_back(81104);
        internal_counters.push_back(81182);
        internal_counters.push_back(81260);
        internal_counters.push_back(81338);
        internal_counters.push_back(81416);
        internal_counters.push_back(81494);
        internal_counters.push_back(81572);
        internal_counters.push_back(81650);
        internal_counters.push_back(81728);
        internal_counters.push_back(81806);
        internal_counters.push_back(81884);
        internal_counters.push_back(81962);
        internal_counters.push_back(82040);
        internal_counters.push_back(82118);
        internal_counters.push_back(82196);
        internal_counters.push_back(82274);
        internal_counters.push_back(82352);
        internal_counters.push_back(82430);
        internal_counters.push_back(82508);
        internal_counters.push_back(82586);
        internal_counters.push_back(82664);
        internal_counters.push_back(82742);
        internal_counters.push_back(82820);
        internal_counters.push_back(82898);
        internal_counters.push_back(82976);
        internal_counters.push_back(83054);
        internal_counters.push_back(83132);
        internal_counters.push_back(83210);
        internal_counters.push_back(83288);
        internal_counters.push_back(83366);
        internal_counters.push_back(83444);
        internal_counters.push_back(83522);
        internal_counters.push_back(83600);
        internal_counters.push_back(83678);
        internal_counters.push_back(83756);
        internal_counters.push_back(83834);
        internal_counters.push_back(83912);
        internal_counters.push_back(83990);
        internal_counters.push_back(84068);
        internal_counters.push_back(84146);
        internal_counters.push_back(84224);
        internal_counters.push_back(84302);
        internal_counters.push_back(84380);
        internal_counters.push_back(84458);
        internal_counters.push_back(84536);
        internal_counters.push_back(84614);
        internal_counters.push_back(84692);
        internal_counters.push_back(84770);
        internal_counters.push_back(84848);
        internal_counters.push_back(84926);
        internal_counters.push_back(85004);
        internal_counters.push_back(85082);
        internal_counters.push_back(85160);
        internal_counters.push_back(85238);
        internal_counters.push_back(85316);
        internal_counters.push_back(85394);
        internal_counters.push_back(85472);
        internal_counters.push_back(85550);
        internal_counters.push_back(85628);
        internal_counters.push_back(85706);
        internal_counters.push_back(85784);
        internal_counters.push_back(85862);
        internal_counters.push_back(85940);
        internal_counters.push_back(86018);
        internal_counters.push_back(86096);
        internal_counters.push_back(86174);
        internal_counters.push_back(86252);
        internal_counters.push_back(86330);
        internal_counters.push_back(86408);
        internal_counters.push_back(86486);
        internal_counters.push_back(86564);
        internal_counters.push_back(86642);
        internal_counters.push_back(86720);
        internal_counters.push_back(86798);
        internal_counters.push_back(86876);
        internal_counters.push_back(86954);
        internal_counters.push_back(87032);
        internal_counters.push_back(87110);
        internal_counters.push_back(87188);
        internal_counters.push_back(87266);
        internal_counters.push_back(87344);
        internal_counters.push_back(87422);
        internal_counters.push_back(87500);
        internal_counters.push_back(87578);
        internal_counters.push_back(87656);
        internal_counters.push_back(87734);
        internal_counters.push_back(80332);
        internal_counters.push_back(80410);
        internal_counters.push_back(80488);
        internal_counters.push_back(80566);
        internal_counters.push_back(80644);
        internal_counters.push_back(80722);
        internal_counters.push_back(80800);
        internal_counters.push_back(80878);
        internal_counters.push_back(80956);
        internal_counters.push_back(81034);
        internal_counters.push_back(81112);
        internal_counters.push_back(81190);
        internal_counters.push_back(81268);
        internal_counters.push_back(81346);
        internal_counters.push_back(81424);
        internal_counters.push_back(81502);
        internal_counters.push_back(81580);
        internal_counters.push_back(81658);
        internal_counters.push_back(81736);
        internal_counters.push_back(81814);
        internal_counters.push_back(81892);
        internal_counters.push_back(81970);
        internal_counters.push_back(82048);
        internal_counters.push_back(82126);
        internal_counters.push_back(82204);
        internal_counters.push_back(82282);
        internal_counters.push_back(82360);
        internal_counters.push_back(82438);
        internal_counters.push_back(82516);
        internal_counters.push_back(82594);
        internal_counters.push_back(82672);
        internal_counters.push_back(82750);
        internal_counters.push_back(82828);
        internal_counters.push_back(82906);
        internal_counters.push_back(82984);
        internal_counters.push_back(83062);
        internal_counters.push_back(83140);
        internal_counters.push_back(83218);
        internal_counters.push_back(83296);
        internal_counters.push_back(83374);
        internal_counters.push_back(83452);
        internal_counters.push_back(83530);
        internal_counters.push_back(83608);
        internal_counters.push_back(83686);
        internal_counters.push_back(83764);
        internal_counters.push_back(83842);
        internal_counters.push_back(83920);
        internal_counters.push_back(83998);
        internal_counters.push_back(84076);
        internal_counters.push_back(84154);
        internal_counters.push_back(84232);
        internal_counters.push_back(84310);
        internal_counters.push_back(84388);
        internal_counters.push_back(84466);
        internal_counters.push_back(84544);
        internal_counters.push_back(84622);
        internal_counters.push_back(84700);
        internal_counters.push_back(84778);
        internal_counters.push_back(84856);
        internal_counters.push_back(84934);
        internal_counters.push_back(85012);
        internal_counters.push_back(85090);
        internal_counters.push_back(85168);
        internal_counters.push_back(85246);
        internal_counters.push_back(85324);
        internal_counters.push_back(85402);
        internal_counters.push_back(85480);
        internal_counters.push_back(85558);
        internal_counters.push_back(85636);
        internal_counters.push_back(85714);
        internal_counters.push_back(85792);
        internal_counters.push_back(85870);
        internal_counters.push_back(85948);
        internal_counters.push_back(86026);
        internal_counters.push_back(86104);
        internal_counters.push_back(86182);
        internal_counters.push_back(86260);
        internal_counters.push_back(86338);
        internal_counters.push_back(86416);
        internal_counters.push_back(86494);
        internal_counters.push_back(86572);
        internal_counters.push_back(86650);
        internal_counters.push_back(86728);
        internal_counters.push_back(86806);
        internal_counters.push_back(86884);
        internal_counters.push_back(86962);
        internal_counters.push_back(87040);
        internal_counters.push_back(87118);
        internal_counters.push_back(87196);
        internal_counters.push_back(87274);
        internal_counters.push_back(87352);
        internal_counters.push_back(87430);
        internal_counters.push_back(87508);
        internal_counters.push_back(87586);
        internal_counters.push_back(87664);
        internal_counters.push_back(87742);

        c.DefineDerivedCounter("L0CacheHitCount", "MemoryCache", "The number of read requests which result in a cache hit from the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum96,-", "c0de7338-069b-c5ba-ead3-c65e030cd2ac");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80332);
        internal_counters.push_back(80410);
        internal_counters.push_back(80488);
        internal_counters.push_back(80566);
        internal_counters.push_back(80644);
        internal_counters.push_back(80722);
        internal_counters.push_back(80800);
        internal_counters.push_back(80878);
        internal_counters.push_back(80956);
        internal_counters.push_back(81034);
        internal_counters.push_back(81112);
        internal_counters.push_back(81190);
        internal_counters.push_back(81268);
        internal_counters.push_back(81346);
        internal_counters.push_back(81424);
        internal_counters.push_back(81502);
        internal_counters.push_back(81580);
        internal_counters.push_back(81658);
        internal_counters.push_back(81736);
        internal_counters.push_back(81814);
        internal_counters.push_back(81892);
        internal_counters.push_back(81970);
        internal_counters.push_back(82048);
        internal_counters.push_back(82126);
        internal_counters.push_back(82204);
        internal_counters.push_back(82282);
        internal_counters.push_back(82360);
        internal_counters.push_back(82438);
        internal_counters.push_back(82516);
        internal_counters.push_back(82594);
        internal_counters.push_back(82672);
        internal_counters.push_back(82750);
        internal_counters.push_back(82828);
        internal_counters.push_back(82906);
        internal_counters.push_back(82984);
        internal_counters.push_back(83062);
        internal_counters.push_back(83140);
        internal_counters.push_back(83218);
        internal_counters.push_back(83296);
        internal_counters.push_back(83374);
        internal_counters.push_back(83452);
        internal_counters.push_back(83530);
        internal_counters.push_back(83608);
        internal_counters.push_back(83686);
        internal_counters.push_back(83764);
        internal_counters.push_back(83842);
        internal_counters.push_back(83920);
        internal_counters.push_back(83998);
        internal_counters.push_back(84076);
        internal_counters.push_back(84154);
        internal_counters.push_back(84232);
        internal_counters.push_back(84310);
        internal_counters.push_back(84388);
        internal_counters.push_back(84466);
        internal_counters.push_back(84544);
        internal_counters.push_back(84622);
        internal_counters.push_back(84700);
        internal_counters.push_back(84778);
        internal_counters.push_back(84856);
        internal_counters.push_back(84934);
        internal_counters.push_back(85012);
        internal_counters.push_back(85090);
        internal_counters.push_back(85168);
        internal_counters.push_back(85246);
        internal_counters.push_back(85324);
        internal_counters.push_back(85402);
        internal_counters.push_back(85480);
        internal_counters.push_back(85558);
        internal_counters.push_back(85636);
        internal_counters.push_back(85714);
        internal_counters.push_back(85792);
        internal_counters.push_back(85870);
        internal_counters.push_back(85948);
        internal_counters.push_back(86026);
        internal_counters.push_back(86104);
        internal_counters.push_back(86182);
        internal_counters.push_back(86260);
        internal_counters.push_back(86338);
        internal_counters.push_back(86416);
        internal_counters.push_back(86494);
        internal_counters.push_back(86572);
        internal_counters.push_back(86650);
        internal_counters.push_back(86728);
        internal_counters.push_back(86806);
        internal_counters.push_back(86884);
        internal_counters.push_back(86962);
        internal_counters.push_back(87040);
        internal_counters.push_back(87118);
        internal_counters.push_back(87196);
        internal_counters.push_back(87274);
        internal_counters.push_back(87352);
        internal_counters.push_back(87430);
        internal_counters.push_back(87508);
        internal_counters.push_back(87586);
        internal_counters.push_back(87664);
        internal_counters.push_back(87742);

        c.DefineDerivedCounter("L0CacheMissCount", "MemoryCache", "The number of read requests which result in a cache miss from the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum96", "a2f08766-ea1b-6eae-6eaf-faa04125d3e6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(98035);
        internal_counters.push_back(98119);
        internal_counters.push_back(98203);
        internal_counters.push_back(98287);
        internal_counters.push_back(98371);
        internal_counters.push_back(98455);
        internal_counters.push_back(98539);
        internal_counters.push_back(98623);
        internal_counters.push_back(98707);
        internal_counters.push_back(98791);
        internal_counters.push_back(98875);
        internal_counters.push_back(98959);
        internal_counters.push_back(99043);
        internal_counters.push_back(99127);
        internal_counters.push_back(99211);
        internal_counters.push_back(99295);
        internal_counters.push_back(99379);
        internal_counters.push_back(99463);
        internal_counters.push_back(99547);
        internal_counters.push_back(99631);
        internal_counters.push_back(99715);
        internal_counters.push_back(99799);
        internal_counters.push_back(99883);
        internal_counters.push_back(99967);
        internal_counters.push_back(100051);
        internal_counters.push_back(100135);
        internal_counters.push_back(100219);
        internal_counters.push_back(100303);
        internal_counters.push_back(100387);
        internal_counters.push_back(100471);
        internal_counters.push_back(100555);
        internal_counters.push_back(100639);
        internal_counters.push_back(100723);
        internal_counters.push_back(100807);
        internal_counters.push_back(100891);
        internal_counters.push_back(100975);
        internal_counters.push_back(101059);
        internal_counters.push_back(101143);
        internal_counters.push_back(101227);
        internal_counters.push_back(101311);
        internal_counters.push_back(101395);
        internal_counters.push_back(101479);
        internal_counters.push_back(101563);
        internal_counters.push_back(101647);
        internal_counters.push_back(101731);
        internal_counters.push_back(101815);
        internal_counters.push_back(101899);
        internal_counters.push_back(101983);
        internal_counters.push_back(98039);
        internal_counters.push_back(98123);
        internal_counters.push_back(98207);
        internal_counters.push_back(98291);
        internal_counters.push_back(98375);
        internal_counters.push_back(98459);
        internal_counters.push_back(98543);
        internal_counters.push_back(98627);
        internal_counters.push_back(98711);
        internal_counters.push_back(98795);
        internal_counters.push_back(98879);
        internal_counters.push_back(98963);
        internal_counters.push_back(99047);
        internal_counters.push_back(99131);
        internal_counters.push_back(99215);
        internal_counters.push_back(99299);
        internal_counters.push_back(99383);
        internal_counters.push_back(99467);
        internal_counters.push_back(99551);
        internal_counters.push_back(99635);
        internal_counters.push_back(99719);
        internal_counters.push_back(99803);
        internal_counters.push_back(99887);
        internal_counters.push_back(99971);
        internal_counters.push_back(100055);
        internal_counters.push_back(100139);
        internal_counters.push_back(100223);
        internal_counters.push_back(100307);
        internal_counters.push_back(100391);
        internal_counters.push_back(100475);
        internal_counters.push_back(100559);
        internal_counters.push_back(100643);
        internal_counters.push_back(100727);
        internal_counters.push_back(100811);
        internal_counters.push_back(100895);
        internal_counters.push_back(100979);
        internal_counters.push_back(101063);
        internal_counters.push_back(101147);
        internal_counters.push_back(101231);
        internal_counters.push_back(101315);
        internal_counters.push_back(101399);
        internal_counters.push_back(101483);
        internal_counters.push_back(101567);
        internal_counters.push_back(101651);
        internal_counters.push_back(101735);
        internal_counters.push_back(101819);
        internal_counters.push_back(101903);
        internal_counters.push_back(101987);

        c.DefineDerivedCounter("L1CacheHit", "MemoryCache", "The percentage of read or write requests that hit the data in the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(1),48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum48,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum48,/,-,(100),*", "5a34915a-24b8-8baf-2bf8-5878e7894ae3");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(98035);
        internal_counters.push_back(98119);
        internal_counters.push_back(98203);
        internal_counters.push_back(98287);
        internal_counters.push_back(98371);
        internal_counters.push_back(98455);
        internal_counters.push_back(98539);
        internal_counters.push_back(98623);
        internal_counters.push_back(98707);
        internal_counters.push_back(98791);
        internal_counters.push_back(98875);
        internal_counters.push_back(98959);
        internal_counters.push_back(99043);
        internal_counters.push_back(99127);
        internal_counters.push_back(99211);
        internal_counters.push_back(99295);
        internal_counters.push_back(99379);
        internal_counters.push_back(99463);
        internal_counters.push_back(99547);
        internal_counters.push_back(99631);
        internal_counters.push_back(99715);
        internal_counters.push_back(99799);
        internal_counters.push_back(99883);
        internal_counters.push_back(99967);
        internal_counters.push_back(100051);
        internal_counters.push_back(100135);
        internal_counters.push_back(100219);
        internal_counters.push_back(100303);
        internal_counters.push_back(100387);
        internal_counters.push_back(100471);
        internal_counters.push_back(100555);
        internal_counters.push_back(100639);
        internal_counters.push_back(100723);
        internal_counters.push_back(100807);
        internal_counters.push_back(100891);
        internal_counters.push_back(100975);
        internal_counters.push_back(101059);
        internal_counters.push_back(101143);
        internal_counters.push_back(101227);
        internal_counters.push_back(101311);
        internal_counters.push_back(101395);
        internal_counters.push_back(101479);
        internal_counters.push_back(101563);
        internal_counters.push_back(101647);
        internal_counters.push_back(101731);
        internal_counters.push_back(101815);
        internal_counters.push_back(101899);
        internal_counters.push_back(101983);

        c.DefineDerivedCounter("L1CacheRequestCount", "MemoryCache", "The number of read or write requests made to the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum48", "29c76c67-4611-205d-0b88-d08668df03c5");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(98035);
        internal_counters.push_back(98119);
        internal_counters.push_back(98203);
        internal_counters.push_back(98287);
        internal_counters.push_back(98371);
        internal_counters.push_back(98455);
        internal_counters.push_back(98539);
        internal_counters.push_back(98623);
        internal_counters.push_back(98707);
        internal_counters.push_back(98791);
        internal_counters.push_back(98875);
        internal_counters.push_back(98959);
        internal_counters.push_back(99043);
        internal_counters.push_back(99127);
        internal_counters.push_back(99211);
        internal_counters.push_back(99295);
        internal_counters.push_back(99379);
        internal_counters.push_back(99463);
        internal_counters.push_back(99547);
        internal_counters.push_back(99631);
        internal_counters.push_back(99715);
        internal_counters.push_back(99799);
        internal_counters.push_back(99883);
        internal_counters.push_back(99967);
        internal_counters.push_back(100051);
        internal_counters.push_back(100135);
        internal_counters.push_back(100219);
        internal_counters.push_back(100303);
        internal_counters.push_back(100387);
        internal_counters.push_back(100471);
        internal_counters.push_back(100555);
        internal_counters.push_back(100639);
        internal_counters.push_back(100723);
        internal_counters.push_back(100807);
        internal_counters.push_back(100891);
        internal_counters.push_back(100975);
        internal_counters.push_back(101059);
        internal_counters.push_back(101143);
        internal_counters.push_back(101227);
        internal_counters.push_back(101311);
        internal_counters.push_back(101395);
        internal_counters.push_back(101479);
        internal_counters.push_back(101563);
        internal_counters.push_back(101647);
        internal_counters.push_back(101731);
        internal_counters.push_back(101815);
        internal_counters.push_back(101899);
        internal_counters.push_back(101983);
        internal_counters.push_back(98039);
        internal_counters.push_back(98123);
        internal_counters.push_back(98207);
        internal_counters.push_back(98291);
        internal_counters.push_back(98375);
        internal_counters.push_back(98459);
        internal_counters.push_back(98543);
        internal_counters.push_back(98627);
        internal_counters.push_back(98711);
        internal_counters.push_back(98795);
        internal_counters.push_back(98879);
        internal_counters.push_back(98963);
        internal_counters.push_back(99047);
        internal_counters.push_back(99131);
        internal_counters.push_back(99215);
        internal_counters.push_back(99299);
        internal_counters.push_back(99383);
        internal_counters.push_back(99467);
        internal_counters.push_back(99551);
        internal_counters.push_back(99635);
        internal_counters.push_back(99719);
        internal_counters.push_back(99803);
        internal_counters.push_back(99887);
        internal_counters.push_back(99971);
        internal_counters.push_back(100055);
        internal_counters.push_back(100139);
        internal_counters.push_back(100223);
        internal_counters.push_back(100307);
        internal_counters.push_back(100391);
        internal_counters.push_back(100475);
        internal_counters.push_back(100559);
        internal_counters.push_back(100643);
        internal_counters.push_back(100727);
        internal_counters.push_back(100811);
        internal_counters.push_back(100895);
        internal_counters.push_back(100979);
        internal_counters.push_back(101063);
        internal_counters.push_back(101147);
        internal_counters.push_back(101231);
        internal_counters.push_back(101315);
        internal_counters.push_back(101399);
        internal_counters.push_back(101483);
        internal_counters.push_back(101567);
        internal_counters.push_back(101651);
        internal_counters.push_back(101735);
        internal_counters.push_back(101819);
        internal_counters.push_back(101903);
        internal_counters.push_back(101987);

        c.DefineDerivedCounter("L1CacheHitCount", "MemoryCache", "The number of read or write requests which result in a cache hit from the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum48,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum48,-", "1ae150c3-f2d0-82c6-a51b-a77fd8d5fc33");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(98039);
        internal_counters.push_back(98123);
        internal_counters.push_back(98207);
        internal_counters.push_back(98291);
        internal_counters.push_back(98375);
        internal_counters.push_back(98459);
        internal_counters.push_back(98543);
        internal_counters.push_back(98627);
        internal_counters.push_back(98711);
        internal_counters.push_back(98795);
        internal_counters.push_back(98879);
        internal_counters.push_back(98963);
        internal_counters.push_back(99047);
        internal_counters.push_back(99131);
        internal_counters.push_back(99215);
        internal_counters.push_back(99299);
        internal_counters.push_back(99383);
        internal_counters.push_back(99467);
        internal_counters.push_back(99551);
        internal_counters.push_back(99635);
        internal_counters.push_back(99719);
        internal_counters.push_back(99803);
        internal_counters.push_back(99887);
        internal_counters.push_back(99971);
        internal_counters.push_back(100055);
        internal_counters.push_back(100139);
        internal_counters.push_back(100223);
        internal_counters.push_back(100307);
        internal_counters.push_back(100391);
        internal_counters.push_back(100475);
        internal_counters.push_back(100559);
        internal_counters.push_back(100643);
        internal_counters.push_back(100727);
        internal_counters.push_back(100811);
        internal_counters.push_back(100895);
        internal_counters.push_back(100979);
        internal_counters.push_back(101063);
        internal_counters.push_back(101147);
        internal_counters.push_back(101231);
        internal_counters.push_back(101315);
        internal_counters.push_back(101399);
        internal_counters.push_back(101483);
        internal_counters.push_back(101567);
        internal_counters.push_back(101651);
        internal_counters.push_back(101735);
        internal_counters.push_back(101819);
        internal_counters.push_back(101903);
        internal_counters.push_back(101987);

        c.DefineDerivedCounter("L1CacheMissCount", "MemoryCache", "The number of read or write requests which result in a cache miss from the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum48", "71bfec6d-257b-849d-e212-cdf5c1b1de65");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102488);
        internal_counters.push_back(102747);
        internal_counters.push_back(103006);
        internal_counters.push_back(103265);
        internal_counters.push_back(103524);
        internal_counters.push_back(103783);
        internal_counters.push_back(104042);
        internal_counters.push_back(104301);
        internal_counters.push_back(104560);
        internal_counters.push_back(104819);
        internal_counters.push_back(105078);
        internal_counters.push_back(105337);
        internal_counters.push_back(105596);
        internal_counters.push_back(105855);
        internal_counters.push_back(106114);
        internal_counters.push_back(106373);
        internal_counters.push_back(106632);
        internal_counters.push_back(106891);
        internal_counters.push_back(107150);
        internal_counters.push_back(107409);
        internal_counters.push_back(107668);
        internal_counters.push_back(107927);
        internal_counters.push_back(108186);
        internal_counters.push_back(108445);
        internal_counters.push_back(102528);
        internal_counters.push_back(102787);
        internal_counters.push_back(103046);
        internal_counters.push_back(103305);
        internal_counters.push_back(103564);
        internal_counters.push_back(103823);
        internal_counters.push_back(104082);
        internal_counters.push_back(104341);
        internal_counters.push_back(104600);
        internal_counters.push_back(104859);
        internal_counters.push_back(105118);
        internal_counters.push_back(105377);
        internal_counters.push_back(105636);
        internal_counters.push_back(105895);
        internal_counters.push_back(106154);
        internal_counters.push_back(106413);
        internal_counters.push_back(106672);
        internal_counters.push_back(106931);
        internal_counters.push_back(107190);
        internal_counters.push_back(107449);
        internal_counters.push_back(107708);
        internal_counters.push_back(107967);
        internal_counters.push_back(108226);
        internal_counters.push_back(108485);

        c.DefineDerivedCounter("L2CacheHit", "MemoryCache", "The percentage of read or write requests that hit the data in the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),(1),24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,ifnotzero", "47694e4d-6ce6-f387-080d-b1f3d00b73ac");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102528);
        internal_counters.push_back(102787);
        internal_counters.push_back(103046);
        internal_counters.push_back(103305);
        internal_counters.push_back(103564);
        internal_counters.push_back(103823);
        internal_counters.push_back(104082);
        internal_counters.push_back(104341);
        internal_counters.push_back(104600);
        internal_counters.push_back(104859);
        internal_counters.push_back(105118);
        internal_counters.push_back(105377);
        internal_counters.push_back(105636);
        internal_counters.push_back(105895);
        internal_counters.push_back(106154);
        internal_counters.push_back(106413);
        internal_counters.push_back(106672);
        internal_counters.push_back(106931);
        internal_counters.push_back(107190);
        internal_counters.push_back(107449);
        internal_counters.push_back(107708);
        internal_counters.push_back(107967);
        internal_counters.push_back(108226);
        internal_counters.push_back(108485);
        internal_counters.push_back(102488);
        internal_counters.push_back(102747);
        internal_counters.push_back(103006);
        internal_counters.push_back(103265);
        internal_counters.push_back(103524);
        internal_counters.push_back(103783);
        internal_counters.push_back(104042);
        internal_counters.push_back(104301);
        internal_counters.push_back(104560);
        internal_counters.push_back(104819);
        internal_counters.push_back(105078);
        internal_counters.push_back(105337);
        internal_counters.push_back(105596);
        internal_counters.push_back(105855);
        internal_counters.push_back(106114);
        internal_counters.push_back(106373);
        internal_counters.push_back(106632);
        internal_counters.push_back(106891);
        internal_counters.push_back(107150);
        internal_counters.push_back(107409);
        internal_counters.push_back(107668);
        internal_counters.push_back(107927);
        internal_counters.push_back(108186);
        internal_counters.push_back(108445);

        c.DefineDerivedCounter("L2CacheMiss", "MemoryCache", "The percentage of read or write requests that miss the data in the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size. Value range: 0% (optimal) to 100% (all miss).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,/,(100),*", "8aee5458-a58e-11b6-5131-7f19ed070117");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102488);
        internal_counters.push_back(102747);
        internal_counters.push_back(103006);
        internal_counters.push_back(103265);
        internal_counters.push_back(103524);
        internal_counters.push_back(103783);
        internal_counters.push_back(104042);
        internal_counters.push_back(104301);
        internal_counters.push_back(104560);
        internal_counters.push_back(104819);
        internal_counters.push_back(105078);
        internal_counters.push_back(105337);
        internal_counters.push_back(105596);
        internal_counters.push_back(105855);
        internal_counters.push_back(106114);
        internal_counters.push_back(106373);
        internal_counters.push_back(106632);
        internal_counters.push_back(106891);
        internal_counters.push_back(107150);
        internal_counters.push_back(107409);
        internal_counters.push_back(107668);
        internal_counters.push_back(107927);
        internal_counters.push_back(108186);
        internal_counters.push_back(108445);

        c.DefineDerivedCounter("L2CacheRequestCount", "MemoryCache", "The number of read or write requests made to the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "21e9219c-e725-0d96-06b1-b21698b736b2");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102488);
        internal_counters.push_back(102747);
        internal_counters.push_back(103006);
        internal_counters.push_back(103265);
        internal_counters.push_back(103524);
        internal_counters.push_back(103783);
        internal_counters.push_back(104042);
        internal_counters.push_back(104301);
        internal_counters.push_back(104560);
        internal_counters.push_back(104819);
        internal_counters.push_back(105078);
        internal_counters.push_back(105337);
        internal_counters.push_back(105596);
        internal_counters.push_back(105855);
        internal_counters.push_back(106114);
        internal_counters.push_back(106373);
        internal_counters.push_back(106632);
        internal_counters.push_back(106891);
        internal_counters.push_back(107150);
        internal_counters.push_back(107409);
        internal_counters.push_back(107668);
        internal_counters.push_back(107927);
        internal_counters.push_back(108186);
        internal_counters.push_back(108445);
        internal_counters.push_back(102528);
        internal_counters.push_back(102787);
        internal_counters.push_back(103046);
        internal_counters.push_back(103305);
        internal_counters.push_back(103564);
        internal_counters.push_back(103823);
        internal_counters.push_back(104082);
        internal_counters.push_back(104341);
        internal_counters.push_back(104600);
        internal_counters.push_back(104859);
        internal_counters.push_back(105118);
        internal_counters.push_back(105377);
        internal_counters.push_back(105636);
        internal_counters.push_back(105895);
        internal_counters.push_back(106154);
        internal_counters.push_back(106413);
        internal_counters.push_back(106672);
        internal_counters.push_back(106931);
        internal_counters.push_back(107190);
        internal_counters.push_back(107449);
        internal_counters.push_back(107708);
        internal_counters.push_back(107967);
        internal_counters.push_back(108226);
        internal_counters.push_back(108485);

        c.DefineDerivedCounter("L2CacheHitCount", "MemoryCache", "The number of read or write requests which result in a cache hit from the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-", "29ddcb92-d3dd-951b-1b23-efe52e4eeee4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102528);
        internal_counters.push_back(102787);
        internal_counters.push_back(103046);
        internal_counters.push_back(103305);
        internal_counters.push_back(103564);
        internal_counters.push_back(103823);
        internal_counters.push_back(104082);
        internal_counters.push_back(104341);
        internal_counters.push_back(104600);
        internal_counters.push_back(104859);
        internal_counters.push_back(105118);
        internal_counters.push_back(105377);
        internal_counters.push_back(105636);
        internal_counters.push_back(105895);
        internal_counters.push_back(106154);
        internal_counters.push_back(106413);
        internal_counters.push_back(106672);
        internal_counters.push_back(106931);
        internal_counters.push_back(107190);
        internal_counters.push_back(107449);
        internal_counters.push_back(107708);
        internal_counters.push_back(107967);
        internal_counters.push_back(108226);
        internal_counters.push_back(108485);

        c.DefineDerivedCounter("L2CacheMissCount", "MemoryCache", "The number of read or write requests which result in a cache miss from the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "376eec7b-ab25-9012-06b5-63291a17fd47");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80361);
        internal_counters.push_back(80439);
        internal_counters.push_back(80517);
        internal_counters.push_back(80595);
        internal_counters.push_back(80673);
        internal_counters.push_back(80751);
        internal_counters.push_back(80829);
        internal_counters.push_back(80907);
        internal_counters.push_back(80985);
        internal_counters.push_back(81063);
        internal_counters.push_back(81141);
        internal_counters.push_back(81219);
        internal_counters.push_back(81297);
        internal_counters.push_back(81375);
        internal_counters.push_back(81453);
        internal_counters.push_back(81531);
        internal_counters.push_back(81609);
        internal_counters.push_back(81687);
        internal_counters.push_back(81765);
        internal_counters.push_back(81843);
        internal_counters.push_back(81921);
        internal_counters.push_back(81999);
        internal_counters.push_back(82077);
        internal_counters.push_back(82155);
        internal_counters.push_back(82233);
        internal_counters.push_back(82311);
        internal_counters.push_back(82389);
        internal_counters.push_back(82467);
        internal_counters.push_back(82545);
        internal_counters.push_back(82623);
        internal_counters.push_back(82701);
        internal_counters.push_back(82779);
        internal_counters.push_back(82857);
        internal_counters.push_back(82935);
        internal_counters.push_back(83013);
        internal_counters.push_back(83091);
        internal_counters.push_back(83169);
        internal_counters.push_back(83247);
        internal_counters.push_back(83325);
        internal_counters.push_back(83403);
        internal_counters.push_back(83481);
        internal_counters.push_back(83559);
        internal_counters.push_back(83637);
        internal_counters.push_back(83715);
        internal_counters.push_back(83793);
        internal_counters.push_back(83871);
        internal_counters.push_back(83949);
        internal_counters.push_back(84027);
        internal_counters.push_back(84105);
        internal_counters.push_back(84183);
        internal_counters.push_back(84261);
        internal_counters.push_back(84339);
        internal_counters.push_back(84417);
        internal_counters.push_back(84495);
        internal_counters.push_back(84573);
        internal_counters.push_back(84651);
        internal_counters.push_back(84729);
        internal_counters.push_back(84807);
        internal_counters.push_back(84885);
        internal_counters.push_back(84963);
        internal_counters.push_back(85041);
        internal_counters.push_back(85119);
        internal_counters.push_back(85197);
        internal_counters.push_back(85275);
        internal_counters.push_back(85353);
        internal_counters.push_back(85431);
        internal_counters.push_back(85509);
        internal_counters.push_back(85587);
        internal_counters.push_back(85665);
        internal_counters.push_back(85743);
        internal_counters.push_back(85821);
        internal_counters.push_back(85899);
        internal_counters.push_back(85977);
        internal_counters.push_back(86055);
        internal_counters.push_back(86133);
        internal_counters.push_back(86211);
        internal_counters.push_back(86289);
        internal_counters.push_back(86367);
        internal_counters.push_back(86445);
        internal_counters.push_back(86523);
        internal_counters.push_back(86601);
        internal_counters.push_back(86679);
        internal_counters.push_back(86757);
        internal_counters.push_back(86835);
        internal_counters.push_back(86913);
        internal_counters.push_back(86991);
        internal_counters.push_back(87069);
        internal_counters.push_back(87147);
        internal_counters.push_back(87225);
        internal_counters.push_back(87303);
        internal_counters.push_back(87381);
        internal_counters.push_back(87459);
        internal_counters.push_back(87537);
        internal_counters.push_back(87615);
        internal_counters.push_back(87693);
        internal_counters.push_back(87771);

        c.DefineDerivedCounter("L0TagConflictReadStalledCycles", "MemoryCache", "The number of cycles read operations from the L0 cache are stalled due to tag conflicts.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96", "e2412737-e2bf-c791-5f2f-64abd4ba47cf");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80362);
        internal_counters.push_back(80440);
        internal_counters.push_back(80518);
        internal_counters.push_back(80596);
        internal_counters.push_back(80674);
        internal_counters.push_back(80752);
        internal_counters.push_back(80830);
        internal_counters.push_back(80908);
        internal_counters.push_back(80986);
        internal_counters.push_back(81064);
        internal_counters.push_back(81142);
        internal_counters.push_back(81220);
        internal_counters.push_back(81298);
        internal_counters.push_back(81376);
        internal_counters.push_back(81454);
        internal_counters.push_back(81532);
        internal_counters.push_back(81610);
        internal_counters.push_back(81688);
        internal_counters.push_back(81766);
        internal_counters.push_back(81844);
        internal_counters.push_back(81922);
        internal_counters.push_back(82000);
        internal_counters.push_back(82078);
        internal_counters.push_back(82156);
        internal_counters.push_back(82234);
        internal_counters.push_back(82312);
        internal_counters.push_back(82390);
        internal_counters.push_back(82468);
        internal_counters.push_back(82546);
        internal_counters.push_back(82624);
        internal_counters.push_back(82702);
        internal_counters.push_back(82780);
        internal_counters.push_back(82858);
        internal_counters.push_back(82936);
        internal_counters.push_back(83014);
        internal_counters.push_back(83092);
        internal_counters.push_back(83170);
        internal_counters.push_back(83248);
        internal_counters.push_back(83326);
        internal_counters.push_back(83404);
        internal_counters.push_back(83482);
        internal_counters.push_back(83560);
        internal_counters.push_back(83638);
        internal_counters.push_back(83716);
        internal_counters.push_back(83794);
        internal_counters.push_back(83872);
        internal_counters.push_back(83950);
        internal_counters.push_back(84028);
        internal_counters.push_back(84106);
        internal_counters.push_back(84184);
        internal_counters.push_back(84262);
        internal_counters.push_back(84340);
        internal_counters.push_back(84418);
        internal_counters.push_back(84496);
        internal_counters.push_back(84574);
        internal_counters.push_back(84652);
        internal_counters.push_back(84730);
        internal_counters.push_back(84808);
        internal_counters.push_back(84886);
        internal_counters.push_back(84964);
        internal_counters.push_back(85042);
        internal_counters.push_back(85120);
        internal_counters.push_back(85198);
        internal_counters.push_back(85276);
        internal_counters.push_back(85354);
        internal_counters.push_back(85432);
        internal_counters.push_back(85510);
        internal_counters.push_back(85588);
        internal_counters.push_back(85666);
        internal_counters.push_back(85744);
        internal_counters.push_back(85822);
        internal_counters.push_back(85900);
        internal_counters.push_back(85978);
        internal_counters.push_back(86056);
        internal_counters.push_back(86134);
        internal_counters.push_back(86212);
        internal_counters.push_back(86290);
        internal_counters.push_back(86368);
        internal_counters.push_back(86446);
        internal_counters.push_back(86524);
        internal_counters.push_back(86602);
        internal_counters.push_back(86680);
        internal_counters.push_back(86758);
        internal_counters.push_back(86836);
        internal_counters.push_back(86914);
        internal_counters.push_back(86992);
        internal_counters.push_back(87070);
        internal_counters.push_back(87148);
        internal_counters.push_back(87226);
        internal_counters.push_back(87304);
        internal_counters.push_back(87382);
        internal_counters.push_back(87460);
        internal_counters.push_back(87538);
        internal_counters.push_back(87616);
        internal_counters.push_back(87694);
        internal_counters.push_back(87772);

        c.DefineDerivedCounter("L0TagConflictWriteStalledCycles", "MemoryCache", "The number of cycles write operations to the L0 cache are stalled due to tag conflicts.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96", "0c2571f3-f084-f351-99ba-0d9e23b47e8e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80363);
        internal_counters.push_back(80441);
        internal_counters.push_back(80519);
        internal_counters.push_back(80597);
        internal_counters.push_back(80675);
        internal_counters.push_back(80753);
        internal_counters.push_back(80831);
        internal_counters.push_back(80909);
        internal_counters.push_back(80987);
        internal_counters.push_back(81065);
        internal_counters.push_back(81143);
        internal_counters.push_back(81221);
        internal_counters.push_back(81299);
        internal_counters.push_back(81377);
        internal_counters.push_back(81455);
        internal_counters.push_back(81533);
        internal_counters.push_back(81611);
        internal_counters.push_back(81689);
        internal_counters.push_back(81767);
        internal_counters.push_back(81845);
        internal_counters.push_back(81923);
        internal_counters.push_back(82001);
        internal_counters.push_back(82079);
        internal_counters.push_back(82157);
        internal_counters.push_back(82235);
        internal_counters.push_back(82313);
        internal_counters.push_back(82391);
        internal_counters.push_back(82469);
        internal_counters.push_back(82547);
        internal_counters.push_back(82625);
        internal_counters.push_back(82703);
        internal_counters.push_back(82781);
        internal_counters.push_back(82859);
        internal_counters.push_back(82937);
        internal_counters.push_back(83015);
        internal_counters.push_back(83093);
        internal_counters.push_back(83171);
        internal_counters.push_back(83249);
        internal_counters.push_back(83327);
        internal_counters.push_back(83405);
        internal_counters.push_back(83483);
        internal_counters.push_back(83561);
        internal_counters.push_back(83639);
        internal_counters.push_back(83717);
        internal_counters.push_back(83795);
        internal_counters.push_back(83873);
        internal_counters.push_back(83951);
        internal_counters.push_back(84029);
        internal_counters.push_back(84107);
        internal_counters.push_back(84185);
        internal_counters.push_back(84263);
        internal_counters.push_back(84341);
        internal_counters.push_back(84419);
        internal_counters.push_back(84497);
        internal_counters.push_back(84575);
        internal_counters.push_back(84653);
        internal_counters.push_back(84731);
        internal_counters.push_back(84809);
        internal_counters.push_back(84887);
        internal_counters.push_back(84965);
        internal_counters.push_back(85043);
        internal_counters.push_back(85121);
        internal_counters.push_back(85199);
        internal_counters.push_back(85277);
        internal_counters.push_back(85355);
        internal_counters.push_back(85433);
        internal_counters.push_back(85511);
        internal_counters.push_back(85589);
        internal_counters.push_back(85667);
        internal_counters.push_back(85745);
        internal_counters.push_back(85823);
        internal_counters.push_back(85901);
        internal_counters.push_back(85979);
        internal_counters.push_back(86057);
        internal_counters.push_back(86135);
        internal_counters.push_back(86213);
        internal_counters.push_back(86291);
        internal_counters.push_back(86369);
        internal_counters.push_back(86447);
        internal_counters.push_back(86525);
        internal_counters.push_back(86603);
        internal_counters.push_back(86681);
        internal_counters.push_back(86759);
        internal_counters.push_back(86837);
        internal_counters.push_back(86915);
        internal_counters.push_back(86993);
        internal_counters.push_back(87071);
        internal_counters.push_back(87149);
        internal_counters.push_back(87227);
        internal_counters.push_back(87305);
        internal_counters.push_back(87383);
        internal_counters.push_back(87461);
        internal_counters.push_back(87539);
        internal_counters.push_back(87617);
        internal_counters.push_back(87695);
        internal_counters.push_back(87773);

        c.DefineDerivedCounter("L0TagConflictAtomicStalledCycles", "MemoryCache", "The number of cycles atomic operations on the L0 cache are stalled due to tag conflicts.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96", "f13f8563-4151-1533-f42f-0f9c08a20210");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102584);
        internal_counters.push_back(102843);
        internal_counters.push_back(103102);
        internal_counters.push_back(103361);
        internal_counters.push_back(103620);
        internal_counters.push_back(103879);
        internal_counters.push_back(104138);
        internal_counters.push_back(104397);
        internal_counters.push_back(104656);
        internal_counters.push_back(104915);
        internal_counters.push_back(105174);
        internal_counters.push_back(105433);
        internal_counters.push_back(105692);
        internal_counters.push_back(105951);
        internal_counters.push_back(106210);
        internal_counters.push_back(106469);
        internal_counters.push_back(106728);
        internal_counters.push_back(106987);
        internal_counters.push_back(107246);
        internal_counters.push_back(107505);
        internal_counters.push_back(107764);
        internal_counters.push_back(108023);
        internal_counters.push_back(108282);
        internal_counters.push_back(108541);
        internal_counters.push_back(102585);
        internal_counters.push_back(102844);
        internal_counters.push_back(103103);
        internal_counters.push_back(103362);
        internal_counters.push_back(103621);
        internal_counters.push_back(103880);
        internal_counters.push_back(104139);
        internal_counters.push_back(104398);
        internal_counters.push_back(104657);
        internal_counters.push_back(104916);
        internal_counters.push_back(105175);
        internal_counters.push_back(105434);
        internal_counters.push_back(105693);
        internal_counters.push_back(105952);
        internal_counters.push_back(106211);
        internal_counters.push_back(106470);
        internal_counters.push_back(106729);
        internal_counters.push_back(106988);
        internal_counters.push_back(107247);
        internal_counters.push_back(107506);
        internal_counters.push_back(107765);
        internal_counters.push_back(108024);
        internal_counters.push_back(108283);
        internal_counters.push_back(108542);
        internal_counters.push_back(102586);
        internal_counters.push_back(102845);
        internal_counters.push_back(103104);
        internal_counters.push_back(103363);
        internal_counters.push_back(103622);
        internal_counters.push_back(103881);
        internal_counters.push_back(104140);
        internal_counters.push_back(104399);
        internal_counters.push_back(104658);
        internal_counters.push_back(104917);
        internal_counters.push_back(105176);
        internal_counters.push_back(105435);
        internal_counters.push_back(105694);
        internal_counters.push_back(105953);
        internal_counters.push_back(106212);
        internal_counters.push_back(106471);
        internal_counters.push_back(106730);
        internal_counters.push_back(106989);
        internal_counters.push_back(107248);
        internal_counters.push_back(107507);
        internal_counters.push_back(107766);
        internal_counters.push_back(108025);
        internal_counters.push_back(108284);
        internal_counters.push_back(108543);
        internal_counters.push_back(102587);
        internal_counters.push_back(102846);
        internal_counters.push_back(103105);
        internal_counters.push_back(103364);
        internal_counters.push_back(103623);
        internal_counters.push_back(103882);
        internal_counters.push_back(104141);
        internal_counters.push_back(104400);
        internal_counters.push_back(104659);
        internal_counters.push_back(104918);
        internal_counters.push_back(105177);
        internal_counters.push_back(105436);
        internal_counters.push_back(105695);
        internal_counters.push_back(105954);
        internal_counters.push_back(106213);
        internal_counters.push_back(106472);
        internal_counters.push_back(106731);
        internal_counters.push_back(106990);
        internal_counters.push_back(107249);
        internal_counters.push_back(107508);
        internal_counters.push_back(107767);
        internal_counters.push_back(108026);
        internal_counters.push_back(108285);
        internal_counters.push_back(108544);

        c.DefineDerivedCounter("FetchSize", "GlobalMemory", "The total bytes fetched from the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,(32),*,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,(64),*,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,sum24,(96),*,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum24,(128),*,sum4", "664bb3ef-6eca-86b1-1e2d-30cb897b5fa9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102568);
        internal_counters.push_back(102827);
        internal_counters.push_back(103086);
        internal_counters.push_back(103345);
        internal_counters.push_back(103604);
        internal_counters.push_back(103863);
        internal_counters.push_back(104122);
        internal_counters.push_back(104381);
        internal_counters.push_back(104640);
        internal_counters.push_back(104899);
        internal_counters.push_back(105158);
        internal_counters.push_back(105417);
        internal_counters.push_back(105676);
        internal_counters.push_back(105935);
        internal_counters.push_back(106194);
        internal_counters.push_back(106453);
        internal_counters.push_back(106712);
        internal_counters.push_back(106971);
        internal_counters.push_back(107230);
        internal_counters.push_back(107489);
        internal_counters.push_back(107748);
        internal_counters.push_back(108007);
        internal_counters.push_back(108266);
        internal_counters.push_back(108525);
        internal_counters.push_back(102570);
        internal_counters.push_back(102829);
        internal_counters.push_back(103088);
        internal_counters.push_back(103347);
        internal_counters.push_back(103606);
        internal_counters.push_back(103865);
        internal_counters.push_back(104124);
        internal_counters.push_back(104383);
        internal_counters.push_back(104642);
        internal_counters.push_back(104901);
        internal_counters.push_back(105160);
        internal_counters.push_back(105419);
        internal_counters.push_back(105678);
        internal_counters.push_back(105937);
        internal_counters.push_back(106196);
        internal_counters.push_back(106455);
        internal_counters.push_back(106714);
        internal_counters.push_back(106973);
        internal_counters.push_back(107232);
        internal_counters.push_back(107491);
        internal_counters.push_back(107750);
        internal_counters.push_back(108009);
        internal_counters.push_back(108268);
        internal_counters.push_back(108527);

        c.DefineDerivedCounter("WriteSize", "GlobalMemory", "The total bytes written to the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(32),*,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,(64),*,+", "f96f2c16-b1b4-4ec4-229c-fc82e6f80a82");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38762);
        internal_counters.push_back(38998);
        internal_counters.push_back(39234);
        internal_counters.push_back(39470);
        internal_counters.push_back(39706);
        internal_counters.push_back(39942);
        internal_counters.push_back(40178);
        internal_counters.push_back(40414);
        internal_counters.push_back(40650);
        internal_counters.push_back(40886);
        internal_counters.push_back(41122);
        internal_counters.push_back(41358);
        internal_counters.push_back(41594);
        internal_counters.push_back(41830);
        internal_counters.push_back(42066);
        internal_counters.push_back(42302);
        internal_counters.push_back(42538);
        internal_counters.push_back(42774);
        internal_counters.push_back(43010);
        internal_counters.push_back(43246);
        internal_counters.push_back(43482);
        internal_counters.push_back(43718);
        internal_counters.push_back(43954);
        internal_counters.push_back(44190);
        internal_counters.push_back(44426);
        internal_counters.push_back(44662);
        internal_counters.push_back(44898);
        internal_counters.push_back(45134);
        internal_counters.push_back(45370);
        internal_counters.push_back(45606);
        internal_counters.push_back(45842);
        internal_counters.push_back(46078);
        internal_counters.push_back(46314);
        internal_counters.push_back(46550);
        internal_counters.push_back(46786);
        internal_counters.push_back(47022);
        internal_counters.push_back(47258);
        internal_counters.push_back(47494);
        internal_counters.push_back(47730);
        internal_counters.push_back(47966);
        internal_counters.push_back(48202);
        internal_counters.push_back(48438);
        internal_counters.push_back(48674);
        internal_counters.push_back(48910);
        internal_counters.push_back(49146);
        internal_counters.push_back(49382);
        internal_counters.push_back(49618);
        internal_counters.push_back(49854);
        internal_counters.push_back(50090);
        internal_counters.push_back(50326);
        internal_counters.push_back(50562);
        internal_counters.push_back(50798);
        internal_counters.push_back(51034);
        internal_counters.push_back(51270);
        internal_counters.push_back(51506);
        internal_counters.push_back(51742);
        internal_counters.push_back(51978);
        internal_counters.push_back(52214);
        internal_counters.push_back(52450);
        internal_counters.push_back(52686);
        internal_counters.push_back(52922);
        internal_counters.push_back(53158);
        internal_counters.push_back(53394);
        internal_counters.push_back(53630);
        internal_counters.push_back(53866);
        internal_counters.push_back(54102);
        internal_counters.push_back(54338);
        internal_counters.push_back(54574);
        internal_counters.push_back(54810);
        internal_counters.push_back(55046);
        internal_counters.push_back(55282);
        internal_counters.push_back(55518);
        internal_counters.push_back(55754);
        internal_counters.push_back(55990);
        internal_counters.push_back(56226);
        internal_counters.push_back(56462);
        internal_counters.push_back(56698);
        internal_counters.push_back(56934);
        internal_counters.push_back(57170);
        internal_counters.push_back(57406);
        internal_counters.push_back(57642);
        internal_counters.push_back(57878);
        internal_counters.push_back(58114);
        internal_counters.push_back(58350);
        internal_counters.push_back(58586);
        internal_counters.push_back(58822);
        internal_counters.push_back(59058);
        internal_counters.push_back(59294);
        internal_counters.push_back(59530);
        internal_counters.push_back(59766);
        internal_counters.push_back(60002);
        internal_counters.push_back(60238);
        internal_counters.push_back(60474);
        internal_counters.push_back(60710);
        internal_counters.push_back(60946);
        internal_counters.push_back(61182);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("MemUnitBusy", "GlobalMemory", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96,96,/,(100),*", "a1efa380-4a72-e066-e06a-2ab71a488521");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(38762);
        internal_counters.push_back(38998);
        internal_counters.push_back(39234);
        internal_counters.push_back(39470);
        internal_counters.push_back(39706);
        internal_counters.push_back(39942);
        internal_counters.push_back(40178);
        internal_counters.push_back(40414);
        internal_counters.push_back(40650);
        internal_counters.push_back(40886);
        internal_counters.push_back(41122);
        internal_counters.push_back(41358);
        internal_counters.push_back(41594);
        internal_counters.push_back(41830);
        internal_counters.push_back(42066);
        internal_counters.push_back(42302);
        internal_counters.push_back(42538);
        internal_counters.push_back(42774);
        internal_counters.push_back(43010);
        internal_counters.push_back(43246);
        internal_counters.push_back(43482);
        internal_counters.push_back(43718);
        internal_counters.push_back(43954);
        internal_counters.push_back(44190);
        internal_counters.push_back(44426);
        internal_counters.push_back(44662);
        internal_counters.push_back(44898);
        internal_counters.push_back(45134);
        internal_counters.push_back(45370);
        internal_counters.push_back(45606);
        internal_counters.push_back(45842);
        internal_counters.push_back(46078);
        internal_counters.push_back(46314);
        internal_counters.push_back(46550);
        internal_counters.push_back(46786);
        internal_counters.push_back(47022);
        internal_counters.push_back(47258);
        internal_counters.push_back(47494);
        internal_counters.push_back(47730);
        internal_counters.push_back(47966);
        internal_counters.push_back(48202);
        internal_counters.push_back(48438);
        internal_counters.push_back(48674);
        internal_counters.push_back(48910);
        internal_counters.push_back(49146);
        internal_counters.push_back(49382);
        internal_counters.push_back(49618);
        internal_counters.push_back(49854);
        internal_counters.push_back(50090);
        internal_counters.push_back(50326);
        internal_counters.push_back(50562);
        internal_counters.push_back(50798);
        internal_counters.push_back(51034);
        internal_counters.push_back(51270);
        internal_counters.push_back(51506);
        internal_counters.push_back(51742);
        internal_counters.push_back(51978);
        internal_counters.push_back(52214);
        internal_counters.push_back(52450);
        internal_counters.push_back(52686);
        internal_counters.push_back(52922);
        internal_counters.push_back(53158);
        internal_counters.push_back(53394);
        internal_counters.push_back(53630);
        internal_counters.push_back(53866);
        internal_counters.push_back(54102);
        internal_counters.push_back(54338);
        internal_counters.push_back(54574);
        internal_counters.push_back(54810);
        internal_counters.push_back(55046);
        internal_counters.push_back(55282);
        internal_counters.push_back(55518);
        internal_counters.push_back(55754);
        internal_counters.push_back(55990);
        internal_counters.push_back(56226);
        internal_counters.push_back(56462);
        internal_counters.push_back(56698);
        internal_counters.push_back(56934);
        internal_counters.push_back(57170);
        internal_counters.push_back(57406);
        internal_counters.push_back(57642);
        internal_counters.push_back(57878);
        internal_counters.push_back(58114);
        internal_counters.push_back(58350);
        internal_counters.push_back(58586);
        internal_counters.push_back(58822);
        internal_counters.push_back(59058);
        internal_counters.push_back(59294);
        internal_counters.push_back(59530);
        internal_counters.push_back(59766);
        internal_counters.push_back(60002);
        internal_counters.push_back(60238);
        internal_counters.push_back(60474);
        internal_counters.push_back(60710);
        internal_counters.push_back(60946);
        internal_counters.push_back(61182);

        c.DefineDerivedCounter("MemUnitBusyCycles", "GlobalMemory", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalledCycles). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96", "168f077c-4797-b2f5-717f-105c725266c8");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80354);
        internal_counters.push_back(80432);
        internal_counters.push_back(80510);
        internal_counters.push_back(80588);
        internal_counters.push_back(80666);
        internal_counters.push_back(80744);
        internal_counters.push_back(80822);
        internal_counters.push_back(80900);
        internal_counters.push_back(80978);
        internal_counters.push_back(81056);
        internal_counters.push_back(81134);
        internal_counters.push_back(81212);
        internal_counters.push_back(81290);
        internal_counters.push_back(81368);
        internal_counters.push_back(81446);
        internal_counters.push_back(81524);
        internal_counters.push_back(81602);
        internal_counters.push_back(81680);
        internal_counters.push_back(81758);
        internal_counters.push_back(81836);
        internal_counters.push_back(81914);
        internal_counters.push_back(81992);
        internal_counters.push_back(82070);
        internal_counters.push_back(82148);
        internal_counters.push_back(82226);
        internal_counters.push_back(82304);
        internal_counters.push_back(82382);
        internal_counters.push_back(82460);
        internal_counters.push_back(82538);
        internal_counters.push_back(82616);
        internal_counters.push_back(82694);
        internal_counters.push_back(82772);
        internal_counters.push_back(82850);
        internal_counters.push_back(82928);
        internal_counters.push_back(83006);
        internal_counters.push_back(83084);
        internal_counters.push_back(83162);
        internal_counters.push_back(83240);
        internal_counters.push_back(83318);
        internal_counters.push_back(83396);
        internal_counters.push_back(83474);
        internal_counters.push_back(83552);
        internal_counters.push_back(83630);
        internal_counters.push_back(83708);
        internal_counters.push_back(83786);
        internal_counters.push_back(83864);
        internal_counters.push_back(83942);
        internal_counters.push_back(84020);
        internal_counters.push_back(84098);
        internal_counters.push_back(84176);
        internal_counters.push_back(84254);
        internal_counters.push_back(84332);
        internal_counters.push_back(84410);
        internal_counters.push_back(84488);
        internal_counters.push_back(84566);
        internal_counters.push_back(84644);
        internal_counters.push_back(84722);
        internal_counters.push_back(84800);
        internal_counters.push_back(84878);
        internal_counters.push_back(84956);
        internal_counters.push_back(85034);
        internal_counters.push_back(85112);
        internal_counters.push_back(85190);
        internal_counters.push_back(85268);
        internal_counters.push_back(85346);
        internal_counters.push_back(85424);
        internal_counters.push_back(85502);
        internal_counters.push_back(85580);
        internal_counters.push_back(85658);
        internal_counters.push_back(85736);
        internal_counters.push_back(85814);
        internal_counters.push_back(85892);
        internal_counters.push_back(85970);
        internal_counters.push_back(86048);
        internal_counters.push_back(86126);
        internal_counters.push_back(86204);
        internal_counters.push_back(86282);
        internal_counters.push_back(86360);
        internal_counters.push_back(86438);
        internal_counters.push_back(86516);
        internal_counters.push_back(86594);
        internal_counters.push_back(86672);
        internal_counters.push_back(86750);
        internal_counters.push_back(86828);
        internal_counters.push_back(86906);
        internal_counters.push_back(86984);
        internal_counters.push_back(87062);
        internal_counters.push_back(87140);
        internal_counters.push_back(87218);
        internal_counters.push_back(87296);
        internal_counters.push_back(87374);
        internal_counters.push_back(87452);
        internal_counters.push_back(87530);
        internal_counters.push_back(87608);
        internal_counters.push_back(87686);
        internal_counters.push_back(87764);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("MemUnitStalled", "GlobalMemory", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96,96,/,(100),*", "465ba54f-d250-1453-790a-731b10d230b1");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(80354);
        internal_counters.push_back(80432);
        internal_counters.push_back(80510);
        internal_counters.push_back(80588);
        internal_counters.push_back(80666);
        internal_counters.push_back(80744);
        internal_counters.push_back(80822);
        internal_counters.push_back(80900);
        internal_counters.push_back(80978);
        internal_counters.push_back(81056);
        internal_counters.push_back(81134);
        internal_counters.push_back(81212);
        internal_counters.push_back(81290);
        internal_counters.push_back(81368);
        internal_counters.push_back(81446);
        internal_counters.push_back(81524);
        internal_counters.push_back(81602);
        internal_counters.push_back(81680);
        internal_counters.push_back(81758);
        internal_counters.push_back(81836);
        internal_counters.push_back(81914);
        internal_counters.push_back(81992);
        internal_counters.push_back(82070);
        internal_counters.push_back(82148);
        internal_counters.push_back(82226);
        internal_counters.push_back(82304);
        internal_counters.push_back(82382);
        internal_counters.push_back(82460);
        internal_counters.push_back(82538);
        internal_counters.push_back(82616);
        internal_counters.push_back(82694);
        internal_counters.push_back(82772);
        internal_counters.push_back(82850);
        internal_counters.push_back(82928);
        internal_counters.push_back(83006);
        internal_counters.push_back(83084);
        internal_counters.push_back(83162);
        internal_counters.push_back(83240);
        internal_counters.push_back(83318);
        internal_counters.push_back(83396);
        internal_counters.push_back(83474);
        internal_counters.push_back(83552);
        internal_counters.push_back(83630);
        internal_counters.push_back(83708);
        internal_counters.push_back(83786);
        internal_counters.push_back(83864);
        internal_counters.push_back(83942);
        internal_counters.push_back(84020);
        internal_counters.push_back(84098);
        internal_counters.push_back(84176);
        internal_counters.push_back(84254);
        internal_counters.push_back(84332);
        internal_counters.push_back(84410);
        internal_counters.push_back(84488);
        internal_counters.push_back(84566);
        internal_counters.push_back(84644);
        internal_counters.push_back(84722);
        internal_counters.push_back(84800);
        internal_counters.push_back(84878);
        internal_counters.push_back(84956);
        internal_counters.push_back(85034);
        internal_counters.push_back(85112);
        internal_counters.push_back(85190);
        internal_counters.push_back(85268);
        internal_counters.push_back(85346);
        internal_counters.push_back(85424);
        internal_counters.push_back(85502);
        internal_counters.push_back(85580);
        internal_counters.push_back(85658);
        internal_counters.push_back(85736);
        internal_counters.push_back(85814);
        internal_counters.push_back(85892);
        internal_counters.push_back(85970);
        internal_counters.push_back(86048);
        internal_counters.push_back(86126);
        internal_counters.push_back(86204);
        internal_counters.push_back(86282);
        internal_counters.push_back(86360);
        internal_counters.push_back(86438);
        internal_counters.push_back(86516);
        internal_counters.push_back(86594);
        internal_counters.push_back(86672);
        internal_counters.push_back(86750);
        internal_counters.push_back(86828);
        internal_counters.push_back(86906);
        internal_counters.push_back(86984);
        internal_counters.push_back(87062);
        internal_counters.push_back(87140);
        internal_counters.push_back(87218);
        internal_counters.push_back(87296);
        internal_counters.push_back(87374);
        internal_counters.push_back(87452);
        internal_counters.push_back(87530);
        internal_counters.push_back(87608);
        internal_counters.push_back(87686);
        internal_counters.push_back(87764);

        c.DefineDerivedCounter("MemUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the memory unit is stalled.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,max96", "2745659a-0e40-bace-3b9b-86a54f8e4623");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102573);
        internal_counters.push_back(102832);
        internal_counters.push_back(103091);
        internal_counters.push_back(103350);
        internal_counters.push_back(103609);
        internal_counters.push_back(103868);
        internal_counters.push_back(104127);
        internal_counters.push_back(104386);
        internal_counters.push_back(104645);
        internal_counters.push_back(104904);
        internal_counters.push_back(105163);
        internal_counters.push_back(105422);
        internal_counters.push_back(105681);
        internal_counters.push_back(105940);
        internal_counters.push_back(106199);
        internal_counters.push_back(106458);
        internal_counters.push_back(106717);
        internal_counters.push_back(106976);
        internal_counters.push_back(107235);
        internal_counters.push_back(107494);
        internal_counters.push_back(107753);
        internal_counters.push_back(108012);
        internal_counters.push_back(108271);
        internal_counters.push_back(108530);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("WriteUnitStalled", "GlobalMemory", "The percentage of GPUTime the Write unit is stalled. Value range: 0% to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,/,(100),*", "594ad3ce-d1ec-10fc-7d59-25738e397d72");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(102573);
        internal_counters.push_back(102832);
        internal_counters.push_back(103091);
        internal_counters.push_back(103350);
        internal_counters.push_back(103609);
        internal_counters.push_back(103868);
        internal_counters.push_back(104127);
        internal_counters.push_back(104386);
        internal_counters.push_back(104645);
        internal_counters.push_back(104904);
        internal_counters.push_back(105163);
        internal_counters.push_back(105422);
        internal_counters.push_back(105681);
        internal_counters.push_back(105940);
        internal_counters.push_back(106199);
        internal_counters.push_back(106458);
        internal_counters.push_back(106717);
        internal_counters.push_back(106976);
        internal_counters.push_back(107235);
        internal_counters.push_back(107494);
        internal_counters.push_back(107753);
        internal_counters.push_back(108012);
        internal_counters.push_back(108271);
        internal_counters.push_back(108530);

        c.DefineDerivedCounter("WriteUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the Write unit is stalled.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24", "ede3305e-abd4-d6bf-6b00-ffc57a29fce3");
    }
}

