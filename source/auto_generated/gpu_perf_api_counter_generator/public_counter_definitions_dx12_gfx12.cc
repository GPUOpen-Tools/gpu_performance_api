//==============================================================================
// Copyright (c) 2010-2025 Advanced Micro Devices, Inc. All rights reserved.
/// @author AMD Developer Tools Team
/// @file
/// @brief Public Counter Definitions for DX12 GFX12.
//==============================================================================

// clang-format off
#include "gpu_perf_api_counter_generator/gpa_counter.h"
#include "auto_generated/gpu_perf_api_counter_generator/public_counter_definitions_dx12_gfx12.h"

// *** Note, this is an auto-generated file. Do not edit. Execute PublicCounterCompiler to rebuild.

void AutoDefinePublicDerivedCountersDx12Gfx12(GpaDerivedCounters& c)
{
    { // Index:0
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(189754);

        c.DefineDerivedCounter("GPUTime",
                               "Timing",
                               "Time this API command took to execute on the GPU in nanoseconds from the time the previous command reached the bottom of the pipeline (BOP) to the time this command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeNanoseconds,
                               true,
                               false,
                               internal_counters,
                               "0,TS_FREQ,/,(1000000000),*",
                               "cbd338f2-de6c-7b14-92ad-ba724ca2e501");
    }
    { // Index:1
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(189757);

        c.DefineDerivedCounter("ExecutionDuration",
                               "Timing",
                               "GPU command execution duration in nanoseconds, from the time the command enters the top of the pipeline (TOP) to the time the command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeNanoseconds,
                               true,
                               false,
                               internal_counters,
                               "0,TS_FREQ,/,(1000000000),*",
                               "b2f08d0d-af13-cd66-d3b4-b290ad448e69");
    }
    { // Index:2
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(189758);

        c.DefineDerivedCounter("ExecutionStart",
                               "Timing",
                               "GPU command execution start time in nanoseconds. This is the time the command enters the top of the pipeline (TOP).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeNanoseconds,
                               true,
                               false,
                               internal_counters,
                               "0,TS_FREQ,/,(1000000000),*",
                               "a368f79d-fcfe-2158-71c4-2f0c4eef5aa4");
    }
    { // Index:3
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(189759);

        c.DefineDerivedCounter("ExecutionEnd",
                               "Timing",
                               "GPU command execution end time in nanoseconds. This is the time the command reaches the bottom of the pipeline (BOP).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeNanoseconds,
                               true,
                               false,
                               internal_counters,
                               "0,TS_FREQ,/,(1000000000),*",
                               "0bce206a-0976-06a2-bf20-03fb351035a8");
    }
    { // Index:4
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24);
        internal_counters.push_back(0);

        c.DefineDerivedCounter("GPUBusy",
                               "Timing",
                               "The percentage of time the GPU command processor was busy.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,/,(100),*,(100),min",
                               "b1ba5363-1abc-fe66-2fdd-1fe6ee8989a0");
    }
    { // Index:5
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24);

        c.DefineDerivedCounter("GPUBusyCycles",
                               "Timing",
                               "Number of GPU cycles that the GPU command processor was busy.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               true,
                               internal_counters,
                               "0",
                               "451cb045-23af-ac44-4603-d5832fa041d9");
    }
    { // Index:6
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(103358);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("TessellatorBusy",
                               "Timing",
                               "The percentage of time the tessellation engine is busy.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,/,(100),*",
                               "36af6c72-dcfb-8102-4fd4-ce8ddc573365");
    }
    { // Index:7
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(103358);

        c.DefineDerivedCounter("TessellatorBusyCycles",
                               "Timing",
                               "Number of GPU cycles that the tessellation engine is busy.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               true,
                               internal_counters,
                               "0",
                               "60289dcb-7b33-46e7-26d1-8a2121605543");
    }
    { // Index:8
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29666);
        internal_counters.push_back(29985);
        internal_counters.push_back(30304);
        internal_counters.push_back(30623);
        internal_counters.push_back(29691);
        internal_counters.push_back(30010);
        internal_counters.push_back(30329);
        internal_counters.push_back(30648);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("VsGsBusy",
                               "Timing",
                               "The percentage of time the ShaderUnit has VS or GS work to do in a VS-[GS-]PS pipeline.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,max4,(0),4,5,6,7,sum4,ifnotzero,8,/,(100),*,(100),min",
                               "969c41c7-eb0b-9706-a7a1-98f27c3af56b");
    }
    { // Index:9
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29666);
        internal_counters.push_back(29985);
        internal_counters.push_back(30304);
        internal_counters.push_back(30623);
        internal_counters.push_back(29691);
        internal_counters.push_back(30010);
        internal_counters.push_back(30329);
        internal_counters.push_back(30648);

        c.DefineDerivedCounter("VsGsBusyCycles",
                               "Timing",
                               "Number of GPU cycles that the ShaderUnit has VS or GS work to do in a VS-[GS-]PS pipeline.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,max4,(0),4,5,6,7,sum4,ifnotzero",
                               "a8420bb7-6bd8-930a-9088-d73b9c039851");
    }
    { // Index:10
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(189754);
        internal_counters.push_back(29666);
        internal_counters.push_back(29985);
        internal_counters.push_back(30304);
        internal_counters.push_back(30623);
        internal_counters.push_back(29691);
        internal_counters.push_back(30010);
        internal_counters.push_back(30329);
        internal_counters.push_back(30648);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("VsGsTime",
                               "Timing",
                               "Time VS or GS are busy in nanoseconds in a VS-[GS-]PS pipeline.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeNanoseconds,
                               true,
                               false,
                               internal_counters,
                               "1,2,3,4,max4,(0),5,6,7,8,sum4,ifnotzero,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*",
                               "3ce33b11-210d-b3de-9b6c-b9f3cd04beff");
    }
    { // Index:11
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29686);
        internal_counters.push_back(30005);
        internal_counters.push_back(30324);
        internal_counters.push_back(30643);
        internal_counters.push_back(29691);
        internal_counters.push_back(30010);
        internal_counters.push_back(30329);
        internal_counters.push_back(30648);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PreTessellationBusy",
                               "Timing",
                               "The percentage of time the ShaderUnit has VS and HS work to do in a pipeline that uses tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "(0),0,1,2,3,max4,4,5,6,7,sum4,ifnotzero,8,/,(100),*,(100),min",
                               "346c7430-4666-7065-b5b7-1cb8cbb1c01c");
    }
    { // Index:12
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29686);
        internal_counters.push_back(30005);
        internal_counters.push_back(30324);
        internal_counters.push_back(30643);
        internal_counters.push_back(29691);
        internal_counters.push_back(30010);
        internal_counters.push_back(30329);
        internal_counters.push_back(30648);

        c.DefineDerivedCounter("PreTessellationBusyCycles",
                               "Timing",
                               "Number of GPU cycles that the ShaderUnit has VS and HS work to do in a pipeline that uses tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               true,
                               internal_counters,
                               "(0),0,1,2,3,max4,4,5,6,7,sum4,ifnotzero",
                               "dac68e38-0e3a-9364-2674-308e63bee2d2");
    }
    { // Index:13
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(189754);
        internal_counters.push_back(29686);
        internal_counters.push_back(30005);
        internal_counters.push_back(30324);
        internal_counters.push_back(30643);
        internal_counters.push_back(29691);
        internal_counters.push_back(30010);
        internal_counters.push_back(30329);
        internal_counters.push_back(30648);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PreTessellationTime",
                               "Timing",
                               "Time VS and HS are busy in nanoseconds in a pipeline that uses tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeNanoseconds,
                               true,
                               false,
                               internal_counters,
                               "(0),1,2,3,4,max4,5,6,7,8,sum4,ifnotzero,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*",
                               "d5e6c54c-5ffb-b173-6118-bece61f0281c");
    }
    { // Index:14
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29666);
        internal_counters.push_back(29985);
        internal_counters.push_back(30304);
        internal_counters.push_back(30623);
        internal_counters.push_back(29691);
        internal_counters.push_back(30010);
        internal_counters.push_back(30329);
        internal_counters.push_back(30648);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PostTessellationBusy",
                               "Timing",
                               "The percentage of time the ShaderUnit has DS or GS work to do in a pipeline that uses tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "(0),0,1,2,3,max4,4,5,6,7,sum4,ifnotzero,8,/,(100),*,(100),min",
                               "1a275c68-9340-f358-71c6-a2648390381d");
    }
    { // Index:15
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29666);
        internal_counters.push_back(29985);
        internal_counters.push_back(30304);
        internal_counters.push_back(30623);
        internal_counters.push_back(29691);
        internal_counters.push_back(30010);
        internal_counters.push_back(30329);
        internal_counters.push_back(30648);

        c.DefineDerivedCounter("PostTessellationBusyCycles",
                               "Timing",
                               "Number of GPU cycles that the ShaderUnit has DS or GS work to do in a pipeline that uses tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               true,
                               internal_counters,
                               "(0),0,1,2,3,max4,4,5,6,7,sum4,ifnotzero",
                               "a5ed943b-13ef-942b-56fb-6d519eeb7337");
    }
    { // Index:16
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(189754);
        internal_counters.push_back(29666);
        internal_counters.push_back(29985);
        internal_counters.push_back(30304);
        internal_counters.push_back(30623);
        internal_counters.push_back(29691);
        internal_counters.push_back(30010);
        internal_counters.push_back(30329);
        internal_counters.push_back(30648);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PostTessellationTime",
                               "Timing",
                               "Time DS or GS are busy in nanoseconds in a pipeline that uses tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeNanoseconds,
                               true,
                               false,
                               internal_counters,
                               "(0),1,2,3,4,max4,5,6,7,8,sum4,ifnotzero,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*",
                               "9f8dfa40-faee-2014-3467-2630a7d95c1e");
    }
    { // Index:17
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29721);
        internal_counters.push_back(30040);
        internal_counters.push_back(30359);
        internal_counters.push_back(30678);
        internal_counters.push_back(29737);
        internal_counters.push_back(30056);
        internal_counters.push_back(30375);
        internal_counters.push_back(30694);
        internal_counters.push_back(29722);
        internal_counters.push_back(30041);
        internal_counters.push_back(30360);
        internal_counters.push_back(30679);
        internal_counters.push_back(29738);
        internal_counters.push_back(30057);
        internal_counters.push_back(30376);
        internal_counters.push_back(30695);
        internal_counters.push_back(29723);
        internal_counters.push_back(30042);
        internal_counters.push_back(30361);
        internal_counters.push_back(30680);
        internal_counters.push_back(29739);
        internal_counters.push_back(30058);
        internal_counters.push_back(30377);
        internal_counters.push_back(30696);
        internal_counters.push_back(29724);
        internal_counters.push_back(30043);
        internal_counters.push_back(30362);
        internal_counters.push_back(30681);
        internal_counters.push_back(29740);
        internal_counters.push_back(30059);
        internal_counters.push_back(30378);
        internal_counters.push_back(30697);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSBusy",
                               "Timing",
                               "The percentage of time the ShaderUnit has pixel shader work to do.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "(0),0,1,2,3,max4,4,5,6,7,sum4,ifnotzero,(0),8,9,10,11,max4,12,13,14,15,sum4,ifnotzero,(0),16,17,18,19,max4,20,21,22,23,sum4,ifnotzero,(0),24,25,26,27,max4,28,29,30,31,sum4,ifnotzero,max4,32,/,(100),*,(100),min",
                               "7e772beb-d82c-bd9a-aed0-fe504d416ce5");
    }
    { // Index:18
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29721);
        internal_counters.push_back(30040);
        internal_counters.push_back(30359);
        internal_counters.push_back(30678);
        internal_counters.push_back(29737);
        internal_counters.push_back(30056);
        internal_counters.push_back(30375);
        internal_counters.push_back(30694);
        internal_counters.push_back(29722);
        internal_counters.push_back(30041);
        internal_counters.push_back(30360);
        internal_counters.push_back(30679);
        internal_counters.push_back(29738);
        internal_counters.push_back(30057);
        internal_counters.push_back(30376);
        internal_counters.push_back(30695);
        internal_counters.push_back(29723);
        internal_counters.push_back(30042);
        internal_counters.push_back(30361);
        internal_counters.push_back(30680);
        internal_counters.push_back(29739);
        internal_counters.push_back(30058);
        internal_counters.push_back(30377);
        internal_counters.push_back(30696);
        internal_counters.push_back(29724);
        internal_counters.push_back(30043);
        internal_counters.push_back(30362);
        internal_counters.push_back(30681);
        internal_counters.push_back(29740);
        internal_counters.push_back(30059);
        internal_counters.push_back(30378);
        internal_counters.push_back(30697);

        c.DefineDerivedCounter("PSBusyCycles",
                               "Timing",
                               "Number of GPU cycles that the ShaderUnit has pixel shader work to do.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               true,
                               internal_counters,
                               "(0),0,1,2,3,max4,4,5,6,7,sum4,ifnotzero,(0),8,9,10,11,max4,12,13,14,15,sum4,ifnotzero,(0),16,17,18,19,max4,20,21,22,23,sum4,ifnotzero,(0),24,25,26,27,max4,28,29,30,31,sum4,ifnotzero,max4",
                               "b58bea04-ce8e-2984-80f4-8aba7d4c817b");
    }
    { // Index:19
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(189754);
        internal_counters.push_back(29721);
        internal_counters.push_back(30040);
        internal_counters.push_back(30359);
        internal_counters.push_back(30678);
        internal_counters.push_back(29737);
        internal_counters.push_back(30056);
        internal_counters.push_back(30375);
        internal_counters.push_back(30694);
        internal_counters.push_back(29722);
        internal_counters.push_back(30041);
        internal_counters.push_back(30360);
        internal_counters.push_back(30679);
        internal_counters.push_back(29738);
        internal_counters.push_back(30057);
        internal_counters.push_back(30376);
        internal_counters.push_back(30695);
        internal_counters.push_back(29723);
        internal_counters.push_back(30042);
        internal_counters.push_back(30361);
        internal_counters.push_back(30680);
        internal_counters.push_back(29739);
        internal_counters.push_back(30058);
        internal_counters.push_back(30377);
        internal_counters.push_back(30696);
        internal_counters.push_back(29724);
        internal_counters.push_back(30043);
        internal_counters.push_back(30362);
        internal_counters.push_back(30681);
        internal_counters.push_back(29740);
        internal_counters.push_back(30059);
        internal_counters.push_back(30378);
        internal_counters.push_back(30697);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSTime",
                               "Timing",
                               "Time pixel shaders are busy in nanoseconds.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeNanoseconds,
                               true,
                               false,
                               internal_counters,
                               "(0),1,2,3,4,max4,5,6,7,8,sum4,ifnotzero,(0),9,10,11,12,max4,13,14,15,16,sum4,ifnotzero,(0),17,18,19,20,max4,21,22,23,24,sum4,ifnotzero,(0),25,26,27,28,max4,29,30,31,32,sum4,ifnotzero,max4,33,/,(1),min,0,TS_FREQ,/,(1000000000),*,*",
                               "edca7694-7416-e8a6-0c5a-63a5ad5f3d74");
    }
    { // Index:20
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29702);
        internal_counters.push_back(30021);
        internal_counters.push_back(30340);
        internal_counters.push_back(30659);
        internal_counters.push_back(29706);
        internal_counters.push_back(30025);
        internal_counters.push_back(30344);
        internal_counters.push_back(30663);
        internal_counters.push_back(29710);
        internal_counters.push_back(30029);
        internal_counters.push_back(30348);
        internal_counters.push_back(30667);
        internal_counters.push_back(29714);
        internal_counters.push_back(30033);
        internal_counters.push_back(30352);
        internal_counters.push_back(30671);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("CSBusy",
                               "Timing",
                               "The percentage of time the ShaderUnit has compute shader work to do.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max,16,/,(100),*,(100),min",
                               "493fdd90-8d2b-a055-5e4e-2d29c3396b8c");
    }
    { // Index:21
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29702);
        internal_counters.push_back(30021);
        internal_counters.push_back(30340);
        internal_counters.push_back(30659);
        internal_counters.push_back(29706);
        internal_counters.push_back(30025);
        internal_counters.push_back(30344);
        internal_counters.push_back(30663);
        internal_counters.push_back(29710);
        internal_counters.push_back(30029);
        internal_counters.push_back(30348);
        internal_counters.push_back(30667);
        internal_counters.push_back(29714);
        internal_counters.push_back(30033);
        internal_counters.push_back(30352);
        internal_counters.push_back(30671);

        c.DefineDerivedCounter("CSBusyCycles",
                               "Timing",
                               "Number of GPU cycles that the ShaderUnit has compute shader work to do.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max",
                               "39bcf1b8-f6b2-4c37-f9af-0a2bb59512f9");
    }
    { // Index:22
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(189754);
        internal_counters.push_back(29702);
        internal_counters.push_back(30021);
        internal_counters.push_back(30340);
        internal_counters.push_back(30659);
        internal_counters.push_back(29706);
        internal_counters.push_back(30025);
        internal_counters.push_back(30344);
        internal_counters.push_back(30663);
        internal_counters.push_back(29710);
        internal_counters.push_back(30029);
        internal_counters.push_back(30348);
        internal_counters.push_back(30667);
        internal_counters.push_back(29714);
        internal_counters.push_back(30033);
        internal_counters.push_back(30352);
        internal_counters.push_back(30671);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("CSTime",
                               "Timing",
                               "Time compute shaders are busy in nanoseconds.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeNanoseconds,
                               true,
                               false,
                               internal_counters,
                               "1,2,3,4,5,6,7,8,comparemax4,9,10,11,12,13,14,15,16,comparemax4,max,17,/,(1),min,0,TS_FREQ,/,(1000000000),*,*",
                               "dbc24916-ecb2-7eef-8d63-7afadaaab6bc");
    }
    { // Index:23
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(103519);
        internal_counters.push_back(103623);
        internal_counters.push_back(103727);
        internal_counters.push_back(103831);
        internal_counters.push_back(29691);
        internal_counters.push_back(30010);
        internal_counters.push_back(30329);
        internal_counters.push_back(30648);

        c.DefineDerivedCounter("VsGsVerticesIn",
                               "VertexGeometry",
                               "The number of unique vertices processed by the VS and GS.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,(0),4,5,6,7,sum4,ifnotzero",
                               "17d0c775-3ed5-affb-d5ac-5391a198a4aa");
    }
    { // Index:24
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(103524);
        internal_counters.push_back(103628);
        internal_counters.push_back(103732);
        internal_counters.push_back(103836);
        internal_counters.push_back(29691);
        internal_counters.push_back(30010);
        internal_counters.push_back(30329);
        internal_counters.push_back(30648);

        c.DefineDerivedCounter("VsGsPrimsIn",
                               "VertexGeometry",
                               "The number of primitives passed into the GS.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,(0),4,5,6,7,sum4,ifnotzero",
                               "d9fa5ce8-5329-f5d4-c378-8fbc7e80d9a6");
    }
    { // Index:25
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(103530);
        internal_counters.push_back(103634);
        internal_counters.push_back(103738);
        internal_counters.push_back(103842);
        internal_counters.push_back(29691);
        internal_counters.push_back(30010);
        internal_counters.push_back(30329);
        internal_counters.push_back(30648);

        c.DefineDerivedCounter("PreTessVerticesIn",
                               "PreTessellation",
                               "The number of unique vertices processed by the VS and HS when using tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "(0),0,1,2,3,sum4,4,5,6,7,sum4,ifnotzero",
                               "84145f0c-ff96-0dfb-ffb7-ccf4c9b3f4c4");
    }
    { // Index:26
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(103508);
        internal_counters.push_back(103612);
        internal_counters.push_back(103716);
        internal_counters.push_back(103820);
        internal_counters.push_back(29691);
        internal_counters.push_back(30010);
        internal_counters.push_back(30329);
        internal_counters.push_back(30648);

        c.DefineDerivedCounter("PostTessPrimsOut",
                               "PostTessellation",
                               "The number of primitives output by the DS and GS when using tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "(0),0,1,2,3,sum4,4,5,6,7,sum4,ifnotzero",
                               "d38dabe8-1f13-ea34-d3c1-eb5783b737f1");
    }
    { // Index:27
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(149);
        internal_counters.push_back(978);
        internal_counters.push_back(1807);
        internal_counters.push_back(2636);
        internal_counters.push_back(153);
        internal_counters.push_back(982);
        internal_counters.push_back(1811);
        internal_counters.push_back(2640);
        internal_counters.push_back(105);
        internal_counters.push_back(934);
        internal_counters.push_back(1763);
        internal_counters.push_back(2592);
        internal_counters.push_back(117);
        internal_counters.push_back(946);
        internal_counters.push_back(1775);
        internal_counters.push_back(2604);
        internal_counters.push_back(618);
        internal_counters.push_back(1447);
        internal_counters.push_back(2276);
        internal_counters.push_back(3105);
        internal_counters.push_back(630);
        internal_counters.push_back(1459);
        internal_counters.push_back(2288);
        internal_counters.push_back(3117);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PrimitiveAssemblyBusy",
                               "Timing",
                               "The percentage of GPUTime that primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,vecsub4,SU_CLOCKS_PRIM,8,9,10,11,12,13,14,15,vecsum4,16,17,18,19,vecsum4,(2),20,21,22,23,scalarmul4,vecsum4,scalarmul4,vecsub4,max4,(0),max,24,/,(100),*,(100),min",
                               "54ac5640-c4d7-95e2-20e0-6a9fdfc07333");
    }
    { // Index:28
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(149);
        internal_counters.push_back(978);
        internal_counters.push_back(1807);
        internal_counters.push_back(2636);
        internal_counters.push_back(153);
        internal_counters.push_back(982);
        internal_counters.push_back(1811);
        internal_counters.push_back(2640);
        internal_counters.push_back(105);
        internal_counters.push_back(934);
        internal_counters.push_back(1763);
        internal_counters.push_back(2592);
        internal_counters.push_back(117);
        internal_counters.push_back(946);
        internal_counters.push_back(1775);
        internal_counters.push_back(2604);
        internal_counters.push_back(618);
        internal_counters.push_back(1447);
        internal_counters.push_back(2276);
        internal_counters.push_back(3105);
        internal_counters.push_back(630);
        internal_counters.push_back(1459);
        internal_counters.push_back(2288);
        internal_counters.push_back(3117);

        c.DefineDerivedCounter("PrimitiveAssemblyBusyCycles",
                               "Timing",
                               "Number of GPU cycles the primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,vecsub4,SU_CLOCKS_PRIM,8,9,10,11,12,13,14,15,vecsum4,16,17,18,19,vecsum4,(2),20,21,22,23,scalarmul4,vecsum4,scalarmul4,vecsub4,max4,(0),max",
                               "99777f2d-9626-c78a-a97c-c4505eba1e5f");
    }
    { // Index:29
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(52);
        internal_counters.push_back(881);
        internal_counters.push_back(1710);
        internal_counters.push_back(2539);

        c.DefineDerivedCounter("PrimitivesIn",
                               "PrimitiveAssembly",
                               "The number of primitives received by the hardware. This includes primitives generated by tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4",
                               "a515b80d-75c3-c7d2-0d2f-d7766b4759a6");
    }
    { // Index:30
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(58);
        internal_counters.push_back(887);
        internal_counters.push_back(1716);
        internal_counters.push_back(2545);
        internal_counters.push_back(98);
        internal_counters.push_back(927);
        internal_counters.push_back(1756);
        internal_counters.push_back(2585);
        internal_counters.push_back(99);
        internal_counters.push_back(928);
        internal_counters.push_back(1757);
        internal_counters.push_back(2586);
        internal_counters.push_back(100);
        internal_counters.push_back(929);
        internal_counters.push_back(1758);
        internal_counters.push_back(2587);
        internal_counters.push_back(101);
        internal_counters.push_back(930);
        internal_counters.push_back(1759);
        internal_counters.push_back(2588);

        c.DefineDerivedCounter("CulledPrims",
                               "PrimitiveAssembly",
                               "The number of culled primitives. Typical reasons include scissor, the primitive having zero area, and back or front face culling.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,sum4,+,8,9,10,11,sum4,+,12,13,14,15,sum4,+,16,17,18,19,sum4,+",
                               "589bdf55-9192-280a-41c3-584bc94f2562");
    }
    { // Index:31
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(577);
        internal_counters.push_back(1406);
        internal_counters.push_back(2235);
        internal_counters.push_back(3064);

        c.DefineDerivedCounter("ClippedPrims",
                               "PrimitiveAssembly",
                               "The number of primitives that required one or more clipping operations due to intersecting the view volume or user clip planes.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,sum4",
                               "5ef6f9d5-155e-5baa-163f-8359d9ea9bbf");
    }
    { // Index:32
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(153);
        internal_counters.push_back(982);
        internal_counters.push_back(1811);
        internal_counters.push_back(2640);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PAStalledOnRasterizer",
                               "PrimitiveAssembly",
                               "Percentage of GPUTime that primitive assembly waits for rasterization to be ready to accept data. This roughly indicates for what percentage of time the pipeline is bottlenecked by pixel operations.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,max4,4,/,(100),*",
                               "6f9f416b-53c1-0457-f88c-7b6ba8973974");
    }
    { // Index:33
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(153);
        internal_counters.push_back(982);
        internal_counters.push_back(1811);
        internal_counters.push_back(2640);

        c.DefineDerivedCounter("PAStalledOnRasterizerCycles",
                               "PrimitiveAssembly",
                               "Number of GPU cycles the primitive assembly waits for rasterization to be ready to accept data. Indicates the number of GPU cycles the pipeline is bottlenecked by pixel operations.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,max4",
                               "7a8c492a-c566-9328-6805-760dbff5c0f2");
    }
    { // Index:34
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(31872);
        internal_counters.push_back(31954);
        internal_counters.push_back(32036);
        internal_counters.push_back(32118);
        internal_counters.push_back(32200);
        internal_counters.push_back(32282);
        internal_counters.push_back(32364);
        internal_counters.push_back(32446);
        internal_counters.push_back(31877);
        internal_counters.push_back(31959);
        internal_counters.push_back(32041);
        internal_counters.push_back(32123);
        internal_counters.push_back(32205);
        internal_counters.push_back(32287);
        internal_counters.push_back(32369);
        internal_counters.push_back(32451);
        internal_counters.push_back(31882);
        internal_counters.push_back(31964);
        internal_counters.push_back(32046);
        internal_counters.push_back(32128);
        internal_counters.push_back(32210);
        internal_counters.push_back(32292);
        internal_counters.push_back(32374);
        internal_counters.push_back(32456);
        internal_counters.push_back(31887);
        internal_counters.push_back(31969);
        internal_counters.push_back(32051);
        internal_counters.push_back(32133);
        internal_counters.push_back(32215);
        internal_counters.push_back(32297);
        internal_counters.push_back(32379);
        internal_counters.push_back(32461);

        c.DefineDerivedCounter("PSPixelsOut",
                               "PixelShader",
                               "Pixels exported from shader to color buffers. Does not include killed or alpha tested pixels; if there are multiple render targets, each render target receives one export, so this will be 2 for 1 pixel written to two RTs.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,sum8,8,9,10,11,12,13,14,15,sum8,16,17,18,19,20,21,22,23,sum8,24,25,26,27,28,29,30,31,sum8,sum4",
                               "24cba16c-baa6-6ecd-95ad-92ecb1338da1");
    }
    { // Index:35
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(31874);
        internal_counters.push_back(31956);
        internal_counters.push_back(32038);
        internal_counters.push_back(32120);
        internal_counters.push_back(32202);
        internal_counters.push_back(32284);
        internal_counters.push_back(32366);
        internal_counters.push_back(32448);
        internal_counters.push_back(31879);
        internal_counters.push_back(31961);
        internal_counters.push_back(32043);
        internal_counters.push_back(32125);
        internal_counters.push_back(32207);
        internal_counters.push_back(32289);
        internal_counters.push_back(32371);
        internal_counters.push_back(32453);
        internal_counters.push_back(31884);
        internal_counters.push_back(31966);
        internal_counters.push_back(32048);
        internal_counters.push_back(32130);
        internal_counters.push_back(32212);
        internal_counters.push_back(32294);
        internal_counters.push_back(32376);
        internal_counters.push_back(32458);
        internal_counters.push_back(31889);
        internal_counters.push_back(31971);
        internal_counters.push_back(32053);
        internal_counters.push_back(32135);
        internal_counters.push_back(32217);
        internal_counters.push_back(32299);
        internal_counters.push_back(32381);
        internal_counters.push_back(32463);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSExportStalls",
                               "PixelShader",
                               "Pixel shader output stalls. Percentage of GPUBusy. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,max8,8,9,10,11,12,13,14,15,max8,16,17,18,19,20,21,22,23,max8,24,25,26,27,28,29,30,31,max8,max4,32,/,(100),*",
                               "9b4f466c-ff97-22bb-557d-84d3c4c51895");
    }
    { // Index:36
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(31874);
        internal_counters.push_back(31956);
        internal_counters.push_back(32038);
        internal_counters.push_back(32120);
        internal_counters.push_back(32202);
        internal_counters.push_back(32284);
        internal_counters.push_back(32366);
        internal_counters.push_back(32448);
        internal_counters.push_back(31879);
        internal_counters.push_back(31961);
        internal_counters.push_back(32043);
        internal_counters.push_back(32125);
        internal_counters.push_back(32207);
        internal_counters.push_back(32289);
        internal_counters.push_back(32371);
        internal_counters.push_back(32453);
        internal_counters.push_back(31884);
        internal_counters.push_back(31966);
        internal_counters.push_back(32048);
        internal_counters.push_back(32130);
        internal_counters.push_back(32212);
        internal_counters.push_back(32294);
        internal_counters.push_back(32376);
        internal_counters.push_back(32458);
        internal_counters.push_back(31889);
        internal_counters.push_back(31971);
        internal_counters.push_back(32053);
        internal_counters.push_back(32135);
        internal_counters.push_back(32217);
        internal_counters.push_back(32299);
        internal_counters.push_back(32381);
        internal_counters.push_back(32463);

        c.DefineDerivedCounter("PSExportStallsCycles",
                               "PixelShader",
                               "Number of GPU cycles the pixel shader output stalls. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,max8,8,9,10,11,12,13,14,15,max8,16,17,18,19,20,21,22,23,max8,24,25,26,27,28,29,30,31,max8,max4",
                               "47c72aad-64e6-0864-d533-d8e0bc27c156");
    }
    { // Index:37
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29703);
        internal_counters.push_back(30022);
        internal_counters.push_back(30341);
        internal_counters.push_back(30660);
        internal_counters.push_back(29711);
        internal_counters.push_back(30030);
        internal_counters.push_back(30349);
        internal_counters.push_back(30668);

        c.DefineDerivedCounter("CSThreadGroupsLaunched",
                               "ComputeShader",
                               "Total number of thread groups launched.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,sum4,+",
                               "e1e2f302-868a-1d2e-ca81-9901bbc8b58f");
    }
    { // Index:38
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29706);
        internal_counters.push_back(30025);
        internal_counters.push_back(30344);
        internal_counters.push_back(30663);
        internal_counters.push_back(29714);
        internal_counters.push_back(30033);
        internal_counters.push_back(30352);
        internal_counters.push_back(30671);

        c.DefineDerivedCounter("CSWavefrontsLaunched",
                               "ComputeShader",
                               "The total number of wavefronts launched for the CS.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,sum4,+",
                               "00c49129-6ae5-f6a0-1753-4738cbe17938");
    }
    { // Index:39
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(31698);
        internal_counters.push_back(31744);
        internal_counters.push_back(31790);
        internal_counters.push_back(31836);

        c.DefineDerivedCounter("CSThreadsLaunched",
                               "ComputeShader",
                               "The number of CS threads launched and processed by the hardware.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4",
                               "cbbbf1ba-d164-1c90-9df0-6120c1660fb1");
    }
    { // Index:40
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(31698);
        internal_counters.push_back(31744);
        internal_counters.push_back(31790);
        internal_counters.push_back(31836);
        internal_counters.push_back(29703);
        internal_counters.push_back(30022);
        internal_counters.push_back(30341);
        internal_counters.push_back(30660);
        internal_counters.push_back(29711);
        internal_counters.push_back(30030);
        internal_counters.push_back(30349);
        internal_counters.push_back(30668);

        c.DefineDerivedCounter("CSThreadGroupSize",
                               "ComputeShader",
                               "The number of CS threads within each thread group.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "(0),0,1,2,3,sum4,4,5,6,7,sum4,8,9,10,11,sum4,+,/,4,5,6,7,sum4,8,9,10,11,sum4,+,ifnotzero",
                               "8c65008a-9957-7ca6-4199-f6fe940420f6");
    }
    { // Index:41
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(169748);
        internal_counters.push_back(170260);
        internal_counters.push_back(170772);
        internal_counters.push_back(171284);
        internal_counters.push_back(171796);
        internal_counters.push_back(172308);
        internal_counters.push_back(172820);
        internal_counters.push_back(173332);
        internal_counters.push_back(173844);
        internal_counters.push_back(174356);
        internal_counters.push_back(174868);
        internal_counters.push_back(175380);
        internal_counters.push_back(175892);
        internal_counters.push_back(176404);
        internal_counters.push_back(176916);
        internal_counters.push_back(177428);
        internal_counters.push_back(177940);
        internal_counters.push_back(178452);
        internal_counters.push_back(178964);
        internal_counters.push_back(179476);
        internal_counters.push_back(179988);
        internal_counters.push_back(180500);
        internal_counters.push_back(181012);
        internal_counters.push_back(181524);
        internal_counters.push_back(182036);
        internal_counters.push_back(182548);
        internal_counters.push_back(183060);
        internal_counters.push_back(183572);
        internal_counters.push_back(184084);
        internal_counters.push_back(184596);
        internal_counters.push_back(185108);
        internal_counters.push_back(185620);
        internal_counters.push_back(24);
        internal_counters.push_back(29703);
        internal_counters.push_back(30022);
        internal_counters.push_back(30341);
        internal_counters.push_back(30660);
        internal_counters.push_back(29711);
        internal_counters.push_back(30030);
        internal_counters.push_back(30349);
        internal_counters.push_back(30668);

        c.DefineDerivedCounter("CSLDSBankConflict",
                               "ComputeShader",
                               "The percentage of GPUTime LDS is stalled by bank conflicts. Value range: 0% (optimal) to 100% (bad).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,/,NUM_SIMDS,/,(100),*,33,34,35,36,sum4,37,38,39,40,sum4,+,ifnotzero",
                               "1065ee10-2e41-ea41-1eb3-b61b491752f4");
    }
    { // Index:42
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(169748);
        internal_counters.push_back(170260);
        internal_counters.push_back(170772);
        internal_counters.push_back(171284);
        internal_counters.push_back(171796);
        internal_counters.push_back(172308);
        internal_counters.push_back(172820);
        internal_counters.push_back(173332);
        internal_counters.push_back(173844);
        internal_counters.push_back(174356);
        internal_counters.push_back(174868);
        internal_counters.push_back(175380);
        internal_counters.push_back(175892);
        internal_counters.push_back(176404);
        internal_counters.push_back(176916);
        internal_counters.push_back(177428);
        internal_counters.push_back(177940);
        internal_counters.push_back(178452);
        internal_counters.push_back(178964);
        internal_counters.push_back(179476);
        internal_counters.push_back(179988);
        internal_counters.push_back(180500);
        internal_counters.push_back(181012);
        internal_counters.push_back(181524);
        internal_counters.push_back(182036);
        internal_counters.push_back(182548);
        internal_counters.push_back(183060);
        internal_counters.push_back(183572);
        internal_counters.push_back(184084);
        internal_counters.push_back(184596);
        internal_counters.push_back(185108);
        internal_counters.push_back(185620);
        internal_counters.push_back(29703);
        internal_counters.push_back(30022);
        internal_counters.push_back(30341);
        internal_counters.push_back(30660);
        internal_counters.push_back(29711);
        internal_counters.push_back(30030);
        internal_counters.push_back(30349);
        internal_counters.push_back(30668);

        c.DefineDerivedCounter("CSLDSBankConflictCycles",
                               "ComputeShader",
                               "Number of GPU cycles the LDS is stalled by bank conflicts. Value range: 0 (optimal) to GPUBusyCycles (bad).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               true,
                               internal_counters,
                               "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,NUM_SIMDS,/,32,33,34,35,sum4,36,37,38,39,sum4,+,ifnotzero",
                               "1fd1adf3-c51e-94fd-083e-c482a0a0809e");
    }
    { // Index:43
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(32531);
        internal_counters.push_back(32786);
        internal_counters.push_back(33041);
        internal_counters.push_back(33296);
        internal_counters.push_back(33551);
        internal_counters.push_back(33806);
        internal_counters.push_back(34061);
        internal_counters.push_back(34316);
        internal_counters.push_back(34571);
        internal_counters.push_back(34826);
        internal_counters.push_back(35081);
        internal_counters.push_back(35336);
        internal_counters.push_back(35591);
        internal_counters.push_back(35846);
        internal_counters.push_back(36101);
        internal_counters.push_back(36356);
        internal_counters.push_back(36611);
        internal_counters.push_back(36866);
        internal_counters.push_back(37121);
        internal_counters.push_back(37376);
        internal_counters.push_back(37631);
        internal_counters.push_back(37886);
        internal_counters.push_back(38141);
        internal_counters.push_back(38396);
        internal_counters.push_back(38651);
        internal_counters.push_back(38906);
        internal_counters.push_back(39161);
        internal_counters.push_back(39416);
        internal_counters.push_back(39671);
        internal_counters.push_back(39926);
        internal_counters.push_back(40181);
        internal_counters.push_back(40436);
        internal_counters.push_back(40691);
        internal_counters.push_back(40946);
        internal_counters.push_back(41201);
        internal_counters.push_back(41456);
        internal_counters.push_back(41711);
        internal_counters.push_back(41966);
        internal_counters.push_back(42221);
        internal_counters.push_back(42476);
        internal_counters.push_back(42731);
        internal_counters.push_back(42986);
        internal_counters.push_back(43241);
        internal_counters.push_back(43496);
        internal_counters.push_back(43751);
        internal_counters.push_back(44006);
        internal_counters.push_back(44261);
        internal_counters.push_back(44516);
        internal_counters.push_back(44771);
        internal_counters.push_back(45026);
        internal_counters.push_back(45281);
        internal_counters.push_back(45536);
        internal_counters.push_back(45791);
        internal_counters.push_back(46046);
        internal_counters.push_back(46301);
        internal_counters.push_back(46556);
        internal_counters.push_back(46811);
        internal_counters.push_back(47066);
        internal_counters.push_back(47321);
        internal_counters.push_back(47576);
        internal_counters.push_back(47831);
        internal_counters.push_back(48086);
        internal_counters.push_back(48341);
        internal_counters.push_back(48596);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("TexUnitBusy",
                               "Timing",
                               "The percentage of GPUTime the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*",
                               "36afb8d9-42fc-aafe-66c5-449542153b2c");
    }
    { // Index:44
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(32531);
        internal_counters.push_back(32786);
        internal_counters.push_back(33041);
        internal_counters.push_back(33296);
        internal_counters.push_back(33551);
        internal_counters.push_back(33806);
        internal_counters.push_back(34061);
        internal_counters.push_back(34316);
        internal_counters.push_back(34571);
        internal_counters.push_back(34826);
        internal_counters.push_back(35081);
        internal_counters.push_back(35336);
        internal_counters.push_back(35591);
        internal_counters.push_back(35846);
        internal_counters.push_back(36101);
        internal_counters.push_back(36356);
        internal_counters.push_back(36611);
        internal_counters.push_back(36866);
        internal_counters.push_back(37121);
        internal_counters.push_back(37376);
        internal_counters.push_back(37631);
        internal_counters.push_back(37886);
        internal_counters.push_back(38141);
        internal_counters.push_back(38396);
        internal_counters.push_back(38651);
        internal_counters.push_back(38906);
        internal_counters.push_back(39161);
        internal_counters.push_back(39416);
        internal_counters.push_back(39671);
        internal_counters.push_back(39926);
        internal_counters.push_back(40181);
        internal_counters.push_back(40436);
        internal_counters.push_back(40691);
        internal_counters.push_back(40946);
        internal_counters.push_back(41201);
        internal_counters.push_back(41456);
        internal_counters.push_back(41711);
        internal_counters.push_back(41966);
        internal_counters.push_back(42221);
        internal_counters.push_back(42476);
        internal_counters.push_back(42731);
        internal_counters.push_back(42986);
        internal_counters.push_back(43241);
        internal_counters.push_back(43496);
        internal_counters.push_back(43751);
        internal_counters.push_back(44006);
        internal_counters.push_back(44261);
        internal_counters.push_back(44516);
        internal_counters.push_back(44771);
        internal_counters.push_back(45026);
        internal_counters.push_back(45281);
        internal_counters.push_back(45536);
        internal_counters.push_back(45791);
        internal_counters.push_back(46046);
        internal_counters.push_back(46301);
        internal_counters.push_back(46556);
        internal_counters.push_back(46811);
        internal_counters.push_back(47066);
        internal_counters.push_back(47321);
        internal_counters.push_back(47576);
        internal_counters.push_back(47831);
        internal_counters.push_back(48086);
        internal_counters.push_back(48341);
        internal_counters.push_back(48596);

        c.DefineDerivedCounter("TexUnitBusyCycles",
                               "Timing",
                               "Number of GPU cycles the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64",
                               "c68761f2-248c-4f39-6528-c308b1c0807c");
    }
    { // Index:45
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(32585);
        internal_counters.push_back(32840);
        internal_counters.push_back(33095);
        internal_counters.push_back(33350);
        internal_counters.push_back(33605);
        internal_counters.push_back(33860);
        internal_counters.push_back(34115);
        internal_counters.push_back(34370);
        internal_counters.push_back(34625);
        internal_counters.push_back(34880);
        internal_counters.push_back(35135);
        internal_counters.push_back(35390);
        internal_counters.push_back(35645);
        internal_counters.push_back(35900);
        internal_counters.push_back(36155);
        internal_counters.push_back(36410);
        internal_counters.push_back(36665);
        internal_counters.push_back(36920);
        internal_counters.push_back(37175);
        internal_counters.push_back(37430);
        internal_counters.push_back(37685);
        internal_counters.push_back(37940);
        internal_counters.push_back(38195);
        internal_counters.push_back(38450);
        internal_counters.push_back(38705);
        internal_counters.push_back(38960);
        internal_counters.push_back(39215);
        internal_counters.push_back(39470);
        internal_counters.push_back(39725);
        internal_counters.push_back(39980);
        internal_counters.push_back(40235);
        internal_counters.push_back(40490);
        internal_counters.push_back(40745);
        internal_counters.push_back(41000);
        internal_counters.push_back(41255);
        internal_counters.push_back(41510);
        internal_counters.push_back(41765);
        internal_counters.push_back(42020);
        internal_counters.push_back(42275);
        internal_counters.push_back(42530);
        internal_counters.push_back(42785);
        internal_counters.push_back(43040);
        internal_counters.push_back(43295);
        internal_counters.push_back(43550);
        internal_counters.push_back(43805);
        internal_counters.push_back(44060);
        internal_counters.push_back(44315);
        internal_counters.push_back(44570);
        internal_counters.push_back(44825);
        internal_counters.push_back(45080);
        internal_counters.push_back(45335);
        internal_counters.push_back(45590);
        internal_counters.push_back(45845);
        internal_counters.push_back(46100);
        internal_counters.push_back(46355);
        internal_counters.push_back(46610);
        internal_counters.push_back(46865);
        internal_counters.push_back(47120);
        internal_counters.push_back(47375);
        internal_counters.push_back(47630);
        internal_counters.push_back(47885);
        internal_counters.push_back(48140);
        internal_counters.push_back(48395);
        internal_counters.push_back(48650);
        internal_counters.push_back(32584);
        internal_counters.push_back(32839);
        internal_counters.push_back(33094);
        internal_counters.push_back(33349);
        internal_counters.push_back(33604);
        internal_counters.push_back(33859);
        internal_counters.push_back(34114);
        internal_counters.push_back(34369);
        internal_counters.push_back(34624);
        internal_counters.push_back(34879);
        internal_counters.push_back(35134);
        internal_counters.push_back(35389);
        internal_counters.push_back(35644);
        internal_counters.push_back(35899);
        internal_counters.push_back(36154);
        internal_counters.push_back(36409);
        internal_counters.push_back(36664);
        internal_counters.push_back(36919);
        internal_counters.push_back(37174);
        internal_counters.push_back(37429);
        internal_counters.push_back(37684);
        internal_counters.push_back(37939);
        internal_counters.push_back(38194);
        internal_counters.push_back(38449);
        internal_counters.push_back(38704);
        internal_counters.push_back(38959);
        internal_counters.push_back(39214);
        internal_counters.push_back(39469);
        internal_counters.push_back(39724);
        internal_counters.push_back(39979);
        internal_counters.push_back(40234);
        internal_counters.push_back(40489);
        internal_counters.push_back(40744);
        internal_counters.push_back(40999);
        internal_counters.push_back(41254);
        internal_counters.push_back(41509);
        internal_counters.push_back(41764);
        internal_counters.push_back(42019);
        internal_counters.push_back(42274);
        internal_counters.push_back(42529);
        internal_counters.push_back(42784);
        internal_counters.push_back(43039);
        internal_counters.push_back(43294);
        internal_counters.push_back(43549);
        internal_counters.push_back(43804);
        internal_counters.push_back(44059);
        internal_counters.push_back(44314);
        internal_counters.push_back(44569);
        internal_counters.push_back(44824);
        internal_counters.push_back(45079);
        internal_counters.push_back(45334);
        internal_counters.push_back(45589);
        internal_counters.push_back(45844);
        internal_counters.push_back(46099);
        internal_counters.push_back(46354);
        internal_counters.push_back(46609);
        internal_counters.push_back(46864);
        internal_counters.push_back(47119);
        internal_counters.push_back(47374);
        internal_counters.push_back(47629);
        internal_counters.push_back(47884);
        internal_counters.push_back(48139);
        internal_counters.push_back(48394);
        internal_counters.push_back(48649);

        c.DefineDerivedCounter("TexTriFilteringPct",
                               "TextureUnit",
                               "Percentage of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,+,/,(100),*",
                               "1affc3c8-b917-5c81-622b-7004527208ae");
    }
    { // Index:46
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(32585);
        internal_counters.push_back(32840);
        internal_counters.push_back(33095);
        internal_counters.push_back(33350);
        internal_counters.push_back(33605);
        internal_counters.push_back(33860);
        internal_counters.push_back(34115);
        internal_counters.push_back(34370);
        internal_counters.push_back(34625);
        internal_counters.push_back(34880);
        internal_counters.push_back(35135);
        internal_counters.push_back(35390);
        internal_counters.push_back(35645);
        internal_counters.push_back(35900);
        internal_counters.push_back(36155);
        internal_counters.push_back(36410);
        internal_counters.push_back(36665);
        internal_counters.push_back(36920);
        internal_counters.push_back(37175);
        internal_counters.push_back(37430);
        internal_counters.push_back(37685);
        internal_counters.push_back(37940);
        internal_counters.push_back(38195);
        internal_counters.push_back(38450);
        internal_counters.push_back(38705);
        internal_counters.push_back(38960);
        internal_counters.push_back(39215);
        internal_counters.push_back(39470);
        internal_counters.push_back(39725);
        internal_counters.push_back(39980);
        internal_counters.push_back(40235);
        internal_counters.push_back(40490);
        internal_counters.push_back(40745);
        internal_counters.push_back(41000);
        internal_counters.push_back(41255);
        internal_counters.push_back(41510);
        internal_counters.push_back(41765);
        internal_counters.push_back(42020);
        internal_counters.push_back(42275);
        internal_counters.push_back(42530);
        internal_counters.push_back(42785);
        internal_counters.push_back(43040);
        internal_counters.push_back(43295);
        internal_counters.push_back(43550);
        internal_counters.push_back(43805);
        internal_counters.push_back(44060);
        internal_counters.push_back(44315);
        internal_counters.push_back(44570);
        internal_counters.push_back(44825);
        internal_counters.push_back(45080);
        internal_counters.push_back(45335);
        internal_counters.push_back(45590);
        internal_counters.push_back(45845);
        internal_counters.push_back(46100);
        internal_counters.push_back(46355);
        internal_counters.push_back(46610);
        internal_counters.push_back(46865);
        internal_counters.push_back(47120);
        internal_counters.push_back(47375);
        internal_counters.push_back(47630);
        internal_counters.push_back(47885);
        internal_counters.push_back(48140);
        internal_counters.push_back(48395);
        internal_counters.push_back(48650);

        c.DefineDerivedCounter("TexTriFilteringCount",
                               "TextureUnit",
                               "Count of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(4),*",
                               "5785b3a1-a513-18db-4b1c-bdeef75bb2b6");
    }
    { // Index:47
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(32584);
        internal_counters.push_back(32839);
        internal_counters.push_back(33094);
        internal_counters.push_back(33349);
        internal_counters.push_back(33604);
        internal_counters.push_back(33859);
        internal_counters.push_back(34114);
        internal_counters.push_back(34369);
        internal_counters.push_back(34624);
        internal_counters.push_back(34879);
        internal_counters.push_back(35134);
        internal_counters.push_back(35389);
        internal_counters.push_back(35644);
        internal_counters.push_back(35899);
        internal_counters.push_back(36154);
        internal_counters.push_back(36409);
        internal_counters.push_back(36664);
        internal_counters.push_back(36919);
        internal_counters.push_back(37174);
        internal_counters.push_back(37429);
        internal_counters.push_back(37684);
        internal_counters.push_back(37939);
        internal_counters.push_back(38194);
        internal_counters.push_back(38449);
        internal_counters.push_back(38704);
        internal_counters.push_back(38959);
        internal_counters.push_back(39214);
        internal_counters.push_back(39469);
        internal_counters.push_back(39724);
        internal_counters.push_back(39979);
        internal_counters.push_back(40234);
        internal_counters.push_back(40489);
        internal_counters.push_back(40744);
        internal_counters.push_back(40999);
        internal_counters.push_back(41254);
        internal_counters.push_back(41509);
        internal_counters.push_back(41764);
        internal_counters.push_back(42019);
        internal_counters.push_back(42274);
        internal_counters.push_back(42529);
        internal_counters.push_back(42784);
        internal_counters.push_back(43039);
        internal_counters.push_back(43294);
        internal_counters.push_back(43549);
        internal_counters.push_back(43804);
        internal_counters.push_back(44059);
        internal_counters.push_back(44314);
        internal_counters.push_back(44569);
        internal_counters.push_back(44824);
        internal_counters.push_back(45079);
        internal_counters.push_back(45334);
        internal_counters.push_back(45589);
        internal_counters.push_back(45844);
        internal_counters.push_back(46099);
        internal_counters.push_back(46354);
        internal_counters.push_back(46609);
        internal_counters.push_back(46864);
        internal_counters.push_back(47119);
        internal_counters.push_back(47374);
        internal_counters.push_back(47629);
        internal_counters.push_back(47884);
        internal_counters.push_back(48139);
        internal_counters.push_back(48394);
        internal_counters.push_back(48649);

        c.DefineDerivedCounter("NoTexTriFilteringCount",
                               "TextureUnit",
                               "Count of pixels that did not receive trilinear filtering.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(4),*",
                               "179da29a-81af-c06e-ce8c-a0a731ea030d");
    }
    { // Index:48
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(32587);
        internal_counters.push_back(32842);
        internal_counters.push_back(33097);
        internal_counters.push_back(33352);
        internal_counters.push_back(33607);
        internal_counters.push_back(33862);
        internal_counters.push_back(34117);
        internal_counters.push_back(34372);
        internal_counters.push_back(34627);
        internal_counters.push_back(34882);
        internal_counters.push_back(35137);
        internal_counters.push_back(35392);
        internal_counters.push_back(35647);
        internal_counters.push_back(35902);
        internal_counters.push_back(36157);
        internal_counters.push_back(36412);
        internal_counters.push_back(36667);
        internal_counters.push_back(36922);
        internal_counters.push_back(37177);
        internal_counters.push_back(37432);
        internal_counters.push_back(37687);
        internal_counters.push_back(37942);
        internal_counters.push_back(38197);
        internal_counters.push_back(38452);
        internal_counters.push_back(38707);
        internal_counters.push_back(38962);
        internal_counters.push_back(39217);
        internal_counters.push_back(39472);
        internal_counters.push_back(39727);
        internal_counters.push_back(39982);
        internal_counters.push_back(40237);
        internal_counters.push_back(40492);
        internal_counters.push_back(40747);
        internal_counters.push_back(41002);
        internal_counters.push_back(41257);
        internal_counters.push_back(41512);
        internal_counters.push_back(41767);
        internal_counters.push_back(42022);
        internal_counters.push_back(42277);
        internal_counters.push_back(42532);
        internal_counters.push_back(42787);
        internal_counters.push_back(43042);
        internal_counters.push_back(43297);
        internal_counters.push_back(43552);
        internal_counters.push_back(43807);
        internal_counters.push_back(44062);
        internal_counters.push_back(44317);
        internal_counters.push_back(44572);
        internal_counters.push_back(44827);
        internal_counters.push_back(45082);
        internal_counters.push_back(45337);
        internal_counters.push_back(45592);
        internal_counters.push_back(45847);
        internal_counters.push_back(46102);
        internal_counters.push_back(46357);
        internal_counters.push_back(46612);
        internal_counters.push_back(46867);
        internal_counters.push_back(47122);
        internal_counters.push_back(47377);
        internal_counters.push_back(47632);
        internal_counters.push_back(47887);
        internal_counters.push_back(48142);
        internal_counters.push_back(48397);
        internal_counters.push_back(48652);
        internal_counters.push_back(32586);
        internal_counters.push_back(32841);
        internal_counters.push_back(33096);
        internal_counters.push_back(33351);
        internal_counters.push_back(33606);
        internal_counters.push_back(33861);
        internal_counters.push_back(34116);
        internal_counters.push_back(34371);
        internal_counters.push_back(34626);
        internal_counters.push_back(34881);
        internal_counters.push_back(35136);
        internal_counters.push_back(35391);
        internal_counters.push_back(35646);
        internal_counters.push_back(35901);
        internal_counters.push_back(36156);
        internal_counters.push_back(36411);
        internal_counters.push_back(36666);
        internal_counters.push_back(36921);
        internal_counters.push_back(37176);
        internal_counters.push_back(37431);
        internal_counters.push_back(37686);
        internal_counters.push_back(37941);
        internal_counters.push_back(38196);
        internal_counters.push_back(38451);
        internal_counters.push_back(38706);
        internal_counters.push_back(38961);
        internal_counters.push_back(39216);
        internal_counters.push_back(39471);
        internal_counters.push_back(39726);
        internal_counters.push_back(39981);
        internal_counters.push_back(40236);
        internal_counters.push_back(40491);
        internal_counters.push_back(40746);
        internal_counters.push_back(41001);
        internal_counters.push_back(41256);
        internal_counters.push_back(41511);
        internal_counters.push_back(41766);
        internal_counters.push_back(42021);
        internal_counters.push_back(42276);
        internal_counters.push_back(42531);
        internal_counters.push_back(42786);
        internal_counters.push_back(43041);
        internal_counters.push_back(43296);
        internal_counters.push_back(43551);
        internal_counters.push_back(43806);
        internal_counters.push_back(44061);
        internal_counters.push_back(44316);
        internal_counters.push_back(44571);
        internal_counters.push_back(44826);
        internal_counters.push_back(45081);
        internal_counters.push_back(45336);
        internal_counters.push_back(45591);
        internal_counters.push_back(45846);
        internal_counters.push_back(46101);
        internal_counters.push_back(46356);
        internal_counters.push_back(46611);
        internal_counters.push_back(46866);
        internal_counters.push_back(47121);
        internal_counters.push_back(47376);
        internal_counters.push_back(47631);
        internal_counters.push_back(47886);
        internal_counters.push_back(48141);
        internal_counters.push_back(48396);
        internal_counters.push_back(48651);

        c.DefineDerivedCounter("TexVolFilteringPct",
                               "TextureUnit",
                               "Percentage of pixels that received volume filtering.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,+,/,(100),*",
                               "b5ff6bed-3178-aee4-42dd-c74391c02a2d");
    }
    { // Index:49
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(32587);
        internal_counters.push_back(32842);
        internal_counters.push_back(33097);
        internal_counters.push_back(33352);
        internal_counters.push_back(33607);
        internal_counters.push_back(33862);
        internal_counters.push_back(34117);
        internal_counters.push_back(34372);
        internal_counters.push_back(34627);
        internal_counters.push_back(34882);
        internal_counters.push_back(35137);
        internal_counters.push_back(35392);
        internal_counters.push_back(35647);
        internal_counters.push_back(35902);
        internal_counters.push_back(36157);
        internal_counters.push_back(36412);
        internal_counters.push_back(36667);
        internal_counters.push_back(36922);
        internal_counters.push_back(37177);
        internal_counters.push_back(37432);
        internal_counters.push_back(37687);
        internal_counters.push_back(37942);
        internal_counters.push_back(38197);
        internal_counters.push_back(38452);
        internal_counters.push_back(38707);
        internal_counters.push_back(38962);
        internal_counters.push_back(39217);
        internal_counters.push_back(39472);
        internal_counters.push_back(39727);
        internal_counters.push_back(39982);
        internal_counters.push_back(40237);
        internal_counters.push_back(40492);
        internal_counters.push_back(40747);
        internal_counters.push_back(41002);
        internal_counters.push_back(41257);
        internal_counters.push_back(41512);
        internal_counters.push_back(41767);
        internal_counters.push_back(42022);
        internal_counters.push_back(42277);
        internal_counters.push_back(42532);
        internal_counters.push_back(42787);
        internal_counters.push_back(43042);
        internal_counters.push_back(43297);
        internal_counters.push_back(43552);
        internal_counters.push_back(43807);
        internal_counters.push_back(44062);
        internal_counters.push_back(44317);
        internal_counters.push_back(44572);
        internal_counters.push_back(44827);
        internal_counters.push_back(45082);
        internal_counters.push_back(45337);
        internal_counters.push_back(45592);
        internal_counters.push_back(45847);
        internal_counters.push_back(46102);
        internal_counters.push_back(46357);
        internal_counters.push_back(46612);
        internal_counters.push_back(46867);
        internal_counters.push_back(47122);
        internal_counters.push_back(47377);
        internal_counters.push_back(47632);
        internal_counters.push_back(47887);
        internal_counters.push_back(48142);
        internal_counters.push_back(48397);
        internal_counters.push_back(48652);

        c.DefineDerivedCounter("TexVolFilteringCount",
                               "TextureUnit",
                               "Count of pixels that received volume filtering.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(4),*",
                               "4bddc587-d589-8128-e18c-762eab2c871f");
    }
    { // Index:50
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(32586);
        internal_counters.push_back(32841);
        internal_counters.push_back(33096);
        internal_counters.push_back(33351);
        internal_counters.push_back(33606);
        internal_counters.push_back(33861);
        internal_counters.push_back(34116);
        internal_counters.push_back(34371);
        internal_counters.push_back(34626);
        internal_counters.push_back(34881);
        internal_counters.push_back(35136);
        internal_counters.push_back(35391);
        internal_counters.push_back(35646);
        internal_counters.push_back(35901);
        internal_counters.push_back(36156);
        internal_counters.push_back(36411);
        internal_counters.push_back(36666);
        internal_counters.push_back(36921);
        internal_counters.push_back(37176);
        internal_counters.push_back(37431);
        internal_counters.push_back(37686);
        internal_counters.push_back(37941);
        internal_counters.push_back(38196);
        internal_counters.push_back(38451);
        internal_counters.push_back(38706);
        internal_counters.push_back(38961);
        internal_counters.push_back(39216);
        internal_counters.push_back(39471);
        internal_counters.push_back(39726);
        internal_counters.push_back(39981);
        internal_counters.push_back(40236);
        internal_counters.push_back(40491);
        internal_counters.push_back(40746);
        internal_counters.push_back(41001);
        internal_counters.push_back(41256);
        internal_counters.push_back(41511);
        internal_counters.push_back(41766);
        internal_counters.push_back(42021);
        internal_counters.push_back(42276);
        internal_counters.push_back(42531);
        internal_counters.push_back(42786);
        internal_counters.push_back(43041);
        internal_counters.push_back(43296);
        internal_counters.push_back(43551);
        internal_counters.push_back(43806);
        internal_counters.push_back(44061);
        internal_counters.push_back(44316);
        internal_counters.push_back(44571);
        internal_counters.push_back(44826);
        internal_counters.push_back(45081);
        internal_counters.push_back(45336);
        internal_counters.push_back(45591);
        internal_counters.push_back(45846);
        internal_counters.push_back(46101);
        internal_counters.push_back(46356);
        internal_counters.push_back(46611);
        internal_counters.push_back(46866);
        internal_counters.push_back(47121);
        internal_counters.push_back(47376);
        internal_counters.push_back(47631);
        internal_counters.push_back(47886);
        internal_counters.push_back(48141);
        internal_counters.push_back(48396);
        internal_counters.push_back(48651);

        c.DefineDerivedCounter("NoTexVolFilteringCount",
                               "TextureUnit",
                               "Count of pixels that did not receive volume filtering.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(4),*",
                               "9fe1a854-17c6-9d26-b2b9-80610cd5827d");
    }
    { // Index:51
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(32605);
        internal_counters.push_back(32860);
        internal_counters.push_back(33115);
        internal_counters.push_back(33370);
        internal_counters.push_back(33625);
        internal_counters.push_back(33880);
        internal_counters.push_back(34135);
        internal_counters.push_back(34390);
        internal_counters.push_back(34645);
        internal_counters.push_back(34900);
        internal_counters.push_back(35155);
        internal_counters.push_back(35410);
        internal_counters.push_back(35665);
        internal_counters.push_back(35920);
        internal_counters.push_back(36175);
        internal_counters.push_back(36430);
        internal_counters.push_back(36685);
        internal_counters.push_back(36940);
        internal_counters.push_back(37195);
        internal_counters.push_back(37450);
        internal_counters.push_back(37705);
        internal_counters.push_back(37960);
        internal_counters.push_back(38215);
        internal_counters.push_back(38470);
        internal_counters.push_back(38725);
        internal_counters.push_back(38980);
        internal_counters.push_back(39235);
        internal_counters.push_back(39490);
        internal_counters.push_back(39745);
        internal_counters.push_back(40000);
        internal_counters.push_back(40255);
        internal_counters.push_back(40510);
        internal_counters.push_back(40765);
        internal_counters.push_back(41020);
        internal_counters.push_back(41275);
        internal_counters.push_back(41530);
        internal_counters.push_back(41785);
        internal_counters.push_back(42040);
        internal_counters.push_back(42295);
        internal_counters.push_back(42550);
        internal_counters.push_back(42805);
        internal_counters.push_back(43060);
        internal_counters.push_back(43315);
        internal_counters.push_back(43570);
        internal_counters.push_back(43825);
        internal_counters.push_back(44080);
        internal_counters.push_back(44335);
        internal_counters.push_back(44590);
        internal_counters.push_back(44845);
        internal_counters.push_back(45100);
        internal_counters.push_back(45355);
        internal_counters.push_back(45610);
        internal_counters.push_back(45865);
        internal_counters.push_back(46120);
        internal_counters.push_back(46375);
        internal_counters.push_back(46630);
        internal_counters.push_back(46885);
        internal_counters.push_back(47140);
        internal_counters.push_back(47395);
        internal_counters.push_back(47650);
        internal_counters.push_back(47905);
        internal_counters.push_back(48160);
        internal_counters.push_back(48415);
        internal_counters.push_back(48670);
        internal_counters.push_back(32606);
        internal_counters.push_back(32861);
        internal_counters.push_back(33116);
        internal_counters.push_back(33371);
        internal_counters.push_back(33626);
        internal_counters.push_back(33881);
        internal_counters.push_back(34136);
        internal_counters.push_back(34391);
        internal_counters.push_back(34646);
        internal_counters.push_back(34901);
        internal_counters.push_back(35156);
        internal_counters.push_back(35411);
        internal_counters.push_back(35666);
        internal_counters.push_back(35921);
        internal_counters.push_back(36176);
        internal_counters.push_back(36431);
        internal_counters.push_back(36686);
        internal_counters.push_back(36941);
        internal_counters.push_back(37196);
        internal_counters.push_back(37451);
        internal_counters.push_back(37706);
        internal_counters.push_back(37961);
        internal_counters.push_back(38216);
        internal_counters.push_back(38471);
        internal_counters.push_back(38726);
        internal_counters.push_back(38981);
        internal_counters.push_back(39236);
        internal_counters.push_back(39491);
        internal_counters.push_back(39746);
        internal_counters.push_back(40001);
        internal_counters.push_back(40256);
        internal_counters.push_back(40511);
        internal_counters.push_back(40766);
        internal_counters.push_back(41021);
        internal_counters.push_back(41276);
        internal_counters.push_back(41531);
        internal_counters.push_back(41786);
        internal_counters.push_back(42041);
        internal_counters.push_back(42296);
        internal_counters.push_back(42551);
        internal_counters.push_back(42806);
        internal_counters.push_back(43061);
        internal_counters.push_back(43316);
        internal_counters.push_back(43571);
        internal_counters.push_back(43826);
        internal_counters.push_back(44081);
        internal_counters.push_back(44336);
        internal_counters.push_back(44591);
        internal_counters.push_back(44846);
        internal_counters.push_back(45101);
        internal_counters.push_back(45356);
        internal_counters.push_back(45611);
        internal_counters.push_back(45866);
        internal_counters.push_back(46121);
        internal_counters.push_back(46376);
        internal_counters.push_back(46631);
        internal_counters.push_back(46886);
        internal_counters.push_back(47141);
        internal_counters.push_back(47396);
        internal_counters.push_back(47651);
        internal_counters.push_back(47906);
        internal_counters.push_back(48161);
        internal_counters.push_back(48416);
        internal_counters.push_back(48671);
        internal_counters.push_back(32607);
        internal_counters.push_back(32862);
        internal_counters.push_back(33117);
        internal_counters.push_back(33372);
        internal_counters.push_back(33627);
        internal_counters.push_back(33882);
        internal_counters.push_back(34137);
        internal_counters.push_back(34392);
        internal_counters.push_back(34647);
        internal_counters.push_back(34902);
        internal_counters.push_back(35157);
        internal_counters.push_back(35412);
        internal_counters.push_back(35667);
        internal_counters.push_back(35922);
        internal_counters.push_back(36177);
        internal_counters.push_back(36432);
        internal_counters.push_back(36687);
        internal_counters.push_back(36942);
        internal_counters.push_back(37197);
        internal_counters.push_back(37452);
        internal_counters.push_back(37707);
        internal_counters.push_back(37962);
        internal_counters.push_back(38217);
        internal_counters.push_back(38472);
        internal_counters.push_back(38727);
        internal_counters.push_back(38982);
        internal_counters.push_back(39237);
        internal_counters.push_back(39492);
        internal_counters.push_back(39747);
        internal_counters.push_back(40002);
        internal_counters.push_back(40257);
        internal_counters.push_back(40512);
        internal_counters.push_back(40767);
        internal_counters.push_back(41022);
        internal_counters.push_back(41277);
        internal_counters.push_back(41532);
        internal_counters.push_back(41787);
        internal_counters.push_back(42042);
        internal_counters.push_back(42297);
        internal_counters.push_back(42552);
        internal_counters.push_back(42807);
        internal_counters.push_back(43062);
        internal_counters.push_back(43317);
        internal_counters.push_back(43572);
        internal_counters.push_back(43827);
        internal_counters.push_back(44082);
        internal_counters.push_back(44337);
        internal_counters.push_back(44592);
        internal_counters.push_back(44847);
        internal_counters.push_back(45102);
        internal_counters.push_back(45357);
        internal_counters.push_back(45612);
        internal_counters.push_back(45867);
        internal_counters.push_back(46122);
        internal_counters.push_back(46377);
        internal_counters.push_back(46632);
        internal_counters.push_back(46887);
        internal_counters.push_back(47142);
        internal_counters.push_back(47397);
        internal_counters.push_back(47652);
        internal_counters.push_back(47907);
        internal_counters.push_back(48162);
        internal_counters.push_back(48417);
        internal_counters.push_back(48672);
        internal_counters.push_back(32608);
        internal_counters.push_back(32863);
        internal_counters.push_back(33118);
        internal_counters.push_back(33373);
        internal_counters.push_back(33628);
        internal_counters.push_back(33883);
        internal_counters.push_back(34138);
        internal_counters.push_back(34393);
        internal_counters.push_back(34648);
        internal_counters.push_back(34903);
        internal_counters.push_back(35158);
        internal_counters.push_back(35413);
        internal_counters.push_back(35668);
        internal_counters.push_back(35923);
        internal_counters.push_back(36178);
        internal_counters.push_back(36433);
        internal_counters.push_back(36688);
        internal_counters.push_back(36943);
        internal_counters.push_back(37198);
        internal_counters.push_back(37453);
        internal_counters.push_back(37708);
        internal_counters.push_back(37963);
        internal_counters.push_back(38218);
        internal_counters.push_back(38473);
        internal_counters.push_back(38728);
        internal_counters.push_back(38983);
        internal_counters.push_back(39238);
        internal_counters.push_back(39493);
        internal_counters.push_back(39748);
        internal_counters.push_back(40003);
        internal_counters.push_back(40258);
        internal_counters.push_back(40513);
        internal_counters.push_back(40768);
        internal_counters.push_back(41023);
        internal_counters.push_back(41278);
        internal_counters.push_back(41533);
        internal_counters.push_back(41788);
        internal_counters.push_back(42043);
        internal_counters.push_back(42298);
        internal_counters.push_back(42553);
        internal_counters.push_back(42808);
        internal_counters.push_back(43063);
        internal_counters.push_back(43318);
        internal_counters.push_back(43573);
        internal_counters.push_back(43828);
        internal_counters.push_back(44083);
        internal_counters.push_back(44338);
        internal_counters.push_back(44593);
        internal_counters.push_back(44848);
        internal_counters.push_back(45103);
        internal_counters.push_back(45358);
        internal_counters.push_back(45613);
        internal_counters.push_back(45868);
        internal_counters.push_back(46123);
        internal_counters.push_back(46378);
        internal_counters.push_back(46633);
        internal_counters.push_back(46888);
        internal_counters.push_back(47143);
        internal_counters.push_back(47398);
        internal_counters.push_back(47653);
        internal_counters.push_back(47908);
        internal_counters.push_back(48163);
        internal_counters.push_back(48418);
        internal_counters.push_back(48673);
        internal_counters.push_back(32609);
        internal_counters.push_back(32864);
        internal_counters.push_back(33119);
        internal_counters.push_back(33374);
        internal_counters.push_back(33629);
        internal_counters.push_back(33884);
        internal_counters.push_back(34139);
        internal_counters.push_back(34394);
        internal_counters.push_back(34649);
        internal_counters.push_back(34904);
        internal_counters.push_back(35159);
        internal_counters.push_back(35414);
        internal_counters.push_back(35669);
        internal_counters.push_back(35924);
        internal_counters.push_back(36179);
        internal_counters.push_back(36434);
        internal_counters.push_back(36689);
        internal_counters.push_back(36944);
        internal_counters.push_back(37199);
        internal_counters.push_back(37454);
        internal_counters.push_back(37709);
        internal_counters.push_back(37964);
        internal_counters.push_back(38219);
        internal_counters.push_back(38474);
        internal_counters.push_back(38729);
        internal_counters.push_back(38984);
        internal_counters.push_back(39239);
        internal_counters.push_back(39494);
        internal_counters.push_back(39749);
        internal_counters.push_back(40004);
        internal_counters.push_back(40259);
        internal_counters.push_back(40514);
        internal_counters.push_back(40769);
        internal_counters.push_back(41024);
        internal_counters.push_back(41279);
        internal_counters.push_back(41534);
        internal_counters.push_back(41789);
        internal_counters.push_back(42044);
        internal_counters.push_back(42299);
        internal_counters.push_back(42554);
        internal_counters.push_back(42809);
        internal_counters.push_back(43064);
        internal_counters.push_back(43319);
        internal_counters.push_back(43574);
        internal_counters.push_back(43829);
        internal_counters.push_back(44084);
        internal_counters.push_back(44339);
        internal_counters.push_back(44594);
        internal_counters.push_back(44849);
        internal_counters.push_back(45104);
        internal_counters.push_back(45359);
        internal_counters.push_back(45614);
        internal_counters.push_back(45869);
        internal_counters.push_back(46124);
        internal_counters.push_back(46379);
        internal_counters.push_back(46634);
        internal_counters.push_back(46889);
        internal_counters.push_back(47144);
        internal_counters.push_back(47399);
        internal_counters.push_back(47654);
        internal_counters.push_back(47909);
        internal_counters.push_back(48164);
        internal_counters.push_back(48419);
        internal_counters.push_back(48674);
        internal_counters.push_back(32610);
        internal_counters.push_back(32865);
        internal_counters.push_back(33120);
        internal_counters.push_back(33375);
        internal_counters.push_back(33630);
        internal_counters.push_back(33885);
        internal_counters.push_back(34140);
        internal_counters.push_back(34395);
        internal_counters.push_back(34650);
        internal_counters.push_back(34905);
        internal_counters.push_back(35160);
        internal_counters.push_back(35415);
        internal_counters.push_back(35670);
        internal_counters.push_back(35925);
        internal_counters.push_back(36180);
        internal_counters.push_back(36435);
        internal_counters.push_back(36690);
        internal_counters.push_back(36945);
        internal_counters.push_back(37200);
        internal_counters.push_back(37455);
        internal_counters.push_back(37710);
        internal_counters.push_back(37965);
        internal_counters.push_back(38220);
        internal_counters.push_back(38475);
        internal_counters.push_back(38730);
        internal_counters.push_back(38985);
        internal_counters.push_back(39240);
        internal_counters.push_back(39495);
        internal_counters.push_back(39750);
        internal_counters.push_back(40005);
        internal_counters.push_back(40260);
        internal_counters.push_back(40515);
        internal_counters.push_back(40770);
        internal_counters.push_back(41025);
        internal_counters.push_back(41280);
        internal_counters.push_back(41535);
        internal_counters.push_back(41790);
        internal_counters.push_back(42045);
        internal_counters.push_back(42300);
        internal_counters.push_back(42555);
        internal_counters.push_back(42810);
        internal_counters.push_back(43065);
        internal_counters.push_back(43320);
        internal_counters.push_back(43575);
        internal_counters.push_back(43830);
        internal_counters.push_back(44085);
        internal_counters.push_back(44340);
        internal_counters.push_back(44595);
        internal_counters.push_back(44850);
        internal_counters.push_back(45105);
        internal_counters.push_back(45360);
        internal_counters.push_back(45615);
        internal_counters.push_back(45870);
        internal_counters.push_back(46125);
        internal_counters.push_back(46380);
        internal_counters.push_back(46635);
        internal_counters.push_back(46890);
        internal_counters.push_back(47145);
        internal_counters.push_back(47400);
        internal_counters.push_back(47655);
        internal_counters.push_back(47910);
        internal_counters.push_back(48165);
        internal_counters.push_back(48420);
        internal_counters.push_back(48675);
        internal_counters.push_back(32611);
        internal_counters.push_back(32866);
        internal_counters.push_back(33121);
        internal_counters.push_back(33376);
        internal_counters.push_back(33631);
        internal_counters.push_back(33886);
        internal_counters.push_back(34141);
        internal_counters.push_back(34396);
        internal_counters.push_back(34651);
        internal_counters.push_back(34906);
        internal_counters.push_back(35161);
        internal_counters.push_back(35416);
        internal_counters.push_back(35671);
        internal_counters.push_back(35926);
        internal_counters.push_back(36181);
        internal_counters.push_back(36436);
        internal_counters.push_back(36691);
        internal_counters.push_back(36946);
        internal_counters.push_back(37201);
        internal_counters.push_back(37456);
        internal_counters.push_back(37711);
        internal_counters.push_back(37966);
        internal_counters.push_back(38221);
        internal_counters.push_back(38476);
        internal_counters.push_back(38731);
        internal_counters.push_back(38986);
        internal_counters.push_back(39241);
        internal_counters.push_back(39496);
        internal_counters.push_back(39751);
        internal_counters.push_back(40006);
        internal_counters.push_back(40261);
        internal_counters.push_back(40516);
        internal_counters.push_back(40771);
        internal_counters.push_back(41026);
        internal_counters.push_back(41281);
        internal_counters.push_back(41536);
        internal_counters.push_back(41791);
        internal_counters.push_back(42046);
        internal_counters.push_back(42301);
        internal_counters.push_back(42556);
        internal_counters.push_back(42811);
        internal_counters.push_back(43066);
        internal_counters.push_back(43321);
        internal_counters.push_back(43576);
        internal_counters.push_back(43831);
        internal_counters.push_back(44086);
        internal_counters.push_back(44341);
        internal_counters.push_back(44596);
        internal_counters.push_back(44851);
        internal_counters.push_back(45106);
        internal_counters.push_back(45361);
        internal_counters.push_back(45616);
        internal_counters.push_back(45871);
        internal_counters.push_back(46126);
        internal_counters.push_back(46381);
        internal_counters.push_back(46636);
        internal_counters.push_back(46891);
        internal_counters.push_back(47146);
        internal_counters.push_back(47401);
        internal_counters.push_back(47656);
        internal_counters.push_back(47911);
        internal_counters.push_back(48166);
        internal_counters.push_back(48421);
        internal_counters.push_back(48676);
        internal_counters.push_back(32612);
        internal_counters.push_back(32867);
        internal_counters.push_back(33122);
        internal_counters.push_back(33377);
        internal_counters.push_back(33632);
        internal_counters.push_back(33887);
        internal_counters.push_back(34142);
        internal_counters.push_back(34397);
        internal_counters.push_back(34652);
        internal_counters.push_back(34907);
        internal_counters.push_back(35162);
        internal_counters.push_back(35417);
        internal_counters.push_back(35672);
        internal_counters.push_back(35927);
        internal_counters.push_back(36182);
        internal_counters.push_back(36437);
        internal_counters.push_back(36692);
        internal_counters.push_back(36947);
        internal_counters.push_back(37202);
        internal_counters.push_back(37457);
        internal_counters.push_back(37712);
        internal_counters.push_back(37967);
        internal_counters.push_back(38222);
        internal_counters.push_back(38477);
        internal_counters.push_back(38732);
        internal_counters.push_back(38987);
        internal_counters.push_back(39242);
        internal_counters.push_back(39497);
        internal_counters.push_back(39752);
        internal_counters.push_back(40007);
        internal_counters.push_back(40262);
        internal_counters.push_back(40517);
        internal_counters.push_back(40772);
        internal_counters.push_back(41027);
        internal_counters.push_back(41282);
        internal_counters.push_back(41537);
        internal_counters.push_back(41792);
        internal_counters.push_back(42047);
        internal_counters.push_back(42302);
        internal_counters.push_back(42557);
        internal_counters.push_back(42812);
        internal_counters.push_back(43067);
        internal_counters.push_back(43322);
        internal_counters.push_back(43577);
        internal_counters.push_back(43832);
        internal_counters.push_back(44087);
        internal_counters.push_back(44342);
        internal_counters.push_back(44597);
        internal_counters.push_back(44852);
        internal_counters.push_back(45107);
        internal_counters.push_back(45362);
        internal_counters.push_back(45617);
        internal_counters.push_back(45872);
        internal_counters.push_back(46127);
        internal_counters.push_back(46382);
        internal_counters.push_back(46637);
        internal_counters.push_back(46892);
        internal_counters.push_back(47147);
        internal_counters.push_back(47402);
        internal_counters.push_back(47657);
        internal_counters.push_back(47912);
        internal_counters.push_back(48167);
        internal_counters.push_back(48422);
        internal_counters.push_back(48677);
        internal_counters.push_back(32613);
        internal_counters.push_back(32868);
        internal_counters.push_back(33123);
        internal_counters.push_back(33378);
        internal_counters.push_back(33633);
        internal_counters.push_back(33888);
        internal_counters.push_back(34143);
        internal_counters.push_back(34398);
        internal_counters.push_back(34653);
        internal_counters.push_back(34908);
        internal_counters.push_back(35163);
        internal_counters.push_back(35418);
        internal_counters.push_back(35673);
        internal_counters.push_back(35928);
        internal_counters.push_back(36183);
        internal_counters.push_back(36438);
        internal_counters.push_back(36693);
        internal_counters.push_back(36948);
        internal_counters.push_back(37203);
        internal_counters.push_back(37458);
        internal_counters.push_back(37713);
        internal_counters.push_back(37968);
        internal_counters.push_back(38223);
        internal_counters.push_back(38478);
        internal_counters.push_back(38733);
        internal_counters.push_back(38988);
        internal_counters.push_back(39243);
        internal_counters.push_back(39498);
        internal_counters.push_back(39753);
        internal_counters.push_back(40008);
        internal_counters.push_back(40263);
        internal_counters.push_back(40518);
        internal_counters.push_back(40773);
        internal_counters.push_back(41028);
        internal_counters.push_back(41283);
        internal_counters.push_back(41538);
        internal_counters.push_back(41793);
        internal_counters.push_back(42048);
        internal_counters.push_back(42303);
        internal_counters.push_back(42558);
        internal_counters.push_back(42813);
        internal_counters.push_back(43068);
        internal_counters.push_back(43323);
        internal_counters.push_back(43578);
        internal_counters.push_back(43833);
        internal_counters.push_back(44088);
        internal_counters.push_back(44343);
        internal_counters.push_back(44598);
        internal_counters.push_back(44853);
        internal_counters.push_back(45108);
        internal_counters.push_back(45363);
        internal_counters.push_back(45618);
        internal_counters.push_back(45873);
        internal_counters.push_back(46128);
        internal_counters.push_back(46383);
        internal_counters.push_back(46638);
        internal_counters.push_back(46893);
        internal_counters.push_back(47148);
        internal_counters.push_back(47403);
        internal_counters.push_back(47658);
        internal_counters.push_back(47913);
        internal_counters.push_back(48168);
        internal_counters.push_back(48423);
        internal_counters.push_back(48678);

        c.DefineDerivedCounter("TexAveAnisotropy",
                               "TextureUnit",
                               "The average degree of anisotropy applied. A number between 1 and 16. The anisotropic filtering algorithm only applies samples where they are required (e.g. there will be no extra anisotropic samples if the view vector is perpendicular to the surface) so this can be much lower than the requested anisotropy.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(2),64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,*,+,(4),128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum64,*,+,(6),192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,sum64,*,+,(8),256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum64,*,+,(10),320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,sum64,*,+,(12),384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,sum64,*,+,(14),448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,sum64,*,+,(16),512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,sum64,*,+,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,+,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum64,+,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,sum64,+,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum64,+,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,sum64,+,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,sum64,+,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,sum64,+,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,sum64,+,/",
                               "7ca2a2b9-a4eb-ce23-d163-59147e672396");
    }
    { // Index:52
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(72788);
        internal_counters.push_back(73230);
        internal_counters.push_back(73672);
        internal_counters.push_back(74114);
        internal_counters.push_back(74556);
        internal_counters.push_back(74998);
        internal_counters.push_back(75440);
        internal_counters.push_back(75882);
        internal_counters.push_back(76324);
        internal_counters.push_back(76766);
        internal_counters.push_back(77208);
        internal_counters.push_back(77650);
        internal_counters.push_back(78092);
        internal_counters.push_back(78534);
        internal_counters.push_back(78976);
        internal_counters.push_back(79418);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("DepthStencilTestBusy",
                               "Timing",
                               "Percentage of time GPU spent performing depth and stencil tests relative to GPUBusy.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*",
                               "6834fb52-42e8-bb50-fd48-ec2f2904e7e0");
    }
    { // Index:53
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(72788);
        internal_counters.push_back(73230);
        internal_counters.push_back(73672);
        internal_counters.push_back(74114);
        internal_counters.push_back(74556);
        internal_counters.push_back(74998);
        internal_counters.push_back(75440);
        internal_counters.push_back(75882);
        internal_counters.push_back(76324);
        internal_counters.push_back(76766);
        internal_counters.push_back(77208);
        internal_counters.push_back(77650);
        internal_counters.push_back(78092);
        internal_counters.push_back(78534);
        internal_counters.push_back(78976);
        internal_counters.push_back(79418);

        c.DefineDerivedCounter("DepthStencilTestBusyCycles",
                               "Timing",
                               "Number of GPU cycles spent performing depth and stencil tests.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16",
                               "07ad48f0-49d8-87e7-1ef5-1e24ff2cef49");
    }
    { // Index:54
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(3519);
        internal_counters.push_back(4341);
        internal_counters.push_back(5163);
        internal_counters.push_back(5985);
        internal_counters.push_back(6807);
        internal_counters.push_back(7629);
        internal_counters.push_back(8451);
        internal_counters.push_back(9273);
        internal_counters.push_back(10095);
        internal_counters.push_back(10917);
        internal_counters.push_back(11739);
        internal_counters.push_back(12561);
        internal_counters.push_back(13383);
        internal_counters.push_back(14205);
        internal_counters.push_back(15027);
        internal_counters.push_back(15849);
        internal_counters.push_back(16671);
        internal_counters.push_back(17493);
        internal_counters.push_back(18315);
        internal_counters.push_back(19137);
        internal_counters.push_back(19959);
        internal_counters.push_back(20781);
        internal_counters.push_back(21603);
        internal_counters.push_back(22425);
        internal_counters.push_back(23247);
        internal_counters.push_back(24069);
        internal_counters.push_back(24891);
        internal_counters.push_back(25713);
        internal_counters.push_back(26535);
        internal_counters.push_back(27357);
        internal_counters.push_back(28179);
        internal_counters.push_back(29001);
        internal_counters.push_back(3520);
        internal_counters.push_back(4342);
        internal_counters.push_back(5164);
        internal_counters.push_back(5986);
        internal_counters.push_back(6808);
        internal_counters.push_back(7630);
        internal_counters.push_back(8452);
        internal_counters.push_back(9274);
        internal_counters.push_back(10096);
        internal_counters.push_back(10918);
        internal_counters.push_back(11740);
        internal_counters.push_back(12562);
        internal_counters.push_back(13384);
        internal_counters.push_back(14206);
        internal_counters.push_back(15028);
        internal_counters.push_back(15850);
        internal_counters.push_back(16672);
        internal_counters.push_back(17494);
        internal_counters.push_back(18316);
        internal_counters.push_back(19138);
        internal_counters.push_back(19960);
        internal_counters.push_back(20782);
        internal_counters.push_back(21604);
        internal_counters.push_back(22426);
        internal_counters.push_back(23248);
        internal_counters.push_back(24070);
        internal_counters.push_back(24892);
        internal_counters.push_back(25714);
        internal_counters.push_back(26536);
        internal_counters.push_back(27358);
        internal_counters.push_back(28180);
        internal_counters.push_back(29002);
        internal_counters.push_back(3521);
        internal_counters.push_back(4343);
        internal_counters.push_back(5165);
        internal_counters.push_back(5987);
        internal_counters.push_back(6809);
        internal_counters.push_back(7631);
        internal_counters.push_back(8453);
        internal_counters.push_back(9275);
        internal_counters.push_back(10097);
        internal_counters.push_back(10919);
        internal_counters.push_back(11741);
        internal_counters.push_back(12563);
        internal_counters.push_back(13385);
        internal_counters.push_back(14207);
        internal_counters.push_back(15029);
        internal_counters.push_back(15851);
        internal_counters.push_back(16673);
        internal_counters.push_back(17495);
        internal_counters.push_back(18317);
        internal_counters.push_back(19139);
        internal_counters.push_back(19961);
        internal_counters.push_back(20783);
        internal_counters.push_back(21605);
        internal_counters.push_back(22427);
        internal_counters.push_back(23249);
        internal_counters.push_back(24071);
        internal_counters.push_back(24893);
        internal_counters.push_back(25715);
        internal_counters.push_back(26537);
        internal_counters.push_back(27359);
        internal_counters.push_back(28181);
        internal_counters.push_back(29003);
        internal_counters.push_back(3522);
        internal_counters.push_back(4344);
        internal_counters.push_back(5166);
        internal_counters.push_back(5988);
        internal_counters.push_back(6810);
        internal_counters.push_back(7632);
        internal_counters.push_back(8454);
        internal_counters.push_back(9276);
        internal_counters.push_back(10098);
        internal_counters.push_back(10920);
        internal_counters.push_back(11742);
        internal_counters.push_back(12564);
        internal_counters.push_back(13386);
        internal_counters.push_back(14208);
        internal_counters.push_back(15030);
        internal_counters.push_back(15852);
        internal_counters.push_back(16674);
        internal_counters.push_back(17496);
        internal_counters.push_back(18318);
        internal_counters.push_back(19140);
        internal_counters.push_back(19962);
        internal_counters.push_back(20784);
        internal_counters.push_back(21606);
        internal_counters.push_back(22428);
        internal_counters.push_back(23250);
        internal_counters.push_back(24072);
        internal_counters.push_back(24894);
        internal_counters.push_back(25716);
        internal_counters.push_back(26538);
        internal_counters.push_back(27360);
        internal_counters.push_back(28182);
        internal_counters.push_back(29004);
        internal_counters.push_back(3595);
        internal_counters.push_back(4417);
        internal_counters.push_back(5239);
        internal_counters.push_back(6061);
        internal_counters.push_back(6883);
        internal_counters.push_back(7705);
        internal_counters.push_back(8527);
        internal_counters.push_back(9349);
        internal_counters.push_back(10171);
        internal_counters.push_back(10993);
        internal_counters.push_back(11815);
        internal_counters.push_back(12637);
        internal_counters.push_back(13459);
        internal_counters.push_back(14281);
        internal_counters.push_back(15103);
        internal_counters.push_back(15925);
        internal_counters.push_back(16747);
        internal_counters.push_back(17569);
        internal_counters.push_back(18391);
        internal_counters.push_back(19213);
        internal_counters.push_back(20035);
        internal_counters.push_back(20857);
        internal_counters.push_back(21679);
        internal_counters.push_back(22501);
        internal_counters.push_back(23323);
        internal_counters.push_back(24145);
        internal_counters.push_back(24967);
        internal_counters.push_back(25789);
        internal_counters.push_back(26611);
        internal_counters.push_back(27433);
        internal_counters.push_back(28255);
        internal_counters.push_back(29077);

        c.DefineDerivedCounter("HiZQuadsCulled",
                               "DepthAndStencil",
                               "Percentage of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum128,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum32,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum128,/,(100),*",
                               "fa0e319b-5573-6d34-5bab-904769925036");
    }
    { // Index:55
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(3519);
        internal_counters.push_back(4341);
        internal_counters.push_back(5163);
        internal_counters.push_back(5985);
        internal_counters.push_back(6807);
        internal_counters.push_back(7629);
        internal_counters.push_back(8451);
        internal_counters.push_back(9273);
        internal_counters.push_back(10095);
        internal_counters.push_back(10917);
        internal_counters.push_back(11739);
        internal_counters.push_back(12561);
        internal_counters.push_back(13383);
        internal_counters.push_back(14205);
        internal_counters.push_back(15027);
        internal_counters.push_back(15849);
        internal_counters.push_back(16671);
        internal_counters.push_back(17493);
        internal_counters.push_back(18315);
        internal_counters.push_back(19137);
        internal_counters.push_back(19959);
        internal_counters.push_back(20781);
        internal_counters.push_back(21603);
        internal_counters.push_back(22425);
        internal_counters.push_back(23247);
        internal_counters.push_back(24069);
        internal_counters.push_back(24891);
        internal_counters.push_back(25713);
        internal_counters.push_back(26535);
        internal_counters.push_back(27357);
        internal_counters.push_back(28179);
        internal_counters.push_back(29001);
        internal_counters.push_back(3520);
        internal_counters.push_back(4342);
        internal_counters.push_back(5164);
        internal_counters.push_back(5986);
        internal_counters.push_back(6808);
        internal_counters.push_back(7630);
        internal_counters.push_back(8452);
        internal_counters.push_back(9274);
        internal_counters.push_back(10096);
        internal_counters.push_back(10918);
        internal_counters.push_back(11740);
        internal_counters.push_back(12562);
        internal_counters.push_back(13384);
        internal_counters.push_back(14206);
        internal_counters.push_back(15028);
        internal_counters.push_back(15850);
        internal_counters.push_back(16672);
        internal_counters.push_back(17494);
        internal_counters.push_back(18316);
        internal_counters.push_back(19138);
        internal_counters.push_back(19960);
        internal_counters.push_back(20782);
        internal_counters.push_back(21604);
        internal_counters.push_back(22426);
        internal_counters.push_back(23248);
        internal_counters.push_back(24070);
        internal_counters.push_back(24892);
        internal_counters.push_back(25714);
        internal_counters.push_back(26536);
        internal_counters.push_back(27358);
        internal_counters.push_back(28180);
        internal_counters.push_back(29002);
        internal_counters.push_back(3521);
        internal_counters.push_back(4343);
        internal_counters.push_back(5165);
        internal_counters.push_back(5987);
        internal_counters.push_back(6809);
        internal_counters.push_back(7631);
        internal_counters.push_back(8453);
        internal_counters.push_back(9275);
        internal_counters.push_back(10097);
        internal_counters.push_back(10919);
        internal_counters.push_back(11741);
        internal_counters.push_back(12563);
        internal_counters.push_back(13385);
        internal_counters.push_back(14207);
        internal_counters.push_back(15029);
        internal_counters.push_back(15851);
        internal_counters.push_back(16673);
        internal_counters.push_back(17495);
        internal_counters.push_back(18317);
        internal_counters.push_back(19139);
        internal_counters.push_back(19961);
        internal_counters.push_back(20783);
        internal_counters.push_back(21605);
        internal_counters.push_back(22427);
        internal_counters.push_back(23249);
        internal_counters.push_back(24071);
        internal_counters.push_back(24893);
        internal_counters.push_back(25715);
        internal_counters.push_back(26537);
        internal_counters.push_back(27359);
        internal_counters.push_back(28181);
        internal_counters.push_back(29003);
        internal_counters.push_back(3522);
        internal_counters.push_back(4344);
        internal_counters.push_back(5166);
        internal_counters.push_back(5988);
        internal_counters.push_back(6810);
        internal_counters.push_back(7632);
        internal_counters.push_back(8454);
        internal_counters.push_back(9276);
        internal_counters.push_back(10098);
        internal_counters.push_back(10920);
        internal_counters.push_back(11742);
        internal_counters.push_back(12564);
        internal_counters.push_back(13386);
        internal_counters.push_back(14208);
        internal_counters.push_back(15030);
        internal_counters.push_back(15852);
        internal_counters.push_back(16674);
        internal_counters.push_back(17496);
        internal_counters.push_back(18318);
        internal_counters.push_back(19140);
        internal_counters.push_back(19962);
        internal_counters.push_back(20784);
        internal_counters.push_back(21606);
        internal_counters.push_back(22428);
        internal_counters.push_back(23250);
        internal_counters.push_back(24072);
        internal_counters.push_back(24894);
        internal_counters.push_back(25716);
        internal_counters.push_back(26538);
        internal_counters.push_back(27360);
        internal_counters.push_back(28182);
        internal_counters.push_back(29004);
        internal_counters.push_back(3595);
        internal_counters.push_back(4417);
        internal_counters.push_back(5239);
        internal_counters.push_back(6061);
        internal_counters.push_back(6883);
        internal_counters.push_back(7705);
        internal_counters.push_back(8527);
        internal_counters.push_back(9349);
        internal_counters.push_back(10171);
        internal_counters.push_back(10993);
        internal_counters.push_back(11815);
        internal_counters.push_back(12637);
        internal_counters.push_back(13459);
        internal_counters.push_back(14281);
        internal_counters.push_back(15103);
        internal_counters.push_back(15925);
        internal_counters.push_back(16747);
        internal_counters.push_back(17569);
        internal_counters.push_back(18391);
        internal_counters.push_back(19213);
        internal_counters.push_back(20035);
        internal_counters.push_back(20857);
        internal_counters.push_back(21679);
        internal_counters.push_back(22501);
        internal_counters.push_back(23323);
        internal_counters.push_back(24145);
        internal_counters.push_back(24967);
        internal_counters.push_back(25789);
        internal_counters.push_back(26611);
        internal_counters.push_back(27433);
        internal_counters.push_back(28255);
        internal_counters.push_back(29077);

        c.DefineDerivedCounter("HiZQuadsCulledCount",
                               "DepthAndStencil",
                               "Count of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum128,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum32,-,(0),max",
                               "73b0b39d-6df2-3e24-0b5c-7cb0ac8b6f39");
    }
    { // Index:56
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(3595);
        internal_counters.push_back(4417);
        internal_counters.push_back(5239);
        internal_counters.push_back(6061);
        internal_counters.push_back(6883);
        internal_counters.push_back(7705);
        internal_counters.push_back(8527);
        internal_counters.push_back(9349);
        internal_counters.push_back(10171);
        internal_counters.push_back(10993);
        internal_counters.push_back(11815);
        internal_counters.push_back(12637);
        internal_counters.push_back(13459);
        internal_counters.push_back(14281);
        internal_counters.push_back(15103);
        internal_counters.push_back(15925);
        internal_counters.push_back(16747);
        internal_counters.push_back(17569);
        internal_counters.push_back(18391);
        internal_counters.push_back(19213);
        internal_counters.push_back(20035);
        internal_counters.push_back(20857);
        internal_counters.push_back(21679);
        internal_counters.push_back(22501);
        internal_counters.push_back(23323);
        internal_counters.push_back(24145);
        internal_counters.push_back(24967);
        internal_counters.push_back(25789);
        internal_counters.push_back(26611);
        internal_counters.push_back(27433);
        internal_counters.push_back(28255);
        internal_counters.push_back(29077);

        c.DefineDerivedCounter("HiZQuadsAcceptedCount",
                               "DepthAndStencil",
                               "Count of quads that did continue on in the pipeline after HiZ.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32",
                               "59049ad9-42b5-c7cb-3616-6a8f6a8e4894");
    }
    { // Index:57
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(3595);
        internal_counters.push_back(4417);
        internal_counters.push_back(5239);
        internal_counters.push_back(6061);
        internal_counters.push_back(6883);
        internal_counters.push_back(7705);
        internal_counters.push_back(8527);
        internal_counters.push_back(9349);
        internal_counters.push_back(10171);
        internal_counters.push_back(10993);
        internal_counters.push_back(11815);
        internal_counters.push_back(12637);
        internal_counters.push_back(13459);
        internal_counters.push_back(14281);
        internal_counters.push_back(15103);
        internal_counters.push_back(15925);
        internal_counters.push_back(16747);
        internal_counters.push_back(17569);
        internal_counters.push_back(18391);
        internal_counters.push_back(19213);
        internal_counters.push_back(20035);
        internal_counters.push_back(20857);
        internal_counters.push_back(21679);
        internal_counters.push_back(22501);
        internal_counters.push_back(23323);
        internal_counters.push_back(24145);
        internal_counters.push_back(24967);
        internal_counters.push_back(25789);
        internal_counters.push_back(26611);
        internal_counters.push_back(27433);
        internal_counters.push_back(28255);
        internal_counters.push_back(29077);
        internal_counters.push_back(3619);
        internal_counters.push_back(4441);
        internal_counters.push_back(5263);
        internal_counters.push_back(6085);
        internal_counters.push_back(6907);
        internal_counters.push_back(7729);
        internal_counters.push_back(8551);
        internal_counters.push_back(9373);
        internal_counters.push_back(10195);
        internal_counters.push_back(11017);
        internal_counters.push_back(11839);
        internal_counters.push_back(12661);
        internal_counters.push_back(13483);
        internal_counters.push_back(14305);
        internal_counters.push_back(15127);
        internal_counters.push_back(15949);
        internal_counters.push_back(16771);
        internal_counters.push_back(17593);
        internal_counters.push_back(18415);
        internal_counters.push_back(19237);
        internal_counters.push_back(20059);
        internal_counters.push_back(20881);
        internal_counters.push_back(21703);
        internal_counters.push_back(22525);
        internal_counters.push_back(23347);
        internal_counters.push_back(24169);
        internal_counters.push_back(24991);
        internal_counters.push_back(25813);
        internal_counters.push_back(26635);
        internal_counters.push_back(27457);
        internal_counters.push_back(28279);
        internal_counters.push_back(29101);
        internal_counters.push_back(3519);
        internal_counters.push_back(4341);
        internal_counters.push_back(5163);
        internal_counters.push_back(5985);
        internal_counters.push_back(6807);
        internal_counters.push_back(7629);
        internal_counters.push_back(8451);
        internal_counters.push_back(9273);
        internal_counters.push_back(10095);
        internal_counters.push_back(10917);
        internal_counters.push_back(11739);
        internal_counters.push_back(12561);
        internal_counters.push_back(13383);
        internal_counters.push_back(14205);
        internal_counters.push_back(15027);
        internal_counters.push_back(15849);
        internal_counters.push_back(16671);
        internal_counters.push_back(17493);
        internal_counters.push_back(18315);
        internal_counters.push_back(19137);
        internal_counters.push_back(19959);
        internal_counters.push_back(20781);
        internal_counters.push_back(21603);
        internal_counters.push_back(22425);
        internal_counters.push_back(23247);
        internal_counters.push_back(24069);
        internal_counters.push_back(24891);
        internal_counters.push_back(25713);
        internal_counters.push_back(26535);
        internal_counters.push_back(27357);
        internal_counters.push_back(28179);
        internal_counters.push_back(29001);
        internal_counters.push_back(3520);
        internal_counters.push_back(4342);
        internal_counters.push_back(5164);
        internal_counters.push_back(5986);
        internal_counters.push_back(6808);
        internal_counters.push_back(7630);
        internal_counters.push_back(8452);
        internal_counters.push_back(9274);
        internal_counters.push_back(10096);
        internal_counters.push_back(10918);
        internal_counters.push_back(11740);
        internal_counters.push_back(12562);
        internal_counters.push_back(13384);
        internal_counters.push_back(14206);
        internal_counters.push_back(15028);
        internal_counters.push_back(15850);
        internal_counters.push_back(16672);
        internal_counters.push_back(17494);
        internal_counters.push_back(18316);
        internal_counters.push_back(19138);
        internal_counters.push_back(19960);
        internal_counters.push_back(20782);
        internal_counters.push_back(21604);
        internal_counters.push_back(22426);
        internal_counters.push_back(23248);
        internal_counters.push_back(24070);
        internal_counters.push_back(24892);
        internal_counters.push_back(25714);
        internal_counters.push_back(26536);
        internal_counters.push_back(27358);
        internal_counters.push_back(28180);
        internal_counters.push_back(29002);
        internal_counters.push_back(3521);
        internal_counters.push_back(4343);
        internal_counters.push_back(5165);
        internal_counters.push_back(5987);
        internal_counters.push_back(6809);
        internal_counters.push_back(7631);
        internal_counters.push_back(8453);
        internal_counters.push_back(9275);
        internal_counters.push_back(10097);
        internal_counters.push_back(10919);
        internal_counters.push_back(11741);
        internal_counters.push_back(12563);
        internal_counters.push_back(13385);
        internal_counters.push_back(14207);
        internal_counters.push_back(15029);
        internal_counters.push_back(15851);
        internal_counters.push_back(16673);
        internal_counters.push_back(17495);
        internal_counters.push_back(18317);
        internal_counters.push_back(19139);
        internal_counters.push_back(19961);
        internal_counters.push_back(20783);
        internal_counters.push_back(21605);
        internal_counters.push_back(22427);
        internal_counters.push_back(23249);
        internal_counters.push_back(24071);
        internal_counters.push_back(24893);
        internal_counters.push_back(25715);
        internal_counters.push_back(26537);
        internal_counters.push_back(27359);
        internal_counters.push_back(28181);
        internal_counters.push_back(29003);
        internal_counters.push_back(3522);
        internal_counters.push_back(4344);
        internal_counters.push_back(5166);
        internal_counters.push_back(5988);
        internal_counters.push_back(6810);
        internal_counters.push_back(7632);
        internal_counters.push_back(8454);
        internal_counters.push_back(9276);
        internal_counters.push_back(10098);
        internal_counters.push_back(10920);
        internal_counters.push_back(11742);
        internal_counters.push_back(12564);
        internal_counters.push_back(13386);
        internal_counters.push_back(14208);
        internal_counters.push_back(15030);
        internal_counters.push_back(15852);
        internal_counters.push_back(16674);
        internal_counters.push_back(17496);
        internal_counters.push_back(18318);
        internal_counters.push_back(19140);
        internal_counters.push_back(19962);
        internal_counters.push_back(20784);
        internal_counters.push_back(21606);
        internal_counters.push_back(22428);
        internal_counters.push_back(23250);
        internal_counters.push_back(24072);
        internal_counters.push_back(24894);
        internal_counters.push_back(25716);
        internal_counters.push_back(26538);
        internal_counters.push_back(27360);
        internal_counters.push_back(28182);
        internal_counters.push_back(29004);

        c.DefineDerivedCounter("PreZQuadsCulled",
                               "DepthAndStencil",
                               "Percentage of quads rejected based on the detailZ and earlyZ tests.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum32,-,(0),max,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum128,/,(100),*",
                               "4e77547b-ec55-5663-f034-af59be66d77d");
    }
    { // Index:58
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(3595);
        internal_counters.push_back(4417);
        internal_counters.push_back(5239);
        internal_counters.push_back(6061);
        internal_counters.push_back(6883);
        internal_counters.push_back(7705);
        internal_counters.push_back(8527);
        internal_counters.push_back(9349);
        internal_counters.push_back(10171);
        internal_counters.push_back(10993);
        internal_counters.push_back(11815);
        internal_counters.push_back(12637);
        internal_counters.push_back(13459);
        internal_counters.push_back(14281);
        internal_counters.push_back(15103);
        internal_counters.push_back(15925);
        internal_counters.push_back(16747);
        internal_counters.push_back(17569);
        internal_counters.push_back(18391);
        internal_counters.push_back(19213);
        internal_counters.push_back(20035);
        internal_counters.push_back(20857);
        internal_counters.push_back(21679);
        internal_counters.push_back(22501);
        internal_counters.push_back(23323);
        internal_counters.push_back(24145);
        internal_counters.push_back(24967);
        internal_counters.push_back(25789);
        internal_counters.push_back(26611);
        internal_counters.push_back(27433);
        internal_counters.push_back(28255);
        internal_counters.push_back(29077);
        internal_counters.push_back(3619);
        internal_counters.push_back(4441);
        internal_counters.push_back(5263);
        internal_counters.push_back(6085);
        internal_counters.push_back(6907);
        internal_counters.push_back(7729);
        internal_counters.push_back(8551);
        internal_counters.push_back(9373);
        internal_counters.push_back(10195);
        internal_counters.push_back(11017);
        internal_counters.push_back(11839);
        internal_counters.push_back(12661);
        internal_counters.push_back(13483);
        internal_counters.push_back(14305);
        internal_counters.push_back(15127);
        internal_counters.push_back(15949);
        internal_counters.push_back(16771);
        internal_counters.push_back(17593);
        internal_counters.push_back(18415);
        internal_counters.push_back(19237);
        internal_counters.push_back(20059);
        internal_counters.push_back(20881);
        internal_counters.push_back(21703);
        internal_counters.push_back(22525);
        internal_counters.push_back(23347);
        internal_counters.push_back(24169);
        internal_counters.push_back(24991);
        internal_counters.push_back(25813);
        internal_counters.push_back(26635);
        internal_counters.push_back(27457);
        internal_counters.push_back(28279);
        internal_counters.push_back(29101);

        c.DefineDerivedCounter("PreZQuadsCulledCount",
                               "DepthAndStencil",
                               "Count of quads rejected based on the detailZ and earlyZ tests.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum32,-,(0),max",
                               "1bf169e6-9304-834e-df5f-0c44d7890a08");
    }
    { // Index:59
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(3619);
        internal_counters.push_back(4441);
        internal_counters.push_back(5263);
        internal_counters.push_back(6085);
        internal_counters.push_back(6907);
        internal_counters.push_back(7729);
        internal_counters.push_back(8551);
        internal_counters.push_back(9373);
        internal_counters.push_back(10195);
        internal_counters.push_back(11017);
        internal_counters.push_back(11839);
        internal_counters.push_back(12661);
        internal_counters.push_back(13483);
        internal_counters.push_back(14305);
        internal_counters.push_back(15127);
        internal_counters.push_back(15949);
        internal_counters.push_back(16771);
        internal_counters.push_back(17593);
        internal_counters.push_back(18415);
        internal_counters.push_back(19237);
        internal_counters.push_back(20059);
        internal_counters.push_back(20881);
        internal_counters.push_back(21703);
        internal_counters.push_back(22525);
        internal_counters.push_back(23347);
        internal_counters.push_back(24169);
        internal_counters.push_back(24991);
        internal_counters.push_back(25813);
        internal_counters.push_back(26635);
        internal_counters.push_back(27457);
        internal_counters.push_back(28279);
        internal_counters.push_back(29101);

        c.DefineDerivedCounter("PreZQuadsSurvivingCount",
                               "DepthAndStencil",
                               "Count of quads surviving detailZ and earlyZ tests.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32",
                               "50e25e51-3713-89cb-7f92-559cde5e5532");
    }
    { // Index:60
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(3619);
        internal_counters.push_back(4441);
        internal_counters.push_back(5263);
        internal_counters.push_back(6085);
        internal_counters.push_back(6907);
        internal_counters.push_back(7729);
        internal_counters.push_back(8551);
        internal_counters.push_back(9373);
        internal_counters.push_back(10195);
        internal_counters.push_back(11017);
        internal_counters.push_back(11839);
        internal_counters.push_back(12661);
        internal_counters.push_back(13483);
        internal_counters.push_back(14305);
        internal_counters.push_back(15127);
        internal_counters.push_back(15949);
        internal_counters.push_back(16771);
        internal_counters.push_back(17593);
        internal_counters.push_back(18415);
        internal_counters.push_back(19237);
        internal_counters.push_back(20059);
        internal_counters.push_back(20881);
        internal_counters.push_back(21703);
        internal_counters.push_back(22525);
        internal_counters.push_back(23347);
        internal_counters.push_back(24169);
        internal_counters.push_back(24991);
        internal_counters.push_back(25813);
        internal_counters.push_back(26635);
        internal_counters.push_back(27457);
        internal_counters.push_back(28279);
        internal_counters.push_back(29101);
        internal_counters.push_back(3519);
        internal_counters.push_back(4341);
        internal_counters.push_back(5163);
        internal_counters.push_back(5985);
        internal_counters.push_back(6807);
        internal_counters.push_back(7629);
        internal_counters.push_back(8451);
        internal_counters.push_back(9273);
        internal_counters.push_back(10095);
        internal_counters.push_back(10917);
        internal_counters.push_back(11739);
        internal_counters.push_back(12561);
        internal_counters.push_back(13383);
        internal_counters.push_back(14205);
        internal_counters.push_back(15027);
        internal_counters.push_back(15849);
        internal_counters.push_back(16671);
        internal_counters.push_back(17493);
        internal_counters.push_back(18315);
        internal_counters.push_back(19137);
        internal_counters.push_back(19959);
        internal_counters.push_back(20781);
        internal_counters.push_back(21603);
        internal_counters.push_back(22425);
        internal_counters.push_back(23247);
        internal_counters.push_back(24069);
        internal_counters.push_back(24891);
        internal_counters.push_back(25713);
        internal_counters.push_back(26535);
        internal_counters.push_back(27357);
        internal_counters.push_back(28179);
        internal_counters.push_back(29001);
        internal_counters.push_back(3520);
        internal_counters.push_back(4342);
        internal_counters.push_back(5164);
        internal_counters.push_back(5986);
        internal_counters.push_back(6808);
        internal_counters.push_back(7630);
        internal_counters.push_back(8452);
        internal_counters.push_back(9274);
        internal_counters.push_back(10096);
        internal_counters.push_back(10918);
        internal_counters.push_back(11740);
        internal_counters.push_back(12562);
        internal_counters.push_back(13384);
        internal_counters.push_back(14206);
        internal_counters.push_back(15028);
        internal_counters.push_back(15850);
        internal_counters.push_back(16672);
        internal_counters.push_back(17494);
        internal_counters.push_back(18316);
        internal_counters.push_back(19138);
        internal_counters.push_back(19960);
        internal_counters.push_back(20782);
        internal_counters.push_back(21604);
        internal_counters.push_back(22426);
        internal_counters.push_back(23248);
        internal_counters.push_back(24070);
        internal_counters.push_back(24892);
        internal_counters.push_back(25714);
        internal_counters.push_back(26536);
        internal_counters.push_back(27358);
        internal_counters.push_back(28180);
        internal_counters.push_back(29002);
        internal_counters.push_back(3521);
        internal_counters.push_back(4343);
        internal_counters.push_back(5165);
        internal_counters.push_back(5987);
        internal_counters.push_back(6809);
        internal_counters.push_back(7631);
        internal_counters.push_back(8453);
        internal_counters.push_back(9275);
        internal_counters.push_back(10097);
        internal_counters.push_back(10919);
        internal_counters.push_back(11741);
        internal_counters.push_back(12563);
        internal_counters.push_back(13385);
        internal_counters.push_back(14207);
        internal_counters.push_back(15029);
        internal_counters.push_back(15851);
        internal_counters.push_back(16673);
        internal_counters.push_back(17495);
        internal_counters.push_back(18317);
        internal_counters.push_back(19139);
        internal_counters.push_back(19961);
        internal_counters.push_back(20783);
        internal_counters.push_back(21605);
        internal_counters.push_back(22427);
        internal_counters.push_back(23249);
        internal_counters.push_back(24071);
        internal_counters.push_back(24893);
        internal_counters.push_back(25715);
        internal_counters.push_back(26537);
        internal_counters.push_back(27359);
        internal_counters.push_back(28181);
        internal_counters.push_back(29003);
        internal_counters.push_back(3522);
        internal_counters.push_back(4344);
        internal_counters.push_back(5166);
        internal_counters.push_back(5988);
        internal_counters.push_back(6810);
        internal_counters.push_back(7632);
        internal_counters.push_back(8454);
        internal_counters.push_back(9276);
        internal_counters.push_back(10098);
        internal_counters.push_back(10920);
        internal_counters.push_back(11742);
        internal_counters.push_back(12564);
        internal_counters.push_back(13386);
        internal_counters.push_back(14208);
        internal_counters.push_back(15030);
        internal_counters.push_back(15852);
        internal_counters.push_back(16674);
        internal_counters.push_back(17496);
        internal_counters.push_back(18318);
        internal_counters.push_back(19140);
        internal_counters.push_back(19962);
        internal_counters.push_back(20784);
        internal_counters.push_back(21606);
        internal_counters.push_back(22428);
        internal_counters.push_back(23250);
        internal_counters.push_back(24072);
        internal_counters.push_back(24894);
        internal_counters.push_back(25716);
        internal_counters.push_back(26538);
        internal_counters.push_back(27360);
        internal_counters.push_back(28182);
        internal_counters.push_back(29004);

        c.DefineDerivedCounter("PostZQuads",
                               "DepthAndStencil",
                               "Percentage of quads for which the pixel shader will run and may be postZ tested.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum128,/,(100),*",
                               "58f0d34b-eeb8-e8db-abce-cb72584144be");
    }
    { // Index:61
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(3619);
        internal_counters.push_back(4441);
        internal_counters.push_back(5263);
        internal_counters.push_back(6085);
        internal_counters.push_back(6907);
        internal_counters.push_back(7729);
        internal_counters.push_back(8551);
        internal_counters.push_back(9373);
        internal_counters.push_back(10195);
        internal_counters.push_back(11017);
        internal_counters.push_back(11839);
        internal_counters.push_back(12661);
        internal_counters.push_back(13483);
        internal_counters.push_back(14305);
        internal_counters.push_back(15127);
        internal_counters.push_back(15949);
        internal_counters.push_back(16771);
        internal_counters.push_back(17593);
        internal_counters.push_back(18415);
        internal_counters.push_back(19237);
        internal_counters.push_back(20059);
        internal_counters.push_back(20881);
        internal_counters.push_back(21703);
        internal_counters.push_back(22525);
        internal_counters.push_back(23347);
        internal_counters.push_back(24169);
        internal_counters.push_back(24991);
        internal_counters.push_back(25813);
        internal_counters.push_back(26635);
        internal_counters.push_back(27457);
        internal_counters.push_back(28279);
        internal_counters.push_back(29101);

        c.DefineDerivedCounter("PostZQuadCount",
                               "DepthAndStencil",
                               "Count of quads for which the pixel shader will run and may be postZ tested.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32",
                               "08404526-ce35-939b-34c8-a7a35a0ff4d6");
    }
    { // Index:62
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(72821);
        internal_counters.push_back(73263);
        internal_counters.push_back(73705);
        internal_counters.push_back(74147);
        internal_counters.push_back(74589);
        internal_counters.push_back(75031);
        internal_counters.push_back(75473);
        internal_counters.push_back(75915);
        internal_counters.push_back(76357);
        internal_counters.push_back(76799);
        internal_counters.push_back(77241);
        internal_counters.push_back(77683);
        internal_counters.push_back(78125);
        internal_counters.push_back(78567);
        internal_counters.push_back(79009);
        internal_counters.push_back(79451);

        c.DefineDerivedCounter("PreZSamplesPassing",
                               "DepthAndStencil",
                               "Number of samples tested for Z before shading and passed.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16",
                               "3bfe6c4d-7422-ca03-7ea5-e67ff1a00136");
    }
    { // Index:63
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(72823);
        internal_counters.push_back(73265);
        internal_counters.push_back(73707);
        internal_counters.push_back(74149);
        internal_counters.push_back(74591);
        internal_counters.push_back(75033);
        internal_counters.push_back(75475);
        internal_counters.push_back(75917);
        internal_counters.push_back(76359);
        internal_counters.push_back(76801);
        internal_counters.push_back(77243);
        internal_counters.push_back(77685);
        internal_counters.push_back(78127);
        internal_counters.push_back(78569);
        internal_counters.push_back(79011);
        internal_counters.push_back(79453);

        c.DefineDerivedCounter("PreZSamplesFailingS",
                               "DepthAndStencil",
                               "Number of samples tested for Z before shading and failed stencil test.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16",
                               "df7f705e-5162-d3b5-da8b-63466cf9c4e5");
    }
    { // Index:64
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(72822);
        internal_counters.push_back(73264);
        internal_counters.push_back(73706);
        internal_counters.push_back(74148);
        internal_counters.push_back(74590);
        internal_counters.push_back(75032);
        internal_counters.push_back(75474);
        internal_counters.push_back(75916);
        internal_counters.push_back(76358);
        internal_counters.push_back(76800);
        internal_counters.push_back(77242);
        internal_counters.push_back(77684);
        internal_counters.push_back(78126);
        internal_counters.push_back(78568);
        internal_counters.push_back(79010);
        internal_counters.push_back(79452);

        c.DefineDerivedCounter("PreZSamplesFailingZ",
                               "DepthAndStencil",
                               "Number of samples tested for Z before shading and failed Z test.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16",
                               "4484e950-f7a4-3800-bc74-78dd297f017e");
    }
    { // Index:65
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(72818);
        internal_counters.push_back(73260);
        internal_counters.push_back(73702);
        internal_counters.push_back(74144);
        internal_counters.push_back(74586);
        internal_counters.push_back(75028);
        internal_counters.push_back(75470);
        internal_counters.push_back(75912);
        internal_counters.push_back(76354);
        internal_counters.push_back(76796);
        internal_counters.push_back(77238);
        internal_counters.push_back(77680);
        internal_counters.push_back(78122);
        internal_counters.push_back(78564);
        internal_counters.push_back(79006);
        internal_counters.push_back(79448);

        c.DefineDerivedCounter("PostZSamplesPassing",
                               "DepthAndStencil",
                               "Number of samples tested for Z after shading and passed.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16",
                               "4995d5d6-2330-b986-508b-fae24856f44c");
    }
    { // Index:66
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(72820);
        internal_counters.push_back(73262);
        internal_counters.push_back(73704);
        internal_counters.push_back(74146);
        internal_counters.push_back(74588);
        internal_counters.push_back(75030);
        internal_counters.push_back(75472);
        internal_counters.push_back(75914);
        internal_counters.push_back(76356);
        internal_counters.push_back(76798);
        internal_counters.push_back(77240);
        internal_counters.push_back(77682);
        internal_counters.push_back(78124);
        internal_counters.push_back(78566);
        internal_counters.push_back(79008);
        internal_counters.push_back(79450);

        c.DefineDerivedCounter("PostZSamplesFailingS",
                               "DepthAndStencil",
                               "Number of samples tested for Z after shading and failed stencil test.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16",
                               "ae558af4-f4be-3dd4-7316-b2c4dcf0def8");
    }
    { // Index:67
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(72819);
        internal_counters.push_back(73261);
        internal_counters.push_back(73703);
        internal_counters.push_back(74145);
        internal_counters.push_back(74587);
        internal_counters.push_back(75029);
        internal_counters.push_back(75471);
        internal_counters.push_back(75913);
        internal_counters.push_back(76355);
        internal_counters.push_back(76797);
        internal_counters.push_back(77239);
        internal_counters.push_back(77681);
        internal_counters.push_back(78123);
        internal_counters.push_back(78565);
        internal_counters.push_back(79007);
        internal_counters.push_back(79449);

        c.DefineDerivedCounter("PostZSamplesFailingZ",
                               "DepthAndStencil",
                               "Number of samples tested for Z after shading and failed Z test.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16",
                               "b3684c94-814a-c695-c85d-a5b6ab798b35");
    }
    { // Index:68
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(72690);
        internal_counters.push_back(73132);
        internal_counters.push_back(73574);
        internal_counters.push_back(74016);
        internal_counters.push_back(74458);
        internal_counters.push_back(74900);
        internal_counters.push_back(75342);
        internal_counters.push_back(75784);
        internal_counters.push_back(76226);
        internal_counters.push_back(76668);
        internal_counters.push_back(77110);
        internal_counters.push_back(77552);
        internal_counters.push_back(77994);
        internal_counters.push_back(78436);
        internal_counters.push_back(78878);
        internal_counters.push_back(79320);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("ZUnitStalled",
                               "DepthAndStencil",
                               "The percentage of GPUTime the depth buffer spends waiting for the color buffer to be ready to accept data. High figures here indicate a bottleneck in color buffer operations.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*",
                               "5e86c3ad-1726-3157-1d01-7ed188bf854d");
    }
    { // Index:69
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(72690);
        internal_counters.push_back(73132);
        internal_counters.push_back(73574);
        internal_counters.push_back(74016);
        internal_counters.push_back(74458);
        internal_counters.push_back(74900);
        internal_counters.push_back(75342);
        internal_counters.push_back(75784);
        internal_counters.push_back(76226);
        internal_counters.push_back(76668);
        internal_counters.push_back(77110);
        internal_counters.push_back(77552);
        internal_counters.push_back(77994);
        internal_counters.push_back(78436);
        internal_counters.push_back(78878);
        internal_counters.push_back(79320);

        c.DefineDerivedCounter("ZUnitStalledCycles",
                               "DepthAndStencil",
                               "Number of GPU cycles the depth buffer spends waiting for the color buffer to be ready to accept data. Larger numbers indicate a bottleneck in color buffer operations.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16",
                               "4351fa7f-6737-2c3e-3ffb-b3addbdceedd");
    }
    { // Index:70
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(79756);
        internal_counters.push_back(80072);
        internal_counters.push_back(80388);
        internal_counters.push_back(80704);
        internal_counters.push_back(81020);
        internal_counters.push_back(81336);
        internal_counters.push_back(81652);
        internal_counters.push_back(81968);
        internal_counters.push_back(82284);
        internal_counters.push_back(82600);
        internal_counters.push_back(82916);
        internal_counters.push_back(83232);
        internal_counters.push_back(83548);
        internal_counters.push_back(83864);
        internal_counters.push_back(84180);
        internal_counters.push_back(84496);

        c.DefineDerivedCounter("CBMemRead",
                               "ColorBuffer",
                               "Number of bytes read from the color buffer.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeBytes,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*",
                               "84b531d8-a1f8-7f49-7c27-7bc97801f1e6");
    }
    { // Index:71
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(79758);
        internal_counters.push_back(80074);
        internal_counters.push_back(80390);
        internal_counters.push_back(80706);
        internal_counters.push_back(81022);
        internal_counters.push_back(81338);
        internal_counters.push_back(81654);
        internal_counters.push_back(81970);
        internal_counters.push_back(82286);
        internal_counters.push_back(82602);
        internal_counters.push_back(82918);
        internal_counters.push_back(83234);
        internal_counters.push_back(83550);
        internal_counters.push_back(83866);
        internal_counters.push_back(84182);
        internal_counters.push_back(84498);

        c.DefineDerivedCounter("CBMemWritten",
                               "ColorBuffer",
                               "Number of bytes written to the color buffer.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeBytes,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*",
                               "550f8ff8-60b6-a6bf-87d0-25ac9e87de70");
    }
    { // Index:72
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(66253);
        internal_counters.push_back(66353);
        internal_counters.push_back(66453);
        internal_counters.push_back(66553);
        internal_counters.push_back(66653);
        internal_counters.push_back(66753);
        internal_counters.push_back(66853);
        internal_counters.push_back(66953);
        internal_counters.push_back(67053);
        internal_counters.push_back(67153);
        internal_counters.push_back(67253);
        internal_counters.push_back(67353);
        internal_counters.push_back(67453);
        internal_counters.push_back(67553);
        internal_counters.push_back(67653);
        internal_counters.push_back(67753);
        internal_counters.push_back(67853);
        internal_counters.push_back(67953);
        internal_counters.push_back(68053);
        internal_counters.push_back(68153);
        internal_counters.push_back(68253);
        internal_counters.push_back(68353);
        internal_counters.push_back(68453);
        internal_counters.push_back(68553);
        internal_counters.push_back(68653);
        internal_counters.push_back(68753);
        internal_counters.push_back(68853);
        internal_counters.push_back(68953);
        internal_counters.push_back(69053);
        internal_counters.push_back(69153);
        internal_counters.push_back(69253);
        internal_counters.push_back(69353);
        internal_counters.push_back(69453);
        internal_counters.push_back(69553);
        internal_counters.push_back(69653);
        internal_counters.push_back(69753);
        internal_counters.push_back(69853);
        internal_counters.push_back(69953);
        internal_counters.push_back(70053);
        internal_counters.push_back(70153);
        internal_counters.push_back(70253);
        internal_counters.push_back(70353);
        internal_counters.push_back(70453);
        internal_counters.push_back(70553);
        internal_counters.push_back(70653);
        internal_counters.push_back(70753);
        internal_counters.push_back(70853);
        internal_counters.push_back(70953);
        internal_counters.push_back(71053);
        internal_counters.push_back(71153);
        internal_counters.push_back(71253);
        internal_counters.push_back(71353);
        internal_counters.push_back(71453);
        internal_counters.push_back(71553);
        internal_counters.push_back(71653);
        internal_counters.push_back(71753);
        internal_counters.push_back(71853);
        internal_counters.push_back(71953);
        internal_counters.push_back(72053);
        internal_counters.push_back(72153);
        internal_counters.push_back(72253);
        internal_counters.push_back(72353);
        internal_counters.push_back(72453);
        internal_counters.push_back(72553);
        internal_counters.push_back(66261);
        internal_counters.push_back(66361);
        internal_counters.push_back(66461);
        internal_counters.push_back(66561);
        internal_counters.push_back(66661);
        internal_counters.push_back(66761);
        internal_counters.push_back(66861);
        internal_counters.push_back(66961);
        internal_counters.push_back(67061);
        internal_counters.push_back(67161);
        internal_counters.push_back(67261);
        internal_counters.push_back(67361);
        internal_counters.push_back(67461);
        internal_counters.push_back(67561);
        internal_counters.push_back(67661);
        internal_counters.push_back(67761);
        internal_counters.push_back(67861);
        internal_counters.push_back(67961);
        internal_counters.push_back(68061);
        internal_counters.push_back(68161);
        internal_counters.push_back(68261);
        internal_counters.push_back(68361);
        internal_counters.push_back(68461);
        internal_counters.push_back(68561);
        internal_counters.push_back(68661);
        internal_counters.push_back(68761);
        internal_counters.push_back(68861);
        internal_counters.push_back(68961);
        internal_counters.push_back(69061);
        internal_counters.push_back(69161);
        internal_counters.push_back(69261);
        internal_counters.push_back(69361);
        internal_counters.push_back(69461);
        internal_counters.push_back(69561);
        internal_counters.push_back(69661);
        internal_counters.push_back(69761);
        internal_counters.push_back(69861);
        internal_counters.push_back(69961);
        internal_counters.push_back(70061);
        internal_counters.push_back(70161);
        internal_counters.push_back(70261);
        internal_counters.push_back(70361);
        internal_counters.push_back(70461);
        internal_counters.push_back(70561);
        internal_counters.push_back(70661);
        internal_counters.push_back(70761);
        internal_counters.push_back(70861);
        internal_counters.push_back(70961);
        internal_counters.push_back(71061);
        internal_counters.push_back(71161);
        internal_counters.push_back(71261);
        internal_counters.push_back(71361);
        internal_counters.push_back(71461);
        internal_counters.push_back(71561);
        internal_counters.push_back(71661);
        internal_counters.push_back(71761);
        internal_counters.push_back(71861);
        internal_counters.push_back(71961);
        internal_counters.push_back(72061);
        internal_counters.push_back(72161);
        internal_counters.push_back(72261);
        internal_counters.push_back(72361);
        internal_counters.push_back(72461);
        internal_counters.push_back(72561);

        c.DefineDerivedCounter("L0CacheHit",
                               "MemoryCache",
                               "The percentage of read requests that hit the data in the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "(0),(1),64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,ifnotzero",
                               "286c786e-9a42-3371-9dea-dd54e6e612e9");
    }
    { // Index:73
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(66253);
        internal_counters.push_back(66353);
        internal_counters.push_back(66453);
        internal_counters.push_back(66553);
        internal_counters.push_back(66653);
        internal_counters.push_back(66753);
        internal_counters.push_back(66853);
        internal_counters.push_back(66953);
        internal_counters.push_back(67053);
        internal_counters.push_back(67153);
        internal_counters.push_back(67253);
        internal_counters.push_back(67353);
        internal_counters.push_back(67453);
        internal_counters.push_back(67553);
        internal_counters.push_back(67653);
        internal_counters.push_back(67753);
        internal_counters.push_back(67853);
        internal_counters.push_back(67953);
        internal_counters.push_back(68053);
        internal_counters.push_back(68153);
        internal_counters.push_back(68253);
        internal_counters.push_back(68353);
        internal_counters.push_back(68453);
        internal_counters.push_back(68553);
        internal_counters.push_back(68653);
        internal_counters.push_back(68753);
        internal_counters.push_back(68853);
        internal_counters.push_back(68953);
        internal_counters.push_back(69053);
        internal_counters.push_back(69153);
        internal_counters.push_back(69253);
        internal_counters.push_back(69353);
        internal_counters.push_back(69453);
        internal_counters.push_back(69553);
        internal_counters.push_back(69653);
        internal_counters.push_back(69753);
        internal_counters.push_back(69853);
        internal_counters.push_back(69953);
        internal_counters.push_back(70053);
        internal_counters.push_back(70153);
        internal_counters.push_back(70253);
        internal_counters.push_back(70353);
        internal_counters.push_back(70453);
        internal_counters.push_back(70553);
        internal_counters.push_back(70653);
        internal_counters.push_back(70753);
        internal_counters.push_back(70853);
        internal_counters.push_back(70953);
        internal_counters.push_back(71053);
        internal_counters.push_back(71153);
        internal_counters.push_back(71253);
        internal_counters.push_back(71353);
        internal_counters.push_back(71453);
        internal_counters.push_back(71553);
        internal_counters.push_back(71653);
        internal_counters.push_back(71753);
        internal_counters.push_back(71853);
        internal_counters.push_back(71953);
        internal_counters.push_back(72053);
        internal_counters.push_back(72153);
        internal_counters.push_back(72253);
        internal_counters.push_back(72353);
        internal_counters.push_back(72453);
        internal_counters.push_back(72553);

        c.DefineDerivedCounter("L0CacheRequestCount",
                               "MemoryCache",
                               "The number of read requests made to the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64",
                               "74983cae-ee57-2e1b-d990-5128fef84e1f");
    }
    { // Index:74
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(66253);
        internal_counters.push_back(66353);
        internal_counters.push_back(66453);
        internal_counters.push_back(66553);
        internal_counters.push_back(66653);
        internal_counters.push_back(66753);
        internal_counters.push_back(66853);
        internal_counters.push_back(66953);
        internal_counters.push_back(67053);
        internal_counters.push_back(67153);
        internal_counters.push_back(67253);
        internal_counters.push_back(67353);
        internal_counters.push_back(67453);
        internal_counters.push_back(67553);
        internal_counters.push_back(67653);
        internal_counters.push_back(67753);
        internal_counters.push_back(67853);
        internal_counters.push_back(67953);
        internal_counters.push_back(68053);
        internal_counters.push_back(68153);
        internal_counters.push_back(68253);
        internal_counters.push_back(68353);
        internal_counters.push_back(68453);
        internal_counters.push_back(68553);
        internal_counters.push_back(68653);
        internal_counters.push_back(68753);
        internal_counters.push_back(68853);
        internal_counters.push_back(68953);
        internal_counters.push_back(69053);
        internal_counters.push_back(69153);
        internal_counters.push_back(69253);
        internal_counters.push_back(69353);
        internal_counters.push_back(69453);
        internal_counters.push_back(69553);
        internal_counters.push_back(69653);
        internal_counters.push_back(69753);
        internal_counters.push_back(69853);
        internal_counters.push_back(69953);
        internal_counters.push_back(70053);
        internal_counters.push_back(70153);
        internal_counters.push_back(70253);
        internal_counters.push_back(70353);
        internal_counters.push_back(70453);
        internal_counters.push_back(70553);
        internal_counters.push_back(70653);
        internal_counters.push_back(70753);
        internal_counters.push_back(70853);
        internal_counters.push_back(70953);
        internal_counters.push_back(71053);
        internal_counters.push_back(71153);
        internal_counters.push_back(71253);
        internal_counters.push_back(71353);
        internal_counters.push_back(71453);
        internal_counters.push_back(71553);
        internal_counters.push_back(71653);
        internal_counters.push_back(71753);
        internal_counters.push_back(71853);
        internal_counters.push_back(71953);
        internal_counters.push_back(72053);
        internal_counters.push_back(72153);
        internal_counters.push_back(72253);
        internal_counters.push_back(72353);
        internal_counters.push_back(72453);
        internal_counters.push_back(72553);
        internal_counters.push_back(66261);
        internal_counters.push_back(66361);
        internal_counters.push_back(66461);
        internal_counters.push_back(66561);
        internal_counters.push_back(66661);
        internal_counters.push_back(66761);
        internal_counters.push_back(66861);
        internal_counters.push_back(66961);
        internal_counters.push_back(67061);
        internal_counters.push_back(67161);
        internal_counters.push_back(67261);
        internal_counters.push_back(67361);
        internal_counters.push_back(67461);
        internal_counters.push_back(67561);
        internal_counters.push_back(67661);
        internal_counters.push_back(67761);
        internal_counters.push_back(67861);
        internal_counters.push_back(67961);
        internal_counters.push_back(68061);
        internal_counters.push_back(68161);
        internal_counters.push_back(68261);
        internal_counters.push_back(68361);
        internal_counters.push_back(68461);
        internal_counters.push_back(68561);
        internal_counters.push_back(68661);
        internal_counters.push_back(68761);
        internal_counters.push_back(68861);
        internal_counters.push_back(68961);
        internal_counters.push_back(69061);
        internal_counters.push_back(69161);
        internal_counters.push_back(69261);
        internal_counters.push_back(69361);
        internal_counters.push_back(69461);
        internal_counters.push_back(69561);
        internal_counters.push_back(69661);
        internal_counters.push_back(69761);
        internal_counters.push_back(69861);
        internal_counters.push_back(69961);
        internal_counters.push_back(70061);
        internal_counters.push_back(70161);
        internal_counters.push_back(70261);
        internal_counters.push_back(70361);
        internal_counters.push_back(70461);
        internal_counters.push_back(70561);
        internal_counters.push_back(70661);
        internal_counters.push_back(70761);
        internal_counters.push_back(70861);
        internal_counters.push_back(70961);
        internal_counters.push_back(71061);
        internal_counters.push_back(71161);
        internal_counters.push_back(71261);
        internal_counters.push_back(71361);
        internal_counters.push_back(71461);
        internal_counters.push_back(71561);
        internal_counters.push_back(71661);
        internal_counters.push_back(71761);
        internal_counters.push_back(71861);
        internal_counters.push_back(71961);
        internal_counters.push_back(72061);
        internal_counters.push_back(72161);
        internal_counters.push_back(72261);
        internal_counters.push_back(72361);
        internal_counters.push_back(72461);
        internal_counters.push_back(72561);

        c.DefineDerivedCounter("L0CacheHitCount",
                               "MemoryCache",
                               "The number of read requests which result in a cache hit from the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,-",
                               "c0de7338-069b-c5ba-ead3-c65e030cd2ac");
    }
    { // Index:75
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(66261);
        internal_counters.push_back(66361);
        internal_counters.push_back(66461);
        internal_counters.push_back(66561);
        internal_counters.push_back(66661);
        internal_counters.push_back(66761);
        internal_counters.push_back(66861);
        internal_counters.push_back(66961);
        internal_counters.push_back(67061);
        internal_counters.push_back(67161);
        internal_counters.push_back(67261);
        internal_counters.push_back(67361);
        internal_counters.push_back(67461);
        internal_counters.push_back(67561);
        internal_counters.push_back(67661);
        internal_counters.push_back(67761);
        internal_counters.push_back(67861);
        internal_counters.push_back(67961);
        internal_counters.push_back(68061);
        internal_counters.push_back(68161);
        internal_counters.push_back(68261);
        internal_counters.push_back(68361);
        internal_counters.push_back(68461);
        internal_counters.push_back(68561);
        internal_counters.push_back(68661);
        internal_counters.push_back(68761);
        internal_counters.push_back(68861);
        internal_counters.push_back(68961);
        internal_counters.push_back(69061);
        internal_counters.push_back(69161);
        internal_counters.push_back(69261);
        internal_counters.push_back(69361);
        internal_counters.push_back(69461);
        internal_counters.push_back(69561);
        internal_counters.push_back(69661);
        internal_counters.push_back(69761);
        internal_counters.push_back(69861);
        internal_counters.push_back(69961);
        internal_counters.push_back(70061);
        internal_counters.push_back(70161);
        internal_counters.push_back(70261);
        internal_counters.push_back(70361);
        internal_counters.push_back(70461);
        internal_counters.push_back(70561);
        internal_counters.push_back(70661);
        internal_counters.push_back(70761);
        internal_counters.push_back(70861);
        internal_counters.push_back(70961);
        internal_counters.push_back(71061);
        internal_counters.push_back(71161);
        internal_counters.push_back(71261);
        internal_counters.push_back(71361);
        internal_counters.push_back(71461);
        internal_counters.push_back(71561);
        internal_counters.push_back(71661);
        internal_counters.push_back(71761);
        internal_counters.push_back(71861);
        internal_counters.push_back(71961);
        internal_counters.push_back(72061);
        internal_counters.push_back(72161);
        internal_counters.push_back(72261);
        internal_counters.push_back(72361);
        internal_counters.push_back(72461);
        internal_counters.push_back(72561);

        c.DefineDerivedCounter("L0CacheMissCount",
                               "MemoryCache",
                               "The number of read requests which result in a cache miss from the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64",
                               "a2f08766-ea1b-6eae-6eaf-faa04125d3e6");
    }
    { // Index:76
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104250);
        internal_counters.push_back(104762);
        internal_counters.push_back(105274);
        internal_counters.push_back(105786);
        internal_counters.push_back(106298);
        internal_counters.push_back(106810);
        internal_counters.push_back(107322);
        internal_counters.push_back(107834);
        internal_counters.push_back(108346);
        internal_counters.push_back(108858);
        internal_counters.push_back(109370);
        internal_counters.push_back(109882);
        internal_counters.push_back(110394);
        internal_counters.push_back(110906);
        internal_counters.push_back(111418);
        internal_counters.push_back(111930);
        internal_counters.push_back(112442);
        internal_counters.push_back(112954);
        internal_counters.push_back(113466);
        internal_counters.push_back(113978);
        internal_counters.push_back(114490);
        internal_counters.push_back(115002);
        internal_counters.push_back(115514);
        internal_counters.push_back(116026);
        internal_counters.push_back(116538);
        internal_counters.push_back(117050);
        internal_counters.push_back(117562);
        internal_counters.push_back(118074);
        internal_counters.push_back(118586);
        internal_counters.push_back(119098);
        internal_counters.push_back(119610);
        internal_counters.push_back(120122);
        internal_counters.push_back(104251);
        internal_counters.push_back(104763);
        internal_counters.push_back(105275);
        internal_counters.push_back(105787);
        internal_counters.push_back(106299);
        internal_counters.push_back(106811);
        internal_counters.push_back(107323);
        internal_counters.push_back(107835);
        internal_counters.push_back(108347);
        internal_counters.push_back(108859);
        internal_counters.push_back(109371);
        internal_counters.push_back(109883);
        internal_counters.push_back(110395);
        internal_counters.push_back(110907);
        internal_counters.push_back(111419);
        internal_counters.push_back(111931);
        internal_counters.push_back(112443);
        internal_counters.push_back(112955);
        internal_counters.push_back(113467);
        internal_counters.push_back(113979);
        internal_counters.push_back(114491);
        internal_counters.push_back(115003);
        internal_counters.push_back(115515);
        internal_counters.push_back(116027);
        internal_counters.push_back(116539);
        internal_counters.push_back(117051);
        internal_counters.push_back(117563);
        internal_counters.push_back(118075);
        internal_counters.push_back(118587);
        internal_counters.push_back(119099);
        internal_counters.push_back(119611);
        internal_counters.push_back(120123);
        internal_counters.push_back(104252);
        internal_counters.push_back(104764);
        internal_counters.push_back(105276);
        internal_counters.push_back(105788);
        internal_counters.push_back(106300);
        internal_counters.push_back(106812);
        internal_counters.push_back(107324);
        internal_counters.push_back(107836);
        internal_counters.push_back(108348);
        internal_counters.push_back(108860);
        internal_counters.push_back(109372);
        internal_counters.push_back(109884);
        internal_counters.push_back(110396);
        internal_counters.push_back(110908);
        internal_counters.push_back(111420);
        internal_counters.push_back(111932);
        internal_counters.push_back(112444);
        internal_counters.push_back(112956);
        internal_counters.push_back(113468);
        internal_counters.push_back(113980);
        internal_counters.push_back(114492);
        internal_counters.push_back(115004);
        internal_counters.push_back(115516);
        internal_counters.push_back(116028);
        internal_counters.push_back(116540);
        internal_counters.push_back(117052);
        internal_counters.push_back(117564);
        internal_counters.push_back(118076);
        internal_counters.push_back(118588);
        internal_counters.push_back(119100);
        internal_counters.push_back(119612);
        internal_counters.push_back(120124);

        c.DefineDerivedCounter("ScalarCacheHit",
                               "MemoryCache",
                               "The percentage of read requests made from executing shader code that hit the data in the Scalar cache. The Scalar cache contains data that does not vary in each thread across the wavefront. Each request is 64 bytes in size. Value range: 0% (no hit) to 100% (optimal).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum32,+,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum32,+,/,(100),*",
                               "3346d2cf-b7e4-45b6-c0a0-350ce18159c0");
    }
    { // Index:77
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104250);
        internal_counters.push_back(104762);
        internal_counters.push_back(105274);
        internal_counters.push_back(105786);
        internal_counters.push_back(106298);
        internal_counters.push_back(106810);
        internal_counters.push_back(107322);
        internal_counters.push_back(107834);
        internal_counters.push_back(108346);
        internal_counters.push_back(108858);
        internal_counters.push_back(109370);
        internal_counters.push_back(109882);
        internal_counters.push_back(110394);
        internal_counters.push_back(110906);
        internal_counters.push_back(111418);
        internal_counters.push_back(111930);
        internal_counters.push_back(112442);
        internal_counters.push_back(112954);
        internal_counters.push_back(113466);
        internal_counters.push_back(113978);
        internal_counters.push_back(114490);
        internal_counters.push_back(115002);
        internal_counters.push_back(115514);
        internal_counters.push_back(116026);
        internal_counters.push_back(116538);
        internal_counters.push_back(117050);
        internal_counters.push_back(117562);
        internal_counters.push_back(118074);
        internal_counters.push_back(118586);
        internal_counters.push_back(119098);
        internal_counters.push_back(119610);
        internal_counters.push_back(120122);
        internal_counters.push_back(104251);
        internal_counters.push_back(104763);
        internal_counters.push_back(105275);
        internal_counters.push_back(105787);
        internal_counters.push_back(106299);
        internal_counters.push_back(106811);
        internal_counters.push_back(107323);
        internal_counters.push_back(107835);
        internal_counters.push_back(108347);
        internal_counters.push_back(108859);
        internal_counters.push_back(109371);
        internal_counters.push_back(109883);
        internal_counters.push_back(110395);
        internal_counters.push_back(110907);
        internal_counters.push_back(111419);
        internal_counters.push_back(111931);
        internal_counters.push_back(112443);
        internal_counters.push_back(112955);
        internal_counters.push_back(113467);
        internal_counters.push_back(113979);
        internal_counters.push_back(114491);
        internal_counters.push_back(115003);
        internal_counters.push_back(115515);
        internal_counters.push_back(116027);
        internal_counters.push_back(116539);
        internal_counters.push_back(117051);
        internal_counters.push_back(117563);
        internal_counters.push_back(118075);
        internal_counters.push_back(118587);
        internal_counters.push_back(119099);
        internal_counters.push_back(119611);
        internal_counters.push_back(120123);
        internal_counters.push_back(104252);
        internal_counters.push_back(104764);
        internal_counters.push_back(105276);
        internal_counters.push_back(105788);
        internal_counters.push_back(106300);
        internal_counters.push_back(106812);
        internal_counters.push_back(107324);
        internal_counters.push_back(107836);
        internal_counters.push_back(108348);
        internal_counters.push_back(108860);
        internal_counters.push_back(109372);
        internal_counters.push_back(109884);
        internal_counters.push_back(110396);
        internal_counters.push_back(110908);
        internal_counters.push_back(111420);
        internal_counters.push_back(111932);
        internal_counters.push_back(112444);
        internal_counters.push_back(112956);
        internal_counters.push_back(113468);
        internal_counters.push_back(113980);
        internal_counters.push_back(114492);
        internal_counters.push_back(115004);
        internal_counters.push_back(115516);
        internal_counters.push_back(116028);
        internal_counters.push_back(116540);
        internal_counters.push_back(117052);
        internal_counters.push_back(117564);
        internal_counters.push_back(118076);
        internal_counters.push_back(118588);
        internal_counters.push_back(119100);
        internal_counters.push_back(119612);
        internal_counters.push_back(120124);

        c.DefineDerivedCounter("ScalarCacheRequestCount",
                               "MemoryCache",
                               "The number of read requests made from executing shader code to the Scalar cache. The Scalar cache contains data that does not vary in each thread across the wavefront. Each request is 64 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum32,+,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum32,+",
                               "b5ac4201-c4cd-caa5-6ca7-4bc9a3abee01");
    }
    { // Index:78
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104250);
        internal_counters.push_back(104762);
        internal_counters.push_back(105274);
        internal_counters.push_back(105786);
        internal_counters.push_back(106298);
        internal_counters.push_back(106810);
        internal_counters.push_back(107322);
        internal_counters.push_back(107834);
        internal_counters.push_back(108346);
        internal_counters.push_back(108858);
        internal_counters.push_back(109370);
        internal_counters.push_back(109882);
        internal_counters.push_back(110394);
        internal_counters.push_back(110906);
        internal_counters.push_back(111418);
        internal_counters.push_back(111930);
        internal_counters.push_back(112442);
        internal_counters.push_back(112954);
        internal_counters.push_back(113466);
        internal_counters.push_back(113978);
        internal_counters.push_back(114490);
        internal_counters.push_back(115002);
        internal_counters.push_back(115514);
        internal_counters.push_back(116026);
        internal_counters.push_back(116538);
        internal_counters.push_back(117050);
        internal_counters.push_back(117562);
        internal_counters.push_back(118074);
        internal_counters.push_back(118586);
        internal_counters.push_back(119098);
        internal_counters.push_back(119610);
        internal_counters.push_back(120122);

        c.DefineDerivedCounter("ScalarCacheHitCount",
                               "MemoryCache",
                               "The number of read requests made from executing shader code which result in a cache hit from the Scalar cache. The Scalar cache contains data that does not vary in each thread across the wavefront. Each request is 64 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32",
                               "beebef4f-8f6c-9363-eda9-bb385ffec363");
    }
    { // Index:79
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104251);
        internal_counters.push_back(104763);
        internal_counters.push_back(105275);
        internal_counters.push_back(105787);
        internal_counters.push_back(106299);
        internal_counters.push_back(106811);
        internal_counters.push_back(107323);
        internal_counters.push_back(107835);
        internal_counters.push_back(108347);
        internal_counters.push_back(108859);
        internal_counters.push_back(109371);
        internal_counters.push_back(109883);
        internal_counters.push_back(110395);
        internal_counters.push_back(110907);
        internal_counters.push_back(111419);
        internal_counters.push_back(111931);
        internal_counters.push_back(112443);
        internal_counters.push_back(112955);
        internal_counters.push_back(113467);
        internal_counters.push_back(113979);
        internal_counters.push_back(114491);
        internal_counters.push_back(115003);
        internal_counters.push_back(115515);
        internal_counters.push_back(116027);
        internal_counters.push_back(116539);
        internal_counters.push_back(117051);
        internal_counters.push_back(117563);
        internal_counters.push_back(118075);
        internal_counters.push_back(118587);
        internal_counters.push_back(119099);
        internal_counters.push_back(119611);
        internal_counters.push_back(120123);
        internal_counters.push_back(104252);
        internal_counters.push_back(104764);
        internal_counters.push_back(105276);
        internal_counters.push_back(105788);
        internal_counters.push_back(106300);
        internal_counters.push_back(106812);
        internal_counters.push_back(107324);
        internal_counters.push_back(107836);
        internal_counters.push_back(108348);
        internal_counters.push_back(108860);
        internal_counters.push_back(109372);
        internal_counters.push_back(109884);
        internal_counters.push_back(110396);
        internal_counters.push_back(110908);
        internal_counters.push_back(111420);
        internal_counters.push_back(111932);
        internal_counters.push_back(112444);
        internal_counters.push_back(112956);
        internal_counters.push_back(113468);
        internal_counters.push_back(113980);
        internal_counters.push_back(114492);
        internal_counters.push_back(115004);
        internal_counters.push_back(115516);
        internal_counters.push_back(116028);
        internal_counters.push_back(116540);
        internal_counters.push_back(117052);
        internal_counters.push_back(117564);
        internal_counters.push_back(118076);
        internal_counters.push_back(118588);
        internal_counters.push_back(119100);
        internal_counters.push_back(119612);
        internal_counters.push_back(120124);

        c.DefineDerivedCounter("ScalarCacheMissCount",
                               "MemoryCache",
                               "The number of read requests made from executing shader code which result in a cache miss from the Scalar cache. The Scalar cache contains data that does not vary in each thread across the wavefront. Each request is 64 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum32,+",
                               "07f5afb2-75b2-4fc3-1a6a-579958f77dd3");
    }
    { // Index:80
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104226);
        internal_counters.push_back(104738);
        internal_counters.push_back(105250);
        internal_counters.push_back(105762);
        internal_counters.push_back(106274);
        internal_counters.push_back(106786);
        internal_counters.push_back(107298);
        internal_counters.push_back(107810);
        internal_counters.push_back(108322);
        internal_counters.push_back(108834);
        internal_counters.push_back(109346);
        internal_counters.push_back(109858);
        internal_counters.push_back(110370);
        internal_counters.push_back(110882);
        internal_counters.push_back(111394);
        internal_counters.push_back(111906);
        internal_counters.push_back(112418);
        internal_counters.push_back(112930);
        internal_counters.push_back(113442);
        internal_counters.push_back(113954);
        internal_counters.push_back(114466);
        internal_counters.push_back(114978);
        internal_counters.push_back(115490);
        internal_counters.push_back(116002);
        internal_counters.push_back(116514);
        internal_counters.push_back(117026);
        internal_counters.push_back(117538);
        internal_counters.push_back(118050);
        internal_counters.push_back(118562);
        internal_counters.push_back(119074);
        internal_counters.push_back(119586);
        internal_counters.push_back(120098);
        internal_counters.push_back(104227);
        internal_counters.push_back(104739);
        internal_counters.push_back(105251);
        internal_counters.push_back(105763);
        internal_counters.push_back(106275);
        internal_counters.push_back(106787);
        internal_counters.push_back(107299);
        internal_counters.push_back(107811);
        internal_counters.push_back(108323);
        internal_counters.push_back(108835);
        internal_counters.push_back(109347);
        internal_counters.push_back(109859);
        internal_counters.push_back(110371);
        internal_counters.push_back(110883);
        internal_counters.push_back(111395);
        internal_counters.push_back(111907);
        internal_counters.push_back(112419);
        internal_counters.push_back(112931);
        internal_counters.push_back(113443);
        internal_counters.push_back(113955);
        internal_counters.push_back(114467);
        internal_counters.push_back(114979);
        internal_counters.push_back(115491);
        internal_counters.push_back(116003);
        internal_counters.push_back(116515);
        internal_counters.push_back(117027);
        internal_counters.push_back(117539);
        internal_counters.push_back(118051);
        internal_counters.push_back(118563);
        internal_counters.push_back(119075);
        internal_counters.push_back(119587);
        internal_counters.push_back(120099);
        internal_counters.push_back(104228);
        internal_counters.push_back(104740);
        internal_counters.push_back(105252);
        internal_counters.push_back(105764);
        internal_counters.push_back(106276);
        internal_counters.push_back(106788);
        internal_counters.push_back(107300);
        internal_counters.push_back(107812);
        internal_counters.push_back(108324);
        internal_counters.push_back(108836);
        internal_counters.push_back(109348);
        internal_counters.push_back(109860);
        internal_counters.push_back(110372);
        internal_counters.push_back(110884);
        internal_counters.push_back(111396);
        internal_counters.push_back(111908);
        internal_counters.push_back(112420);
        internal_counters.push_back(112932);
        internal_counters.push_back(113444);
        internal_counters.push_back(113956);
        internal_counters.push_back(114468);
        internal_counters.push_back(114980);
        internal_counters.push_back(115492);
        internal_counters.push_back(116004);
        internal_counters.push_back(116516);
        internal_counters.push_back(117028);
        internal_counters.push_back(117540);
        internal_counters.push_back(118052);
        internal_counters.push_back(118564);
        internal_counters.push_back(119076);
        internal_counters.push_back(119588);
        internal_counters.push_back(120100);

        c.DefineDerivedCounter("InstCacheHit",
                               "MemoryCache",
                               "The percentage of read requests made that hit the data in the Instruction cache. The Instruction cache supplies shader code to an executing shader. Each request is 64 bytes in size. Value range: 0% (no hit) to 100% (optimal).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum32,+,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum32,+,/,(100),*",
                               "adf51399-597b-f017-8ec1-21817f92e91d");
    }
    { // Index:81
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104226);
        internal_counters.push_back(104738);
        internal_counters.push_back(105250);
        internal_counters.push_back(105762);
        internal_counters.push_back(106274);
        internal_counters.push_back(106786);
        internal_counters.push_back(107298);
        internal_counters.push_back(107810);
        internal_counters.push_back(108322);
        internal_counters.push_back(108834);
        internal_counters.push_back(109346);
        internal_counters.push_back(109858);
        internal_counters.push_back(110370);
        internal_counters.push_back(110882);
        internal_counters.push_back(111394);
        internal_counters.push_back(111906);
        internal_counters.push_back(112418);
        internal_counters.push_back(112930);
        internal_counters.push_back(113442);
        internal_counters.push_back(113954);
        internal_counters.push_back(114466);
        internal_counters.push_back(114978);
        internal_counters.push_back(115490);
        internal_counters.push_back(116002);
        internal_counters.push_back(116514);
        internal_counters.push_back(117026);
        internal_counters.push_back(117538);
        internal_counters.push_back(118050);
        internal_counters.push_back(118562);
        internal_counters.push_back(119074);
        internal_counters.push_back(119586);
        internal_counters.push_back(120098);
        internal_counters.push_back(104227);
        internal_counters.push_back(104739);
        internal_counters.push_back(105251);
        internal_counters.push_back(105763);
        internal_counters.push_back(106275);
        internal_counters.push_back(106787);
        internal_counters.push_back(107299);
        internal_counters.push_back(107811);
        internal_counters.push_back(108323);
        internal_counters.push_back(108835);
        internal_counters.push_back(109347);
        internal_counters.push_back(109859);
        internal_counters.push_back(110371);
        internal_counters.push_back(110883);
        internal_counters.push_back(111395);
        internal_counters.push_back(111907);
        internal_counters.push_back(112419);
        internal_counters.push_back(112931);
        internal_counters.push_back(113443);
        internal_counters.push_back(113955);
        internal_counters.push_back(114467);
        internal_counters.push_back(114979);
        internal_counters.push_back(115491);
        internal_counters.push_back(116003);
        internal_counters.push_back(116515);
        internal_counters.push_back(117027);
        internal_counters.push_back(117539);
        internal_counters.push_back(118051);
        internal_counters.push_back(118563);
        internal_counters.push_back(119075);
        internal_counters.push_back(119587);
        internal_counters.push_back(120099);
        internal_counters.push_back(104228);
        internal_counters.push_back(104740);
        internal_counters.push_back(105252);
        internal_counters.push_back(105764);
        internal_counters.push_back(106276);
        internal_counters.push_back(106788);
        internal_counters.push_back(107300);
        internal_counters.push_back(107812);
        internal_counters.push_back(108324);
        internal_counters.push_back(108836);
        internal_counters.push_back(109348);
        internal_counters.push_back(109860);
        internal_counters.push_back(110372);
        internal_counters.push_back(110884);
        internal_counters.push_back(111396);
        internal_counters.push_back(111908);
        internal_counters.push_back(112420);
        internal_counters.push_back(112932);
        internal_counters.push_back(113444);
        internal_counters.push_back(113956);
        internal_counters.push_back(114468);
        internal_counters.push_back(114980);
        internal_counters.push_back(115492);
        internal_counters.push_back(116004);
        internal_counters.push_back(116516);
        internal_counters.push_back(117028);
        internal_counters.push_back(117540);
        internal_counters.push_back(118052);
        internal_counters.push_back(118564);
        internal_counters.push_back(119076);
        internal_counters.push_back(119588);
        internal_counters.push_back(120100);

        c.DefineDerivedCounter("InstCacheRequestCount",
                               "MemoryCache",
                               "The number of read requests made to the Instruction cache. The Instruction cache supplies shader code to an executing shader. Each request is 64 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum32,+,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum32,+",
                               "8c92ca8c-7dcc-88a0-3037-9704aa4f64ac");
    }
    { // Index:82
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104226);
        internal_counters.push_back(104738);
        internal_counters.push_back(105250);
        internal_counters.push_back(105762);
        internal_counters.push_back(106274);
        internal_counters.push_back(106786);
        internal_counters.push_back(107298);
        internal_counters.push_back(107810);
        internal_counters.push_back(108322);
        internal_counters.push_back(108834);
        internal_counters.push_back(109346);
        internal_counters.push_back(109858);
        internal_counters.push_back(110370);
        internal_counters.push_back(110882);
        internal_counters.push_back(111394);
        internal_counters.push_back(111906);
        internal_counters.push_back(112418);
        internal_counters.push_back(112930);
        internal_counters.push_back(113442);
        internal_counters.push_back(113954);
        internal_counters.push_back(114466);
        internal_counters.push_back(114978);
        internal_counters.push_back(115490);
        internal_counters.push_back(116002);
        internal_counters.push_back(116514);
        internal_counters.push_back(117026);
        internal_counters.push_back(117538);
        internal_counters.push_back(118050);
        internal_counters.push_back(118562);
        internal_counters.push_back(119074);
        internal_counters.push_back(119586);
        internal_counters.push_back(120098);

        c.DefineDerivedCounter("InstCacheHitCount",
                               "MemoryCache",
                               "The number of read requests which result in a cache hit from the Instruction cache. The Instruction cache supplies shader code to an executing shader. Each request is 64 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32",
                               "778be78f-cf83-9558-e967-868e997e6743");
    }
    { // Index:83
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104227);
        internal_counters.push_back(104739);
        internal_counters.push_back(105251);
        internal_counters.push_back(105763);
        internal_counters.push_back(106275);
        internal_counters.push_back(106787);
        internal_counters.push_back(107299);
        internal_counters.push_back(107811);
        internal_counters.push_back(108323);
        internal_counters.push_back(108835);
        internal_counters.push_back(109347);
        internal_counters.push_back(109859);
        internal_counters.push_back(110371);
        internal_counters.push_back(110883);
        internal_counters.push_back(111395);
        internal_counters.push_back(111907);
        internal_counters.push_back(112419);
        internal_counters.push_back(112931);
        internal_counters.push_back(113443);
        internal_counters.push_back(113955);
        internal_counters.push_back(114467);
        internal_counters.push_back(114979);
        internal_counters.push_back(115491);
        internal_counters.push_back(116003);
        internal_counters.push_back(116515);
        internal_counters.push_back(117027);
        internal_counters.push_back(117539);
        internal_counters.push_back(118051);
        internal_counters.push_back(118563);
        internal_counters.push_back(119075);
        internal_counters.push_back(119587);
        internal_counters.push_back(120099);
        internal_counters.push_back(104228);
        internal_counters.push_back(104740);
        internal_counters.push_back(105252);
        internal_counters.push_back(105764);
        internal_counters.push_back(106276);
        internal_counters.push_back(106788);
        internal_counters.push_back(107300);
        internal_counters.push_back(107812);
        internal_counters.push_back(108324);
        internal_counters.push_back(108836);
        internal_counters.push_back(109348);
        internal_counters.push_back(109860);
        internal_counters.push_back(110372);
        internal_counters.push_back(110884);
        internal_counters.push_back(111396);
        internal_counters.push_back(111908);
        internal_counters.push_back(112420);
        internal_counters.push_back(112932);
        internal_counters.push_back(113444);
        internal_counters.push_back(113956);
        internal_counters.push_back(114468);
        internal_counters.push_back(114980);
        internal_counters.push_back(115492);
        internal_counters.push_back(116004);
        internal_counters.push_back(116516);
        internal_counters.push_back(117028);
        internal_counters.push_back(117540);
        internal_counters.push_back(118052);
        internal_counters.push_back(118564);
        internal_counters.push_back(119076);
        internal_counters.push_back(119588);
        internal_counters.push_back(120100);

        c.DefineDerivedCounter("InstCacheMissCount",
                               "MemoryCache",
                               "The number of read requests which result in a cache miss from the Instruction cache. The Instruction cache supplies shader code to an executing shader. Each request is 64 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum32,+",
                               "351650dc-d349-dca8-2b78-b14a1479cf26");
    }
    { // Index:84
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(94188);
        internal_counters.push_back(94438);
        internal_counters.push_back(94688);
        internal_counters.push_back(94938);
        internal_counters.push_back(95188);
        internal_counters.push_back(95438);
        internal_counters.push_back(95688);
        internal_counters.push_back(95938);
        internal_counters.push_back(96188);
        internal_counters.push_back(96438);
        internal_counters.push_back(96688);
        internal_counters.push_back(96938);
        internal_counters.push_back(97188);
        internal_counters.push_back(97438);
        internal_counters.push_back(97688);
        internal_counters.push_back(97938);
        internal_counters.push_back(98188);
        internal_counters.push_back(98438);
        internal_counters.push_back(94227);
        internal_counters.push_back(94477);
        internal_counters.push_back(94727);
        internal_counters.push_back(94977);
        internal_counters.push_back(95227);
        internal_counters.push_back(95477);
        internal_counters.push_back(95727);
        internal_counters.push_back(95977);
        internal_counters.push_back(96227);
        internal_counters.push_back(96477);
        internal_counters.push_back(96727);
        internal_counters.push_back(96977);
        internal_counters.push_back(97227);
        internal_counters.push_back(97477);
        internal_counters.push_back(97727);
        internal_counters.push_back(97977);
        internal_counters.push_back(98227);
        internal_counters.push_back(98477);

        c.DefineDerivedCounter("L2CacheHit",
                               "MemoryCache",
                               "The percentage of read or write requests that hit the data in the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "(0),(1),18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum18,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18,ifnotzero",
                               "47694e4d-6ce6-f387-080d-b1f3d00b73ac");
    }
    { // Index:85
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(94227);
        internal_counters.push_back(94477);
        internal_counters.push_back(94727);
        internal_counters.push_back(94977);
        internal_counters.push_back(95227);
        internal_counters.push_back(95477);
        internal_counters.push_back(95727);
        internal_counters.push_back(95977);
        internal_counters.push_back(96227);
        internal_counters.push_back(96477);
        internal_counters.push_back(96727);
        internal_counters.push_back(96977);
        internal_counters.push_back(97227);
        internal_counters.push_back(97477);
        internal_counters.push_back(97727);
        internal_counters.push_back(97977);
        internal_counters.push_back(98227);
        internal_counters.push_back(98477);
        internal_counters.push_back(94188);
        internal_counters.push_back(94438);
        internal_counters.push_back(94688);
        internal_counters.push_back(94938);
        internal_counters.push_back(95188);
        internal_counters.push_back(95438);
        internal_counters.push_back(95688);
        internal_counters.push_back(95938);
        internal_counters.push_back(96188);
        internal_counters.push_back(96438);
        internal_counters.push_back(96688);
        internal_counters.push_back(96938);
        internal_counters.push_back(97188);
        internal_counters.push_back(97438);
        internal_counters.push_back(97688);
        internal_counters.push_back(97938);
        internal_counters.push_back(98188);
        internal_counters.push_back(98438);

        c.DefineDerivedCounter("L2CacheMiss",
                               "MemoryCache",
                               "The percentage of read or write requests that miss the data in the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size. Value range: 0% (optimal) to 100% (all miss).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum18,/,(100),*",
                               "8aee5458-a58e-11b6-5131-7f19ed070117");
    }
    { // Index:86
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(94188);
        internal_counters.push_back(94438);
        internal_counters.push_back(94688);
        internal_counters.push_back(94938);
        internal_counters.push_back(95188);
        internal_counters.push_back(95438);
        internal_counters.push_back(95688);
        internal_counters.push_back(95938);
        internal_counters.push_back(96188);
        internal_counters.push_back(96438);
        internal_counters.push_back(96688);
        internal_counters.push_back(96938);
        internal_counters.push_back(97188);
        internal_counters.push_back(97438);
        internal_counters.push_back(97688);
        internal_counters.push_back(97938);
        internal_counters.push_back(98188);
        internal_counters.push_back(98438);

        c.DefineDerivedCounter("L2CacheRequestCount",
                               "MemoryCache",
                               "The number of read or write requests made to the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18",
                               "21e9219c-e725-0d96-06b1-b21698b736b2");
    }
    { // Index:87
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(94188);
        internal_counters.push_back(94438);
        internal_counters.push_back(94688);
        internal_counters.push_back(94938);
        internal_counters.push_back(95188);
        internal_counters.push_back(95438);
        internal_counters.push_back(95688);
        internal_counters.push_back(95938);
        internal_counters.push_back(96188);
        internal_counters.push_back(96438);
        internal_counters.push_back(96688);
        internal_counters.push_back(96938);
        internal_counters.push_back(97188);
        internal_counters.push_back(97438);
        internal_counters.push_back(97688);
        internal_counters.push_back(97938);
        internal_counters.push_back(98188);
        internal_counters.push_back(98438);
        internal_counters.push_back(94227);
        internal_counters.push_back(94477);
        internal_counters.push_back(94727);
        internal_counters.push_back(94977);
        internal_counters.push_back(95227);
        internal_counters.push_back(95477);
        internal_counters.push_back(95727);
        internal_counters.push_back(95977);
        internal_counters.push_back(96227);
        internal_counters.push_back(96477);
        internal_counters.push_back(96727);
        internal_counters.push_back(96977);
        internal_counters.push_back(97227);
        internal_counters.push_back(97477);
        internal_counters.push_back(97727);
        internal_counters.push_back(97977);
        internal_counters.push_back(98227);
        internal_counters.push_back(98477);

        c.DefineDerivedCounter("L2CacheHitCount",
                               "MemoryCache",
                               "The number of read or write requests which result in a cache hit from the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum18,-",
                               "29ddcb92-d3dd-951b-1b23-efe52e4eeee4");
    }
    { // Index:88
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(94227);
        internal_counters.push_back(94477);
        internal_counters.push_back(94727);
        internal_counters.push_back(94977);
        internal_counters.push_back(95227);
        internal_counters.push_back(95477);
        internal_counters.push_back(95727);
        internal_counters.push_back(95977);
        internal_counters.push_back(96227);
        internal_counters.push_back(96477);
        internal_counters.push_back(96727);
        internal_counters.push_back(96977);
        internal_counters.push_back(97227);
        internal_counters.push_back(97477);
        internal_counters.push_back(97727);
        internal_counters.push_back(97977);
        internal_counters.push_back(98227);
        internal_counters.push_back(98477);

        c.DefineDerivedCounter("L2CacheMissCount",
                               "MemoryCache",
                               "The number of read or write requests which result in a cache miss from the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18",
                               "376eec7b-ab25-9012-06b5-63291a17fd47");
    }
    { // Index:89
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(66290);
        internal_counters.push_back(66390);
        internal_counters.push_back(66490);
        internal_counters.push_back(66590);
        internal_counters.push_back(66690);
        internal_counters.push_back(66790);
        internal_counters.push_back(66890);
        internal_counters.push_back(66990);
        internal_counters.push_back(67090);
        internal_counters.push_back(67190);
        internal_counters.push_back(67290);
        internal_counters.push_back(67390);
        internal_counters.push_back(67490);
        internal_counters.push_back(67590);
        internal_counters.push_back(67690);
        internal_counters.push_back(67790);
        internal_counters.push_back(67890);
        internal_counters.push_back(67990);
        internal_counters.push_back(68090);
        internal_counters.push_back(68190);
        internal_counters.push_back(68290);
        internal_counters.push_back(68390);
        internal_counters.push_back(68490);
        internal_counters.push_back(68590);
        internal_counters.push_back(68690);
        internal_counters.push_back(68790);
        internal_counters.push_back(68890);
        internal_counters.push_back(68990);
        internal_counters.push_back(69090);
        internal_counters.push_back(69190);
        internal_counters.push_back(69290);
        internal_counters.push_back(69390);
        internal_counters.push_back(69490);
        internal_counters.push_back(69590);
        internal_counters.push_back(69690);
        internal_counters.push_back(69790);
        internal_counters.push_back(69890);
        internal_counters.push_back(69990);
        internal_counters.push_back(70090);
        internal_counters.push_back(70190);
        internal_counters.push_back(70290);
        internal_counters.push_back(70390);
        internal_counters.push_back(70490);
        internal_counters.push_back(70590);
        internal_counters.push_back(70690);
        internal_counters.push_back(70790);
        internal_counters.push_back(70890);
        internal_counters.push_back(70990);
        internal_counters.push_back(71090);
        internal_counters.push_back(71190);
        internal_counters.push_back(71290);
        internal_counters.push_back(71390);
        internal_counters.push_back(71490);
        internal_counters.push_back(71590);
        internal_counters.push_back(71690);
        internal_counters.push_back(71790);
        internal_counters.push_back(71890);
        internal_counters.push_back(71990);
        internal_counters.push_back(72090);
        internal_counters.push_back(72190);
        internal_counters.push_back(72290);
        internal_counters.push_back(72390);
        internal_counters.push_back(72490);
        internal_counters.push_back(72590);

        c.DefineDerivedCounter("L0TagConflictReadStalledCycles",
                               "MemoryCache",
                               "The number of cycles read operations from the L0 cache are stalled due to tag conflicts.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64",
                               "e2412737-e2bf-c791-5f2f-64abd4ba47cf");
    }
    { // Index:90
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(66291);
        internal_counters.push_back(66391);
        internal_counters.push_back(66491);
        internal_counters.push_back(66591);
        internal_counters.push_back(66691);
        internal_counters.push_back(66791);
        internal_counters.push_back(66891);
        internal_counters.push_back(66991);
        internal_counters.push_back(67091);
        internal_counters.push_back(67191);
        internal_counters.push_back(67291);
        internal_counters.push_back(67391);
        internal_counters.push_back(67491);
        internal_counters.push_back(67591);
        internal_counters.push_back(67691);
        internal_counters.push_back(67791);
        internal_counters.push_back(67891);
        internal_counters.push_back(67991);
        internal_counters.push_back(68091);
        internal_counters.push_back(68191);
        internal_counters.push_back(68291);
        internal_counters.push_back(68391);
        internal_counters.push_back(68491);
        internal_counters.push_back(68591);
        internal_counters.push_back(68691);
        internal_counters.push_back(68791);
        internal_counters.push_back(68891);
        internal_counters.push_back(68991);
        internal_counters.push_back(69091);
        internal_counters.push_back(69191);
        internal_counters.push_back(69291);
        internal_counters.push_back(69391);
        internal_counters.push_back(69491);
        internal_counters.push_back(69591);
        internal_counters.push_back(69691);
        internal_counters.push_back(69791);
        internal_counters.push_back(69891);
        internal_counters.push_back(69991);
        internal_counters.push_back(70091);
        internal_counters.push_back(70191);
        internal_counters.push_back(70291);
        internal_counters.push_back(70391);
        internal_counters.push_back(70491);
        internal_counters.push_back(70591);
        internal_counters.push_back(70691);
        internal_counters.push_back(70791);
        internal_counters.push_back(70891);
        internal_counters.push_back(70991);
        internal_counters.push_back(71091);
        internal_counters.push_back(71191);
        internal_counters.push_back(71291);
        internal_counters.push_back(71391);
        internal_counters.push_back(71491);
        internal_counters.push_back(71591);
        internal_counters.push_back(71691);
        internal_counters.push_back(71791);
        internal_counters.push_back(71891);
        internal_counters.push_back(71991);
        internal_counters.push_back(72091);
        internal_counters.push_back(72191);
        internal_counters.push_back(72291);
        internal_counters.push_back(72391);
        internal_counters.push_back(72491);
        internal_counters.push_back(72591);

        c.DefineDerivedCounter("L0TagConflictWriteStalledCycles",
                               "MemoryCache",
                               "The number of cycles write operations to the L0 cache are stalled due to tag conflicts.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64",
                               "0c2571f3-f084-f351-99ba-0d9e23b47e8e");
    }
    { // Index:91
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(66292);
        internal_counters.push_back(66392);
        internal_counters.push_back(66492);
        internal_counters.push_back(66592);
        internal_counters.push_back(66692);
        internal_counters.push_back(66792);
        internal_counters.push_back(66892);
        internal_counters.push_back(66992);
        internal_counters.push_back(67092);
        internal_counters.push_back(67192);
        internal_counters.push_back(67292);
        internal_counters.push_back(67392);
        internal_counters.push_back(67492);
        internal_counters.push_back(67592);
        internal_counters.push_back(67692);
        internal_counters.push_back(67792);
        internal_counters.push_back(67892);
        internal_counters.push_back(67992);
        internal_counters.push_back(68092);
        internal_counters.push_back(68192);
        internal_counters.push_back(68292);
        internal_counters.push_back(68392);
        internal_counters.push_back(68492);
        internal_counters.push_back(68592);
        internal_counters.push_back(68692);
        internal_counters.push_back(68792);
        internal_counters.push_back(68892);
        internal_counters.push_back(68992);
        internal_counters.push_back(69092);
        internal_counters.push_back(69192);
        internal_counters.push_back(69292);
        internal_counters.push_back(69392);
        internal_counters.push_back(69492);
        internal_counters.push_back(69592);
        internal_counters.push_back(69692);
        internal_counters.push_back(69792);
        internal_counters.push_back(69892);
        internal_counters.push_back(69992);
        internal_counters.push_back(70092);
        internal_counters.push_back(70192);
        internal_counters.push_back(70292);
        internal_counters.push_back(70392);
        internal_counters.push_back(70492);
        internal_counters.push_back(70592);
        internal_counters.push_back(70692);
        internal_counters.push_back(70792);
        internal_counters.push_back(70892);
        internal_counters.push_back(70992);
        internal_counters.push_back(71092);
        internal_counters.push_back(71192);
        internal_counters.push_back(71292);
        internal_counters.push_back(71392);
        internal_counters.push_back(71492);
        internal_counters.push_back(71592);
        internal_counters.push_back(71692);
        internal_counters.push_back(71792);
        internal_counters.push_back(71892);
        internal_counters.push_back(71992);
        internal_counters.push_back(72092);
        internal_counters.push_back(72192);
        internal_counters.push_back(72292);
        internal_counters.push_back(72392);
        internal_counters.push_back(72492);
        internal_counters.push_back(72592);

        c.DefineDerivedCounter("L0TagConflictAtomicStalledCycles",
                               "MemoryCache",
                               "The number of cycles atomic operations on the L0 cache are stalled due to tag conflicts.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64",
                               "f13f8563-4151-1533-f42f-0f9c08a20210");
    }
    { // Index:92
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(94331);
        internal_counters.push_back(94581);
        internal_counters.push_back(94831);
        internal_counters.push_back(95081);
        internal_counters.push_back(95331);
        internal_counters.push_back(95581);
        internal_counters.push_back(95831);
        internal_counters.push_back(96081);
        internal_counters.push_back(96331);
        internal_counters.push_back(96581);
        internal_counters.push_back(96831);
        internal_counters.push_back(97081);
        internal_counters.push_back(97331);
        internal_counters.push_back(97581);
        internal_counters.push_back(97831);
        internal_counters.push_back(98081);
        internal_counters.push_back(98331);
        internal_counters.push_back(98581);
        internal_counters.push_back(94332);
        internal_counters.push_back(94582);
        internal_counters.push_back(94832);
        internal_counters.push_back(95082);
        internal_counters.push_back(95332);
        internal_counters.push_back(95582);
        internal_counters.push_back(95832);
        internal_counters.push_back(96082);
        internal_counters.push_back(96332);
        internal_counters.push_back(96582);
        internal_counters.push_back(96832);
        internal_counters.push_back(97082);
        internal_counters.push_back(97332);
        internal_counters.push_back(97582);
        internal_counters.push_back(97832);
        internal_counters.push_back(98082);
        internal_counters.push_back(98332);
        internal_counters.push_back(98582);
        internal_counters.push_back(94333);
        internal_counters.push_back(94583);
        internal_counters.push_back(94833);
        internal_counters.push_back(95083);
        internal_counters.push_back(95333);
        internal_counters.push_back(95583);
        internal_counters.push_back(95833);
        internal_counters.push_back(96083);
        internal_counters.push_back(96333);
        internal_counters.push_back(96583);
        internal_counters.push_back(96833);
        internal_counters.push_back(97083);
        internal_counters.push_back(97333);
        internal_counters.push_back(97583);
        internal_counters.push_back(97833);
        internal_counters.push_back(98083);
        internal_counters.push_back(98333);
        internal_counters.push_back(98583);
        internal_counters.push_back(94334);
        internal_counters.push_back(94584);
        internal_counters.push_back(94834);
        internal_counters.push_back(95084);
        internal_counters.push_back(95334);
        internal_counters.push_back(95584);
        internal_counters.push_back(95834);
        internal_counters.push_back(96084);
        internal_counters.push_back(96334);
        internal_counters.push_back(96584);
        internal_counters.push_back(96834);
        internal_counters.push_back(97084);
        internal_counters.push_back(97334);
        internal_counters.push_back(97584);
        internal_counters.push_back(97834);
        internal_counters.push_back(98084);
        internal_counters.push_back(98334);
        internal_counters.push_back(98584);

        c.DefineDerivedCounter("FetchSize",
                               "GlobalMemory",
                               "The total bytes fetched from the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeBytes,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18,(32),*,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum18,(64),*,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,sum18,(128),*,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,sum18,(256),*,sum4",
                               "664bb3ef-6eca-86b1-1e2d-30cb897b5fa9");
    }
    { // Index:93
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(94293);
        internal_counters.push_back(94543);
        internal_counters.push_back(94793);
        internal_counters.push_back(95043);
        internal_counters.push_back(95293);
        internal_counters.push_back(95543);
        internal_counters.push_back(95793);
        internal_counters.push_back(96043);
        internal_counters.push_back(96293);
        internal_counters.push_back(96543);
        internal_counters.push_back(96793);
        internal_counters.push_back(97043);
        internal_counters.push_back(97293);
        internal_counters.push_back(97543);
        internal_counters.push_back(97793);
        internal_counters.push_back(98043);
        internal_counters.push_back(98293);
        internal_counters.push_back(98543);
        internal_counters.push_back(94299);
        internal_counters.push_back(94549);
        internal_counters.push_back(94799);
        internal_counters.push_back(95049);
        internal_counters.push_back(95299);
        internal_counters.push_back(95549);
        internal_counters.push_back(95799);
        internal_counters.push_back(96049);
        internal_counters.push_back(96299);
        internal_counters.push_back(96549);
        internal_counters.push_back(96799);
        internal_counters.push_back(97049);
        internal_counters.push_back(97299);
        internal_counters.push_back(97549);
        internal_counters.push_back(97799);
        internal_counters.push_back(98049);
        internal_counters.push_back(98299);
        internal_counters.push_back(98549);

        c.DefineDerivedCounter("WriteSize",
                               "GlobalMemory",
                               "The total bytes written to the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeBytes,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum18,-,(32),*,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum18,(64),*,+",
                               "f96f2c16-b1b4-4ec4-229c-fc82e6f80a82");
    }
    { // Index:94
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(32531);
        internal_counters.push_back(32786);
        internal_counters.push_back(33041);
        internal_counters.push_back(33296);
        internal_counters.push_back(33551);
        internal_counters.push_back(33806);
        internal_counters.push_back(34061);
        internal_counters.push_back(34316);
        internal_counters.push_back(34571);
        internal_counters.push_back(34826);
        internal_counters.push_back(35081);
        internal_counters.push_back(35336);
        internal_counters.push_back(35591);
        internal_counters.push_back(35846);
        internal_counters.push_back(36101);
        internal_counters.push_back(36356);
        internal_counters.push_back(36611);
        internal_counters.push_back(36866);
        internal_counters.push_back(37121);
        internal_counters.push_back(37376);
        internal_counters.push_back(37631);
        internal_counters.push_back(37886);
        internal_counters.push_back(38141);
        internal_counters.push_back(38396);
        internal_counters.push_back(38651);
        internal_counters.push_back(38906);
        internal_counters.push_back(39161);
        internal_counters.push_back(39416);
        internal_counters.push_back(39671);
        internal_counters.push_back(39926);
        internal_counters.push_back(40181);
        internal_counters.push_back(40436);
        internal_counters.push_back(40691);
        internal_counters.push_back(40946);
        internal_counters.push_back(41201);
        internal_counters.push_back(41456);
        internal_counters.push_back(41711);
        internal_counters.push_back(41966);
        internal_counters.push_back(42221);
        internal_counters.push_back(42476);
        internal_counters.push_back(42731);
        internal_counters.push_back(42986);
        internal_counters.push_back(43241);
        internal_counters.push_back(43496);
        internal_counters.push_back(43751);
        internal_counters.push_back(44006);
        internal_counters.push_back(44261);
        internal_counters.push_back(44516);
        internal_counters.push_back(44771);
        internal_counters.push_back(45026);
        internal_counters.push_back(45281);
        internal_counters.push_back(45536);
        internal_counters.push_back(45791);
        internal_counters.push_back(46046);
        internal_counters.push_back(46301);
        internal_counters.push_back(46556);
        internal_counters.push_back(46811);
        internal_counters.push_back(47066);
        internal_counters.push_back(47321);
        internal_counters.push_back(47576);
        internal_counters.push_back(47831);
        internal_counters.push_back(48086);
        internal_counters.push_back(48341);
        internal_counters.push_back(48596);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("MemUnitBusy",
                               "GlobalMemory",
                               "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*",
                               "a1efa380-4a72-e066-e06a-2ab71a488521");
    }
    { // Index:95
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(32531);
        internal_counters.push_back(32786);
        internal_counters.push_back(33041);
        internal_counters.push_back(33296);
        internal_counters.push_back(33551);
        internal_counters.push_back(33806);
        internal_counters.push_back(34061);
        internal_counters.push_back(34316);
        internal_counters.push_back(34571);
        internal_counters.push_back(34826);
        internal_counters.push_back(35081);
        internal_counters.push_back(35336);
        internal_counters.push_back(35591);
        internal_counters.push_back(35846);
        internal_counters.push_back(36101);
        internal_counters.push_back(36356);
        internal_counters.push_back(36611);
        internal_counters.push_back(36866);
        internal_counters.push_back(37121);
        internal_counters.push_back(37376);
        internal_counters.push_back(37631);
        internal_counters.push_back(37886);
        internal_counters.push_back(38141);
        internal_counters.push_back(38396);
        internal_counters.push_back(38651);
        internal_counters.push_back(38906);
        internal_counters.push_back(39161);
        internal_counters.push_back(39416);
        internal_counters.push_back(39671);
        internal_counters.push_back(39926);
        internal_counters.push_back(40181);
        internal_counters.push_back(40436);
        internal_counters.push_back(40691);
        internal_counters.push_back(40946);
        internal_counters.push_back(41201);
        internal_counters.push_back(41456);
        internal_counters.push_back(41711);
        internal_counters.push_back(41966);
        internal_counters.push_back(42221);
        internal_counters.push_back(42476);
        internal_counters.push_back(42731);
        internal_counters.push_back(42986);
        internal_counters.push_back(43241);
        internal_counters.push_back(43496);
        internal_counters.push_back(43751);
        internal_counters.push_back(44006);
        internal_counters.push_back(44261);
        internal_counters.push_back(44516);
        internal_counters.push_back(44771);
        internal_counters.push_back(45026);
        internal_counters.push_back(45281);
        internal_counters.push_back(45536);
        internal_counters.push_back(45791);
        internal_counters.push_back(46046);
        internal_counters.push_back(46301);
        internal_counters.push_back(46556);
        internal_counters.push_back(46811);
        internal_counters.push_back(47066);
        internal_counters.push_back(47321);
        internal_counters.push_back(47576);
        internal_counters.push_back(47831);
        internal_counters.push_back(48086);
        internal_counters.push_back(48341);
        internal_counters.push_back(48596);

        c.DefineDerivedCounter("MemUnitBusyCycles",
                               "GlobalMemory",
                               "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalledCycles). This is measured with all extra fetches and writes and any cache or memory effects taken into account.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64",
                               "168f077c-4797-b2f5-717f-105c725266c8");
    }
    { // Index:96
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(66283);
        internal_counters.push_back(66383);
        internal_counters.push_back(66483);
        internal_counters.push_back(66583);
        internal_counters.push_back(66683);
        internal_counters.push_back(66783);
        internal_counters.push_back(66883);
        internal_counters.push_back(66983);
        internal_counters.push_back(67083);
        internal_counters.push_back(67183);
        internal_counters.push_back(67283);
        internal_counters.push_back(67383);
        internal_counters.push_back(67483);
        internal_counters.push_back(67583);
        internal_counters.push_back(67683);
        internal_counters.push_back(67783);
        internal_counters.push_back(67883);
        internal_counters.push_back(67983);
        internal_counters.push_back(68083);
        internal_counters.push_back(68183);
        internal_counters.push_back(68283);
        internal_counters.push_back(68383);
        internal_counters.push_back(68483);
        internal_counters.push_back(68583);
        internal_counters.push_back(68683);
        internal_counters.push_back(68783);
        internal_counters.push_back(68883);
        internal_counters.push_back(68983);
        internal_counters.push_back(69083);
        internal_counters.push_back(69183);
        internal_counters.push_back(69283);
        internal_counters.push_back(69383);
        internal_counters.push_back(69483);
        internal_counters.push_back(69583);
        internal_counters.push_back(69683);
        internal_counters.push_back(69783);
        internal_counters.push_back(69883);
        internal_counters.push_back(69983);
        internal_counters.push_back(70083);
        internal_counters.push_back(70183);
        internal_counters.push_back(70283);
        internal_counters.push_back(70383);
        internal_counters.push_back(70483);
        internal_counters.push_back(70583);
        internal_counters.push_back(70683);
        internal_counters.push_back(70783);
        internal_counters.push_back(70883);
        internal_counters.push_back(70983);
        internal_counters.push_back(71083);
        internal_counters.push_back(71183);
        internal_counters.push_back(71283);
        internal_counters.push_back(71383);
        internal_counters.push_back(71483);
        internal_counters.push_back(71583);
        internal_counters.push_back(71683);
        internal_counters.push_back(71783);
        internal_counters.push_back(71883);
        internal_counters.push_back(71983);
        internal_counters.push_back(72083);
        internal_counters.push_back(72183);
        internal_counters.push_back(72283);
        internal_counters.push_back(72383);
        internal_counters.push_back(72483);
        internal_counters.push_back(72583);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("MemUnitStalled",
                               "GlobalMemory",
                               "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*",
                               "465ba54f-d250-1453-790a-731b10d230b1");
    }
    { // Index:97
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(66283);
        internal_counters.push_back(66383);
        internal_counters.push_back(66483);
        internal_counters.push_back(66583);
        internal_counters.push_back(66683);
        internal_counters.push_back(66783);
        internal_counters.push_back(66883);
        internal_counters.push_back(66983);
        internal_counters.push_back(67083);
        internal_counters.push_back(67183);
        internal_counters.push_back(67283);
        internal_counters.push_back(67383);
        internal_counters.push_back(67483);
        internal_counters.push_back(67583);
        internal_counters.push_back(67683);
        internal_counters.push_back(67783);
        internal_counters.push_back(67883);
        internal_counters.push_back(67983);
        internal_counters.push_back(68083);
        internal_counters.push_back(68183);
        internal_counters.push_back(68283);
        internal_counters.push_back(68383);
        internal_counters.push_back(68483);
        internal_counters.push_back(68583);
        internal_counters.push_back(68683);
        internal_counters.push_back(68783);
        internal_counters.push_back(68883);
        internal_counters.push_back(68983);
        internal_counters.push_back(69083);
        internal_counters.push_back(69183);
        internal_counters.push_back(69283);
        internal_counters.push_back(69383);
        internal_counters.push_back(69483);
        internal_counters.push_back(69583);
        internal_counters.push_back(69683);
        internal_counters.push_back(69783);
        internal_counters.push_back(69883);
        internal_counters.push_back(69983);
        internal_counters.push_back(70083);
        internal_counters.push_back(70183);
        internal_counters.push_back(70283);
        internal_counters.push_back(70383);
        internal_counters.push_back(70483);
        internal_counters.push_back(70583);
        internal_counters.push_back(70683);
        internal_counters.push_back(70783);
        internal_counters.push_back(70883);
        internal_counters.push_back(70983);
        internal_counters.push_back(71083);
        internal_counters.push_back(71183);
        internal_counters.push_back(71283);
        internal_counters.push_back(71383);
        internal_counters.push_back(71483);
        internal_counters.push_back(71583);
        internal_counters.push_back(71683);
        internal_counters.push_back(71783);
        internal_counters.push_back(71883);
        internal_counters.push_back(71983);
        internal_counters.push_back(72083);
        internal_counters.push_back(72183);
        internal_counters.push_back(72283);
        internal_counters.push_back(72383);
        internal_counters.push_back(72483);
        internal_counters.push_back(72583);

        c.DefineDerivedCounter("MemUnitStalledCycles",
                               "GlobalMemory",
                               "Number of GPU cycles the memory unit is stalled.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64",
                               "2745659a-0e40-bace-3b9b-86a54f8e4623");
    }
    { // Index:98
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(94307);
        internal_counters.push_back(94557);
        internal_counters.push_back(94807);
        internal_counters.push_back(95057);
        internal_counters.push_back(95307);
        internal_counters.push_back(95557);
        internal_counters.push_back(95807);
        internal_counters.push_back(96057);
        internal_counters.push_back(96307);
        internal_counters.push_back(96557);
        internal_counters.push_back(96807);
        internal_counters.push_back(97057);
        internal_counters.push_back(97307);
        internal_counters.push_back(97557);
        internal_counters.push_back(97807);
        internal_counters.push_back(98057);
        internal_counters.push_back(98307);
        internal_counters.push_back(98557);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("WriteUnitStalled",
                               "GlobalMemory",
                               "The percentage of GPUTime the Write unit is stalled. Value range: 0% to 100% (bad).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,max18,18,/,(100),*",
                               "594ad3ce-d1ec-10fc-7d59-25738e397d72");
    }
    { // Index:99
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(94307);
        internal_counters.push_back(94557);
        internal_counters.push_back(94807);
        internal_counters.push_back(95057);
        internal_counters.push_back(95307);
        internal_counters.push_back(95557);
        internal_counters.push_back(95807);
        internal_counters.push_back(96057);
        internal_counters.push_back(96307);
        internal_counters.push_back(96557);
        internal_counters.push_back(96807);
        internal_counters.push_back(97057);
        internal_counters.push_back(97307);
        internal_counters.push_back(97557);
        internal_counters.push_back(97807);
        internal_counters.push_back(98057);
        internal_counters.push_back(98307);
        internal_counters.push_back(98557);

        c.DefineDerivedCounter("WriteUnitStalledCycles",
                               "GlobalMemory",
                               "Number of GPU cycles the Write unit is stalled.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,max18",
                               "ede3305e-abd4-d6bf-6b00-ffc57a29fce3");
    }
    { // Index:100
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(188667);
        internal_counters.push_back(188668);

        c.DefineDerivedCounter("LocalVidMemBytes",
                               "GlobalMemory",
                               "Number of bytes read from or written to the Infinity Cache (if available) or local video memory",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeBytes,
                               true,
                               false,
                               internal_counters,
                               "0,1,+,(32),*",
                               "48207266-a1ef-290a-3c77-effd1260fa2c");
    }
    { // Index:101
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(188698);
        internal_counters.push_back(188731);
        internal_counters.push_back(188764);
        internal_counters.push_back(188797);
        internal_counters.push_back(188830);
        internal_counters.push_back(188863);
        internal_counters.push_back(188896);
        internal_counters.push_back(188929);
        internal_counters.push_back(188962);
        internal_counters.push_back(188995);
        internal_counters.push_back(189028);
        internal_counters.push_back(189061);
        internal_counters.push_back(189094);
        internal_counters.push_back(189127);
        internal_counters.push_back(189160);
        internal_counters.push_back(189193);
        internal_counters.push_back(189226);
        internal_counters.push_back(189259);
        internal_counters.push_back(188699);
        internal_counters.push_back(188732);
        internal_counters.push_back(188765);
        internal_counters.push_back(188798);
        internal_counters.push_back(188831);
        internal_counters.push_back(188864);
        internal_counters.push_back(188897);
        internal_counters.push_back(188930);
        internal_counters.push_back(188963);
        internal_counters.push_back(188996);
        internal_counters.push_back(189029);
        internal_counters.push_back(189062);
        internal_counters.push_back(189095);
        internal_counters.push_back(189128);
        internal_counters.push_back(189161);
        internal_counters.push_back(189194);
        internal_counters.push_back(189227);
        internal_counters.push_back(189260);

        c.DefineDerivedCounter("PcieBytes",
                               "GlobalMemory",
                               "Number of bytes sent and received over the PCIe bus",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeBytes,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum18,+,(32),*",
                               "4bbe92de-f79e-ed39-bfde-9e08390cdb21");
    }
    { // Index:102
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(48954);
        internal_counters.push_back(49226);
        internal_counters.push_back(49498);
        internal_counters.push_back(49770);
        internal_counters.push_back(50042);
        internal_counters.push_back(50314);
        internal_counters.push_back(50586);
        internal_counters.push_back(50858);
        internal_counters.push_back(51130);
        internal_counters.push_back(51402);
        internal_counters.push_back(51674);
        internal_counters.push_back(51946);
        internal_counters.push_back(52218);
        internal_counters.push_back(52490);
        internal_counters.push_back(52762);
        internal_counters.push_back(53034);
        internal_counters.push_back(53306);
        internal_counters.push_back(53578);
        internal_counters.push_back(53850);
        internal_counters.push_back(54122);
        internal_counters.push_back(54394);
        internal_counters.push_back(54666);
        internal_counters.push_back(54938);
        internal_counters.push_back(55210);
        internal_counters.push_back(55482);
        internal_counters.push_back(55754);
        internal_counters.push_back(56026);
        internal_counters.push_back(56298);
        internal_counters.push_back(56570);
        internal_counters.push_back(56842);
        internal_counters.push_back(57114);
        internal_counters.push_back(57386);
        internal_counters.push_back(57658);
        internal_counters.push_back(57930);
        internal_counters.push_back(58202);
        internal_counters.push_back(58474);
        internal_counters.push_back(58746);
        internal_counters.push_back(59018);
        internal_counters.push_back(59290);
        internal_counters.push_back(59562);
        internal_counters.push_back(59834);
        internal_counters.push_back(60106);
        internal_counters.push_back(60378);
        internal_counters.push_back(60650);
        internal_counters.push_back(60922);
        internal_counters.push_back(61194);
        internal_counters.push_back(61466);
        internal_counters.push_back(61738);
        internal_counters.push_back(62010);
        internal_counters.push_back(62282);
        internal_counters.push_back(62554);
        internal_counters.push_back(62826);
        internal_counters.push_back(63098);
        internal_counters.push_back(63370);
        internal_counters.push_back(63642);
        internal_counters.push_back(63914);
        internal_counters.push_back(64186);
        internal_counters.push_back(64458);
        internal_counters.push_back(64730);
        internal_counters.push_back(65002);
        internal_counters.push_back(65274);
        internal_counters.push_back(65546);
        internal_counters.push_back(65818);
        internal_counters.push_back(66090);

        c.DefineDerivedCounter("RayTriTests",
                               "RayTracing",
                               "The number of ray triangle intersection tests.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64",
                               "20c646f5-fa99-51c2-b583-0a3d77d675a8");
    }
    { // Index:103
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(48952);
        internal_counters.push_back(49224);
        internal_counters.push_back(49496);
        internal_counters.push_back(49768);
        internal_counters.push_back(50040);
        internal_counters.push_back(50312);
        internal_counters.push_back(50584);
        internal_counters.push_back(50856);
        internal_counters.push_back(51128);
        internal_counters.push_back(51400);
        internal_counters.push_back(51672);
        internal_counters.push_back(51944);
        internal_counters.push_back(52216);
        internal_counters.push_back(52488);
        internal_counters.push_back(52760);
        internal_counters.push_back(53032);
        internal_counters.push_back(53304);
        internal_counters.push_back(53576);
        internal_counters.push_back(53848);
        internal_counters.push_back(54120);
        internal_counters.push_back(54392);
        internal_counters.push_back(54664);
        internal_counters.push_back(54936);
        internal_counters.push_back(55208);
        internal_counters.push_back(55480);
        internal_counters.push_back(55752);
        internal_counters.push_back(56024);
        internal_counters.push_back(56296);
        internal_counters.push_back(56568);
        internal_counters.push_back(56840);
        internal_counters.push_back(57112);
        internal_counters.push_back(57384);
        internal_counters.push_back(57656);
        internal_counters.push_back(57928);
        internal_counters.push_back(58200);
        internal_counters.push_back(58472);
        internal_counters.push_back(58744);
        internal_counters.push_back(59016);
        internal_counters.push_back(59288);
        internal_counters.push_back(59560);
        internal_counters.push_back(59832);
        internal_counters.push_back(60104);
        internal_counters.push_back(60376);
        internal_counters.push_back(60648);
        internal_counters.push_back(60920);
        internal_counters.push_back(61192);
        internal_counters.push_back(61464);
        internal_counters.push_back(61736);
        internal_counters.push_back(62008);
        internal_counters.push_back(62280);
        internal_counters.push_back(62552);
        internal_counters.push_back(62824);
        internal_counters.push_back(63096);
        internal_counters.push_back(63368);
        internal_counters.push_back(63640);
        internal_counters.push_back(63912);
        internal_counters.push_back(64184);
        internal_counters.push_back(64456);
        internal_counters.push_back(64728);
        internal_counters.push_back(65000);
        internal_counters.push_back(65272);
        internal_counters.push_back(65544);
        internal_counters.push_back(65816);
        internal_counters.push_back(66088);
        internal_counters.push_back(48953);
        internal_counters.push_back(49225);
        internal_counters.push_back(49497);
        internal_counters.push_back(49769);
        internal_counters.push_back(50041);
        internal_counters.push_back(50313);
        internal_counters.push_back(50585);
        internal_counters.push_back(50857);
        internal_counters.push_back(51129);
        internal_counters.push_back(51401);
        internal_counters.push_back(51673);
        internal_counters.push_back(51945);
        internal_counters.push_back(52217);
        internal_counters.push_back(52489);
        internal_counters.push_back(52761);
        internal_counters.push_back(53033);
        internal_counters.push_back(53305);
        internal_counters.push_back(53577);
        internal_counters.push_back(53849);
        internal_counters.push_back(54121);
        internal_counters.push_back(54393);
        internal_counters.push_back(54665);
        internal_counters.push_back(54937);
        internal_counters.push_back(55209);
        internal_counters.push_back(55481);
        internal_counters.push_back(55753);
        internal_counters.push_back(56025);
        internal_counters.push_back(56297);
        internal_counters.push_back(56569);
        internal_counters.push_back(56841);
        internal_counters.push_back(57113);
        internal_counters.push_back(57385);
        internal_counters.push_back(57657);
        internal_counters.push_back(57929);
        internal_counters.push_back(58201);
        internal_counters.push_back(58473);
        internal_counters.push_back(58745);
        internal_counters.push_back(59017);
        internal_counters.push_back(59289);
        internal_counters.push_back(59561);
        internal_counters.push_back(59833);
        internal_counters.push_back(60105);
        internal_counters.push_back(60377);
        internal_counters.push_back(60649);
        internal_counters.push_back(60921);
        internal_counters.push_back(61193);
        internal_counters.push_back(61465);
        internal_counters.push_back(61737);
        internal_counters.push_back(62009);
        internal_counters.push_back(62281);
        internal_counters.push_back(62553);
        internal_counters.push_back(62825);
        internal_counters.push_back(63097);
        internal_counters.push_back(63369);
        internal_counters.push_back(63641);
        internal_counters.push_back(63913);
        internal_counters.push_back(64185);
        internal_counters.push_back(64457);
        internal_counters.push_back(64729);
        internal_counters.push_back(65001);
        internal_counters.push_back(65273);
        internal_counters.push_back(65545);
        internal_counters.push_back(65817);
        internal_counters.push_back(66089);

        c.DefineDerivedCounter("RayBoxTests",
                               "RayTracing",
                               "The number of ray box intersection tests.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,sum2",
                               "7769ceee-824d-b84a-8779-bb3f8e449582");
    }
    { // Index:104
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(48954);
        internal_counters.push_back(49226);
        internal_counters.push_back(49498);
        internal_counters.push_back(49770);
        internal_counters.push_back(50042);
        internal_counters.push_back(50314);
        internal_counters.push_back(50586);
        internal_counters.push_back(50858);
        internal_counters.push_back(51130);
        internal_counters.push_back(51402);
        internal_counters.push_back(51674);
        internal_counters.push_back(51946);
        internal_counters.push_back(52218);
        internal_counters.push_back(52490);
        internal_counters.push_back(52762);
        internal_counters.push_back(53034);
        internal_counters.push_back(53306);
        internal_counters.push_back(53578);
        internal_counters.push_back(53850);
        internal_counters.push_back(54122);
        internal_counters.push_back(54394);
        internal_counters.push_back(54666);
        internal_counters.push_back(54938);
        internal_counters.push_back(55210);
        internal_counters.push_back(55482);
        internal_counters.push_back(55754);
        internal_counters.push_back(56026);
        internal_counters.push_back(56298);
        internal_counters.push_back(56570);
        internal_counters.push_back(56842);
        internal_counters.push_back(57114);
        internal_counters.push_back(57386);
        internal_counters.push_back(57658);
        internal_counters.push_back(57930);
        internal_counters.push_back(58202);
        internal_counters.push_back(58474);
        internal_counters.push_back(58746);
        internal_counters.push_back(59018);
        internal_counters.push_back(59290);
        internal_counters.push_back(59562);
        internal_counters.push_back(59834);
        internal_counters.push_back(60106);
        internal_counters.push_back(60378);
        internal_counters.push_back(60650);
        internal_counters.push_back(60922);
        internal_counters.push_back(61194);
        internal_counters.push_back(61466);
        internal_counters.push_back(61738);
        internal_counters.push_back(62010);
        internal_counters.push_back(62282);
        internal_counters.push_back(62554);
        internal_counters.push_back(62826);
        internal_counters.push_back(63098);
        internal_counters.push_back(63370);
        internal_counters.push_back(63642);
        internal_counters.push_back(63914);
        internal_counters.push_back(64186);
        internal_counters.push_back(64458);
        internal_counters.push_back(64730);
        internal_counters.push_back(65002);
        internal_counters.push_back(65274);
        internal_counters.push_back(65546);
        internal_counters.push_back(65818);
        internal_counters.push_back(66090);
        internal_counters.push_back(48952);
        internal_counters.push_back(49224);
        internal_counters.push_back(49496);
        internal_counters.push_back(49768);
        internal_counters.push_back(50040);
        internal_counters.push_back(50312);
        internal_counters.push_back(50584);
        internal_counters.push_back(50856);
        internal_counters.push_back(51128);
        internal_counters.push_back(51400);
        internal_counters.push_back(51672);
        internal_counters.push_back(51944);
        internal_counters.push_back(52216);
        internal_counters.push_back(52488);
        internal_counters.push_back(52760);
        internal_counters.push_back(53032);
        internal_counters.push_back(53304);
        internal_counters.push_back(53576);
        internal_counters.push_back(53848);
        internal_counters.push_back(54120);
        internal_counters.push_back(54392);
        internal_counters.push_back(54664);
        internal_counters.push_back(54936);
        internal_counters.push_back(55208);
        internal_counters.push_back(55480);
        internal_counters.push_back(55752);
        internal_counters.push_back(56024);
        internal_counters.push_back(56296);
        internal_counters.push_back(56568);
        internal_counters.push_back(56840);
        internal_counters.push_back(57112);
        internal_counters.push_back(57384);
        internal_counters.push_back(57656);
        internal_counters.push_back(57928);
        internal_counters.push_back(58200);
        internal_counters.push_back(58472);
        internal_counters.push_back(58744);
        internal_counters.push_back(59016);
        internal_counters.push_back(59288);
        internal_counters.push_back(59560);
        internal_counters.push_back(59832);
        internal_counters.push_back(60104);
        internal_counters.push_back(60376);
        internal_counters.push_back(60648);
        internal_counters.push_back(60920);
        internal_counters.push_back(61192);
        internal_counters.push_back(61464);
        internal_counters.push_back(61736);
        internal_counters.push_back(62008);
        internal_counters.push_back(62280);
        internal_counters.push_back(62552);
        internal_counters.push_back(62824);
        internal_counters.push_back(63096);
        internal_counters.push_back(63368);
        internal_counters.push_back(63640);
        internal_counters.push_back(63912);
        internal_counters.push_back(64184);
        internal_counters.push_back(64456);
        internal_counters.push_back(64728);
        internal_counters.push_back(65000);
        internal_counters.push_back(65272);
        internal_counters.push_back(65544);
        internal_counters.push_back(65816);
        internal_counters.push_back(66088);
        internal_counters.push_back(48953);
        internal_counters.push_back(49225);
        internal_counters.push_back(49497);
        internal_counters.push_back(49769);
        internal_counters.push_back(50041);
        internal_counters.push_back(50313);
        internal_counters.push_back(50585);
        internal_counters.push_back(50857);
        internal_counters.push_back(51129);
        internal_counters.push_back(51401);
        internal_counters.push_back(51673);
        internal_counters.push_back(51945);
        internal_counters.push_back(52217);
        internal_counters.push_back(52489);
        internal_counters.push_back(52761);
        internal_counters.push_back(53033);
        internal_counters.push_back(53305);
        internal_counters.push_back(53577);
        internal_counters.push_back(53849);
        internal_counters.push_back(54121);
        internal_counters.push_back(54393);
        internal_counters.push_back(54665);
        internal_counters.push_back(54937);
        internal_counters.push_back(55209);
        internal_counters.push_back(55481);
        internal_counters.push_back(55753);
        internal_counters.push_back(56025);
        internal_counters.push_back(56297);
        internal_counters.push_back(56569);
        internal_counters.push_back(56841);
        internal_counters.push_back(57113);
        internal_counters.push_back(57385);
        internal_counters.push_back(57657);
        internal_counters.push_back(57929);
        internal_counters.push_back(58201);
        internal_counters.push_back(58473);
        internal_counters.push_back(58745);
        internal_counters.push_back(59017);
        internal_counters.push_back(59289);
        internal_counters.push_back(59561);
        internal_counters.push_back(59833);
        internal_counters.push_back(60105);
        internal_counters.push_back(60377);
        internal_counters.push_back(60649);
        internal_counters.push_back(60921);
        internal_counters.push_back(61193);
        internal_counters.push_back(61465);
        internal_counters.push_back(61737);
        internal_counters.push_back(62009);
        internal_counters.push_back(62281);
        internal_counters.push_back(62553);
        internal_counters.push_back(62825);
        internal_counters.push_back(63097);
        internal_counters.push_back(63369);
        internal_counters.push_back(63641);
        internal_counters.push_back(63913);
        internal_counters.push_back(64185);
        internal_counters.push_back(64457);
        internal_counters.push_back(64729);
        internal_counters.push_back(65001);
        internal_counters.push_back(65273);
        internal_counters.push_back(65545);
        internal_counters.push_back(65817);
        internal_counters.push_back(66089);

        c.DefineDerivedCounter("TotalRayTests",
                               "RayTracing",
                               "Total number of ray intersection tests, includes both box and triangle intersections.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,sum2,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum64,sum2",
                               "ce6e4c7f-cf9d-6f8f-4456-70f670354bbe");
    }
    { // Index:105
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(48918);
        internal_counters.push_back(49190);
        internal_counters.push_back(49462);
        internal_counters.push_back(49734);
        internal_counters.push_back(50006);
        internal_counters.push_back(50278);
        internal_counters.push_back(50550);
        internal_counters.push_back(50822);
        internal_counters.push_back(51094);
        internal_counters.push_back(51366);
        internal_counters.push_back(51638);
        internal_counters.push_back(51910);
        internal_counters.push_back(52182);
        internal_counters.push_back(52454);
        internal_counters.push_back(52726);
        internal_counters.push_back(52998);
        internal_counters.push_back(53270);
        internal_counters.push_back(53542);
        internal_counters.push_back(53814);
        internal_counters.push_back(54086);
        internal_counters.push_back(54358);
        internal_counters.push_back(54630);
        internal_counters.push_back(54902);
        internal_counters.push_back(55174);
        internal_counters.push_back(55446);
        internal_counters.push_back(55718);
        internal_counters.push_back(55990);
        internal_counters.push_back(56262);
        internal_counters.push_back(56534);
        internal_counters.push_back(56806);
        internal_counters.push_back(57078);
        internal_counters.push_back(57350);
        internal_counters.push_back(57622);
        internal_counters.push_back(57894);
        internal_counters.push_back(58166);
        internal_counters.push_back(58438);
        internal_counters.push_back(58710);
        internal_counters.push_back(58982);
        internal_counters.push_back(59254);
        internal_counters.push_back(59526);
        internal_counters.push_back(59798);
        internal_counters.push_back(60070);
        internal_counters.push_back(60342);
        internal_counters.push_back(60614);
        internal_counters.push_back(60886);
        internal_counters.push_back(61158);
        internal_counters.push_back(61430);
        internal_counters.push_back(61702);
        internal_counters.push_back(61974);
        internal_counters.push_back(62246);
        internal_counters.push_back(62518);
        internal_counters.push_back(62790);
        internal_counters.push_back(63062);
        internal_counters.push_back(63334);
        internal_counters.push_back(63606);
        internal_counters.push_back(63878);
        internal_counters.push_back(64150);
        internal_counters.push_back(64422);
        internal_counters.push_back(64694);
        internal_counters.push_back(64966);
        internal_counters.push_back(65238);
        internal_counters.push_back(65510);
        internal_counters.push_back(65782);
        internal_counters.push_back(66054);

        c.DefineDerivedCounter("RayTestsPerWave",
                               "RayTracing",
                               "The number of ray intersection tests per wave.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64",
                               "45b0cd7f-3b43-6344-37d7-054062e50f60");
    }
    { // Index:106
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(103931);
        internal_counters.push_back(104443);
        internal_counters.push_back(104955);
        internal_counters.push_back(105467);
        internal_counters.push_back(105979);
        internal_counters.push_back(106491);
        internal_counters.push_back(107003);
        internal_counters.push_back(107515);
        internal_counters.push_back(108027);
        internal_counters.push_back(108539);
        internal_counters.push_back(109051);
        internal_counters.push_back(109563);
        internal_counters.push_back(110075);
        internal_counters.push_back(110587);
        internal_counters.push_back(111099);
        internal_counters.push_back(111611);
        internal_counters.push_back(112123);
        internal_counters.push_back(112635);
        internal_counters.push_back(113147);
        internal_counters.push_back(113659);
        internal_counters.push_back(114171);
        internal_counters.push_back(114683);
        internal_counters.push_back(115195);
        internal_counters.push_back(115707);
        internal_counters.push_back(116219);
        internal_counters.push_back(116731);
        internal_counters.push_back(117243);
        internal_counters.push_back(117755);
        internal_counters.push_back(118267);
        internal_counters.push_back(118779);
        internal_counters.push_back(119291);
        internal_counters.push_back(119803);

        c.DefineDerivedCounter("WaveOccupancyPct",
                               "WaveDistribution",
                               "The percentage of the maximum wavefront occupancy that is currently being used.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               false,
                               true,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,MAX_WAVES,/,(100),*",
                               "6ff3d7f2-d585-9834-d335-9edba99113c8");
    }
    { // Index:107
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29831);
        internal_counters.push_back(30150);
        internal_counters.push_back(30469);
        internal_counters.push_back(30788);
        internal_counters.push_back(29686);
        internal_counters.push_back(30005);
        internal_counters.push_back(30324);
        internal_counters.push_back(30643);

        c.DefineDerivedCounter("HSLimitedByVgpr",
                               "WaveOccupancyLimiters",
                               "The percentage of HS wave scheduling requests that are limited by VGPR availability.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               false,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,max4,/,NUM_SIMDS,/,(100),*",
                               "50585d16-dd47-ed8a-ec13-5fd1f1b10196");
    }
    { // Index:108
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29835);
        internal_counters.push_back(30154);
        internal_counters.push_back(30473);
        internal_counters.push_back(30792);
        internal_counters.push_back(29686);
        internal_counters.push_back(30005);
        internal_counters.push_back(30324);
        internal_counters.push_back(30643);

        c.DefineDerivedCounter("HSLimitedByLds",
                               "WaveOccupancyLimiters",
                               "The percentage of HS wave scheduling requests that are limited by LDS availability.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               false,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,max4,/,NUM_CUS,/,(100),*",
                               "fdd67cc9-259e-4c41-b41f-57e57ce8c5cb");
    }
    { // Index:109
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29821);
        internal_counters.push_back(30140);
        internal_counters.push_back(30459);
        internal_counters.push_back(30778);
        internal_counters.push_back(29686);
        internal_counters.push_back(30005);
        internal_counters.push_back(30324);
        internal_counters.push_back(30643);

        c.DefineDerivedCounter("HSLimitedByScratch",
                               "WaveOccupancyLimiters",
                               "The percentage of HS wave scheduling requests that are limited by scratch space availability.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               false,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,max4,/,(100),*",
                               "b7fe9384-498b-8280-e330-c554e4cdc7a7");
    }
    { // Index:110
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29841);
        internal_counters.push_back(30160);
        internal_counters.push_back(30479);
        internal_counters.push_back(30798);
        internal_counters.push_back(29686);
        internal_counters.push_back(30005);
        internal_counters.push_back(30324);
        internal_counters.push_back(30643);

        c.DefineDerivedCounter("HSLimitedByBarriers",
                               "WaveOccupancyLimiters",
                               "The percentage of HS wave scheduling requests that are limited by barriers.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               false,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,max4,/,NUM_CUS,/,(100),*",
                               "93c71348-8437-1765-8c26-b9c6be2457a0");
    }
    { // Index:111
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29830);
        internal_counters.push_back(30149);
        internal_counters.push_back(30468);
        internal_counters.push_back(30787);
        internal_counters.push_back(29666);
        internal_counters.push_back(29985);
        internal_counters.push_back(30304);
        internal_counters.push_back(30623);

        c.DefineDerivedCounter("GSLimitedByVgpr",
                               "WaveOccupancyLimiters",
                               "The percentage of GS wave scheduling requests that are limited by VGPR availability.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               false,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,max4,/,NUM_SIMDS,/,(100),*",
                               "7da57982-3e1c-8515-1c92-d183721f4d15");
    }
    { // Index:112
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29836);
        internal_counters.push_back(30155);
        internal_counters.push_back(30474);
        internal_counters.push_back(30793);
        internal_counters.push_back(29666);
        internal_counters.push_back(29985);
        internal_counters.push_back(30304);
        internal_counters.push_back(30623);

        c.DefineDerivedCounter("GSLimitedByLds",
                               "WaveOccupancyLimiters",
                               "The percentage of GS wave scheduling requests that are limited by LDS availability.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               false,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,max4,/,NUM_CUS,/,(100),*",
                               "6bfbfae4-7b7e-112d-f35a-0691a75432d9");
    }
    { // Index:113
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29820);
        internal_counters.push_back(30139);
        internal_counters.push_back(30458);
        internal_counters.push_back(30777);
        internal_counters.push_back(29666);
        internal_counters.push_back(29985);
        internal_counters.push_back(30304);
        internal_counters.push_back(30623);

        c.DefineDerivedCounter("GSLimitedByScratch",
                               "WaveOccupancyLimiters",
                               "The percentage of GS wave scheduling requests that are limited by scratch space availability.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               false,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,max4,/,(100),*",
                               "7eea8eeb-6659-dbd5-c0c2-e404dbf7a97d");
    }
    { // Index:114
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29834);
        internal_counters.push_back(30153);
        internal_counters.push_back(30472);
        internal_counters.push_back(30791);
        internal_counters.push_back(29721);
        internal_counters.push_back(30040);
        internal_counters.push_back(30359);
        internal_counters.push_back(30678);
        internal_counters.push_back(29722);
        internal_counters.push_back(30041);
        internal_counters.push_back(30360);
        internal_counters.push_back(30679);
        internal_counters.push_back(29723);
        internal_counters.push_back(30042);
        internal_counters.push_back(30361);
        internal_counters.push_back(30680);
        internal_counters.push_back(29724);
        internal_counters.push_back(30043);
        internal_counters.push_back(30362);
        internal_counters.push_back(30681);

        c.DefineDerivedCounter("PSLimitedByLds",
                               "WaveOccupancyLimiters",
                               "The percentage of PS wave scheduling requests that are limited by LDS availability.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               false,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,max16,/,NUM_CUS,/,(100),*",
                               "87e9d8b0-dae4-59e5-9797-b31084e4370c");
    }
    { // Index:115
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29829);
        internal_counters.push_back(30148);
        internal_counters.push_back(30467);
        internal_counters.push_back(30786);
        internal_counters.push_back(29721);
        internal_counters.push_back(30040);
        internal_counters.push_back(30359);
        internal_counters.push_back(30678);
        internal_counters.push_back(29722);
        internal_counters.push_back(30041);
        internal_counters.push_back(30360);
        internal_counters.push_back(30679);
        internal_counters.push_back(29723);
        internal_counters.push_back(30042);
        internal_counters.push_back(30361);
        internal_counters.push_back(30680);
        internal_counters.push_back(29724);
        internal_counters.push_back(30043);
        internal_counters.push_back(30362);
        internal_counters.push_back(30681);

        c.DefineDerivedCounter("PSLimitedByVgpr",
                               "WaveOccupancyLimiters",
                               "The percentage of PS wave scheduling requests that are limited by VGPR availability.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               false,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,max16,/,NUM_SIMDS,/,(100),*",
                               "5327574d-a131-c833-44d2-ff4f10103502");
    }
    { // Index:116
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29819);
        internal_counters.push_back(30138);
        internal_counters.push_back(30457);
        internal_counters.push_back(30776);
        internal_counters.push_back(29721);
        internal_counters.push_back(30040);
        internal_counters.push_back(30359);
        internal_counters.push_back(30678);
        internal_counters.push_back(29722);
        internal_counters.push_back(30041);
        internal_counters.push_back(30360);
        internal_counters.push_back(30679);
        internal_counters.push_back(29723);
        internal_counters.push_back(30042);
        internal_counters.push_back(30361);
        internal_counters.push_back(30680);
        internal_counters.push_back(29724);
        internal_counters.push_back(30043);
        internal_counters.push_back(30362);
        internal_counters.push_back(30681);

        c.DefineDerivedCounter("PSLimitedByScratch",
                               "WaveOccupancyLimiters",
                               "The percentage of PS wave scheduling requests that are limited by scratch space availability.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               false,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,max16,/,(100),*",
                               "399ee0f1-dce6-07fa-ccab-8bd96f2f50a4");
    }
    { // Index:117
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29837);
        internal_counters.push_back(30156);
        internal_counters.push_back(30475);
        internal_counters.push_back(30794);
        internal_counters.push_back(29702);
        internal_counters.push_back(30021);
        internal_counters.push_back(30340);
        internal_counters.push_back(30659);

        c.DefineDerivedCounter("CSLimitedByLds",
                               "WaveOccupancyLimiters",
                               "The percentage of CS wave scheduling requests that are limited by LDS availability.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               false,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,max4,/,NUM_CUS,/,(100),*",
                               "03b6b0e1-67eb-688c-a733-e4e31ceb86ae");
    }
    { // Index:118
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29832);
        internal_counters.push_back(30151);
        internal_counters.push_back(30470);
        internal_counters.push_back(30789);
        internal_counters.push_back(29702);
        internal_counters.push_back(30021);
        internal_counters.push_back(30340);
        internal_counters.push_back(30659);

        c.DefineDerivedCounter("CSLimitedByVgpr",
                               "WaveOccupancyLimiters",
                               "The percentage of CS wave scheduling requests that are limited by VGPR availability.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               false,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,max4,/,NUM_SIMDS,/,(100),*",
                               "7ad91320-c40d-6994-dc34-73101a7926f7");
    }
    { // Index:119
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29822);
        internal_counters.push_back(30141);
        internal_counters.push_back(30460);
        internal_counters.push_back(30779);
        internal_counters.push_back(29702);
        internal_counters.push_back(30021);
        internal_counters.push_back(30340);
        internal_counters.push_back(30659);

        c.DefineDerivedCounter("CSLimitedByScratch",
                               "WaveOccupancyLimiters",
                               "The percentage of CS wave scheduling requests that are limited by scratch space availability.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               false,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,max4,/,(100),*",
                               "664e8676-aa15-9861-14d5-c3e4ee208fa1");
    }
    { // Index:120
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29842);
        internal_counters.push_back(30161);
        internal_counters.push_back(30480);
        internal_counters.push_back(30799);
        internal_counters.push_back(29702);
        internal_counters.push_back(30021);
        internal_counters.push_back(30340);
        internal_counters.push_back(30659);

        c.DefineDerivedCounter("CSLimitedByBarriers",
                               "WaveOccupancyLimiters",
                               "The percentage of CS wave scheduling requests that are limited by barriers.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               false,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,max4,/,NUM_CUS,/,(100),*",
                               "ea835ad2-e28a-3d46-3e08-04d51e072a71");
    }
    { // Index:121
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29846);
        internal_counters.push_back(30165);
        internal_counters.push_back(30484);
        internal_counters.push_back(30803);
        internal_counters.push_back(29702);
        internal_counters.push_back(30021);
        internal_counters.push_back(30340);
        internal_counters.push_back(30659);

        c.DefineDerivedCounter("CSLimitedByThreadGroupLimit",
                               "WaveOccupancyLimiters",
                               "The percentage of CS wave scheduling requests that are limited by the thread group limit.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               false,
                               true,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,max4,/,NUM_CUS,/,(100),*",
                               "fe65b54f-7d31-3c33-942f-b6ebcec7b037");
    }
}

// clang-format on

