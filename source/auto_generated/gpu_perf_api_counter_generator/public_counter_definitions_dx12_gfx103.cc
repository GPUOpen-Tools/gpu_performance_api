//==============================================================================
// Copyright (c) 2010-2021 Advanced Micro Devices, Inc. All rights reserved.
/// @author AMD Developer Tools Team
/// @file
/// @brief Public Counter Definitions for DX12 GFX103.
//==============================================================================

#include "gpu_perf_api_counter_generator/gpa_counter.h"
#include "auto_generated/gpu_perf_api_counter_generator/public_counter_definitions_dx12_gfx103.h"

// *** Note, this is an auto-generated file. Do not edit. Execute PublicCounterCompiler to rebuild.

void AutoDefinePublicDerivedCountersDx12Gfx103(GpaDerivedCounters& c)
{
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104720);

        c.DefineDerivedCounter("GPUTime", "Timing", "Time this API command took to execute on the GPU in nanoseconds from the time the previous command reached the bottom of the pipeline (BOP) to the time this command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "0,TS_FREQ,/,(1000000000),*", "cbd338f2-de6c-7b14-92ad-ba724ca2e501");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104723);

        c.DefineDerivedCounter("ExecutionDuration", "Timing", "GPU command execution duration in nanoseconds, from the time the command enters the top of the pipeline (TOP) to the time the command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "0,TS_FREQ,/,(1000000000),*", "b2f08d0d-af13-cd66-d3b4-b290ad448e69");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104724);

        c.DefineDerivedCounter("ExecutionStart", "Timing", "GPU command execution start time in nanoseconds. This is the time the command enters the top of the pipeline (TOP).", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "0,TS_FREQ,/,(1000000000),*", "a368f79d-fcfe-2158-71c4-2f0c4eef5aa4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104725);

        c.DefineDerivedCounter("ExecutionEnd", "Timing", "GPU command execution end time in nanoseconds. This is the time the command reaches the bottom of the pipeline (BOP).", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "0,TS_FREQ,/,(1000000000),*", "0bce206a-0976-06a2-bf20-03fb351035a8");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24);
        internal_counters.push_back(0);

        c.DefineDerivedCounter("GPUBusy", "Timing", "The percentage of time the GPU command processor was busy.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,/,(100),*,(100),min", "b1ba5363-1abc-fe66-2fdd-1fe6ee8989a0");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24);

        c.DefineDerivedCounter("GPUBusyCycles", "Timing", "Number of GPU cycles that the GPU command processor was busy.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0", "451cb045-23af-ac44-4603-d5832fa041d9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(10700);
        internal_counters.push_back(11032);
        internal_counters.push_back(11364);
        internal_counters.push_back(11696);
        internal_counters.push_back(10712);
        internal_counters.push_back(11044);
        internal_counters.push_back(11376);
        internal_counters.push_back(11708);
        internal_counters.push_back(10393);
        internal_counters.push_back(10725);
        internal_counters.push_back(11057);
        internal_counters.push_back(11389);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("VSBusy", "Timing", "The percentage of time the ShaderUnit has vertex shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,4,4,ifnotzero,8,8,ifnotzero,1,5,5,ifnotzero,9,9,ifnotzero,max,2,6,6,ifnotzero,10,10,ifnotzero,max,3,7,7,ifnotzero,11,11,ifnotzero,max,12,/,(100),*,(100),min", "94caad5e-867c-6c09-cf3a-d05b51df8f3b");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(10700);
        internal_counters.push_back(11032);
        internal_counters.push_back(11364);
        internal_counters.push_back(11696);
        internal_counters.push_back(10712);
        internal_counters.push_back(11044);
        internal_counters.push_back(11376);
        internal_counters.push_back(11708);
        internal_counters.push_back(10393);
        internal_counters.push_back(10725);
        internal_counters.push_back(11057);
        internal_counters.push_back(11389);

        c.DefineDerivedCounter("VSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has vertex shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,4,4,ifnotzero,8,8,ifnotzero,1,5,5,ifnotzero,9,9,ifnotzero,max,2,6,6,ifnotzero,10,10,ifnotzero,max,3,7,7,ifnotzero,11,11,ifnotzero,max", "a2086d4e-274b-48a8-3e08-a4ab76ac15dd");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104720);
        internal_counters.push_back(10700);
        internal_counters.push_back(11032);
        internal_counters.push_back(11364);
        internal_counters.push_back(11696);
        internal_counters.push_back(10712);
        internal_counters.push_back(11044);
        internal_counters.push_back(11376);
        internal_counters.push_back(11708);
        internal_counters.push_back(10393);
        internal_counters.push_back(10725);
        internal_counters.push_back(11057);
        internal_counters.push_back(11389);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("VSTime", "Timing", "Time vertex shaders are busy in nanoseconds.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "1,5,5,ifnotzero,9,9,ifnotzero,2,6,6,ifnotzero,10,10,ifnotzero,max,3,7,7,ifnotzero,11,11,ifnotzero,max,4,8,8,ifnotzero,12,12,ifnotzero,max,13,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "d6ce819e-69af-a241-d07a-5dd8d146e436");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(10426);
        internal_counters.push_back(10758);
        internal_counters.push_back(11090);
        internal_counters.push_back(11422);
        internal_counters.push_back(10433);
        internal_counters.push_back(10765);
        internal_counters.push_back(11097);
        internal_counters.push_back(11429);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("HSBusy", "Timing", "The percentage of time the ShaderUnit has hull shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "16f30a0b-4cbf-eccd-b13f-ab68dd254d32");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(10426);
        internal_counters.push_back(10758);
        internal_counters.push_back(11090);
        internal_counters.push_back(11422);
        internal_counters.push_back(10433);
        internal_counters.push_back(10765);
        internal_counters.push_back(11097);
        internal_counters.push_back(11429);

        c.DefineDerivedCounter("HSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has hull shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "753e76ef-8ef8-3f13-b511-4bd9f3589fdb");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104720);
        internal_counters.push_back(10426);
        internal_counters.push_back(10758);
        internal_counters.push_back(11090);
        internal_counters.push_back(11422);
        internal_counters.push_back(10433);
        internal_counters.push_back(10765);
        internal_counters.push_back(11097);
        internal_counters.push_back(11429);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("HSTime", "Timing", "Time hull shaders are busy in nanoseconds.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "8386a863-dd34-1526-f703-0f0c7b241bc4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(10393);
        internal_counters.push_back(10725);
        internal_counters.push_back(11057);
        internal_counters.push_back(11389);
        internal_counters.push_back(10700);
        internal_counters.push_back(11032);
        internal_counters.push_back(11364);
        internal_counters.push_back(11696);
        internal_counters.push_back(10706);
        internal_counters.push_back(11038);
        internal_counters.push_back(11370);
        internal_counters.push_back(11702);
        internal_counters.push_back(10718);
        internal_counters.push_back(11050);
        internal_counters.push_back(11382);
        internal_counters.push_back(11714);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("DSBusy", "Timing", "The percentage of time the ShaderUnit has domain shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,4,8,ifnotzero,12,ifnotzero,(0),1,5,9,ifnotzero,13,ifnotzero,max,(0),2,6,10,ifnotzero,14,ifnotzero,max,(0),3,7,11,ifnotzero,15,ifnotzero,max,16,/,(100),*,(100),min", "0c626e8a-9b82-b6d4-d9a3-578509316301");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(10393);
        internal_counters.push_back(10725);
        internal_counters.push_back(11057);
        internal_counters.push_back(11389);
        internal_counters.push_back(10700);
        internal_counters.push_back(11032);
        internal_counters.push_back(11364);
        internal_counters.push_back(11696);
        internal_counters.push_back(10706);
        internal_counters.push_back(11038);
        internal_counters.push_back(11370);
        internal_counters.push_back(11702);
        internal_counters.push_back(10718);
        internal_counters.push_back(11050);
        internal_counters.push_back(11382);
        internal_counters.push_back(11714);

        c.DefineDerivedCounter("DSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has domain shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,4,8,ifnotzero,12,ifnotzero,(0),1,5,9,ifnotzero,13,ifnotzero,max,(0),2,6,10,ifnotzero,14,ifnotzero,max,(0),3,7,11,ifnotzero,15,ifnotzero,max", "2f3f7561-0549-2232-536d-129ffc5f7703");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104720);
        internal_counters.push_back(10393);
        internal_counters.push_back(10725);
        internal_counters.push_back(11057);
        internal_counters.push_back(11389);
        internal_counters.push_back(10700);
        internal_counters.push_back(11032);
        internal_counters.push_back(11364);
        internal_counters.push_back(11696);
        internal_counters.push_back(10706);
        internal_counters.push_back(11038);
        internal_counters.push_back(11370);
        internal_counters.push_back(11702);
        internal_counters.push_back(10718);
        internal_counters.push_back(11050);
        internal_counters.push_back(11382);
        internal_counters.push_back(11714);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("DSTime", "Timing", "Time domain shaders are busy in nanoseconds.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "(0),1,5,9,ifnotzero,13,ifnotzero,(0),2,6,10,ifnotzero,14,ifnotzero,max,(0),3,7,11,ifnotzero,15,ifnotzero,max,(0),4,8,12,ifnotzero,16,ifnotzero,max,17,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "bfe28947-c727-8a9f-aa59-c218e58bfba5");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(10452);
        internal_counters.push_back(10784);
        internal_counters.push_back(11116);
        internal_counters.push_back(11448);
        internal_counters.push_back(10472);
        internal_counters.push_back(10804);
        internal_counters.push_back(11136);
        internal_counters.push_back(11468);
        internal_counters.push_back(10453);
        internal_counters.push_back(10785);
        internal_counters.push_back(11117);
        internal_counters.push_back(11449);
        internal_counters.push_back(10473);
        internal_counters.push_back(10805);
        internal_counters.push_back(11137);
        internal_counters.push_back(11469);
        internal_counters.push_back(10454);
        internal_counters.push_back(10786);
        internal_counters.push_back(11118);
        internal_counters.push_back(11450);
        internal_counters.push_back(10474);
        internal_counters.push_back(10806);
        internal_counters.push_back(11138);
        internal_counters.push_back(11470);
        internal_counters.push_back(10455);
        internal_counters.push_back(10787);
        internal_counters.push_back(11119);
        internal_counters.push_back(11451);
        internal_counters.push_back(10475);
        internal_counters.push_back(10807);
        internal_counters.push_back(11139);
        internal_counters.push_back(11471);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSBusy", "Timing", "The percentage of time the ShaderUnit has pixel shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,(0),2,6,ifnotzero,(0),3,7,ifnotzero,max4,(0),8,12,ifnotzero,(0),9,13,ifnotzero,(0),10,14,ifnotzero,(0),11,15,ifnotzero,max4,(0),16,20,ifnotzero,(0),17,21,ifnotzero,(0),18,22,ifnotzero,(0),19,23,ifnotzero,max4,(0),24,28,ifnotzero,(0),25,29,ifnotzero,(0),26,30,ifnotzero,(0),27,31,ifnotzero,max4,max4,32,/,(100),*,(100),min", "7e772beb-d82c-bd9a-aed0-fe504d416ce5");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(10452);
        internal_counters.push_back(10784);
        internal_counters.push_back(11116);
        internal_counters.push_back(11448);
        internal_counters.push_back(10472);
        internal_counters.push_back(10804);
        internal_counters.push_back(11136);
        internal_counters.push_back(11468);
        internal_counters.push_back(10453);
        internal_counters.push_back(10785);
        internal_counters.push_back(11117);
        internal_counters.push_back(11449);
        internal_counters.push_back(10473);
        internal_counters.push_back(10805);
        internal_counters.push_back(11137);
        internal_counters.push_back(11469);
        internal_counters.push_back(10454);
        internal_counters.push_back(10786);
        internal_counters.push_back(11118);
        internal_counters.push_back(11450);
        internal_counters.push_back(10474);
        internal_counters.push_back(10806);
        internal_counters.push_back(11138);
        internal_counters.push_back(11470);
        internal_counters.push_back(10455);
        internal_counters.push_back(10787);
        internal_counters.push_back(11119);
        internal_counters.push_back(11451);
        internal_counters.push_back(10475);
        internal_counters.push_back(10807);
        internal_counters.push_back(11139);
        internal_counters.push_back(11471);

        c.DefineDerivedCounter("PSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has pixel shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,(0),2,6,ifnotzero,(0),3,7,ifnotzero,max4,(0),8,12,ifnotzero,(0),9,13,ifnotzero,(0),10,14,ifnotzero,(0),11,15,ifnotzero,max4,(0),16,20,ifnotzero,(0),17,21,ifnotzero,(0),18,22,ifnotzero,(0),19,23,ifnotzero,max4,(0),24,28,ifnotzero,(0),25,29,ifnotzero,(0),26,30,ifnotzero,(0),27,31,ifnotzero,max4,max4", "b58bea04-ce8e-2984-80f4-8aba7d4c817b");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104720);
        internal_counters.push_back(10452);
        internal_counters.push_back(10784);
        internal_counters.push_back(11116);
        internal_counters.push_back(11448);
        internal_counters.push_back(10472);
        internal_counters.push_back(10804);
        internal_counters.push_back(11136);
        internal_counters.push_back(11468);
        internal_counters.push_back(10453);
        internal_counters.push_back(10785);
        internal_counters.push_back(11117);
        internal_counters.push_back(11449);
        internal_counters.push_back(10473);
        internal_counters.push_back(10805);
        internal_counters.push_back(11137);
        internal_counters.push_back(11469);
        internal_counters.push_back(10454);
        internal_counters.push_back(10786);
        internal_counters.push_back(11118);
        internal_counters.push_back(11450);
        internal_counters.push_back(10474);
        internal_counters.push_back(10806);
        internal_counters.push_back(11138);
        internal_counters.push_back(11470);
        internal_counters.push_back(10455);
        internal_counters.push_back(10787);
        internal_counters.push_back(11119);
        internal_counters.push_back(11451);
        internal_counters.push_back(10475);
        internal_counters.push_back(10807);
        internal_counters.push_back(11139);
        internal_counters.push_back(11471);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSTime", "Timing", "Time pixel shaders are busy in nanoseconds.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,(0),3,7,ifnotzero,(0),4,8,ifnotzero,max4,(0),9,13,ifnotzero,(0),10,14,ifnotzero,(0),11,15,ifnotzero,(0),12,16,ifnotzero,max4,(0),17,21,ifnotzero,(0),18,22,ifnotzero,(0),19,23,ifnotzero,(0),20,24,ifnotzero,max4,(0),25,29,ifnotzero,(0),26,30,ifnotzero,(0),27,31,ifnotzero,(0),28,32,ifnotzero,max4,max4,33,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "edca7694-7416-e8a6-0c5a-63a5ad5f3d74");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(10437);
        internal_counters.push_back(10769);
        internal_counters.push_back(11101);
        internal_counters.push_back(11433);
        internal_counters.push_back(10441);
        internal_counters.push_back(10773);
        internal_counters.push_back(11105);
        internal_counters.push_back(11437);
        internal_counters.push_back(10443);
        internal_counters.push_back(10775);
        internal_counters.push_back(11107);
        internal_counters.push_back(11439);
        internal_counters.push_back(10447);
        internal_counters.push_back(10779);
        internal_counters.push_back(11111);
        internal_counters.push_back(11443);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("CSBusy", "Timing", "The percentage of time the ShaderUnit has compute shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max,16,/,(100),*,(100),min", "493fdd90-8d2b-a055-5e4e-2d29c3396b8c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(10437);
        internal_counters.push_back(10769);
        internal_counters.push_back(11101);
        internal_counters.push_back(11433);
        internal_counters.push_back(10441);
        internal_counters.push_back(10773);
        internal_counters.push_back(11105);
        internal_counters.push_back(11437);
        internal_counters.push_back(10443);
        internal_counters.push_back(10775);
        internal_counters.push_back(11107);
        internal_counters.push_back(11439);
        internal_counters.push_back(10447);
        internal_counters.push_back(10779);
        internal_counters.push_back(11111);
        internal_counters.push_back(11443);

        c.DefineDerivedCounter("CSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has compute shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max", "39bcf1b8-f6b2-4c37-f9af-0a2bb59512f9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104720);
        internal_counters.push_back(10437);
        internal_counters.push_back(10769);
        internal_counters.push_back(11101);
        internal_counters.push_back(11433);
        internal_counters.push_back(10441);
        internal_counters.push_back(10773);
        internal_counters.push_back(11105);
        internal_counters.push_back(11437);
        internal_counters.push_back(10443);
        internal_counters.push_back(10775);
        internal_counters.push_back(11107);
        internal_counters.push_back(11439);
        internal_counters.push_back(10447);
        internal_counters.push_back(10779);
        internal_counters.push_back(11111);
        internal_counters.push_back(11443);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("CSTime", "Timing", "Time compute shaders are busy in nanoseconds.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "1,2,3,4,5,6,7,8,comparemax4,9,10,11,12,13,14,15,16,comparemax4,max,17,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "dbc24916-ecb2-7eef-8d63-7afadaaab6bc");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104237);
        internal_counters.push_back(104376);
        internal_counters.push_back(104515);
        internal_counters.push_back(104654);
        internal_counters.push_back(104256);
        internal_counters.push_back(104395);
        internal_counters.push_back(104534);
        internal_counters.push_back(104673);
        internal_counters.push_back(104275);
        internal_counters.push_back(104414);
        internal_counters.push_back(104553);
        internal_counters.push_back(104692);

        c.DefineDerivedCounter("VSVerticesIn", "VertexShader", "The number of vertices processed by the VS.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero", "810a04c8-2ff4-081d-766d-bfa2bd4ad916");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(13832);
        internal_counters.push_back(14344);
        internal_counters.push_back(14856);
        internal_counters.push_back(15368);
        internal_counters.push_back(13772);
        internal_counters.push_back(14284);
        internal_counters.push_back(14796);
        internal_counters.push_back(15308);
        internal_counters.push_back(22024);
        internal_counters.push_back(22536);
        internal_counters.push_back(23048);
        internal_counters.push_back(23560);
        internal_counters.push_back(21964);
        internal_counters.push_back(22476);
        internal_counters.push_back(22988);
        internal_counters.push_back(23500);
        internal_counters.push_back(17928);
        internal_counters.push_back(18440);
        internal_counters.push_back(18952);
        internal_counters.push_back(19464);
        internal_counters.push_back(17868);
        internal_counters.push_back(18380);
        internal_counters.push_back(18892);
        internal_counters.push_back(19404);

        c.DefineDerivedCounter("VSVALUInstCount", "VertexShader", "Average number of vector ALU instructions executed in the VS. Affected by flow control.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,12,13,14,15,sum4,/,12,13,14,15,sum4,ifnotzero,16,17,18,19,sum4,20,21,22,23,sum4,/,20,21,22,23,sum4,ifnotzero", "8ec604e4-63f5-e6b5-4558-c38f0b26d4b1");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(13828);
        internal_counters.push_back(14340);
        internal_counters.push_back(14852);
        internal_counters.push_back(15364);
        internal_counters.push_back(13772);
        internal_counters.push_back(14284);
        internal_counters.push_back(14796);
        internal_counters.push_back(15308);
        internal_counters.push_back(22020);
        internal_counters.push_back(22532);
        internal_counters.push_back(23044);
        internal_counters.push_back(23556);
        internal_counters.push_back(21964);
        internal_counters.push_back(22476);
        internal_counters.push_back(22988);
        internal_counters.push_back(23500);
        internal_counters.push_back(17924);
        internal_counters.push_back(18436);
        internal_counters.push_back(18948);
        internal_counters.push_back(19460);
        internal_counters.push_back(17868);
        internal_counters.push_back(18380);
        internal_counters.push_back(18892);
        internal_counters.push_back(19404);

        c.DefineDerivedCounter("VSSALUInstCount", "VertexShader", "Average number of scalar ALU instructions executed in the VS. Affected by flow control.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,12,13,14,15,sum4,/,12,13,14,15,sum4,ifnotzero,16,17,18,19,sum4,20,21,22,23,sum4,/,20,21,22,23,sum4,ifnotzero", "e3da0383-7322-7f65-8cf2-3ce641578e54");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(13885);
        internal_counters.push_back(14397);
        internal_counters.push_back(14909);
        internal_counters.push_back(15421);
        internal_counters.push_back(22077);
        internal_counters.push_back(22589);
        internal_counters.push_back(23101);
        internal_counters.push_back(23613);
        internal_counters.push_back(17981);
        internal_counters.push_back(18493);
        internal_counters.push_back(19005);
        internal_counters.push_back(19517);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("VSVALUBusy", "VertexShader", "The percentage of GPUTime vector ALU instructions are being processed by the VS.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero,NUM_SIMDS,/,12,/,(100),*", "8b3572f7-fda0-eddf-6c93-2ab145b8754b");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(13885);
        internal_counters.push_back(14397);
        internal_counters.push_back(14909);
        internal_counters.push_back(15421);
        internal_counters.push_back(22077);
        internal_counters.push_back(22589);
        internal_counters.push_back(23101);
        internal_counters.push_back(23613);
        internal_counters.push_back(17981);
        internal_counters.push_back(18493);
        internal_counters.push_back(19005);
        internal_counters.push_back(19517);

        c.DefineDerivedCounter("VSVALUBusyCycles", "VertexShader", "Number of GPU cycles where vector ALU instructions are being processed by the VS.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero", "0af1686e-6d77-2f6e-2862-7bb8e869a776");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(13828);
        internal_counters.push_back(14340);
        internal_counters.push_back(14852);
        internal_counters.push_back(15364);
        internal_counters.push_back(22020);
        internal_counters.push_back(22532);
        internal_counters.push_back(23044);
        internal_counters.push_back(23556);
        internal_counters.push_back(17924);
        internal_counters.push_back(18436);
        internal_counters.push_back(18948);
        internal_counters.push_back(19460);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("VSSALUBusy", "VertexShader", "The percentage of GPUTime scalar ALU instructions are being processed by the VS.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero,NUM_CUS,/,12,/,(100),*", "3bc8730c-e3bc-e2f0-7d24-36974064c25a");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(13828);
        internal_counters.push_back(14340);
        internal_counters.push_back(14852);
        internal_counters.push_back(15364);
        internal_counters.push_back(22020);
        internal_counters.push_back(22532);
        internal_counters.push_back(23044);
        internal_counters.push_back(23556);
        internal_counters.push_back(17924);
        internal_counters.push_back(18436);
        internal_counters.push_back(18948);
        internal_counters.push_back(19460);

        c.DefineDerivedCounter("VSSALUBusyCycles", "VertexShader", "Number of GPU cycles where scalar ALU instructions are being processed by the VS.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero,NUM_CUS,/", "357ac7cd-2e1c-dcb0-77f6-37527237f35b");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104250);
        internal_counters.push_back(104389);
        internal_counters.push_back(104528);
        internal_counters.push_back(104667);

        c.DefineDerivedCounter("HSPatches", "HullShader", "The number of patches processed by the HS.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4", "d1bbd27d-d591-4509-df52-d329fb73a98f");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24072);
        internal_counters.push_back(24584);
        internal_counters.push_back(25096);
        internal_counters.push_back(25608);
        internal_counters.push_back(24012);
        internal_counters.push_back(24524);
        internal_counters.push_back(25036);
        internal_counters.push_back(25548);

        c.DefineDerivedCounter("HSVALUInstCount", "HullShader", "Average number of vector ALU instructions executed in the HS. Affected by flow control.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "786673bf-d58f-9895-3a37-9d6efb5e5804");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24068);
        internal_counters.push_back(24580);
        internal_counters.push_back(25092);
        internal_counters.push_back(25604);
        internal_counters.push_back(24012);
        internal_counters.push_back(24524);
        internal_counters.push_back(25036);
        internal_counters.push_back(25548);

        c.DefineDerivedCounter("HSSALUInstCount", "HullShader", "Average number of scalar ALU instructions executed in the HS. Affected by flow control.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "1af675c4-cb0b-c4c5-c131-2796750f683e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24125);
        internal_counters.push_back(24637);
        internal_counters.push_back(25149);
        internal_counters.push_back(25661);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("HSVALUBusy", "HullShader", "The percentage of GPUTime vector ALU instructions are being processed by the HS.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,sum4,NUM_SIMDS,/,4,/,(100),*", "7880d192-8015-0311-d43e-fb0b7a4df179");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24125);
        internal_counters.push_back(24637);
        internal_counters.push_back(25149);
        internal_counters.push_back(25661);

        c.DefineDerivedCounter("HSVALUBusyCycles", "HullShader", "Number of GPU cycles vector where ALU instructions are being processed by the HS.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,sum4,NUM_SIMDS,/", "3afb94e4-e937-5730-0cc9-41d3113ba012");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24068);
        internal_counters.push_back(24580);
        internal_counters.push_back(25092);
        internal_counters.push_back(25604);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("HSSALUBusy", "HullShader", "The percentage of GPUTime scalar ALU instructions are being processed by the HS.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "34748a4b-9148-0b06-b7b9-5700d6631bde");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24068);
        internal_counters.push_back(24580);
        internal_counters.push_back(25092);
        internal_counters.push_back(25604);

        c.DefineDerivedCounter("HSSALUBusyCycles", "HullShader", "Number of GPU cycles where scalar ALU instructions are being processed by the HS.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,sum4,NUM_CUS,/", "9bceabf7-3f01-2fd9-7b1d-8fe46c729efc");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(104275);
        internal_counters.push_back(104414);
        internal_counters.push_back(104553);
        internal_counters.push_back(104692);
        internal_counters.push_back(104237);
        internal_counters.push_back(104376);
        internal_counters.push_back(104515);
        internal_counters.push_back(104654);
        internal_counters.push_back(104256);
        internal_counters.push_back(104395);
        internal_counters.push_back(104534);
        internal_counters.push_back(104673);

        c.DefineDerivedCounter("DSVerticesIn", "DomainShader", "The number of vertices processed by the DS.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,ifnotzero", "b88d9d05-2418-e639-4e3d-3a5815855f8d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(17928);
        internal_counters.push_back(18440);
        internal_counters.push_back(18952);
        internal_counters.push_back(19464);
        internal_counters.push_back(17868);
        internal_counters.push_back(18380);
        internal_counters.push_back(18892);
        internal_counters.push_back(19404);
        internal_counters.push_back(13832);
        internal_counters.push_back(14344);
        internal_counters.push_back(14856);
        internal_counters.push_back(15368);
        internal_counters.push_back(13772);
        internal_counters.push_back(14284);
        internal_counters.push_back(14796);
        internal_counters.push_back(15308);
        internal_counters.push_back(13776);
        internal_counters.push_back(14288);
        internal_counters.push_back(14800);
        internal_counters.push_back(15312);
        internal_counters.push_back(21968);
        internal_counters.push_back(22480);
        internal_counters.push_back(22992);
        internal_counters.push_back(23504);

        c.DefineDerivedCounter("DSVALUInstCount", "DomainShader", "Average number of vector ALU instructions executed in the DS. Affected by flow control.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,sum4,12,13,14,15,sum4,/,16,17,18,19,sum4,ifnotzero,20,21,22,23,sum4,ifnotzero", "03a3e949-82f9-be4d-7228-5eb5ad80915a");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(17924);
        internal_counters.push_back(18436);
        internal_counters.push_back(18948);
        internal_counters.push_back(19460);
        internal_counters.push_back(17868);
        internal_counters.push_back(18380);
        internal_counters.push_back(18892);
        internal_counters.push_back(19404);
        internal_counters.push_back(13828);
        internal_counters.push_back(14340);
        internal_counters.push_back(14852);
        internal_counters.push_back(15364);
        internal_counters.push_back(13772);
        internal_counters.push_back(14284);
        internal_counters.push_back(14796);
        internal_counters.push_back(15308);
        internal_counters.push_back(13776);
        internal_counters.push_back(14288);
        internal_counters.push_back(14800);
        internal_counters.push_back(15312);
        internal_counters.push_back(21968);
        internal_counters.push_back(22480);
        internal_counters.push_back(22992);
        internal_counters.push_back(23504);

        c.DefineDerivedCounter("DSSALUInstCount", "DomainShader", "Average number of scalar ALU instructions executed in the DS. Affected by flow control.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,sum4,12,13,14,15,sum4,/,16,17,18,19,sum4,ifnotzero,20,21,22,23,sum4,ifnotzero", "73daa728-483e-95d0-5b40-504719aadc1c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(145);
        internal_counters.push_back(421);
        internal_counters.push_back(697);
        internal_counters.push_back(973);
        internal_counters.push_back(149);
        internal_counters.push_back(425);
        internal_counters.push_back(701);
        internal_counters.push_back(977);
        internal_counters.push_back(101);
        internal_counters.push_back(377);
        internal_counters.push_back(653);
        internal_counters.push_back(929);
        internal_counters.push_back(113);
        internal_counters.push_back(389);
        internal_counters.push_back(665);
        internal_counters.push_back(941);
        internal_counters.push_back(102);
        internal_counters.push_back(378);
        internal_counters.push_back(654);
        internal_counters.push_back(930);
        internal_counters.push_back(114);
        internal_counters.push_back(390);
        internal_counters.push_back(666);
        internal_counters.push_back(942);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PrimitiveAssemblyBusy", "Timing", "The percentage of GPUTime that primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max,24,/,(100),*,(100),min", "54ac5640-c4d7-95e2-20e0-6a9fdfc07333");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(145);
        internal_counters.push_back(421);
        internal_counters.push_back(697);
        internal_counters.push_back(973);
        internal_counters.push_back(149);
        internal_counters.push_back(425);
        internal_counters.push_back(701);
        internal_counters.push_back(977);
        internal_counters.push_back(101);
        internal_counters.push_back(377);
        internal_counters.push_back(653);
        internal_counters.push_back(929);
        internal_counters.push_back(113);
        internal_counters.push_back(389);
        internal_counters.push_back(665);
        internal_counters.push_back(941);
        internal_counters.push_back(102);
        internal_counters.push_back(378);
        internal_counters.push_back(654);
        internal_counters.push_back(930);
        internal_counters.push_back(114);
        internal_counters.push_back(390);
        internal_counters.push_back(666);
        internal_counters.push_back(942);

        c.DefineDerivedCounter("PrimitiveAssemblyBusyCycles", "Timing", "Number of GPU cycles the primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max", "99777f2d-9626-c78a-a97c-c4505eba1e5f");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(48);
        internal_counters.push_back(324);
        internal_counters.push_back(600);
        internal_counters.push_back(876);

        c.DefineDerivedCounter("PrimitivesIn", "PrimitiveAssembly", "The number of primitives received by the hardware. This includes primitives generated by tessellation.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4", "a515b80d-75c3-c7d2-0d2f-d7766b4759a6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(54);
        internal_counters.push_back(330);
        internal_counters.push_back(606);
        internal_counters.push_back(882);
        internal_counters.push_back(94);
        internal_counters.push_back(370);
        internal_counters.push_back(646);
        internal_counters.push_back(922);
        internal_counters.push_back(95);
        internal_counters.push_back(371);
        internal_counters.push_back(647);
        internal_counters.push_back(923);
        internal_counters.push_back(96);
        internal_counters.push_back(372);
        internal_counters.push_back(648);
        internal_counters.push_back(924);
        internal_counters.push_back(97);
        internal_counters.push_back(373);
        internal_counters.push_back(649);
        internal_counters.push_back(925);

        c.DefineDerivedCounter("CulledPrims", "PrimitiveAssembly", "The number of culled primitives. Typical reasons include scissor, the primitive having zero area, and back or front face culling.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,sum20", "589bdf55-9192-280a-41c3-584bc94f2562");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(61);
        internal_counters.push_back(337);
        internal_counters.push_back(613);
        internal_counters.push_back(889);

        c.DefineDerivedCounter("ClippedPrims", "PrimitiveAssembly", "The number of primitives that required one or more clipping operations due to intersecting the view volume or user clip planes.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4", "5ef6f9d5-155e-5baa-163f-8359d9ea9bbf");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(149);
        internal_counters.push_back(425);
        internal_counters.push_back(701);
        internal_counters.push_back(977);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PAStalledOnRasterizer", "PrimitiveAssembly", "Percentage of GPUTime that primitive assembly waits for rasterization to be ready to accept data. This roughly indicates for what percentage of time the pipeline is bottlenecked by pixel operations.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,max4,4,/,(100),*", "6f9f416b-53c1-0457-f88c-7b6ba8973974");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(149);
        internal_counters.push_back(425);
        internal_counters.push_back(701);
        internal_counters.push_back(977);

        c.DefineDerivedCounter("PAStalledOnRasterizerCycles", "PrimitiveAssembly", "Number of GPU cycles the primitive assembly waits for rasterization to be ready to accept data. Indicates the number of GPU cycles the pipeline is bottlenecked by pixel operations.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,max4", "7a8c492a-c566-9328-6805-760dbff5c0f2");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(28116);
        internal_counters.push_back(28341);
        internal_counters.push_back(28566);
        internal_counters.push_back(28791);
        internal_counters.push_back(29016);
        internal_counters.push_back(29241);
        internal_counters.push_back(29466);
        internal_counters.push_back(29691);
        internal_counters.push_back(28121);
        internal_counters.push_back(28346);
        internal_counters.push_back(28571);
        internal_counters.push_back(28796);
        internal_counters.push_back(29021);
        internal_counters.push_back(29246);
        internal_counters.push_back(29471);
        internal_counters.push_back(29696);
        internal_counters.push_back(28126);
        internal_counters.push_back(28351);
        internal_counters.push_back(28576);
        internal_counters.push_back(28801);
        internal_counters.push_back(29026);
        internal_counters.push_back(29251);
        internal_counters.push_back(29476);
        internal_counters.push_back(29701);
        internal_counters.push_back(28131);
        internal_counters.push_back(28356);
        internal_counters.push_back(28581);
        internal_counters.push_back(28806);
        internal_counters.push_back(29031);
        internal_counters.push_back(29256);
        internal_counters.push_back(29481);
        internal_counters.push_back(29706);

        c.DefineDerivedCounter("PSPixelsOut", "PixelShader", "Pixels exported from shader to color buffers. Does not include killed or alpha tested pixels; if there are multiple render targets, each render target receives one export, so this will be 2 for 1 pixel written to two RTs.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32", "24cba16c-baa6-6ecd-95ad-92ecb1338da1");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(28118);
        internal_counters.push_back(28343);
        internal_counters.push_back(28568);
        internal_counters.push_back(28793);
        internal_counters.push_back(29018);
        internal_counters.push_back(29243);
        internal_counters.push_back(29468);
        internal_counters.push_back(29693);
        internal_counters.push_back(28123);
        internal_counters.push_back(28348);
        internal_counters.push_back(28573);
        internal_counters.push_back(28798);
        internal_counters.push_back(29023);
        internal_counters.push_back(29248);
        internal_counters.push_back(29473);
        internal_counters.push_back(29698);
        internal_counters.push_back(28128);
        internal_counters.push_back(28353);
        internal_counters.push_back(28578);
        internal_counters.push_back(28803);
        internal_counters.push_back(29028);
        internal_counters.push_back(29253);
        internal_counters.push_back(29478);
        internal_counters.push_back(29703);
        internal_counters.push_back(28133);
        internal_counters.push_back(28358);
        internal_counters.push_back(28583);
        internal_counters.push_back(28808);
        internal_counters.push_back(29033);
        internal_counters.push_back(29258);
        internal_counters.push_back(29483);
        internal_counters.push_back(29708);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSExportStalls", "PixelShader", "Pixel shader output stalls. Percentage of GPUBusy. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,max32,32,/,(100),*", "9b4f466c-ff97-22bb-557d-84d3c4c51895");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(28118);
        internal_counters.push_back(28343);
        internal_counters.push_back(28568);
        internal_counters.push_back(28793);
        internal_counters.push_back(29018);
        internal_counters.push_back(29243);
        internal_counters.push_back(29468);
        internal_counters.push_back(29693);
        internal_counters.push_back(28123);
        internal_counters.push_back(28348);
        internal_counters.push_back(28573);
        internal_counters.push_back(28798);
        internal_counters.push_back(29023);
        internal_counters.push_back(29248);
        internal_counters.push_back(29473);
        internal_counters.push_back(29698);
        internal_counters.push_back(28128);
        internal_counters.push_back(28353);
        internal_counters.push_back(28578);
        internal_counters.push_back(28803);
        internal_counters.push_back(29028);
        internal_counters.push_back(29253);
        internal_counters.push_back(29478);
        internal_counters.push_back(29703);
        internal_counters.push_back(28133);
        internal_counters.push_back(28358);
        internal_counters.push_back(28583);
        internal_counters.push_back(28808);
        internal_counters.push_back(29033);
        internal_counters.push_back(29258);
        internal_counters.push_back(29483);
        internal_counters.push_back(29708);

        c.DefineDerivedCounter("PSExportStallsCycles", "PixelShader", "Number of GPU cycles the pixel shader output stalls. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,max32", "47c72aad-64e6-0864-d533-d8e0bc27c156");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19976);
        internal_counters.push_back(20488);
        internal_counters.push_back(21000);
        internal_counters.push_back(21512);
        internal_counters.push_back(19916);
        internal_counters.push_back(20428);
        internal_counters.push_back(20940);
        internal_counters.push_back(21452);

        c.DefineDerivedCounter("PSVALUInstCount", "PixelShader", "Average number of vector ALU instructions executed in the PS. Affected by flow control.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "eb74389e-435c-4137-ecf1-39eb5bc1cbfe");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19972);
        internal_counters.push_back(20484);
        internal_counters.push_back(20996);
        internal_counters.push_back(21508);
        internal_counters.push_back(19916);
        internal_counters.push_back(20428);
        internal_counters.push_back(20940);
        internal_counters.push_back(21452);

        c.DefineDerivedCounter("PSSALUInstCount", "PixelShader", "Average number of scalar ALU instructions executed in the PS. Affected by flow control.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "e6a06580-8a82-96d6-976c-acc121fc5516");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(20029);
        internal_counters.push_back(20541);
        internal_counters.push_back(21053);
        internal_counters.push_back(21565);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSVALUBusy", "PixelShader", "The percentage of GPUTime vector ALU instructions are being processed by the PS.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,sum4,NUM_SIMDS,/,4,/,(100),*", "6ce6fef7-8e33-10b4-f351-af755e177e85");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(20029);
        internal_counters.push_back(20541);
        internal_counters.push_back(21053);
        internal_counters.push_back(21565);

        c.DefineDerivedCounter("PSVALUBusyCycles", "PixelShader", "Number of GPU cycles where vector ALU instructions are being processed by the PS.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,sum4,NUM_SIMDS,/", "1e276f86-cd2a-72e7-fc9d-004f666f2981");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19972);
        internal_counters.push_back(20484);
        internal_counters.push_back(20996);
        internal_counters.push_back(21508);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSSALUBusy", "PixelShader", "The percentage of GPUTime scalar ALU instructions are being processed by the PS.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "2ff9f34f-e94b-af4d-18c2-5fbbf6d1727a");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(19972);
        internal_counters.push_back(20484);
        internal_counters.push_back(20996);
        internal_counters.push_back(21508);

        c.DefineDerivedCounter("PSSALUBusyCycles", "PixelShader", "Number of GPU cycles where scalar ALU instructions are being processed by the PS.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,sum4,NUM_CUS,/", "29808906-f128-b078-fc79-820a4b3b3b8d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSThreadGroups", "ComputeShader", "Total number of thread groups.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,sum8", "8ce3fc80-56b2-97f9-8e70-2e8c747cea68");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(10441);
        internal_counters.push_back(10773);
        internal_counters.push_back(11105);
        internal_counters.push_back(11437);
        internal_counters.push_back(10447);
        internal_counters.push_back(10779);
        internal_counters.push_back(11111);
        internal_counters.push_back(11443);

        c.DefineDerivedCounter("CSWavefronts", "ComputeShader", "The total number of wavefronts used for the CS.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,sum8", "42379c6e-369b-c237-8b25-cdb9cdc65c4d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);
        internal_counters.push_back(26064);
        internal_counters.push_back(26576);
        internal_counters.push_back(27088);
        internal_counters.push_back(27600);

        c.DefineDerivedCounter("CSThreads", "ComputeShader", "The number of CS threads processed by the hardware.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,4,5,6,7,sum8,8,9,10,11,sum4,ifnotzero", "7a648013-6eac-2665-ac36-13c6f4ac9c26");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26120);
        internal_counters.push_back(26632);
        internal_counters.push_back(27144);
        internal_counters.push_back(27656);
        internal_counters.push_back(26060);
        internal_counters.push_back(26572);
        internal_counters.push_back(27084);
        internal_counters.push_back(27596);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSVALUInsts", "ComputeShader", "The average number of vector ALU instructions executed per work-item (affected by flow control).", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "376cb1cc-5a40-9d1d-404c-f1736c0c5084");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26138);
        internal_counters.push_back(26650);
        internal_counters.push_back(27162);
        internal_counters.push_back(27674);
        internal_counters.push_back(26173);
        internal_counters.push_back(26685);
        internal_counters.push_back(27197);
        internal_counters.push_back(27709);
        internal_counters.push_back(26061);
        internal_counters.push_back(26573);
        internal_counters.push_back(27085);
        internal_counters.push_back(27597);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSVALUUtilization", "ComputeShader", "The percentage of active vector ALU threads in a wave. A lower number can mean either more thread divergence in a wave or that the work-group size is not a multiple of the wave size. Value range: 0% (bad), 100% (ideal - no thread divergence).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,(64),(32),8,9,10,11,sum4,ifnotzero,*,/,(100),*,4,5,6,7,sum4,ifnotzero,(100),min,12,13,14,15,16,17,18,19,sum8,ifnotzero", "ae943d2a-76e1-bb68-e1e2-0e06c9031611");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26116);
        internal_counters.push_back(26628);
        internal_counters.push_back(27140);
        internal_counters.push_back(27652);
        internal_counters.push_back(26060);
        internal_counters.push_back(26572);
        internal_counters.push_back(27084);
        internal_counters.push_back(27596);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSSALUInsts", "ComputeShader", "The average number of scalar ALU instructions executed per work-item (affected by flow control).", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "eb211144-8136-ff86-e8bf-4d0493a904cb");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26125);
        internal_counters.push_back(26637);
        internal_counters.push_back(27149);
        internal_counters.push_back(27661);
        internal_counters.push_back(26060);
        internal_counters.push_back(26572);
        internal_counters.push_back(27084);
        internal_counters.push_back(27596);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSVFetchInsts", "ComputeShader", "The average number of vector fetch instructions from the video memory executed per work-item (affected by flow control).", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "3e2829c0-6215-783b-c271-6d57ff2c520e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26117);
        internal_counters.push_back(26629);
        internal_counters.push_back(27141);
        internal_counters.push_back(27653);
        internal_counters.push_back(26060);
        internal_counters.push_back(26572);
        internal_counters.push_back(27084);
        internal_counters.push_back(27596);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSSFetchInsts", "ComputeShader", "The average number of scalar fetch instructions from the video memory executed per work-item (affected by flow control).", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "da09171c-6a0a-584f-fddc-dc5062d63a3e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26126);
        internal_counters.push_back(26638);
        internal_counters.push_back(27150);
        internal_counters.push_back(27662);
        internal_counters.push_back(26060);
        internal_counters.push_back(26572);
        internal_counters.push_back(27084);
        internal_counters.push_back(27596);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSVWriteInsts", "ComputeShader", "The average number of vector write instructions to the video memory executed per work-item (affected by flow control).", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "43438c22-e910-b377-b767-b32902e0df0d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26173);
        internal_counters.push_back(26685);
        internal_counters.push_back(27197);
        internal_counters.push_back(27709);
        internal_counters.push_back(24);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSVALUBusy", "ComputeShader", "The percentage of GPUTime vector ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "f1e64815-f6a8-c277-d4f9-d054b443e205");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26173);
        internal_counters.push_back(26685);
        internal_counters.push_back(27197);
        internal_counters.push_back(27709);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSVALUBusyCycles", "ComputeShader", "Number of GPU cycles where vector ALU instructions are processed.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "2d0d5852-2658-eb73-68d2-f23f7118c9c3");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26116);
        internal_counters.push_back(26628);
        internal_counters.push_back(27140);
        internal_counters.push_back(27652);
        internal_counters.push_back(24);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSSALUBusy", "ComputeShader", "The percentage of GPUTime scalar ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "3fc35f4e-9882-94e3-6f5f-4e81cd97082a");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26116);
        internal_counters.push_back(26628);
        internal_counters.push_back(27140);
        internal_counters.push_back(27652);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSSALUBusyCycles", "ComputeShader", "Number of GPU cycles where scalar ALU instructions are processed.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,sum4,NUM_CUS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "de58f8fc-8ed4-a799-648d-62ded7b1c4c4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29919);
        internal_counters.push_back(30155);
        internal_counters.push_back(30391);
        internal_counters.push_back(30627);
        internal_counters.push_back(30863);
        internal_counters.push_back(31099);
        internal_counters.push_back(31335);
        internal_counters.push_back(31571);
        internal_counters.push_back(31807);
        internal_counters.push_back(32043);
        internal_counters.push_back(32279);
        internal_counters.push_back(32515);
        internal_counters.push_back(32751);
        internal_counters.push_back(32987);
        internal_counters.push_back(33223);
        internal_counters.push_back(33459);
        internal_counters.push_back(33695);
        internal_counters.push_back(33931);
        internal_counters.push_back(34167);
        internal_counters.push_back(34403);
        internal_counters.push_back(34639);
        internal_counters.push_back(34875);
        internal_counters.push_back(35111);
        internal_counters.push_back(35347);
        internal_counters.push_back(35583);
        internal_counters.push_back(35819);
        internal_counters.push_back(36055);
        internal_counters.push_back(36291);
        internal_counters.push_back(36527);
        internal_counters.push_back(36763);
        internal_counters.push_back(36999);
        internal_counters.push_back(37235);
        internal_counters.push_back(37471);
        internal_counters.push_back(37707);
        internal_counters.push_back(37943);
        internal_counters.push_back(38179);
        internal_counters.push_back(38415);
        internal_counters.push_back(38651);
        internal_counters.push_back(38887);
        internal_counters.push_back(39123);
        internal_counters.push_back(39359);
        internal_counters.push_back(39595);
        internal_counters.push_back(39831);
        internal_counters.push_back(40067);
        internal_counters.push_back(40303);
        internal_counters.push_back(40539);
        internal_counters.push_back(40775);
        internal_counters.push_back(41011);
        internal_counters.push_back(41247);
        internal_counters.push_back(41483);
        internal_counters.push_back(41719);
        internal_counters.push_back(41955);
        internal_counters.push_back(42191);
        internal_counters.push_back(42427);
        internal_counters.push_back(42663);
        internal_counters.push_back(42899);
        internal_counters.push_back(43135);
        internal_counters.push_back(43371);
        internal_counters.push_back(43607);
        internal_counters.push_back(43843);
        internal_counters.push_back(44079);
        internal_counters.push_back(44315);
        internal_counters.push_back(44551);
        internal_counters.push_back(44787);
        internal_counters.push_back(45023);
        internal_counters.push_back(45259);
        internal_counters.push_back(45495);
        internal_counters.push_back(45731);
        internal_counters.push_back(45967);
        internal_counters.push_back(46203);
        internal_counters.push_back(46439);
        internal_counters.push_back(46675);
        internal_counters.push_back(46911);
        internal_counters.push_back(47147);
        internal_counters.push_back(47383);
        internal_counters.push_back(47619);
        internal_counters.push_back(47855);
        internal_counters.push_back(48091);
        internal_counters.push_back(48327);
        internal_counters.push_back(48563);
        internal_counters.push_back(24);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSMemUnitBusy", "ComputeShader", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*,81,82,83,84,85,86,87,88,sum8,ifnotzero", "42ab96e1-0a24-96c8-c4ff-098fa267d78e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29919);
        internal_counters.push_back(30155);
        internal_counters.push_back(30391);
        internal_counters.push_back(30627);
        internal_counters.push_back(30863);
        internal_counters.push_back(31099);
        internal_counters.push_back(31335);
        internal_counters.push_back(31571);
        internal_counters.push_back(31807);
        internal_counters.push_back(32043);
        internal_counters.push_back(32279);
        internal_counters.push_back(32515);
        internal_counters.push_back(32751);
        internal_counters.push_back(32987);
        internal_counters.push_back(33223);
        internal_counters.push_back(33459);
        internal_counters.push_back(33695);
        internal_counters.push_back(33931);
        internal_counters.push_back(34167);
        internal_counters.push_back(34403);
        internal_counters.push_back(34639);
        internal_counters.push_back(34875);
        internal_counters.push_back(35111);
        internal_counters.push_back(35347);
        internal_counters.push_back(35583);
        internal_counters.push_back(35819);
        internal_counters.push_back(36055);
        internal_counters.push_back(36291);
        internal_counters.push_back(36527);
        internal_counters.push_back(36763);
        internal_counters.push_back(36999);
        internal_counters.push_back(37235);
        internal_counters.push_back(37471);
        internal_counters.push_back(37707);
        internal_counters.push_back(37943);
        internal_counters.push_back(38179);
        internal_counters.push_back(38415);
        internal_counters.push_back(38651);
        internal_counters.push_back(38887);
        internal_counters.push_back(39123);
        internal_counters.push_back(39359);
        internal_counters.push_back(39595);
        internal_counters.push_back(39831);
        internal_counters.push_back(40067);
        internal_counters.push_back(40303);
        internal_counters.push_back(40539);
        internal_counters.push_back(40775);
        internal_counters.push_back(41011);
        internal_counters.push_back(41247);
        internal_counters.push_back(41483);
        internal_counters.push_back(41719);
        internal_counters.push_back(41955);
        internal_counters.push_back(42191);
        internal_counters.push_back(42427);
        internal_counters.push_back(42663);
        internal_counters.push_back(42899);
        internal_counters.push_back(43135);
        internal_counters.push_back(43371);
        internal_counters.push_back(43607);
        internal_counters.push_back(43843);
        internal_counters.push_back(44079);
        internal_counters.push_back(44315);
        internal_counters.push_back(44551);
        internal_counters.push_back(44787);
        internal_counters.push_back(45023);
        internal_counters.push_back(45259);
        internal_counters.push_back(45495);
        internal_counters.push_back(45731);
        internal_counters.push_back(45967);
        internal_counters.push_back(46203);
        internal_counters.push_back(46439);
        internal_counters.push_back(46675);
        internal_counters.push_back(46911);
        internal_counters.push_back(47147);
        internal_counters.push_back(47383);
        internal_counters.push_back(47619);
        internal_counters.push_back(47855);
        internal_counters.push_back(48091);
        internal_counters.push_back(48327);
        internal_counters.push_back(48563);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSMemUnitBusyCycles", "ComputeShader", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,81,82,83,84,85,86,87,sum8,ifnotzero", "39d5687f-c727-7c0c-af82-bb711d3897ed");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(64180);
        internal_counters.push_back(64241);
        internal_counters.push_back(64302);
        internal_counters.push_back(64363);
        internal_counters.push_back(64424);
        internal_counters.push_back(64485);
        internal_counters.push_back(64546);
        internal_counters.push_back(64607);
        internal_counters.push_back(64668);
        internal_counters.push_back(64729);
        internal_counters.push_back(64790);
        internal_counters.push_back(64851);
        internal_counters.push_back(64912);
        internal_counters.push_back(64973);
        internal_counters.push_back(65034);
        internal_counters.push_back(65095);
        internal_counters.push_back(65156);
        internal_counters.push_back(65217);
        internal_counters.push_back(65278);
        internal_counters.push_back(65339);
        internal_counters.push_back(65400);
        internal_counters.push_back(65461);
        internal_counters.push_back(65522);
        internal_counters.push_back(65583);
        internal_counters.push_back(65644);
        internal_counters.push_back(65705);
        internal_counters.push_back(65766);
        internal_counters.push_back(65827);
        internal_counters.push_back(65888);
        internal_counters.push_back(65949);
        internal_counters.push_back(66010);
        internal_counters.push_back(66071);
        internal_counters.push_back(66132);
        internal_counters.push_back(66193);
        internal_counters.push_back(66254);
        internal_counters.push_back(66315);
        internal_counters.push_back(66376);
        internal_counters.push_back(66437);
        internal_counters.push_back(66498);
        internal_counters.push_back(66559);
        internal_counters.push_back(66620);
        internal_counters.push_back(66681);
        internal_counters.push_back(66742);
        internal_counters.push_back(66803);
        internal_counters.push_back(66864);
        internal_counters.push_back(66925);
        internal_counters.push_back(66986);
        internal_counters.push_back(67047);
        internal_counters.push_back(67108);
        internal_counters.push_back(67169);
        internal_counters.push_back(67230);
        internal_counters.push_back(67291);
        internal_counters.push_back(67352);
        internal_counters.push_back(67413);
        internal_counters.push_back(67474);
        internal_counters.push_back(67535);
        internal_counters.push_back(67596);
        internal_counters.push_back(67657);
        internal_counters.push_back(67718);
        internal_counters.push_back(67779);
        internal_counters.push_back(67840);
        internal_counters.push_back(67901);
        internal_counters.push_back(67962);
        internal_counters.push_back(68023);
        internal_counters.push_back(68084);
        internal_counters.push_back(68145);
        internal_counters.push_back(68206);
        internal_counters.push_back(68267);
        internal_counters.push_back(68328);
        internal_counters.push_back(68389);
        internal_counters.push_back(68450);
        internal_counters.push_back(68511);
        internal_counters.push_back(68572);
        internal_counters.push_back(68633);
        internal_counters.push_back(68694);
        internal_counters.push_back(68755);
        internal_counters.push_back(68816);
        internal_counters.push_back(68877);
        internal_counters.push_back(68938);
        internal_counters.push_back(68999);
        internal_counters.push_back(24);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSMemUnitStalled", "ComputeShader", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*,81,82,83,84,85,86,87,88,sum8,ifnotzero", "f18e8679-1511-d533-d9ee-4365197f7d0c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(64180);
        internal_counters.push_back(64241);
        internal_counters.push_back(64302);
        internal_counters.push_back(64363);
        internal_counters.push_back(64424);
        internal_counters.push_back(64485);
        internal_counters.push_back(64546);
        internal_counters.push_back(64607);
        internal_counters.push_back(64668);
        internal_counters.push_back(64729);
        internal_counters.push_back(64790);
        internal_counters.push_back(64851);
        internal_counters.push_back(64912);
        internal_counters.push_back(64973);
        internal_counters.push_back(65034);
        internal_counters.push_back(65095);
        internal_counters.push_back(65156);
        internal_counters.push_back(65217);
        internal_counters.push_back(65278);
        internal_counters.push_back(65339);
        internal_counters.push_back(65400);
        internal_counters.push_back(65461);
        internal_counters.push_back(65522);
        internal_counters.push_back(65583);
        internal_counters.push_back(65644);
        internal_counters.push_back(65705);
        internal_counters.push_back(65766);
        internal_counters.push_back(65827);
        internal_counters.push_back(65888);
        internal_counters.push_back(65949);
        internal_counters.push_back(66010);
        internal_counters.push_back(66071);
        internal_counters.push_back(66132);
        internal_counters.push_back(66193);
        internal_counters.push_back(66254);
        internal_counters.push_back(66315);
        internal_counters.push_back(66376);
        internal_counters.push_back(66437);
        internal_counters.push_back(66498);
        internal_counters.push_back(66559);
        internal_counters.push_back(66620);
        internal_counters.push_back(66681);
        internal_counters.push_back(66742);
        internal_counters.push_back(66803);
        internal_counters.push_back(66864);
        internal_counters.push_back(66925);
        internal_counters.push_back(66986);
        internal_counters.push_back(67047);
        internal_counters.push_back(67108);
        internal_counters.push_back(67169);
        internal_counters.push_back(67230);
        internal_counters.push_back(67291);
        internal_counters.push_back(67352);
        internal_counters.push_back(67413);
        internal_counters.push_back(67474);
        internal_counters.push_back(67535);
        internal_counters.push_back(67596);
        internal_counters.push_back(67657);
        internal_counters.push_back(67718);
        internal_counters.push_back(67779);
        internal_counters.push_back(67840);
        internal_counters.push_back(67901);
        internal_counters.push_back(67962);
        internal_counters.push_back(68023);
        internal_counters.push_back(68084);
        internal_counters.push_back(68145);
        internal_counters.push_back(68206);
        internal_counters.push_back(68267);
        internal_counters.push_back(68328);
        internal_counters.push_back(68389);
        internal_counters.push_back(68450);
        internal_counters.push_back(68511);
        internal_counters.push_back(68572);
        internal_counters.push_back(68633);
        internal_counters.push_back(68694);
        internal_counters.push_back(68755);
        internal_counters.push_back(68816);
        internal_counters.push_back(68877);
        internal_counters.push_back(68938);
        internal_counters.push_back(68999);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSMemUnitStalledCycles", "ComputeShader", "Number of GPU cycles the memory unit is stalled. Try reducing the number or size of fetches and writes if possible.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,81,82,83,84,85,86,87,sum8,ifnotzero", "51991c84-ed2b-bf31-c4ab-8f8e9eb8f29f");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(98407);
        internal_counters.push_back(98661);
        internal_counters.push_back(98915);
        internal_counters.push_back(99169);
        internal_counters.push_back(99423);
        internal_counters.push_back(99677);
        internal_counters.push_back(99931);
        internal_counters.push_back(100185);
        internal_counters.push_back(100439);
        internal_counters.push_back(100693);
        internal_counters.push_back(100947);
        internal_counters.push_back(101201);
        internal_counters.push_back(101455);
        internal_counters.push_back(101709);
        internal_counters.push_back(101963);
        internal_counters.push_back(102217);
        internal_counters.push_back(24);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSWriteUnitStalled", "ComputeShader", "The percentage of GPUTime the write unit is stalled.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*,17,18,19,20,21,22,23,24,sum8,ifnotzero", "55118f7a-8f92-726f-78c6-407f689a2eb4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(98407);
        internal_counters.push_back(98661);
        internal_counters.push_back(98915);
        internal_counters.push_back(99169);
        internal_counters.push_back(99423);
        internal_counters.push_back(99677);
        internal_counters.push_back(99931);
        internal_counters.push_back(100185);
        internal_counters.push_back(100439);
        internal_counters.push_back(100693);
        internal_counters.push_back(100947);
        internal_counters.push_back(101201);
        internal_counters.push_back(101455);
        internal_counters.push_back(101709);
        internal_counters.push_back(101963);
        internal_counters.push_back(102217);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSWriteUnitStalledCycles", "ComputeShader", "Number of GPU cycles the write unit is stalled.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,17,18,19,20,21,22,23,sum8,ifnotzero", "be164c60-5e48-acac-9622-29616d09aa9a");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26111);
        internal_counters.push_back(26623);
        internal_counters.push_back(27135);
        internal_counters.push_back(27647);
        internal_counters.push_back(26060);
        internal_counters.push_back(26572);
        internal_counters.push_back(27084);
        internal_counters.push_back(27596);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSGDSInsts", "ComputeShader", "The average number of GDS read or GDS write instructions executed per work item (affected by flow control).", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "2a867f3e-4a37-ad16-55d1-f03d74707819");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26115);
        internal_counters.push_back(26627);
        internal_counters.push_back(27139);
        internal_counters.push_back(27651);
        internal_counters.push_back(26060);
        internal_counters.push_back(26572);
        internal_counters.push_back(27084);
        internal_counters.push_back(27596);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSLDSInsts", "ComputeShader", "The average number of LDS read/write instructions executed per work-item (affected by flow control).", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "61b0b351-7e06-ef8e-a8e0-7a9e3200a836");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26087);
        internal_counters.push_back(26599);
        internal_counters.push_back(27111);
        internal_counters.push_back(27623);
        internal_counters.push_back(26060);
        internal_counters.push_back(26572);
        internal_counters.push_back(27084);
        internal_counters.push_back(27596);
        internal_counters.push_back(24);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSALUStalledByLDS", "ComputeShader", "The percentage of GPUTime ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible. Value range: 0% (optimal) to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,/,NUM_SHADER_ENGINES,/,(100),*,4,5,6,7,sum4,ifnotzero,9,10,11,12,13,14,15,16,sum8,ifnotzero", "6dc4f1c2-bad0-c9ff-156e-883b319a752a");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26087);
        internal_counters.push_back(26599);
        internal_counters.push_back(27111);
        internal_counters.push_back(27623);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSALUStalledByLDSCycles", "ComputeShader", "Number of GPU cycles the ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,sum4,NUM_SHADER_ENGINES,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "8f3d5f25-2159-0374-fafe-e26a7799b6c8");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26341);
        internal_counters.push_back(26853);
        internal_counters.push_back(27365);
        internal_counters.push_back(27877);
        internal_counters.push_back(24);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSLDSBankConflict", "ComputeShader", "The percentage of GPUTime LDS is stalled by bank conflicts. Value range: 0% (optimal) to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,sum4,4,/,NUM_SIMDS,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "1065ee10-2e41-ea41-1eb3-b61b491752f4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26341);
        internal_counters.push_back(26853);
        internal_counters.push_back(27365);
        internal_counters.push_back(27877);
        internal_counters.push_back(10438);
        internal_counters.push_back(10770);
        internal_counters.push_back(11102);
        internal_counters.push_back(11434);
        internal_counters.push_back(10444);
        internal_counters.push_back(10776);
        internal_counters.push_back(11108);
        internal_counters.push_back(11440);

        c.DefineDerivedCounter("CSLDSBankConflictCycles", "ComputeShader", "Number of GPU cycles the LDS is stalled by bank conflicts. Value range: 0 (optimal) to GPUBusyCycles (bad).", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "1fd1adf3-c51e-94fd-083e-c482a0a0809e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29919);
        internal_counters.push_back(30155);
        internal_counters.push_back(30391);
        internal_counters.push_back(30627);
        internal_counters.push_back(30863);
        internal_counters.push_back(31099);
        internal_counters.push_back(31335);
        internal_counters.push_back(31571);
        internal_counters.push_back(31807);
        internal_counters.push_back(32043);
        internal_counters.push_back(32279);
        internal_counters.push_back(32515);
        internal_counters.push_back(32751);
        internal_counters.push_back(32987);
        internal_counters.push_back(33223);
        internal_counters.push_back(33459);
        internal_counters.push_back(33695);
        internal_counters.push_back(33931);
        internal_counters.push_back(34167);
        internal_counters.push_back(34403);
        internal_counters.push_back(34639);
        internal_counters.push_back(34875);
        internal_counters.push_back(35111);
        internal_counters.push_back(35347);
        internal_counters.push_back(35583);
        internal_counters.push_back(35819);
        internal_counters.push_back(36055);
        internal_counters.push_back(36291);
        internal_counters.push_back(36527);
        internal_counters.push_back(36763);
        internal_counters.push_back(36999);
        internal_counters.push_back(37235);
        internal_counters.push_back(37471);
        internal_counters.push_back(37707);
        internal_counters.push_back(37943);
        internal_counters.push_back(38179);
        internal_counters.push_back(38415);
        internal_counters.push_back(38651);
        internal_counters.push_back(38887);
        internal_counters.push_back(39123);
        internal_counters.push_back(39359);
        internal_counters.push_back(39595);
        internal_counters.push_back(39831);
        internal_counters.push_back(40067);
        internal_counters.push_back(40303);
        internal_counters.push_back(40539);
        internal_counters.push_back(40775);
        internal_counters.push_back(41011);
        internal_counters.push_back(41247);
        internal_counters.push_back(41483);
        internal_counters.push_back(41719);
        internal_counters.push_back(41955);
        internal_counters.push_back(42191);
        internal_counters.push_back(42427);
        internal_counters.push_back(42663);
        internal_counters.push_back(42899);
        internal_counters.push_back(43135);
        internal_counters.push_back(43371);
        internal_counters.push_back(43607);
        internal_counters.push_back(43843);
        internal_counters.push_back(44079);
        internal_counters.push_back(44315);
        internal_counters.push_back(44551);
        internal_counters.push_back(44787);
        internal_counters.push_back(45023);
        internal_counters.push_back(45259);
        internal_counters.push_back(45495);
        internal_counters.push_back(45731);
        internal_counters.push_back(45967);
        internal_counters.push_back(46203);
        internal_counters.push_back(46439);
        internal_counters.push_back(46675);
        internal_counters.push_back(46911);
        internal_counters.push_back(47147);
        internal_counters.push_back(47383);
        internal_counters.push_back(47619);
        internal_counters.push_back(47855);
        internal_counters.push_back(48091);
        internal_counters.push_back(48327);
        internal_counters.push_back(48563);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("TexUnitBusy", "Timing", "The percentage of GPUTime the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*", "36afb8d9-42fc-aafe-66c5-449542153b2c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29919);
        internal_counters.push_back(30155);
        internal_counters.push_back(30391);
        internal_counters.push_back(30627);
        internal_counters.push_back(30863);
        internal_counters.push_back(31099);
        internal_counters.push_back(31335);
        internal_counters.push_back(31571);
        internal_counters.push_back(31807);
        internal_counters.push_back(32043);
        internal_counters.push_back(32279);
        internal_counters.push_back(32515);
        internal_counters.push_back(32751);
        internal_counters.push_back(32987);
        internal_counters.push_back(33223);
        internal_counters.push_back(33459);
        internal_counters.push_back(33695);
        internal_counters.push_back(33931);
        internal_counters.push_back(34167);
        internal_counters.push_back(34403);
        internal_counters.push_back(34639);
        internal_counters.push_back(34875);
        internal_counters.push_back(35111);
        internal_counters.push_back(35347);
        internal_counters.push_back(35583);
        internal_counters.push_back(35819);
        internal_counters.push_back(36055);
        internal_counters.push_back(36291);
        internal_counters.push_back(36527);
        internal_counters.push_back(36763);
        internal_counters.push_back(36999);
        internal_counters.push_back(37235);
        internal_counters.push_back(37471);
        internal_counters.push_back(37707);
        internal_counters.push_back(37943);
        internal_counters.push_back(38179);
        internal_counters.push_back(38415);
        internal_counters.push_back(38651);
        internal_counters.push_back(38887);
        internal_counters.push_back(39123);
        internal_counters.push_back(39359);
        internal_counters.push_back(39595);
        internal_counters.push_back(39831);
        internal_counters.push_back(40067);
        internal_counters.push_back(40303);
        internal_counters.push_back(40539);
        internal_counters.push_back(40775);
        internal_counters.push_back(41011);
        internal_counters.push_back(41247);
        internal_counters.push_back(41483);
        internal_counters.push_back(41719);
        internal_counters.push_back(41955);
        internal_counters.push_back(42191);
        internal_counters.push_back(42427);
        internal_counters.push_back(42663);
        internal_counters.push_back(42899);
        internal_counters.push_back(43135);
        internal_counters.push_back(43371);
        internal_counters.push_back(43607);
        internal_counters.push_back(43843);
        internal_counters.push_back(44079);
        internal_counters.push_back(44315);
        internal_counters.push_back(44551);
        internal_counters.push_back(44787);
        internal_counters.push_back(45023);
        internal_counters.push_back(45259);
        internal_counters.push_back(45495);
        internal_counters.push_back(45731);
        internal_counters.push_back(45967);
        internal_counters.push_back(46203);
        internal_counters.push_back(46439);
        internal_counters.push_back(46675);
        internal_counters.push_back(46911);
        internal_counters.push_back(47147);
        internal_counters.push_back(47383);
        internal_counters.push_back(47619);
        internal_counters.push_back(47855);
        internal_counters.push_back(48091);
        internal_counters.push_back(48327);
        internal_counters.push_back(48563);

        c.DefineDerivedCounter("TexUnitBusyCycles", "Timing", "Number of GPU cycles the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80", "c68761f2-248c-4f39-6528-c308b1c0807c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29993);
        internal_counters.push_back(30229);
        internal_counters.push_back(30465);
        internal_counters.push_back(30701);
        internal_counters.push_back(30937);
        internal_counters.push_back(31173);
        internal_counters.push_back(31409);
        internal_counters.push_back(31645);
        internal_counters.push_back(31881);
        internal_counters.push_back(32117);
        internal_counters.push_back(32353);
        internal_counters.push_back(32589);
        internal_counters.push_back(32825);
        internal_counters.push_back(33061);
        internal_counters.push_back(33297);
        internal_counters.push_back(33533);
        internal_counters.push_back(33769);
        internal_counters.push_back(34005);
        internal_counters.push_back(34241);
        internal_counters.push_back(34477);
        internal_counters.push_back(34713);
        internal_counters.push_back(34949);
        internal_counters.push_back(35185);
        internal_counters.push_back(35421);
        internal_counters.push_back(35657);
        internal_counters.push_back(35893);
        internal_counters.push_back(36129);
        internal_counters.push_back(36365);
        internal_counters.push_back(36601);
        internal_counters.push_back(36837);
        internal_counters.push_back(37073);
        internal_counters.push_back(37309);
        internal_counters.push_back(37545);
        internal_counters.push_back(37781);
        internal_counters.push_back(38017);
        internal_counters.push_back(38253);
        internal_counters.push_back(38489);
        internal_counters.push_back(38725);
        internal_counters.push_back(38961);
        internal_counters.push_back(39197);
        internal_counters.push_back(39433);
        internal_counters.push_back(39669);
        internal_counters.push_back(39905);
        internal_counters.push_back(40141);
        internal_counters.push_back(40377);
        internal_counters.push_back(40613);
        internal_counters.push_back(40849);
        internal_counters.push_back(41085);
        internal_counters.push_back(41321);
        internal_counters.push_back(41557);
        internal_counters.push_back(41793);
        internal_counters.push_back(42029);
        internal_counters.push_back(42265);
        internal_counters.push_back(42501);
        internal_counters.push_back(42737);
        internal_counters.push_back(42973);
        internal_counters.push_back(43209);
        internal_counters.push_back(43445);
        internal_counters.push_back(43681);
        internal_counters.push_back(43917);
        internal_counters.push_back(44153);
        internal_counters.push_back(44389);
        internal_counters.push_back(44625);
        internal_counters.push_back(44861);
        internal_counters.push_back(45097);
        internal_counters.push_back(45333);
        internal_counters.push_back(45569);
        internal_counters.push_back(45805);
        internal_counters.push_back(46041);
        internal_counters.push_back(46277);
        internal_counters.push_back(46513);
        internal_counters.push_back(46749);
        internal_counters.push_back(46985);
        internal_counters.push_back(47221);
        internal_counters.push_back(47457);
        internal_counters.push_back(47693);
        internal_counters.push_back(47929);
        internal_counters.push_back(48165);
        internal_counters.push_back(48401);
        internal_counters.push_back(48637);
        internal_counters.push_back(29994);
        internal_counters.push_back(30230);
        internal_counters.push_back(30466);
        internal_counters.push_back(30702);
        internal_counters.push_back(30938);
        internal_counters.push_back(31174);
        internal_counters.push_back(31410);
        internal_counters.push_back(31646);
        internal_counters.push_back(31882);
        internal_counters.push_back(32118);
        internal_counters.push_back(32354);
        internal_counters.push_back(32590);
        internal_counters.push_back(32826);
        internal_counters.push_back(33062);
        internal_counters.push_back(33298);
        internal_counters.push_back(33534);
        internal_counters.push_back(33770);
        internal_counters.push_back(34006);
        internal_counters.push_back(34242);
        internal_counters.push_back(34478);
        internal_counters.push_back(34714);
        internal_counters.push_back(34950);
        internal_counters.push_back(35186);
        internal_counters.push_back(35422);
        internal_counters.push_back(35658);
        internal_counters.push_back(35894);
        internal_counters.push_back(36130);
        internal_counters.push_back(36366);
        internal_counters.push_back(36602);
        internal_counters.push_back(36838);
        internal_counters.push_back(37074);
        internal_counters.push_back(37310);
        internal_counters.push_back(37546);
        internal_counters.push_back(37782);
        internal_counters.push_back(38018);
        internal_counters.push_back(38254);
        internal_counters.push_back(38490);
        internal_counters.push_back(38726);
        internal_counters.push_back(38962);
        internal_counters.push_back(39198);
        internal_counters.push_back(39434);
        internal_counters.push_back(39670);
        internal_counters.push_back(39906);
        internal_counters.push_back(40142);
        internal_counters.push_back(40378);
        internal_counters.push_back(40614);
        internal_counters.push_back(40850);
        internal_counters.push_back(41086);
        internal_counters.push_back(41322);
        internal_counters.push_back(41558);
        internal_counters.push_back(41794);
        internal_counters.push_back(42030);
        internal_counters.push_back(42266);
        internal_counters.push_back(42502);
        internal_counters.push_back(42738);
        internal_counters.push_back(42974);
        internal_counters.push_back(43210);
        internal_counters.push_back(43446);
        internal_counters.push_back(43682);
        internal_counters.push_back(43918);
        internal_counters.push_back(44154);
        internal_counters.push_back(44390);
        internal_counters.push_back(44626);
        internal_counters.push_back(44862);
        internal_counters.push_back(45098);
        internal_counters.push_back(45334);
        internal_counters.push_back(45570);
        internal_counters.push_back(45806);
        internal_counters.push_back(46042);
        internal_counters.push_back(46278);
        internal_counters.push_back(46514);
        internal_counters.push_back(46750);
        internal_counters.push_back(46986);
        internal_counters.push_back(47222);
        internal_counters.push_back(47458);
        internal_counters.push_back(47694);
        internal_counters.push_back(47930);
        internal_counters.push_back(48166);
        internal_counters.push_back(48402);
        internal_counters.push_back(48638);
        internal_counters.push_back(29995);
        internal_counters.push_back(30231);
        internal_counters.push_back(30467);
        internal_counters.push_back(30703);
        internal_counters.push_back(30939);
        internal_counters.push_back(31175);
        internal_counters.push_back(31411);
        internal_counters.push_back(31647);
        internal_counters.push_back(31883);
        internal_counters.push_back(32119);
        internal_counters.push_back(32355);
        internal_counters.push_back(32591);
        internal_counters.push_back(32827);
        internal_counters.push_back(33063);
        internal_counters.push_back(33299);
        internal_counters.push_back(33535);
        internal_counters.push_back(33771);
        internal_counters.push_back(34007);
        internal_counters.push_back(34243);
        internal_counters.push_back(34479);
        internal_counters.push_back(34715);
        internal_counters.push_back(34951);
        internal_counters.push_back(35187);
        internal_counters.push_back(35423);
        internal_counters.push_back(35659);
        internal_counters.push_back(35895);
        internal_counters.push_back(36131);
        internal_counters.push_back(36367);
        internal_counters.push_back(36603);
        internal_counters.push_back(36839);
        internal_counters.push_back(37075);
        internal_counters.push_back(37311);
        internal_counters.push_back(37547);
        internal_counters.push_back(37783);
        internal_counters.push_back(38019);
        internal_counters.push_back(38255);
        internal_counters.push_back(38491);
        internal_counters.push_back(38727);
        internal_counters.push_back(38963);
        internal_counters.push_back(39199);
        internal_counters.push_back(39435);
        internal_counters.push_back(39671);
        internal_counters.push_back(39907);
        internal_counters.push_back(40143);
        internal_counters.push_back(40379);
        internal_counters.push_back(40615);
        internal_counters.push_back(40851);
        internal_counters.push_back(41087);
        internal_counters.push_back(41323);
        internal_counters.push_back(41559);
        internal_counters.push_back(41795);
        internal_counters.push_back(42031);
        internal_counters.push_back(42267);
        internal_counters.push_back(42503);
        internal_counters.push_back(42739);
        internal_counters.push_back(42975);
        internal_counters.push_back(43211);
        internal_counters.push_back(43447);
        internal_counters.push_back(43683);
        internal_counters.push_back(43919);
        internal_counters.push_back(44155);
        internal_counters.push_back(44391);
        internal_counters.push_back(44627);
        internal_counters.push_back(44863);
        internal_counters.push_back(45099);
        internal_counters.push_back(45335);
        internal_counters.push_back(45571);
        internal_counters.push_back(45807);
        internal_counters.push_back(46043);
        internal_counters.push_back(46279);
        internal_counters.push_back(46515);
        internal_counters.push_back(46751);
        internal_counters.push_back(46987);
        internal_counters.push_back(47223);
        internal_counters.push_back(47459);
        internal_counters.push_back(47695);
        internal_counters.push_back(47931);
        internal_counters.push_back(48167);
        internal_counters.push_back(48403);
        internal_counters.push_back(48639);
        internal_counters.push_back(29996);
        internal_counters.push_back(30232);
        internal_counters.push_back(30468);
        internal_counters.push_back(30704);
        internal_counters.push_back(30940);
        internal_counters.push_back(31176);
        internal_counters.push_back(31412);
        internal_counters.push_back(31648);
        internal_counters.push_back(31884);
        internal_counters.push_back(32120);
        internal_counters.push_back(32356);
        internal_counters.push_back(32592);
        internal_counters.push_back(32828);
        internal_counters.push_back(33064);
        internal_counters.push_back(33300);
        internal_counters.push_back(33536);
        internal_counters.push_back(33772);
        internal_counters.push_back(34008);
        internal_counters.push_back(34244);
        internal_counters.push_back(34480);
        internal_counters.push_back(34716);
        internal_counters.push_back(34952);
        internal_counters.push_back(35188);
        internal_counters.push_back(35424);
        internal_counters.push_back(35660);
        internal_counters.push_back(35896);
        internal_counters.push_back(36132);
        internal_counters.push_back(36368);
        internal_counters.push_back(36604);
        internal_counters.push_back(36840);
        internal_counters.push_back(37076);
        internal_counters.push_back(37312);
        internal_counters.push_back(37548);
        internal_counters.push_back(37784);
        internal_counters.push_back(38020);
        internal_counters.push_back(38256);
        internal_counters.push_back(38492);
        internal_counters.push_back(38728);
        internal_counters.push_back(38964);
        internal_counters.push_back(39200);
        internal_counters.push_back(39436);
        internal_counters.push_back(39672);
        internal_counters.push_back(39908);
        internal_counters.push_back(40144);
        internal_counters.push_back(40380);
        internal_counters.push_back(40616);
        internal_counters.push_back(40852);
        internal_counters.push_back(41088);
        internal_counters.push_back(41324);
        internal_counters.push_back(41560);
        internal_counters.push_back(41796);
        internal_counters.push_back(42032);
        internal_counters.push_back(42268);
        internal_counters.push_back(42504);
        internal_counters.push_back(42740);
        internal_counters.push_back(42976);
        internal_counters.push_back(43212);
        internal_counters.push_back(43448);
        internal_counters.push_back(43684);
        internal_counters.push_back(43920);
        internal_counters.push_back(44156);
        internal_counters.push_back(44392);
        internal_counters.push_back(44628);
        internal_counters.push_back(44864);
        internal_counters.push_back(45100);
        internal_counters.push_back(45336);
        internal_counters.push_back(45572);
        internal_counters.push_back(45808);
        internal_counters.push_back(46044);
        internal_counters.push_back(46280);
        internal_counters.push_back(46516);
        internal_counters.push_back(46752);
        internal_counters.push_back(46988);
        internal_counters.push_back(47224);
        internal_counters.push_back(47460);
        internal_counters.push_back(47696);
        internal_counters.push_back(47932);
        internal_counters.push_back(48168);
        internal_counters.push_back(48404);
        internal_counters.push_back(48640);
        internal_counters.push_back(29997);
        internal_counters.push_back(30233);
        internal_counters.push_back(30469);
        internal_counters.push_back(30705);
        internal_counters.push_back(30941);
        internal_counters.push_back(31177);
        internal_counters.push_back(31413);
        internal_counters.push_back(31649);
        internal_counters.push_back(31885);
        internal_counters.push_back(32121);
        internal_counters.push_back(32357);
        internal_counters.push_back(32593);
        internal_counters.push_back(32829);
        internal_counters.push_back(33065);
        internal_counters.push_back(33301);
        internal_counters.push_back(33537);
        internal_counters.push_back(33773);
        internal_counters.push_back(34009);
        internal_counters.push_back(34245);
        internal_counters.push_back(34481);
        internal_counters.push_back(34717);
        internal_counters.push_back(34953);
        internal_counters.push_back(35189);
        internal_counters.push_back(35425);
        internal_counters.push_back(35661);
        internal_counters.push_back(35897);
        internal_counters.push_back(36133);
        internal_counters.push_back(36369);
        internal_counters.push_back(36605);
        internal_counters.push_back(36841);
        internal_counters.push_back(37077);
        internal_counters.push_back(37313);
        internal_counters.push_back(37549);
        internal_counters.push_back(37785);
        internal_counters.push_back(38021);
        internal_counters.push_back(38257);
        internal_counters.push_back(38493);
        internal_counters.push_back(38729);
        internal_counters.push_back(38965);
        internal_counters.push_back(39201);
        internal_counters.push_back(39437);
        internal_counters.push_back(39673);
        internal_counters.push_back(39909);
        internal_counters.push_back(40145);
        internal_counters.push_back(40381);
        internal_counters.push_back(40617);
        internal_counters.push_back(40853);
        internal_counters.push_back(41089);
        internal_counters.push_back(41325);
        internal_counters.push_back(41561);
        internal_counters.push_back(41797);
        internal_counters.push_back(42033);
        internal_counters.push_back(42269);
        internal_counters.push_back(42505);
        internal_counters.push_back(42741);
        internal_counters.push_back(42977);
        internal_counters.push_back(43213);
        internal_counters.push_back(43449);
        internal_counters.push_back(43685);
        internal_counters.push_back(43921);
        internal_counters.push_back(44157);
        internal_counters.push_back(44393);
        internal_counters.push_back(44629);
        internal_counters.push_back(44865);
        internal_counters.push_back(45101);
        internal_counters.push_back(45337);
        internal_counters.push_back(45573);
        internal_counters.push_back(45809);
        internal_counters.push_back(46045);
        internal_counters.push_back(46281);
        internal_counters.push_back(46517);
        internal_counters.push_back(46753);
        internal_counters.push_back(46989);
        internal_counters.push_back(47225);
        internal_counters.push_back(47461);
        internal_counters.push_back(47697);
        internal_counters.push_back(47933);
        internal_counters.push_back(48169);
        internal_counters.push_back(48405);
        internal_counters.push_back(48641);
        internal_counters.push_back(29998);
        internal_counters.push_back(30234);
        internal_counters.push_back(30470);
        internal_counters.push_back(30706);
        internal_counters.push_back(30942);
        internal_counters.push_back(31178);
        internal_counters.push_back(31414);
        internal_counters.push_back(31650);
        internal_counters.push_back(31886);
        internal_counters.push_back(32122);
        internal_counters.push_back(32358);
        internal_counters.push_back(32594);
        internal_counters.push_back(32830);
        internal_counters.push_back(33066);
        internal_counters.push_back(33302);
        internal_counters.push_back(33538);
        internal_counters.push_back(33774);
        internal_counters.push_back(34010);
        internal_counters.push_back(34246);
        internal_counters.push_back(34482);
        internal_counters.push_back(34718);
        internal_counters.push_back(34954);
        internal_counters.push_back(35190);
        internal_counters.push_back(35426);
        internal_counters.push_back(35662);
        internal_counters.push_back(35898);
        internal_counters.push_back(36134);
        internal_counters.push_back(36370);
        internal_counters.push_back(36606);
        internal_counters.push_back(36842);
        internal_counters.push_back(37078);
        internal_counters.push_back(37314);
        internal_counters.push_back(37550);
        internal_counters.push_back(37786);
        internal_counters.push_back(38022);
        internal_counters.push_back(38258);
        internal_counters.push_back(38494);
        internal_counters.push_back(38730);
        internal_counters.push_back(38966);
        internal_counters.push_back(39202);
        internal_counters.push_back(39438);
        internal_counters.push_back(39674);
        internal_counters.push_back(39910);
        internal_counters.push_back(40146);
        internal_counters.push_back(40382);
        internal_counters.push_back(40618);
        internal_counters.push_back(40854);
        internal_counters.push_back(41090);
        internal_counters.push_back(41326);
        internal_counters.push_back(41562);
        internal_counters.push_back(41798);
        internal_counters.push_back(42034);
        internal_counters.push_back(42270);
        internal_counters.push_back(42506);
        internal_counters.push_back(42742);
        internal_counters.push_back(42978);
        internal_counters.push_back(43214);
        internal_counters.push_back(43450);
        internal_counters.push_back(43686);
        internal_counters.push_back(43922);
        internal_counters.push_back(44158);
        internal_counters.push_back(44394);
        internal_counters.push_back(44630);
        internal_counters.push_back(44866);
        internal_counters.push_back(45102);
        internal_counters.push_back(45338);
        internal_counters.push_back(45574);
        internal_counters.push_back(45810);
        internal_counters.push_back(46046);
        internal_counters.push_back(46282);
        internal_counters.push_back(46518);
        internal_counters.push_back(46754);
        internal_counters.push_back(46990);
        internal_counters.push_back(47226);
        internal_counters.push_back(47462);
        internal_counters.push_back(47698);
        internal_counters.push_back(47934);
        internal_counters.push_back(48170);
        internal_counters.push_back(48406);
        internal_counters.push_back(48642);
        internal_counters.push_back(29999);
        internal_counters.push_back(30235);
        internal_counters.push_back(30471);
        internal_counters.push_back(30707);
        internal_counters.push_back(30943);
        internal_counters.push_back(31179);
        internal_counters.push_back(31415);
        internal_counters.push_back(31651);
        internal_counters.push_back(31887);
        internal_counters.push_back(32123);
        internal_counters.push_back(32359);
        internal_counters.push_back(32595);
        internal_counters.push_back(32831);
        internal_counters.push_back(33067);
        internal_counters.push_back(33303);
        internal_counters.push_back(33539);
        internal_counters.push_back(33775);
        internal_counters.push_back(34011);
        internal_counters.push_back(34247);
        internal_counters.push_back(34483);
        internal_counters.push_back(34719);
        internal_counters.push_back(34955);
        internal_counters.push_back(35191);
        internal_counters.push_back(35427);
        internal_counters.push_back(35663);
        internal_counters.push_back(35899);
        internal_counters.push_back(36135);
        internal_counters.push_back(36371);
        internal_counters.push_back(36607);
        internal_counters.push_back(36843);
        internal_counters.push_back(37079);
        internal_counters.push_back(37315);
        internal_counters.push_back(37551);
        internal_counters.push_back(37787);
        internal_counters.push_back(38023);
        internal_counters.push_back(38259);
        internal_counters.push_back(38495);
        internal_counters.push_back(38731);
        internal_counters.push_back(38967);
        internal_counters.push_back(39203);
        internal_counters.push_back(39439);
        internal_counters.push_back(39675);
        internal_counters.push_back(39911);
        internal_counters.push_back(40147);
        internal_counters.push_back(40383);
        internal_counters.push_back(40619);
        internal_counters.push_back(40855);
        internal_counters.push_back(41091);
        internal_counters.push_back(41327);
        internal_counters.push_back(41563);
        internal_counters.push_back(41799);
        internal_counters.push_back(42035);
        internal_counters.push_back(42271);
        internal_counters.push_back(42507);
        internal_counters.push_back(42743);
        internal_counters.push_back(42979);
        internal_counters.push_back(43215);
        internal_counters.push_back(43451);
        internal_counters.push_back(43687);
        internal_counters.push_back(43923);
        internal_counters.push_back(44159);
        internal_counters.push_back(44395);
        internal_counters.push_back(44631);
        internal_counters.push_back(44867);
        internal_counters.push_back(45103);
        internal_counters.push_back(45339);
        internal_counters.push_back(45575);
        internal_counters.push_back(45811);
        internal_counters.push_back(46047);
        internal_counters.push_back(46283);
        internal_counters.push_back(46519);
        internal_counters.push_back(46755);
        internal_counters.push_back(46991);
        internal_counters.push_back(47227);
        internal_counters.push_back(47463);
        internal_counters.push_back(47699);
        internal_counters.push_back(47935);
        internal_counters.push_back(48171);
        internal_counters.push_back(48407);
        internal_counters.push_back(48643);
        internal_counters.push_back(30000);
        internal_counters.push_back(30236);
        internal_counters.push_back(30472);
        internal_counters.push_back(30708);
        internal_counters.push_back(30944);
        internal_counters.push_back(31180);
        internal_counters.push_back(31416);
        internal_counters.push_back(31652);
        internal_counters.push_back(31888);
        internal_counters.push_back(32124);
        internal_counters.push_back(32360);
        internal_counters.push_back(32596);
        internal_counters.push_back(32832);
        internal_counters.push_back(33068);
        internal_counters.push_back(33304);
        internal_counters.push_back(33540);
        internal_counters.push_back(33776);
        internal_counters.push_back(34012);
        internal_counters.push_back(34248);
        internal_counters.push_back(34484);
        internal_counters.push_back(34720);
        internal_counters.push_back(34956);
        internal_counters.push_back(35192);
        internal_counters.push_back(35428);
        internal_counters.push_back(35664);
        internal_counters.push_back(35900);
        internal_counters.push_back(36136);
        internal_counters.push_back(36372);
        internal_counters.push_back(36608);
        internal_counters.push_back(36844);
        internal_counters.push_back(37080);
        internal_counters.push_back(37316);
        internal_counters.push_back(37552);
        internal_counters.push_back(37788);
        internal_counters.push_back(38024);
        internal_counters.push_back(38260);
        internal_counters.push_back(38496);
        internal_counters.push_back(38732);
        internal_counters.push_back(38968);
        internal_counters.push_back(39204);
        internal_counters.push_back(39440);
        internal_counters.push_back(39676);
        internal_counters.push_back(39912);
        internal_counters.push_back(40148);
        internal_counters.push_back(40384);
        internal_counters.push_back(40620);
        internal_counters.push_back(40856);
        internal_counters.push_back(41092);
        internal_counters.push_back(41328);
        internal_counters.push_back(41564);
        internal_counters.push_back(41800);
        internal_counters.push_back(42036);
        internal_counters.push_back(42272);
        internal_counters.push_back(42508);
        internal_counters.push_back(42744);
        internal_counters.push_back(42980);
        internal_counters.push_back(43216);
        internal_counters.push_back(43452);
        internal_counters.push_back(43688);
        internal_counters.push_back(43924);
        internal_counters.push_back(44160);
        internal_counters.push_back(44396);
        internal_counters.push_back(44632);
        internal_counters.push_back(44868);
        internal_counters.push_back(45104);
        internal_counters.push_back(45340);
        internal_counters.push_back(45576);
        internal_counters.push_back(45812);
        internal_counters.push_back(46048);
        internal_counters.push_back(46284);
        internal_counters.push_back(46520);
        internal_counters.push_back(46756);
        internal_counters.push_back(46992);
        internal_counters.push_back(47228);
        internal_counters.push_back(47464);
        internal_counters.push_back(47700);
        internal_counters.push_back(47936);
        internal_counters.push_back(48172);
        internal_counters.push_back(48408);
        internal_counters.push_back(48644);
        internal_counters.push_back(30001);
        internal_counters.push_back(30237);
        internal_counters.push_back(30473);
        internal_counters.push_back(30709);
        internal_counters.push_back(30945);
        internal_counters.push_back(31181);
        internal_counters.push_back(31417);
        internal_counters.push_back(31653);
        internal_counters.push_back(31889);
        internal_counters.push_back(32125);
        internal_counters.push_back(32361);
        internal_counters.push_back(32597);
        internal_counters.push_back(32833);
        internal_counters.push_back(33069);
        internal_counters.push_back(33305);
        internal_counters.push_back(33541);
        internal_counters.push_back(33777);
        internal_counters.push_back(34013);
        internal_counters.push_back(34249);
        internal_counters.push_back(34485);
        internal_counters.push_back(34721);
        internal_counters.push_back(34957);
        internal_counters.push_back(35193);
        internal_counters.push_back(35429);
        internal_counters.push_back(35665);
        internal_counters.push_back(35901);
        internal_counters.push_back(36137);
        internal_counters.push_back(36373);
        internal_counters.push_back(36609);
        internal_counters.push_back(36845);
        internal_counters.push_back(37081);
        internal_counters.push_back(37317);
        internal_counters.push_back(37553);
        internal_counters.push_back(37789);
        internal_counters.push_back(38025);
        internal_counters.push_back(38261);
        internal_counters.push_back(38497);
        internal_counters.push_back(38733);
        internal_counters.push_back(38969);
        internal_counters.push_back(39205);
        internal_counters.push_back(39441);
        internal_counters.push_back(39677);
        internal_counters.push_back(39913);
        internal_counters.push_back(40149);
        internal_counters.push_back(40385);
        internal_counters.push_back(40621);
        internal_counters.push_back(40857);
        internal_counters.push_back(41093);
        internal_counters.push_back(41329);
        internal_counters.push_back(41565);
        internal_counters.push_back(41801);
        internal_counters.push_back(42037);
        internal_counters.push_back(42273);
        internal_counters.push_back(42509);
        internal_counters.push_back(42745);
        internal_counters.push_back(42981);
        internal_counters.push_back(43217);
        internal_counters.push_back(43453);
        internal_counters.push_back(43689);
        internal_counters.push_back(43925);
        internal_counters.push_back(44161);
        internal_counters.push_back(44397);
        internal_counters.push_back(44633);
        internal_counters.push_back(44869);
        internal_counters.push_back(45105);
        internal_counters.push_back(45341);
        internal_counters.push_back(45577);
        internal_counters.push_back(45813);
        internal_counters.push_back(46049);
        internal_counters.push_back(46285);
        internal_counters.push_back(46521);
        internal_counters.push_back(46757);
        internal_counters.push_back(46993);
        internal_counters.push_back(47229);
        internal_counters.push_back(47465);
        internal_counters.push_back(47701);
        internal_counters.push_back(47937);
        internal_counters.push_back(48173);
        internal_counters.push_back(48409);
        internal_counters.push_back(48645);

        c.DefineDerivedCounter("TexAveAnisotropy", "TextureUnit", "The average degree of anisotropy applied. A number between 1 and 16. The anisotropic filtering algorithm only applies samples where they are required (e.g. there will be no extra anisotropic samples if the view vector is perpendicular to the surface) so this can be much lower than the requested anisotropy.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,(2),80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,*,+,(4),160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,sum80,*,+,(6),240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum80,*,+,(8),320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,sum80,*,+,(10),400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,sum80,*,+,(12),480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,sum80,*,+,(14),560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,sum80,*,+,(16),640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,sum80,*,+,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,+,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,sum80,+,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum80,+,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,sum80,+,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,sum80,+,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,sum80,+,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,sum80,+,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,sum80,+,/", "7ca2a2b9-a4eb-ce23-d163-59147e672396");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69168);
        internal_counters.push_back(69559);
        internal_counters.push_back(69950);
        internal_counters.push_back(70341);
        internal_counters.push_back(70732);
        internal_counters.push_back(71123);
        internal_counters.push_back(71514);
        internal_counters.push_back(71905);
        internal_counters.push_back(72296);
        internal_counters.push_back(72687);
        internal_counters.push_back(73078);
        internal_counters.push_back(73469);
        internal_counters.push_back(73860);
        internal_counters.push_back(74251);
        internal_counters.push_back(74642);
        internal_counters.push_back(75033);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("DepthStencilTestBusy", "Timing", "Percentage of time GPU spent performing depth and stencil tests relative to GPUBusy.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "6834fb52-42e8-bb50-fd48-ec2f2904e7e0");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69168);
        internal_counters.push_back(69559);
        internal_counters.push_back(69950);
        internal_counters.push_back(70341);
        internal_counters.push_back(70732);
        internal_counters.push_back(71123);
        internal_counters.push_back(71514);
        internal_counters.push_back(71905);
        internal_counters.push_back(72296);
        internal_counters.push_back(72687);
        internal_counters.push_back(73078);
        internal_counters.push_back(73469);
        internal_counters.push_back(73860);
        internal_counters.push_back(74251);
        internal_counters.push_back(74642);
        internal_counters.push_back(75033);

        c.DefineDerivedCounter("DepthStencilTestBusyCount", "Timing", "Number of GPU cycles spent performing depth and stencil tests.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "e02860fa-c7bd-90ea-2149-69b4e98a636c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69039);
        internal_counters.push_back(69430);
        internal_counters.push_back(69821);
        internal_counters.push_back(70212);
        internal_counters.push_back(70603);
        internal_counters.push_back(70994);
        internal_counters.push_back(71385);
        internal_counters.push_back(71776);
        internal_counters.push_back(72167);
        internal_counters.push_back(72558);
        internal_counters.push_back(72949);
        internal_counters.push_back(73340);
        internal_counters.push_back(73731);
        internal_counters.push_back(74122);
        internal_counters.push_back(74513);
        internal_counters.push_back(74904);
        internal_counters.push_back(69028);
        internal_counters.push_back(69419);
        internal_counters.push_back(69810);
        internal_counters.push_back(70201);
        internal_counters.push_back(70592);
        internal_counters.push_back(70983);
        internal_counters.push_back(71374);
        internal_counters.push_back(71765);
        internal_counters.push_back(72156);
        internal_counters.push_back(72547);
        internal_counters.push_back(72938);
        internal_counters.push_back(73329);
        internal_counters.push_back(73720);
        internal_counters.push_back(74111);
        internal_counters.push_back(74502);
        internal_counters.push_back(74893);

        c.DefineDerivedCounter("HiZTilesAccepted", "DepthAndStencil", "Percentage of tiles accepted by HiZ and will be rendered to the depth or color buffers.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*", "56176f45-d7ff-813d-4f05-3b2f046067e7");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69039);
        internal_counters.push_back(69430);
        internal_counters.push_back(69821);
        internal_counters.push_back(70212);
        internal_counters.push_back(70603);
        internal_counters.push_back(70994);
        internal_counters.push_back(71385);
        internal_counters.push_back(71776);
        internal_counters.push_back(72167);
        internal_counters.push_back(72558);
        internal_counters.push_back(72949);
        internal_counters.push_back(73340);
        internal_counters.push_back(73731);
        internal_counters.push_back(74122);
        internal_counters.push_back(74513);
        internal_counters.push_back(74904);

        c.DefineDerivedCounter("HiZTilesAcceptedCount", "DepthAndStencil", "Count of tiles accepted by HiZ and will be rendered to the depth or color buffers.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "95d4e3f6-b2f0-f26e-8423-aacdfaf79ea3");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69028);
        internal_counters.push_back(69419);
        internal_counters.push_back(69810);
        internal_counters.push_back(70201);
        internal_counters.push_back(70592);
        internal_counters.push_back(70983);
        internal_counters.push_back(71374);
        internal_counters.push_back(71765);
        internal_counters.push_back(72156);
        internal_counters.push_back(72547);
        internal_counters.push_back(72938);
        internal_counters.push_back(73329);
        internal_counters.push_back(73720);
        internal_counters.push_back(74111);
        internal_counters.push_back(74502);
        internal_counters.push_back(74893);

        c.DefineDerivedCounter("HiZTilesRejectedCount", "DepthAndStencil", "Count of tiles not accepted by HiZ.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "156ba142-7eeb-aa6e-a00a-f8aea4e41e0b");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69028);
        internal_counters.push_back(69419);
        internal_counters.push_back(69810);
        internal_counters.push_back(70201);
        internal_counters.push_back(70592);
        internal_counters.push_back(70983);
        internal_counters.push_back(71374);
        internal_counters.push_back(71765);
        internal_counters.push_back(72156);
        internal_counters.push_back(72547);
        internal_counters.push_back(72938);
        internal_counters.push_back(73329);
        internal_counters.push_back(73720);
        internal_counters.push_back(74111);
        internal_counters.push_back(74502);
        internal_counters.push_back(74893);
        internal_counters.push_back(69052);
        internal_counters.push_back(69443);
        internal_counters.push_back(69834);
        internal_counters.push_back(70225);
        internal_counters.push_back(70616);
        internal_counters.push_back(71007);
        internal_counters.push_back(71398);
        internal_counters.push_back(71789);
        internal_counters.push_back(72180);
        internal_counters.push_back(72571);
        internal_counters.push_back(72962);
        internal_counters.push_back(73353);
        internal_counters.push_back(73744);
        internal_counters.push_back(74135);
        internal_counters.push_back(74526);
        internal_counters.push_back(74917);

        c.DefineDerivedCounter("PreZTilesDetailCulled", "DepthAndStencil", "Percentage of tiles rejected because the associated prim had no contributing area.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "cad7f54d-a044-7574-c472-6f2065cbeeac");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69052);
        internal_counters.push_back(69443);
        internal_counters.push_back(69834);
        internal_counters.push_back(70225);
        internal_counters.push_back(70616);
        internal_counters.push_back(71007);
        internal_counters.push_back(71398);
        internal_counters.push_back(71789);
        internal_counters.push_back(72180);
        internal_counters.push_back(72571);
        internal_counters.push_back(72962);
        internal_counters.push_back(73353);
        internal_counters.push_back(73744);
        internal_counters.push_back(74135);
        internal_counters.push_back(74526);
        internal_counters.push_back(74917);

        c.DefineDerivedCounter("PreZTilesDetailCulledCount", "DepthAndStencil", "Count of tiles rejected because the associated primitive had no contributing area.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "49262c8a-b1e6-90dd-f096-0fc4921715e9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69028);
        internal_counters.push_back(69419);
        internal_counters.push_back(69810);
        internal_counters.push_back(70201);
        internal_counters.push_back(70592);
        internal_counters.push_back(70983);
        internal_counters.push_back(71374);
        internal_counters.push_back(71765);
        internal_counters.push_back(72156);
        internal_counters.push_back(72547);
        internal_counters.push_back(72938);
        internal_counters.push_back(73329);
        internal_counters.push_back(73720);
        internal_counters.push_back(74111);
        internal_counters.push_back(74502);
        internal_counters.push_back(74893);

        c.DefineDerivedCounter("PreZTilesDetailSurvivingCount", "DepthAndStencil", "Count of tiles surviving because the associated primitive had contributing area.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "f803eaa4-bbed-bd39-775f-a64df92e2c08");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(1303);
        internal_counters.push_back(1881);
        internal_counters.push_back(2459);
        internal_counters.push_back(3037);
        internal_counters.push_back(3615);
        internal_counters.push_back(4193);
        internal_counters.push_back(4771);
        internal_counters.push_back(5349);
        internal_counters.push_back(5927);
        internal_counters.push_back(6505);
        internal_counters.push_back(7083);
        internal_counters.push_back(7661);
        internal_counters.push_back(8239);
        internal_counters.push_back(8817);
        internal_counters.push_back(9395);
        internal_counters.push_back(9973);
        internal_counters.push_back(1304);
        internal_counters.push_back(1882);
        internal_counters.push_back(2460);
        internal_counters.push_back(3038);
        internal_counters.push_back(3616);
        internal_counters.push_back(4194);
        internal_counters.push_back(4772);
        internal_counters.push_back(5350);
        internal_counters.push_back(5928);
        internal_counters.push_back(6506);
        internal_counters.push_back(7084);
        internal_counters.push_back(7662);
        internal_counters.push_back(8240);
        internal_counters.push_back(8818);
        internal_counters.push_back(9396);
        internal_counters.push_back(9974);
        internal_counters.push_back(1305);
        internal_counters.push_back(1883);
        internal_counters.push_back(2461);
        internal_counters.push_back(3039);
        internal_counters.push_back(3617);
        internal_counters.push_back(4195);
        internal_counters.push_back(4773);
        internal_counters.push_back(5351);
        internal_counters.push_back(5929);
        internal_counters.push_back(6507);
        internal_counters.push_back(7085);
        internal_counters.push_back(7663);
        internal_counters.push_back(8241);
        internal_counters.push_back(8819);
        internal_counters.push_back(9397);
        internal_counters.push_back(9975);
        internal_counters.push_back(1306);
        internal_counters.push_back(1884);
        internal_counters.push_back(2462);
        internal_counters.push_back(3040);
        internal_counters.push_back(3618);
        internal_counters.push_back(4196);
        internal_counters.push_back(4774);
        internal_counters.push_back(5352);
        internal_counters.push_back(5930);
        internal_counters.push_back(6508);
        internal_counters.push_back(7086);
        internal_counters.push_back(7664);
        internal_counters.push_back(8242);
        internal_counters.push_back(8820);
        internal_counters.push_back(9398);
        internal_counters.push_back(9976);
        internal_counters.push_back(1379);
        internal_counters.push_back(1957);
        internal_counters.push_back(2535);
        internal_counters.push_back(3113);
        internal_counters.push_back(3691);
        internal_counters.push_back(4269);
        internal_counters.push_back(4847);
        internal_counters.push_back(5425);
        internal_counters.push_back(6003);
        internal_counters.push_back(6581);
        internal_counters.push_back(7159);
        internal_counters.push_back(7737);
        internal_counters.push_back(8315);
        internal_counters.push_back(8893);
        internal_counters.push_back(9471);
        internal_counters.push_back(10049);
        internal_counters.push_back(1380);
        internal_counters.push_back(1958);
        internal_counters.push_back(2536);
        internal_counters.push_back(3114);
        internal_counters.push_back(3692);
        internal_counters.push_back(4270);
        internal_counters.push_back(4848);
        internal_counters.push_back(5426);
        internal_counters.push_back(6004);
        internal_counters.push_back(6582);
        internal_counters.push_back(7160);
        internal_counters.push_back(7738);
        internal_counters.push_back(8316);
        internal_counters.push_back(8894);
        internal_counters.push_back(9472);
        internal_counters.push_back(10050);
        internal_counters.push_back(1381);
        internal_counters.push_back(1959);
        internal_counters.push_back(2537);
        internal_counters.push_back(3115);
        internal_counters.push_back(3693);
        internal_counters.push_back(4271);
        internal_counters.push_back(4849);
        internal_counters.push_back(5427);
        internal_counters.push_back(6005);
        internal_counters.push_back(6583);
        internal_counters.push_back(7161);
        internal_counters.push_back(7739);
        internal_counters.push_back(8317);
        internal_counters.push_back(8895);
        internal_counters.push_back(9473);
        internal_counters.push_back(10051);
        internal_counters.push_back(1382);
        internal_counters.push_back(1960);
        internal_counters.push_back(2538);
        internal_counters.push_back(3116);
        internal_counters.push_back(3694);
        internal_counters.push_back(4272);
        internal_counters.push_back(4850);
        internal_counters.push_back(5428);
        internal_counters.push_back(6006);
        internal_counters.push_back(6584);
        internal_counters.push_back(7162);
        internal_counters.push_back(7740);
        internal_counters.push_back(8318);
        internal_counters.push_back(8896);
        internal_counters.push_back(9474);
        internal_counters.push_back(10052);

        c.DefineDerivedCounter("HiZQuadsCulled", "DepthAndStencil", "Percentage of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,/,(100),*", "fa0e319b-5573-6d34-5bab-904769925036");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(1303);
        internal_counters.push_back(1881);
        internal_counters.push_back(2459);
        internal_counters.push_back(3037);
        internal_counters.push_back(3615);
        internal_counters.push_back(4193);
        internal_counters.push_back(4771);
        internal_counters.push_back(5349);
        internal_counters.push_back(5927);
        internal_counters.push_back(6505);
        internal_counters.push_back(7083);
        internal_counters.push_back(7661);
        internal_counters.push_back(8239);
        internal_counters.push_back(8817);
        internal_counters.push_back(9395);
        internal_counters.push_back(9973);
        internal_counters.push_back(1304);
        internal_counters.push_back(1882);
        internal_counters.push_back(2460);
        internal_counters.push_back(3038);
        internal_counters.push_back(3616);
        internal_counters.push_back(4194);
        internal_counters.push_back(4772);
        internal_counters.push_back(5350);
        internal_counters.push_back(5928);
        internal_counters.push_back(6506);
        internal_counters.push_back(7084);
        internal_counters.push_back(7662);
        internal_counters.push_back(8240);
        internal_counters.push_back(8818);
        internal_counters.push_back(9396);
        internal_counters.push_back(9974);
        internal_counters.push_back(1305);
        internal_counters.push_back(1883);
        internal_counters.push_back(2461);
        internal_counters.push_back(3039);
        internal_counters.push_back(3617);
        internal_counters.push_back(4195);
        internal_counters.push_back(4773);
        internal_counters.push_back(5351);
        internal_counters.push_back(5929);
        internal_counters.push_back(6507);
        internal_counters.push_back(7085);
        internal_counters.push_back(7663);
        internal_counters.push_back(8241);
        internal_counters.push_back(8819);
        internal_counters.push_back(9397);
        internal_counters.push_back(9975);
        internal_counters.push_back(1306);
        internal_counters.push_back(1884);
        internal_counters.push_back(2462);
        internal_counters.push_back(3040);
        internal_counters.push_back(3618);
        internal_counters.push_back(4196);
        internal_counters.push_back(4774);
        internal_counters.push_back(5352);
        internal_counters.push_back(5930);
        internal_counters.push_back(6508);
        internal_counters.push_back(7086);
        internal_counters.push_back(7664);
        internal_counters.push_back(8242);
        internal_counters.push_back(8820);
        internal_counters.push_back(9398);
        internal_counters.push_back(9976);
        internal_counters.push_back(1379);
        internal_counters.push_back(1957);
        internal_counters.push_back(2535);
        internal_counters.push_back(3113);
        internal_counters.push_back(3691);
        internal_counters.push_back(4269);
        internal_counters.push_back(4847);
        internal_counters.push_back(5425);
        internal_counters.push_back(6003);
        internal_counters.push_back(6581);
        internal_counters.push_back(7159);
        internal_counters.push_back(7737);
        internal_counters.push_back(8315);
        internal_counters.push_back(8893);
        internal_counters.push_back(9471);
        internal_counters.push_back(10049);
        internal_counters.push_back(1380);
        internal_counters.push_back(1958);
        internal_counters.push_back(2536);
        internal_counters.push_back(3114);
        internal_counters.push_back(3692);
        internal_counters.push_back(4270);
        internal_counters.push_back(4848);
        internal_counters.push_back(5426);
        internal_counters.push_back(6004);
        internal_counters.push_back(6582);
        internal_counters.push_back(7160);
        internal_counters.push_back(7738);
        internal_counters.push_back(8316);
        internal_counters.push_back(8894);
        internal_counters.push_back(9472);
        internal_counters.push_back(10050);
        internal_counters.push_back(1381);
        internal_counters.push_back(1959);
        internal_counters.push_back(2537);
        internal_counters.push_back(3115);
        internal_counters.push_back(3693);
        internal_counters.push_back(4271);
        internal_counters.push_back(4849);
        internal_counters.push_back(5427);
        internal_counters.push_back(6005);
        internal_counters.push_back(6583);
        internal_counters.push_back(7161);
        internal_counters.push_back(7739);
        internal_counters.push_back(8317);
        internal_counters.push_back(8895);
        internal_counters.push_back(9473);
        internal_counters.push_back(10051);
        internal_counters.push_back(1382);
        internal_counters.push_back(1960);
        internal_counters.push_back(2538);
        internal_counters.push_back(3116);
        internal_counters.push_back(3694);
        internal_counters.push_back(4272);
        internal_counters.push_back(4850);
        internal_counters.push_back(5428);
        internal_counters.push_back(6006);
        internal_counters.push_back(6584);
        internal_counters.push_back(7162);
        internal_counters.push_back(7740);
        internal_counters.push_back(8318);
        internal_counters.push_back(8896);
        internal_counters.push_back(9474);
        internal_counters.push_back(10052);

        c.DefineDerivedCounter("HiZQuadsCulledCount", "DepthAndStencil", "Count of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,-,(0),max", "73b0b39d-6df2-3e24-0b5c-7cb0ac8b6f39");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(1379);
        internal_counters.push_back(1957);
        internal_counters.push_back(2535);
        internal_counters.push_back(3113);
        internal_counters.push_back(3691);
        internal_counters.push_back(4269);
        internal_counters.push_back(4847);
        internal_counters.push_back(5425);
        internal_counters.push_back(6003);
        internal_counters.push_back(6581);
        internal_counters.push_back(7159);
        internal_counters.push_back(7737);
        internal_counters.push_back(8315);
        internal_counters.push_back(8893);
        internal_counters.push_back(9471);
        internal_counters.push_back(10049);
        internal_counters.push_back(1380);
        internal_counters.push_back(1958);
        internal_counters.push_back(2536);
        internal_counters.push_back(3114);
        internal_counters.push_back(3692);
        internal_counters.push_back(4270);
        internal_counters.push_back(4848);
        internal_counters.push_back(5426);
        internal_counters.push_back(6004);
        internal_counters.push_back(6582);
        internal_counters.push_back(7160);
        internal_counters.push_back(7738);
        internal_counters.push_back(8316);
        internal_counters.push_back(8894);
        internal_counters.push_back(9472);
        internal_counters.push_back(10050);
        internal_counters.push_back(1381);
        internal_counters.push_back(1959);
        internal_counters.push_back(2537);
        internal_counters.push_back(3115);
        internal_counters.push_back(3693);
        internal_counters.push_back(4271);
        internal_counters.push_back(4849);
        internal_counters.push_back(5427);
        internal_counters.push_back(6005);
        internal_counters.push_back(6583);
        internal_counters.push_back(7161);
        internal_counters.push_back(7739);
        internal_counters.push_back(8317);
        internal_counters.push_back(8895);
        internal_counters.push_back(9473);
        internal_counters.push_back(10051);
        internal_counters.push_back(1382);
        internal_counters.push_back(1960);
        internal_counters.push_back(2538);
        internal_counters.push_back(3116);
        internal_counters.push_back(3694);
        internal_counters.push_back(4272);
        internal_counters.push_back(4850);
        internal_counters.push_back(5428);
        internal_counters.push_back(6006);
        internal_counters.push_back(6584);
        internal_counters.push_back(7162);
        internal_counters.push_back(7740);
        internal_counters.push_back(8318);
        internal_counters.push_back(8896);
        internal_counters.push_back(9474);
        internal_counters.push_back(10052);

        c.DefineDerivedCounter("HiZQuadsAcceptedCount", "DepthAndStencil", "Count of quads that did continue on in the pipeline after HiZ.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "59049ad9-42b5-c7cb-3616-6a8f6a8e4894");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(1303);
        internal_counters.push_back(1881);
        internal_counters.push_back(2459);
        internal_counters.push_back(3037);
        internal_counters.push_back(3615);
        internal_counters.push_back(4193);
        internal_counters.push_back(4771);
        internal_counters.push_back(5349);
        internal_counters.push_back(5927);
        internal_counters.push_back(6505);
        internal_counters.push_back(7083);
        internal_counters.push_back(7661);
        internal_counters.push_back(8239);
        internal_counters.push_back(8817);
        internal_counters.push_back(9395);
        internal_counters.push_back(9973);
        internal_counters.push_back(1304);
        internal_counters.push_back(1882);
        internal_counters.push_back(2460);
        internal_counters.push_back(3038);
        internal_counters.push_back(3616);
        internal_counters.push_back(4194);
        internal_counters.push_back(4772);
        internal_counters.push_back(5350);
        internal_counters.push_back(5928);
        internal_counters.push_back(6506);
        internal_counters.push_back(7084);
        internal_counters.push_back(7662);
        internal_counters.push_back(8240);
        internal_counters.push_back(8818);
        internal_counters.push_back(9396);
        internal_counters.push_back(9974);
        internal_counters.push_back(1305);
        internal_counters.push_back(1883);
        internal_counters.push_back(2461);
        internal_counters.push_back(3039);
        internal_counters.push_back(3617);
        internal_counters.push_back(4195);
        internal_counters.push_back(4773);
        internal_counters.push_back(5351);
        internal_counters.push_back(5929);
        internal_counters.push_back(6507);
        internal_counters.push_back(7085);
        internal_counters.push_back(7663);
        internal_counters.push_back(8241);
        internal_counters.push_back(8819);
        internal_counters.push_back(9397);
        internal_counters.push_back(9975);
        internal_counters.push_back(1306);
        internal_counters.push_back(1884);
        internal_counters.push_back(2462);
        internal_counters.push_back(3040);
        internal_counters.push_back(3618);
        internal_counters.push_back(4196);
        internal_counters.push_back(4774);
        internal_counters.push_back(5352);
        internal_counters.push_back(5930);
        internal_counters.push_back(6508);
        internal_counters.push_back(7086);
        internal_counters.push_back(7664);
        internal_counters.push_back(8242);
        internal_counters.push_back(8820);
        internal_counters.push_back(9398);
        internal_counters.push_back(9976);
        internal_counters.push_back(1403);
        internal_counters.push_back(1981);
        internal_counters.push_back(2559);
        internal_counters.push_back(3137);
        internal_counters.push_back(3715);
        internal_counters.push_back(4293);
        internal_counters.push_back(4871);
        internal_counters.push_back(5449);
        internal_counters.push_back(6027);
        internal_counters.push_back(6605);
        internal_counters.push_back(7183);
        internal_counters.push_back(7761);
        internal_counters.push_back(8339);
        internal_counters.push_back(8917);
        internal_counters.push_back(9495);
        internal_counters.push_back(10073);
        internal_counters.push_back(1379);
        internal_counters.push_back(1957);
        internal_counters.push_back(2535);
        internal_counters.push_back(3113);
        internal_counters.push_back(3691);
        internal_counters.push_back(4269);
        internal_counters.push_back(4847);
        internal_counters.push_back(5425);
        internal_counters.push_back(6003);
        internal_counters.push_back(6581);
        internal_counters.push_back(7159);
        internal_counters.push_back(7737);
        internal_counters.push_back(8315);
        internal_counters.push_back(8893);
        internal_counters.push_back(9471);
        internal_counters.push_back(10049);
        internal_counters.push_back(1380);
        internal_counters.push_back(1958);
        internal_counters.push_back(2536);
        internal_counters.push_back(3114);
        internal_counters.push_back(3692);
        internal_counters.push_back(4270);
        internal_counters.push_back(4848);
        internal_counters.push_back(5426);
        internal_counters.push_back(6004);
        internal_counters.push_back(6582);
        internal_counters.push_back(7160);
        internal_counters.push_back(7738);
        internal_counters.push_back(8316);
        internal_counters.push_back(8894);
        internal_counters.push_back(9472);
        internal_counters.push_back(10050);
        internal_counters.push_back(1381);
        internal_counters.push_back(1959);
        internal_counters.push_back(2537);
        internal_counters.push_back(3115);
        internal_counters.push_back(3693);
        internal_counters.push_back(4271);
        internal_counters.push_back(4849);
        internal_counters.push_back(5427);
        internal_counters.push_back(6005);
        internal_counters.push_back(6583);
        internal_counters.push_back(7161);
        internal_counters.push_back(7739);
        internal_counters.push_back(8317);
        internal_counters.push_back(8895);
        internal_counters.push_back(9473);
        internal_counters.push_back(10051);
        internal_counters.push_back(1382);
        internal_counters.push_back(1960);
        internal_counters.push_back(2538);
        internal_counters.push_back(3116);
        internal_counters.push_back(3694);
        internal_counters.push_back(4272);
        internal_counters.push_back(4850);
        internal_counters.push_back(5428);
        internal_counters.push_back(6006);
        internal_counters.push_back(6584);
        internal_counters.push_back(7162);
        internal_counters.push_back(7740);
        internal_counters.push_back(8318);
        internal_counters.push_back(8896);
        internal_counters.push_back(9474);
        internal_counters.push_back(10052);

        c.DefineDerivedCounter("PreZQuadsCulled", "DepthAndStencil", "Percentage of quads rejected based on the detailZ and earlyZ tests.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum16,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,/,(100),*", "4e77547b-ec55-5663-f034-af59be66d77d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(1303);
        internal_counters.push_back(1881);
        internal_counters.push_back(2459);
        internal_counters.push_back(3037);
        internal_counters.push_back(3615);
        internal_counters.push_back(4193);
        internal_counters.push_back(4771);
        internal_counters.push_back(5349);
        internal_counters.push_back(5927);
        internal_counters.push_back(6505);
        internal_counters.push_back(7083);
        internal_counters.push_back(7661);
        internal_counters.push_back(8239);
        internal_counters.push_back(8817);
        internal_counters.push_back(9395);
        internal_counters.push_back(9973);
        internal_counters.push_back(1304);
        internal_counters.push_back(1882);
        internal_counters.push_back(2460);
        internal_counters.push_back(3038);
        internal_counters.push_back(3616);
        internal_counters.push_back(4194);
        internal_counters.push_back(4772);
        internal_counters.push_back(5350);
        internal_counters.push_back(5928);
        internal_counters.push_back(6506);
        internal_counters.push_back(7084);
        internal_counters.push_back(7662);
        internal_counters.push_back(8240);
        internal_counters.push_back(8818);
        internal_counters.push_back(9396);
        internal_counters.push_back(9974);
        internal_counters.push_back(1305);
        internal_counters.push_back(1883);
        internal_counters.push_back(2461);
        internal_counters.push_back(3039);
        internal_counters.push_back(3617);
        internal_counters.push_back(4195);
        internal_counters.push_back(4773);
        internal_counters.push_back(5351);
        internal_counters.push_back(5929);
        internal_counters.push_back(6507);
        internal_counters.push_back(7085);
        internal_counters.push_back(7663);
        internal_counters.push_back(8241);
        internal_counters.push_back(8819);
        internal_counters.push_back(9397);
        internal_counters.push_back(9975);
        internal_counters.push_back(1306);
        internal_counters.push_back(1884);
        internal_counters.push_back(2462);
        internal_counters.push_back(3040);
        internal_counters.push_back(3618);
        internal_counters.push_back(4196);
        internal_counters.push_back(4774);
        internal_counters.push_back(5352);
        internal_counters.push_back(5930);
        internal_counters.push_back(6508);
        internal_counters.push_back(7086);
        internal_counters.push_back(7664);
        internal_counters.push_back(8242);
        internal_counters.push_back(8820);
        internal_counters.push_back(9398);
        internal_counters.push_back(9976);
        internal_counters.push_back(1403);
        internal_counters.push_back(1981);
        internal_counters.push_back(2559);
        internal_counters.push_back(3137);
        internal_counters.push_back(3715);
        internal_counters.push_back(4293);
        internal_counters.push_back(4871);
        internal_counters.push_back(5449);
        internal_counters.push_back(6027);
        internal_counters.push_back(6605);
        internal_counters.push_back(7183);
        internal_counters.push_back(7761);
        internal_counters.push_back(8339);
        internal_counters.push_back(8917);
        internal_counters.push_back(9495);
        internal_counters.push_back(10073);
        internal_counters.push_back(1379);
        internal_counters.push_back(1957);
        internal_counters.push_back(2535);
        internal_counters.push_back(3113);
        internal_counters.push_back(3691);
        internal_counters.push_back(4269);
        internal_counters.push_back(4847);
        internal_counters.push_back(5425);
        internal_counters.push_back(6003);
        internal_counters.push_back(6581);
        internal_counters.push_back(7159);
        internal_counters.push_back(7737);
        internal_counters.push_back(8315);
        internal_counters.push_back(8893);
        internal_counters.push_back(9471);
        internal_counters.push_back(10049);
        internal_counters.push_back(1380);
        internal_counters.push_back(1958);
        internal_counters.push_back(2536);
        internal_counters.push_back(3114);
        internal_counters.push_back(3692);
        internal_counters.push_back(4270);
        internal_counters.push_back(4848);
        internal_counters.push_back(5426);
        internal_counters.push_back(6004);
        internal_counters.push_back(6582);
        internal_counters.push_back(7160);
        internal_counters.push_back(7738);
        internal_counters.push_back(8316);
        internal_counters.push_back(8894);
        internal_counters.push_back(9472);
        internal_counters.push_back(10050);
        internal_counters.push_back(1381);
        internal_counters.push_back(1959);
        internal_counters.push_back(2537);
        internal_counters.push_back(3115);
        internal_counters.push_back(3693);
        internal_counters.push_back(4271);
        internal_counters.push_back(4849);
        internal_counters.push_back(5427);
        internal_counters.push_back(6005);
        internal_counters.push_back(6583);
        internal_counters.push_back(7161);
        internal_counters.push_back(7739);
        internal_counters.push_back(8317);
        internal_counters.push_back(8895);
        internal_counters.push_back(9473);
        internal_counters.push_back(10051);
        internal_counters.push_back(1382);
        internal_counters.push_back(1960);
        internal_counters.push_back(2538);
        internal_counters.push_back(3116);
        internal_counters.push_back(3694);
        internal_counters.push_back(4272);
        internal_counters.push_back(4850);
        internal_counters.push_back(5428);
        internal_counters.push_back(6006);
        internal_counters.push_back(6584);
        internal_counters.push_back(7162);
        internal_counters.push_back(7740);
        internal_counters.push_back(8318);
        internal_counters.push_back(8896);
        internal_counters.push_back(9474);
        internal_counters.push_back(10052);

        c.DefineDerivedCounter("PreZQuadsCulledCount", "DepthAndStencil", "Count of quads rejected based on the detailZ and earlyZ tests.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum16,-,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,sum64,-,(0),max", "1bf169e6-9304-834e-df5f-0c44d7890a08");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(1403);
        internal_counters.push_back(1981);
        internal_counters.push_back(2559);
        internal_counters.push_back(3137);
        internal_counters.push_back(3715);
        internal_counters.push_back(4293);
        internal_counters.push_back(4871);
        internal_counters.push_back(5449);
        internal_counters.push_back(6027);
        internal_counters.push_back(6605);
        internal_counters.push_back(7183);
        internal_counters.push_back(7761);
        internal_counters.push_back(8339);
        internal_counters.push_back(8917);
        internal_counters.push_back(9495);
        internal_counters.push_back(10073);
        internal_counters.push_back(1379);
        internal_counters.push_back(1957);
        internal_counters.push_back(2535);
        internal_counters.push_back(3113);
        internal_counters.push_back(3691);
        internal_counters.push_back(4269);
        internal_counters.push_back(4847);
        internal_counters.push_back(5425);
        internal_counters.push_back(6003);
        internal_counters.push_back(6581);
        internal_counters.push_back(7159);
        internal_counters.push_back(7737);
        internal_counters.push_back(8315);
        internal_counters.push_back(8893);
        internal_counters.push_back(9471);
        internal_counters.push_back(10049);
        internal_counters.push_back(1380);
        internal_counters.push_back(1958);
        internal_counters.push_back(2536);
        internal_counters.push_back(3114);
        internal_counters.push_back(3692);
        internal_counters.push_back(4270);
        internal_counters.push_back(4848);
        internal_counters.push_back(5426);
        internal_counters.push_back(6004);
        internal_counters.push_back(6582);
        internal_counters.push_back(7160);
        internal_counters.push_back(7738);
        internal_counters.push_back(8316);
        internal_counters.push_back(8894);
        internal_counters.push_back(9472);
        internal_counters.push_back(10050);
        internal_counters.push_back(1381);
        internal_counters.push_back(1959);
        internal_counters.push_back(2537);
        internal_counters.push_back(3115);
        internal_counters.push_back(3693);
        internal_counters.push_back(4271);
        internal_counters.push_back(4849);
        internal_counters.push_back(5427);
        internal_counters.push_back(6005);
        internal_counters.push_back(6583);
        internal_counters.push_back(7161);
        internal_counters.push_back(7739);
        internal_counters.push_back(8317);
        internal_counters.push_back(8895);
        internal_counters.push_back(9473);
        internal_counters.push_back(10051);
        internal_counters.push_back(1382);
        internal_counters.push_back(1960);
        internal_counters.push_back(2538);
        internal_counters.push_back(3116);
        internal_counters.push_back(3694);
        internal_counters.push_back(4272);
        internal_counters.push_back(4850);
        internal_counters.push_back(5428);
        internal_counters.push_back(6006);
        internal_counters.push_back(6584);
        internal_counters.push_back(7162);
        internal_counters.push_back(7740);
        internal_counters.push_back(8318);
        internal_counters.push_back(8896);
        internal_counters.push_back(9474);
        internal_counters.push_back(10052);

        c.DefineDerivedCounter("PreZQuadsSurvivingCount", "DepthAndStencil", "Count of quads surviving detailZ and earlyZ tests.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,-,(0),max", "50e25e51-3713-89cb-7f92-559cde5e5532");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(1403);
        internal_counters.push_back(1981);
        internal_counters.push_back(2559);
        internal_counters.push_back(3137);
        internal_counters.push_back(3715);
        internal_counters.push_back(4293);
        internal_counters.push_back(4871);
        internal_counters.push_back(5449);
        internal_counters.push_back(6027);
        internal_counters.push_back(6605);
        internal_counters.push_back(7183);
        internal_counters.push_back(7761);
        internal_counters.push_back(8339);
        internal_counters.push_back(8917);
        internal_counters.push_back(9495);
        internal_counters.push_back(10073);
        internal_counters.push_back(1303);
        internal_counters.push_back(1881);
        internal_counters.push_back(2459);
        internal_counters.push_back(3037);
        internal_counters.push_back(3615);
        internal_counters.push_back(4193);
        internal_counters.push_back(4771);
        internal_counters.push_back(5349);
        internal_counters.push_back(5927);
        internal_counters.push_back(6505);
        internal_counters.push_back(7083);
        internal_counters.push_back(7661);
        internal_counters.push_back(8239);
        internal_counters.push_back(8817);
        internal_counters.push_back(9395);
        internal_counters.push_back(9973);
        internal_counters.push_back(1304);
        internal_counters.push_back(1882);
        internal_counters.push_back(2460);
        internal_counters.push_back(3038);
        internal_counters.push_back(3616);
        internal_counters.push_back(4194);
        internal_counters.push_back(4772);
        internal_counters.push_back(5350);
        internal_counters.push_back(5928);
        internal_counters.push_back(6506);
        internal_counters.push_back(7084);
        internal_counters.push_back(7662);
        internal_counters.push_back(8240);
        internal_counters.push_back(8818);
        internal_counters.push_back(9396);
        internal_counters.push_back(9974);
        internal_counters.push_back(1305);
        internal_counters.push_back(1883);
        internal_counters.push_back(2461);
        internal_counters.push_back(3039);
        internal_counters.push_back(3617);
        internal_counters.push_back(4195);
        internal_counters.push_back(4773);
        internal_counters.push_back(5351);
        internal_counters.push_back(5929);
        internal_counters.push_back(6507);
        internal_counters.push_back(7085);
        internal_counters.push_back(7663);
        internal_counters.push_back(8241);
        internal_counters.push_back(8819);
        internal_counters.push_back(9397);
        internal_counters.push_back(9975);
        internal_counters.push_back(1306);
        internal_counters.push_back(1884);
        internal_counters.push_back(2462);
        internal_counters.push_back(3040);
        internal_counters.push_back(3618);
        internal_counters.push_back(4196);
        internal_counters.push_back(4774);
        internal_counters.push_back(5352);
        internal_counters.push_back(5930);
        internal_counters.push_back(6508);
        internal_counters.push_back(7086);
        internal_counters.push_back(7664);
        internal_counters.push_back(8242);
        internal_counters.push_back(8820);
        internal_counters.push_back(9398);
        internal_counters.push_back(9976);

        c.DefineDerivedCounter("PostZQuads", "DepthAndStencil", "Percentage of quads for which the pixel shader will run and may be postZ tested.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum64,/,(100),*", "58f0d34b-eeb8-e8db-abce-cb72584144be");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(1403);
        internal_counters.push_back(1981);
        internal_counters.push_back(2559);
        internal_counters.push_back(3137);
        internal_counters.push_back(3715);
        internal_counters.push_back(4293);
        internal_counters.push_back(4871);
        internal_counters.push_back(5449);
        internal_counters.push_back(6027);
        internal_counters.push_back(6605);
        internal_counters.push_back(7183);
        internal_counters.push_back(7761);
        internal_counters.push_back(8339);
        internal_counters.push_back(8917);
        internal_counters.push_back(9495);
        internal_counters.push_back(10073);

        c.DefineDerivedCounter("PostZQuadCount", "DepthAndStencil", "Count of quads for which the pixel shader will run and may be postZ tested.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "08404526-ce35-939b-34c8-a7a35a0ff4d6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69201);
        internal_counters.push_back(69592);
        internal_counters.push_back(69983);
        internal_counters.push_back(70374);
        internal_counters.push_back(70765);
        internal_counters.push_back(71156);
        internal_counters.push_back(71547);
        internal_counters.push_back(71938);
        internal_counters.push_back(72329);
        internal_counters.push_back(72720);
        internal_counters.push_back(73111);
        internal_counters.push_back(73502);
        internal_counters.push_back(73893);
        internal_counters.push_back(74284);
        internal_counters.push_back(74675);
        internal_counters.push_back(75066);

        c.DefineDerivedCounter("PreZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z before shading and passed.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "3bfe6c4d-7422-ca03-7ea5-e67ff1a00136");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69203);
        internal_counters.push_back(69594);
        internal_counters.push_back(69985);
        internal_counters.push_back(70376);
        internal_counters.push_back(70767);
        internal_counters.push_back(71158);
        internal_counters.push_back(71549);
        internal_counters.push_back(71940);
        internal_counters.push_back(72331);
        internal_counters.push_back(72722);
        internal_counters.push_back(73113);
        internal_counters.push_back(73504);
        internal_counters.push_back(73895);
        internal_counters.push_back(74286);
        internal_counters.push_back(74677);
        internal_counters.push_back(75068);

        c.DefineDerivedCounter("PreZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z before shading and failed stencil test.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "df7f705e-5162-d3b5-da8b-63466cf9c4e5");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69202);
        internal_counters.push_back(69593);
        internal_counters.push_back(69984);
        internal_counters.push_back(70375);
        internal_counters.push_back(70766);
        internal_counters.push_back(71157);
        internal_counters.push_back(71548);
        internal_counters.push_back(71939);
        internal_counters.push_back(72330);
        internal_counters.push_back(72721);
        internal_counters.push_back(73112);
        internal_counters.push_back(73503);
        internal_counters.push_back(73894);
        internal_counters.push_back(74285);
        internal_counters.push_back(74676);
        internal_counters.push_back(75067);

        c.DefineDerivedCounter("PreZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z before shading and failed Z test.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4484e950-f7a4-3800-bc74-78dd297f017e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69198);
        internal_counters.push_back(69589);
        internal_counters.push_back(69980);
        internal_counters.push_back(70371);
        internal_counters.push_back(70762);
        internal_counters.push_back(71153);
        internal_counters.push_back(71544);
        internal_counters.push_back(71935);
        internal_counters.push_back(72326);
        internal_counters.push_back(72717);
        internal_counters.push_back(73108);
        internal_counters.push_back(73499);
        internal_counters.push_back(73890);
        internal_counters.push_back(74281);
        internal_counters.push_back(74672);
        internal_counters.push_back(75063);

        c.DefineDerivedCounter("PostZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z after shading and passed.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4995d5d6-2330-b986-508b-fae24856f44c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69200);
        internal_counters.push_back(69591);
        internal_counters.push_back(69982);
        internal_counters.push_back(70373);
        internal_counters.push_back(70764);
        internal_counters.push_back(71155);
        internal_counters.push_back(71546);
        internal_counters.push_back(71937);
        internal_counters.push_back(72328);
        internal_counters.push_back(72719);
        internal_counters.push_back(73110);
        internal_counters.push_back(73501);
        internal_counters.push_back(73892);
        internal_counters.push_back(74283);
        internal_counters.push_back(74674);
        internal_counters.push_back(75065);

        c.DefineDerivedCounter("PostZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z after shading and failed stencil test.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "ae558af4-f4be-3dd4-7316-b2c4dcf0def8");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69199);
        internal_counters.push_back(69590);
        internal_counters.push_back(69981);
        internal_counters.push_back(70372);
        internal_counters.push_back(70763);
        internal_counters.push_back(71154);
        internal_counters.push_back(71545);
        internal_counters.push_back(71936);
        internal_counters.push_back(72327);
        internal_counters.push_back(72718);
        internal_counters.push_back(73109);
        internal_counters.push_back(73500);
        internal_counters.push_back(73891);
        internal_counters.push_back(74282);
        internal_counters.push_back(74673);
        internal_counters.push_back(75064);

        c.DefineDerivedCounter("PostZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z after shading and failed Z test.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "b3684c94-814a-c695-c85d-a5b6ab798b35");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69070);
        internal_counters.push_back(69461);
        internal_counters.push_back(69852);
        internal_counters.push_back(70243);
        internal_counters.push_back(70634);
        internal_counters.push_back(71025);
        internal_counters.push_back(71416);
        internal_counters.push_back(71807);
        internal_counters.push_back(72198);
        internal_counters.push_back(72589);
        internal_counters.push_back(72980);
        internal_counters.push_back(73371);
        internal_counters.push_back(73762);
        internal_counters.push_back(74153);
        internal_counters.push_back(74544);
        internal_counters.push_back(74935);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("ZUnitStalled", "DepthAndStencil", "The percentage of GPUTime the depth buffer spends waiting for the color buffer to be ready to accept data. High figures here indicate a bottleneck in color buffer operations.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "5e86c3ad-1726-3157-1d01-7ed188bf854d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69070);
        internal_counters.push_back(69461);
        internal_counters.push_back(69852);
        internal_counters.push_back(70243);
        internal_counters.push_back(70634);
        internal_counters.push_back(71025);
        internal_counters.push_back(71416);
        internal_counters.push_back(71807);
        internal_counters.push_back(72198);
        internal_counters.push_back(72589);
        internal_counters.push_back(72980);
        internal_counters.push_back(73371);
        internal_counters.push_back(73762);
        internal_counters.push_back(74153);
        internal_counters.push_back(74544);
        internal_counters.push_back(74935);

        c.DefineDerivedCounter("ZUnitStalledCycles", "DepthAndStencil", "Number of GPU cycles the depth buffer spends waiting for the color buffer to be ready to accept data. Larger numbers indicate a bottleneck in color buffer operations.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "4351fa7f-6737-2c3e-3ffb-b3addbdceedd");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69072);
        internal_counters.push_back(69463);
        internal_counters.push_back(69854);
        internal_counters.push_back(70245);
        internal_counters.push_back(70636);
        internal_counters.push_back(71027);
        internal_counters.push_back(71418);
        internal_counters.push_back(71809);
        internal_counters.push_back(72200);
        internal_counters.push_back(72591);
        internal_counters.push_back(72982);
        internal_counters.push_back(73373);
        internal_counters.push_back(73764);
        internal_counters.push_back(74155);
        internal_counters.push_back(74546);
        internal_counters.push_back(74937);
        internal_counters.push_back(69079);
        internal_counters.push_back(69470);
        internal_counters.push_back(69861);
        internal_counters.push_back(70252);
        internal_counters.push_back(70643);
        internal_counters.push_back(71034);
        internal_counters.push_back(71425);
        internal_counters.push_back(71816);
        internal_counters.push_back(72207);
        internal_counters.push_back(72598);
        internal_counters.push_back(72989);
        internal_counters.push_back(73380);
        internal_counters.push_back(73771);
        internal_counters.push_back(74162);
        internal_counters.push_back(74553);
        internal_counters.push_back(74944);

        c.DefineDerivedCounter("DBMemRead", "DepthAndStencil", "Number of bytes read from the depth buffer.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(256),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "dcdb4ee7-bd50-00f7-c028-9e5f4ce888c0");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(69084);
        internal_counters.push_back(69475);
        internal_counters.push_back(69866);
        internal_counters.push_back(70257);
        internal_counters.push_back(70648);
        internal_counters.push_back(71039);
        internal_counters.push_back(71430);
        internal_counters.push_back(71821);
        internal_counters.push_back(72212);
        internal_counters.push_back(72603);
        internal_counters.push_back(72994);
        internal_counters.push_back(73385);
        internal_counters.push_back(73776);
        internal_counters.push_back(74167);
        internal_counters.push_back(74558);
        internal_counters.push_back(74949);
        internal_counters.push_back(69087);
        internal_counters.push_back(69478);
        internal_counters.push_back(69869);
        internal_counters.push_back(70260);
        internal_counters.push_back(70651);
        internal_counters.push_back(71042);
        internal_counters.push_back(71433);
        internal_counters.push_back(71824);
        internal_counters.push_back(72215);
        internal_counters.push_back(72606);
        internal_counters.push_back(72997);
        internal_counters.push_back(73388);
        internal_counters.push_back(73779);
        internal_counters.push_back(74170);
        internal_counters.push_back(74561);
        internal_counters.push_back(74952);

        c.DefineDerivedCounter("DBMemWritten", "DepthAndStencil", "Number of bytes written to the depth buffer.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "de5717f8-8a49-ee44-4645-10de51b37dcf");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(75408);
        internal_counters.push_back(75861);
        internal_counters.push_back(76314);
        internal_counters.push_back(76767);
        internal_counters.push_back(77220);
        internal_counters.push_back(77673);
        internal_counters.push_back(78126);
        internal_counters.push_back(78579);
        internal_counters.push_back(79032);
        internal_counters.push_back(79485);
        internal_counters.push_back(79938);
        internal_counters.push_back(80391);
        internal_counters.push_back(80844);
        internal_counters.push_back(81297);
        internal_counters.push_back(81750);
        internal_counters.push_back(82203);

        c.DefineDerivedCounter("CBMemRead", "ColorBuffer", "Number of bytes read from the color buffer.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "84b531d8-a1f8-7f49-7c27-7bc97801f1e6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(75539);
        internal_counters.push_back(75992);
        internal_counters.push_back(76445);
        internal_counters.push_back(76898);
        internal_counters.push_back(77351);
        internal_counters.push_back(77804);
        internal_counters.push_back(78257);
        internal_counters.push_back(78710);
        internal_counters.push_back(79163);
        internal_counters.push_back(79616);
        internal_counters.push_back(80069);
        internal_counters.push_back(80522);
        internal_counters.push_back(80975);
        internal_counters.push_back(81428);
        internal_counters.push_back(81881);
        internal_counters.push_back(82334);
        internal_counters.push_back(75406);
        internal_counters.push_back(75859);
        internal_counters.push_back(76312);
        internal_counters.push_back(76765);
        internal_counters.push_back(77218);
        internal_counters.push_back(77671);
        internal_counters.push_back(78124);
        internal_counters.push_back(78577);
        internal_counters.push_back(79030);
        internal_counters.push_back(79483);
        internal_counters.push_back(79936);
        internal_counters.push_back(80389);
        internal_counters.push_back(80842);
        internal_counters.push_back(81295);
        internal_counters.push_back(81748);
        internal_counters.push_back(82201);
        internal_counters.push_back(75407);
        internal_counters.push_back(75860);
        internal_counters.push_back(76313);
        internal_counters.push_back(76766);
        internal_counters.push_back(77219);
        internal_counters.push_back(77672);
        internal_counters.push_back(78125);
        internal_counters.push_back(78578);
        internal_counters.push_back(79031);
        internal_counters.push_back(79484);
        internal_counters.push_back(79937);
        internal_counters.push_back(80390);
        internal_counters.push_back(80843);
        internal_counters.push_back(81296);
        internal_counters.push_back(81749);
        internal_counters.push_back(82202);
        internal_counters.push_back(75408);
        internal_counters.push_back(75861);
        internal_counters.push_back(76314);
        internal_counters.push_back(76767);
        internal_counters.push_back(77220);
        internal_counters.push_back(77673);
        internal_counters.push_back(78126);
        internal_counters.push_back(78579);
        internal_counters.push_back(79032);
        internal_counters.push_back(79485);
        internal_counters.push_back(79938);
        internal_counters.push_back(80391);
        internal_counters.push_back(80844);
        internal_counters.push_back(81297);
        internal_counters.push_back(81750);
        internal_counters.push_back(82203);

        c.DefineDerivedCounter("CBColorAndMaskRead", "ColorBuffer", "Total number of bytes read from the color and mask buffers.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "da41660e-eb6f-32ec-8a64-b32ca17bd7eb");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(75398);
        internal_counters.push_back(75851);
        internal_counters.push_back(76304);
        internal_counters.push_back(76757);
        internal_counters.push_back(77210);
        internal_counters.push_back(77663);
        internal_counters.push_back(78116);
        internal_counters.push_back(78569);
        internal_counters.push_back(79022);
        internal_counters.push_back(79475);
        internal_counters.push_back(79928);
        internal_counters.push_back(80381);
        internal_counters.push_back(80834);
        internal_counters.push_back(81287);
        internal_counters.push_back(81740);
        internal_counters.push_back(82193);

        c.DefineDerivedCounter("CBMemWritten", "ColorBuffer", "Number of bytes written to the color buffer.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "550f8ff8-60b6-a6bf-87d0-25ac9e87de70");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(75537);
        internal_counters.push_back(75990);
        internal_counters.push_back(76443);
        internal_counters.push_back(76896);
        internal_counters.push_back(77349);
        internal_counters.push_back(77802);
        internal_counters.push_back(78255);
        internal_counters.push_back(78708);
        internal_counters.push_back(79161);
        internal_counters.push_back(79614);
        internal_counters.push_back(80067);
        internal_counters.push_back(80520);
        internal_counters.push_back(80973);
        internal_counters.push_back(81426);
        internal_counters.push_back(81879);
        internal_counters.push_back(82332);
        internal_counters.push_back(75396);
        internal_counters.push_back(75849);
        internal_counters.push_back(76302);
        internal_counters.push_back(76755);
        internal_counters.push_back(77208);
        internal_counters.push_back(77661);
        internal_counters.push_back(78114);
        internal_counters.push_back(78567);
        internal_counters.push_back(79020);
        internal_counters.push_back(79473);
        internal_counters.push_back(79926);
        internal_counters.push_back(80379);
        internal_counters.push_back(80832);
        internal_counters.push_back(81285);
        internal_counters.push_back(81738);
        internal_counters.push_back(82191);
        internal_counters.push_back(75397);
        internal_counters.push_back(75850);
        internal_counters.push_back(76303);
        internal_counters.push_back(76756);
        internal_counters.push_back(77209);
        internal_counters.push_back(77662);
        internal_counters.push_back(78115);
        internal_counters.push_back(78568);
        internal_counters.push_back(79021);
        internal_counters.push_back(79474);
        internal_counters.push_back(79927);
        internal_counters.push_back(80380);
        internal_counters.push_back(80833);
        internal_counters.push_back(81286);
        internal_counters.push_back(81739);
        internal_counters.push_back(82192);
        internal_counters.push_back(75398);
        internal_counters.push_back(75851);
        internal_counters.push_back(76304);
        internal_counters.push_back(76757);
        internal_counters.push_back(77210);
        internal_counters.push_back(77663);
        internal_counters.push_back(78116);
        internal_counters.push_back(78569);
        internal_counters.push_back(79022);
        internal_counters.push_back(79475);
        internal_counters.push_back(79928);
        internal_counters.push_back(80381);
        internal_counters.push_back(80834);
        internal_counters.push_back(81287);
        internal_counters.push_back(81740);
        internal_counters.push_back(82193);

        c.DefineDerivedCounter("CBColorAndMaskWritten", "ColorBuffer", "Total number of bytes written to the color and mask buffers.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "29a04b69-8f5f-b770-a0f2-3453e2c99e49");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(75442);
        internal_counters.push_back(75895);
        internal_counters.push_back(76348);
        internal_counters.push_back(76801);
        internal_counters.push_back(77254);
        internal_counters.push_back(77707);
        internal_counters.push_back(78160);
        internal_counters.push_back(78613);
        internal_counters.push_back(79066);
        internal_counters.push_back(79519);
        internal_counters.push_back(79972);
        internal_counters.push_back(80425);
        internal_counters.push_back(80878);
        internal_counters.push_back(81331);
        internal_counters.push_back(81784);
        internal_counters.push_back(82237);
        internal_counters.push_back(75287);
        internal_counters.push_back(75740);
        internal_counters.push_back(76193);
        internal_counters.push_back(76646);
        internal_counters.push_back(77099);
        internal_counters.push_back(77552);
        internal_counters.push_back(78005);
        internal_counters.push_back(78458);
        internal_counters.push_back(78911);
        internal_counters.push_back(79364);
        internal_counters.push_back(79817);
        internal_counters.push_back(80270);
        internal_counters.push_back(80723);
        internal_counters.push_back(81176);
        internal_counters.push_back(81629);
        internal_counters.push_back(82082);

        c.DefineDerivedCounter("CBSlowPixelPct", "ColorBuffer", "Percentage of pixels written to the color buffer using a half-rate or quarter-rate format.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*,(100),min", "5775943f-0313-7e52-9638-b24a449197bc");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(75442);
        internal_counters.push_back(75895);
        internal_counters.push_back(76348);
        internal_counters.push_back(76801);
        internal_counters.push_back(77254);
        internal_counters.push_back(77707);
        internal_counters.push_back(78160);
        internal_counters.push_back(78613);
        internal_counters.push_back(79066);
        internal_counters.push_back(79519);
        internal_counters.push_back(79972);
        internal_counters.push_back(80425);
        internal_counters.push_back(80878);
        internal_counters.push_back(81331);
        internal_counters.push_back(81784);
        internal_counters.push_back(82237);

        c.DefineDerivedCounter("CBSlowPixelCount", "ColorBuffer", "Number of pixels written to the color buffer using a half-rate or quarter-rate format.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "47eacbb0-28c8-22b4-5c69-c00d5813bb1c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(64153);
        internal_counters.push_back(64214);
        internal_counters.push_back(64275);
        internal_counters.push_back(64336);
        internal_counters.push_back(64397);
        internal_counters.push_back(64458);
        internal_counters.push_back(64519);
        internal_counters.push_back(64580);
        internal_counters.push_back(64641);
        internal_counters.push_back(64702);
        internal_counters.push_back(64763);
        internal_counters.push_back(64824);
        internal_counters.push_back(64885);
        internal_counters.push_back(64946);
        internal_counters.push_back(65007);
        internal_counters.push_back(65068);
        internal_counters.push_back(65129);
        internal_counters.push_back(65190);
        internal_counters.push_back(65251);
        internal_counters.push_back(65312);
        internal_counters.push_back(65373);
        internal_counters.push_back(65434);
        internal_counters.push_back(65495);
        internal_counters.push_back(65556);
        internal_counters.push_back(65617);
        internal_counters.push_back(65678);
        internal_counters.push_back(65739);
        internal_counters.push_back(65800);
        internal_counters.push_back(65861);
        internal_counters.push_back(65922);
        internal_counters.push_back(65983);
        internal_counters.push_back(66044);
        internal_counters.push_back(66105);
        internal_counters.push_back(66166);
        internal_counters.push_back(66227);
        internal_counters.push_back(66288);
        internal_counters.push_back(66349);
        internal_counters.push_back(66410);
        internal_counters.push_back(66471);
        internal_counters.push_back(66532);
        internal_counters.push_back(66593);
        internal_counters.push_back(66654);
        internal_counters.push_back(66715);
        internal_counters.push_back(66776);
        internal_counters.push_back(66837);
        internal_counters.push_back(66898);
        internal_counters.push_back(66959);
        internal_counters.push_back(67020);
        internal_counters.push_back(67081);
        internal_counters.push_back(67142);
        internal_counters.push_back(67203);
        internal_counters.push_back(67264);
        internal_counters.push_back(67325);
        internal_counters.push_back(67386);
        internal_counters.push_back(67447);
        internal_counters.push_back(67508);
        internal_counters.push_back(67569);
        internal_counters.push_back(67630);
        internal_counters.push_back(67691);
        internal_counters.push_back(67752);
        internal_counters.push_back(67813);
        internal_counters.push_back(67874);
        internal_counters.push_back(67935);
        internal_counters.push_back(67996);
        internal_counters.push_back(68057);
        internal_counters.push_back(68118);
        internal_counters.push_back(68179);
        internal_counters.push_back(68240);
        internal_counters.push_back(68301);
        internal_counters.push_back(68362);
        internal_counters.push_back(68423);
        internal_counters.push_back(68484);
        internal_counters.push_back(68545);
        internal_counters.push_back(68606);
        internal_counters.push_back(68667);
        internal_counters.push_back(68728);
        internal_counters.push_back(68789);
        internal_counters.push_back(68850);
        internal_counters.push_back(68911);
        internal_counters.push_back(68972);
        internal_counters.push_back(64162);
        internal_counters.push_back(64223);
        internal_counters.push_back(64284);
        internal_counters.push_back(64345);
        internal_counters.push_back(64406);
        internal_counters.push_back(64467);
        internal_counters.push_back(64528);
        internal_counters.push_back(64589);
        internal_counters.push_back(64650);
        internal_counters.push_back(64711);
        internal_counters.push_back(64772);
        internal_counters.push_back(64833);
        internal_counters.push_back(64894);
        internal_counters.push_back(64955);
        internal_counters.push_back(65016);
        internal_counters.push_back(65077);
        internal_counters.push_back(65138);
        internal_counters.push_back(65199);
        internal_counters.push_back(65260);
        internal_counters.push_back(65321);
        internal_counters.push_back(65382);
        internal_counters.push_back(65443);
        internal_counters.push_back(65504);
        internal_counters.push_back(65565);
        internal_counters.push_back(65626);
        internal_counters.push_back(65687);
        internal_counters.push_back(65748);
        internal_counters.push_back(65809);
        internal_counters.push_back(65870);
        internal_counters.push_back(65931);
        internal_counters.push_back(65992);
        internal_counters.push_back(66053);
        internal_counters.push_back(66114);
        internal_counters.push_back(66175);
        internal_counters.push_back(66236);
        internal_counters.push_back(66297);
        internal_counters.push_back(66358);
        internal_counters.push_back(66419);
        internal_counters.push_back(66480);
        internal_counters.push_back(66541);
        internal_counters.push_back(66602);
        internal_counters.push_back(66663);
        internal_counters.push_back(66724);
        internal_counters.push_back(66785);
        internal_counters.push_back(66846);
        internal_counters.push_back(66907);
        internal_counters.push_back(66968);
        internal_counters.push_back(67029);
        internal_counters.push_back(67090);
        internal_counters.push_back(67151);
        internal_counters.push_back(67212);
        internal_counters.push_back(67273);
        internal_counters.push_back(67334);
        internal_counters.push_back(67395);
        internal_counters.push_back(67456);
        internal_counters.push_back(67517);
        internal_counters.push_back(67578);
        internal_counters.push_back(67639);
        internal_counters.push_back(67700);
        internal_counters.push_back(67761);
        internal_counters.push_back(67822);
        internal_counters.push_back(67883);
        internal_counters.push_back(67944);
        internal_counters.push_back(68005);
        internal_counters.push_back(68066);
        internal_counters.push_back(68127);
        internal_counters.push_back(68188);
        internal_counters.push_back(68249);
        internal_counters.push_back(68310);
        internal_counters.push_back(68371);
        internal_counters.push_back(68432);
        internal_counters.push_back(68493);
        internal_counters.push_back(68554);
        internal_counters.push_back(68615);
        internal_counters.push_back(68676);
        internal_counters.push_back(68737);
        internal_counters.push_back(68798);
        internal_counters.push_back(68859);
        internal_counters.push_back(68920);
        internal_counters.push_back(68981);

        c.DefineDerivedCounter("L0CacheHit", "MemoryCache", "The percentage of read requests that hit the data in the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),(1),80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,ifnotzero", "286c786e-9a42-3371-9dea-dd54e6e612e9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(64153);
        internal_counters.push_back(64214);
        internal_counters.push_back(64275);
        internal_counters.push_back(64336);
        internal_counters.push_back(64397);
        internal_counters.push_back(64458);
        internal_counters.push_back(64519);
        internal_counters.push_back(64580);
        internal_counters.push_back(64641);
        internal_counters.push_back(64702);
        internal_counters.push_back(64763);
        internal_counters.push_back(64824);
        internal_counters.push_back(64885);
        internal_counters.push_back(64946);
        internal_counters.push_back(65007);
        internal_counters.push_back(65068);
        internal_counters.push_back(65129);
        internal_counters.push_back(65190);
        internal_counters.push_back(65251);
        internal_counters.push_back(65312);
        internal_counters.push_back(65373);
        internal_counters.push_back(65434);
        internal_counters.push_back(65495);
        internal_counters.push_back(65556);
        internal_counters.push_back(65617);
        internal_counters.push_back(65678);
        internal_counters.push_back(65739);
        internal_counters.push_back(65800);
        internal_counters.push_back(65861);
        internal_counters.push_back(65922);
        internal_counters.push_back(65983);
        internal_counters.push_back(66044);
        internal_counters.push_back(66105);
        internal_counters.push_back(66166);
        internal_counters.push_back(66227);
        internal_counters.push_back(66288);
        internal_counters.push_back(66349);
        internal_counters.push_back(66410);
        internal_counters.push_back(66471);
        internal_counters.push_back(66532);
        internal_counters.push_back(66593);
        internal_counters.push_back(66654);
        internal_counters.push_back(66715);
        internal_counters.push_back(66776);
        internal_counters.push_back(66837);
        internal_counters.push_back(66898);
        internal_counters.push_back(66959);
        internal_counters.push_back(67020);
        internal_counters.push_back(67081);
        internal_counters.push_back(67142);
        internal_counters.push_back(67203);
        internal_counters.push_back(67264);
        internal_counters.push_back(67325);
        internal_counters.push_back(67386);
        internal_counters.push_back(67447);
        internal_counters.push_back(67508);
        internal_counters.push_back(67569);
        internal_counters.push_back(67630);
        internal_counters.push_back(67691);
        internal_counters.push_back(67752);
        internal_counters.push_back(67813);
        internal_counters.push_back(67874);
        internal_counters.push_back(67935);
        internal_counters.push_back(67996);
        internal_counters.push_back(68057);
        internal_counters.push_back(68118);
        internal_counters.push_back(68179);
        internal_counters.push_back(68240);
        internal_counters.push_back(68301);
        internal_counters.push_back(68362);
        internal_counters.push_back(68423);
        internal_counters.push_back(68484);
        internal_counters.push_back(68545);
        internal_counters.push_back(68606);
        internal_counters.push_back(68667);
        internal_counters.push_back(68728);
        internal_counters.push_back(68789);
        internal_counters.push_back(68850);
        internal_counters.push_back(68911);
        internal_counters.push_back(68972);

        c.DefineDerivedCounter("L0CacheRequestCount", "MemoryCache", "The number of read requests made to the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "74983cae-ee57-2e1b-d990-5128fef84e1f");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(64153);
        internal_counters.push_back(64214);
        internal_counters.push_back(64275);
        internal_counters.push_back(64336);
        internal_counters.push_back(64397);
        internal_counters.push_back(64458);
        internal_counters.push_back(64519);
        internal_counters.push_back(64580);
        internal_counters.push_back(64641);
        internal_counters.push_back(64702);
        internal_counters.push_back(64763);
        internal_counters.push_back(64824);
        internal_counters.push_back(64885);
        internal_counters.push_back(64946);
        internal_counters.push_back(65007);
        internal_counters.push_back(65068);
        internal_counters.push_back(65129);
        internal_counters.push_back(65190);
        internal_counters.push_back(65251);
        internal_counters.push_back(65312);
        internal_counters.push_back(65373);
        internal_counters.push_back(65434);
        internal_counters.push_back(65495);
        internal_counters.push_back(65556);
        internal_counters.push_back(65617);
        internal_counters.push_back(65678);
        internal_counters.push_back(65739);
        internal_counters.push_back(65800);
        internal_counters.push_back(65861);
        internal_counters.push_back(65922);
        internal_counters.push_back(65983);
        internal_counters.push_back(66044);
        internal_counters.push_back(66105);
        internal_counters.push_back(66166);
        internal_counters.push_back(66227);
        internal_counters.push_back(66288);
        internal_counters.push_back(66349);
        internal_counters.push_back(66410);
        internal_counters.push_back(66471);
        internal_counters.push_back(66532);
        internal_counters.push_back(66593);
        internal_counters.push_back(66654);
        internal_counters.push_back(66715);
        internal_counters.push_back(66776);
        internal_counters.push_back(66837);
        internal_counters.push_back(66898);
        internal_counters.push_back(66959);
        internal_counters.push_back(67020);
        internal_counters.push_back(67081);
        internal_counters.push_back(67142);
        internal_counters.push_back(67203);
        internal_counters.push_back(67264);
        internal_counters.push_back(67325);
        internal_counters.push_back(67386);
        internal_counters.push_back(67447);
        internal_counters.push_back(67508);
        internal_counters.push_back(67569);
        internal_counters.push_back(67630);
        internal_counters.push_back(67691);
        internal_counters.push_back(67752);
        internal_counters.push_back(67813);
        internal_counters.push_back(67874);
        internal_counters.push_back(67935);
        internal_counters.push_back(67996);
        internal_counters.push_back(68057);
        internal_counters.push_back(68118);
        internal_counters.push_back(68179);
        internal_counters.push_back(68240);
        internal_counters.push_back(68301);
        internal_counters.push_back(68362);
        internal_counters.push_back(68423);
        internal_counters.push_back(68484);
        internal_counters.push_back(68545);
        internal_counters.push_back(68606);
        internal_counters.push_back(68667);
        internal_counters.push_back(68728);
        internal_counters.push_back(68789);
        internal_counters.push_back(68850);
        internal_counters.push_back(68911);
        internal_counters.push_back(68972);
        internal_counters.push_back(64162);
        internal_counters.push_back(64223);
        internal_counters.push_back(64284);
        internal_counters.push_back(64345);
        internal_counters.push_back(64406);
        internal_counters.push_back(64467);
        internal_counters.push_back(64528);
        internal_counters.push_back(64589);
        internal_counters.push_back(64650);
        internal_counters.push_back(64711);
        internal_counters.push_back(64772);
        internal_counters.push_back(64833);
        internal_counters.push_back(64894);
        internal_counters.push_back(64955);
        internal_counters.push_back(65016);
        internal_counters.push_back(65077);
        internal_counters.push_back(65138);
        internal_counters.push_back(65199);
        internal_counters.push_back(65260);
        internal_counters.push_back(65321);
        internal_counters.push_back(65382);
        internal_counters.push_back(65443);
        internal_counters.push_back(65504);
        internal_counters.push_back(65565);
        internal_counters.push_back(65626);
        internal_counters.push_back(65687);
        internal_counters.push_back(65748);
        internal_counters.push_back(65809);
        internal_counters.push_back(65870);
        internal_counters.push_back(65931);
        internal_counters.push_back(65992);
        internal_counters.push_back(66053);
        internal_counters.push_back(66114);
        internal_counters.push_back(66175);
        internal_counters.push_back(66236);
        internal_counters.push_back(66297);
        internal_counters.push_back(66358);
        internal_counters.push_back(66419);
        internal_counters.push_back(66480);
        internal_counters.push_back(66541);
        internal_counters.push_back(66602);
        internal_counters.push_back(66663);
        internal_counters.push_back(66724);
        internal_counters.push_back(66785);
        internal_counters.push_back(66846);
        internal_counters.push_back(66907);
        internal_counters.push_back(66968);
        internal_counters.push_back(67029);
        internal_counters.push_back(67090);
        internal_counters.push_back(67151);
        internal_counters.push_back(67212);
        internal_counters.push_back(67273);
        internal_counters.push_back(67334);
        internal_counters.push_back(67395);
        internal_counters.push_back(67456);
        internal_counters.push_back(67517);
        internal_counters.push_back(67578);
        internal_counters.push_back(67639);
        internal_counters.push_back(67700);
        internal_counters.push_back(67761);
        internal_counters.push_back(67822);
        internal_counters.push_back(67883);
        internal_counters.push_back(67944);
        internal_counters.push_back(68005);
        internal_counters.push_back(68066);
        internal_counters.push_back(68127);
        internal_counters.push_back(68188);
        internal_counters.push_back(68249);
        internal_counters.push_back(68310);
        internal_counters.push_back(68371);
        internal_counters.push_back(68432);
        internal_counters.push_back(68493);
        internal_counters.push_back(68554);
        internal_counters.push_back(68615);
        internal_counters.push_back(68676);
        internal_counters.push_back(68737);
        internal_counters.push_back(68798);
        internal_counters.push_back(68859);
        internal_counters.push_back(68920);
        internal_counters.push_back(68981);

        c.DefineDerivedCounter("L0CacheHitCount", "MemoryCache", "The number of read requests which result in a cache hit from the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,-", "c0de7338-069b-c5ba-ead3-c65e030cd2ac");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(64162);
        internal_counters.push_back(64223);
        internal_counters.push_back(64284);
        internal_counters.push_back(64345);
        internal_counters.push_back(64406);
        internal_counters.push_back(64467);
        internal_counters.push_back(64528);
        internal_counters.push_back(64589);
        internal_counters.push_back(64650);
        internal_counters.push_back(64711);
        internal_counters.push_back(64772);
        internal_counters.push_back(64833);
        internal_counters.push_back(64894);
        internal_counters.push_back(64955);
        internal_counters.push_back(65016);
        internal_counters.push_back(65077);
        internal_counters.push_back(65138);
        internal_counters.push_back(65199);
        internal_counters.push_back(65260);
        internal_counters.push_back(65321);
        internal_counters.push_back(65382);
        internal_counters.push_back(65443);
        internal_counters.push_back(65504);
        internal_counters.push_back(65565);
        internal_counters.push_back(65626);
        internal_counters.push_back(65687);
        internal_counters.push_back(65748);
        internal_counters.push_back(65809);
        internal_counters.push_back(65870);
        internal_counters.push_back(65931);
        internal_counters.push_back(65992);
        internal_counters.push_back(66053);
        internal_counters.push_back(66114);
        internal_counters.push_back(66175);
        internal_counters.push_back(66236);
        internal_counters.push_back(66297);
        internal_counters.push_back(66358);
        internal_counters.push_back(66419);
        internal_counters.push_back(66480);
        internal_counters.push_back(66541);
        internal_counters.push_back(66602);
        internal_counters.push_back(66663);
        internal_counters.push_back(66724);
        internal_counters.push_back(66785);
        internal_counters.push_back(66846);
        internal_counters.push_back(66907);
        internal_counters.push_back(66968);
        internal_counters.push_back(67029);
        internal_counters.push_back(67090);
        internal_counters.push_back(67151);
        internal_counters.push_back(67212);
        internal_counters.push_back(67273);
        internal_counters.push_back(67334);
        internal_counters.push_back(67395);
        internal_counters.push_back(67456);
        internal_counters.push_back(67517);
        internal_counters.push_back(67578);
        internal_counters.push_back(67639);
        internal_counters.push_back(67700);
        internal_counters.push_back(67761);
        internal_counters.push_back(67822);
        internal_counters.push_back(67883);
        internal_counters.push_back(67944);
        internal_counters.push_back(68005);
        internal_counters.push_back(68066);
        internal_counters.push_back(68127);
        internal_counters.push_back(68188);
        internal_counters.push_back(68249);
        internal_counters.push_back(68310);
        internal_counters.push_back(68371);
        internal_counters.push_back(68432);
        internal_counters.push_back(68493);
        internal_counters.push_back(68554);
        internal_counters.push_back(68615);
        internal_counters.push_back(68676);
        internal_counters.push_back(68737);
        internal_counters.push_back(68798);
        internal_counters.push_back(68859);
        internal_counters.push_back(68920);
        internal_counters.push_back(68981);

        c.DefineDerivedCounter("L0CacheMissCount", "MemoryCache", "The number of read requests which result in a cache miss from the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "a2f08766-ea1b-6eae-6eaf-faa04125d3e6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(12055);
        internal_counters.push_back(12567);
        internal_counters.push_back(13079);
        internal_counters.push_back(13591);
        internal_counters.push_back(12056);
        internal_counters.push_back(12568);
        internal_counters.push_back(13080);
        internal_counters.push_back(13592);
        internal_counters.push_back(12057);
        internal_counters.push_back(12569);
        internal_counters.push_back(13081);
        internal_counters.push_back(13593);

        c.DefineDerivedCounter("ScalarCacheHit", "MemoryCache", "The percentage of read requests made from executing shader code that hit the data in the Scalar cache. The Scalar cache contains data that does not vary in each thread across the wavefront. Each request is 64 bytes in size. Value range: 0% (no hit) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,sum4,0,1,2,3,4,5,6,7,8,9,10,11,sum12,/,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,sum12,ifnotzero", "3346d2cf-b7e4-45b6-c0a0-350ce18159c0");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(12055);
        internal_counters.push_back(12567);
        internal_counters.push_back(13079);
        internal_counters.push_back(13591);
        internal_counters.push_back(12056);
        internal_counters.push_back(12568);
        internal_counters.push_back(13080);
        internal_counters.push_back(13592);
        internal_counters.push_back(12057);
        internal_counters.push_back(12569);
        internal_counters.push_back(13081);
        internal_counters.push_back(13593);

        c.DefineDerivedCounter("ScalarCacheRequestCount", "MemoryCache", "The number of read requests made from executing shader code to the Scalar cache. The Scalar cache contains data that does not vary in each thread across the wavefront. Each request is 64 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,sum12", "b5ac4201-c4cd-caa5-6ca7-4bc9a3abee01");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(12055);
        internal_counters.push_back(12567);
        internal_counters.push_back(13079);
        internal_counters.push_back(13591);

        c.DefineDerivedCounter("ScalarCacheHitCount", "MemoryCache", "The number of read requests made from executing shader code which result in a cache hit from the Scalar cache. The Scalar cache contains data that does not vary in each thread across the wavefront. Each request is 64 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4", "beebef4f-8f6c-9363-eda9-bb385ffec363");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(12056);
        internal_counters.push_back(12568);
        internal_counters.push_back(13080);
        internal_counters.push_back(13592);
        internal_counters.push_back(12057);
        internal_counters.push_back(12569);
        internal_counters.push_back(13081);
        internal_counters.push_back(13593);

        c.DefineDerivedCounter("ScalarCacheMissCount", "MemoryCache", "The number of read requests made from executing shader code which result in a cache miss from the Scalar cache. The Scalar cache contains data that does not vary in each thread across the wavefront. Each request is 64 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,sum8", "07f5afb2-75b2-4fc3-1a6a-579958f77dd3");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(12020);
        internal_counters.push_back(12532);
        internal_counters.push_back(13044);
        internal_counters.push_back(13556);
        internal_counters.push_back(12021);
        internal_counters.push_back(12533);
        internal_counters.push_back(13045);
        internal_counters.push_back(13557);
        internal_counters.push_back(12022);
        internal_counters.push_back(12534);
        internal_counters.push_back(13046);
        internal_counters.push_back(13558);

        c.DefineDerivedCounter("InstCacheHit", "MemoryCache", "The percentage of read requests made that hit the data in the Instruction cache. The Instruction cache supplies shader code to an executing shader. Each request is 64 bytes in size. Value range: 0% (no hit) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,sum4,0,1,2,3,4,5,6,7,8,9,10,11,sum12,/,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,sum12,ifnotzero", "adf51399-597b-f017-8ec1-21817f92e91d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(12020);
        internal_counters.push_back(12532);
        internal_counters.push_back(13044);
        internal_counters.push_back(13556);
        internal_counters.push_back(12021);
        internal_counters.push_back(12533);
        internal_counters.push_back(13045);
        internal_counters.push_back(13557);
        internal_counters.push_back(12022);
        internal_counters.push_back(12534);
        internal_counters.push_back(13046);
        internal_counters.push_back(13558);

        c.DefineDerivedCounter("InstCacheRequestCount", "MemoryCache", "The number of read requests made to the Instruction cache. The Instruction cache supplies shader code to an executing shader. Each request is 64 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,sum12", "8c92ca8c-7dcc-88a0-3037-9704aa4f64ac");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(12020);
        internal_counters.push_back(12532);
        internal_counters.push_back(13044);
        internal_counters.push_back(13556);

        c.DefineDerivedCounter("InstCacheHitCount", "MemoryCache", "The number of read requests which result in a cache hit from the Instruction cache. The Instruction cache supplies shader code to an executing shader. Each request is 64 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4", "778be78f-cf83-9558-e967-868e997e6743");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(12021);
        internal_counters.push_back(12533);
        internal_counters.push_back(13045);
        internal_counters.push_back(13557);
        internal_counters.push_back(12022);
        internal_counters.push_back(12534);
        internal_counters.push_back(13046);
        internal_counters.push_back(13558);

        c.DefineDerivedCounter("InstCacheMissCount", "MemoryCache", "The number of read requests which result in a cache miss from the Instruction cache. The Instruction cache supplies shader code to an executing shader. Each request is 64 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,sum8", "351650dc-d349-dca8-2b78-b14a1479cf26");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(94097);
        internal_counters.push_back(94180);
        internal_counters.push_back(94263);
        internal_counters.push_back(94346);
        internal_counters.push_back(94429);
        internal_counters.push_back(94512);
        internal_counters.push_back(94595);
        internal_counters.push_back(94678);
        internal_counters.push_back(94761);
        internal_counters.push_back(94844);
        internal_counters.push_back(94927);
        internal_counters.push_back(95010);
        internal_counters.push_back(95093);
        internal_counters.push_back(95176);
        internal_counters.push_back(95259);
        internal_counters.push_back(95342);
        internal_counters.push_back(95425);
        internal_counters.push_back(95508);
        internal_counters.push_back(95591);
        internal_counters.push_back(95674);
        internal_counters.push_back(95757);
        internal_counters.push_back(95840);
        internal_counters.push_back(95923);
        internal_counters.push_back(96006);
        internal_counters.push_back(96089);
        internal_counters.push_back(96172);
        internal_counters.push_back(96255);
        internal_counters.push_back(96338);
        internal_counters.push_back(96421);
        internal_counters.push_back(96504);
        internal_counters.push_back(96587);
        internal_counters.push_back(96670);
        internal_counters.push_back(94101);
        internal_counters.push_back(94184);
        internal_counters.push_back(94267);
        internal_counters.push_back(94350);
        internal_counters.push_back(94433);
        internal_counters.push_back(94516);
        internal_counters.push_back(94599);
        internal_counters.push_back(94682);
        internal_counters.push_back(94765);
        internal_counters.push_back(94848);
        internal_counters.push_back(94931);
        internal_counters.push_back(95014);
        internal_counters.push_back(95097);
        internal_counters.push_back(95180);
        internal_counters.push_back(95263);
        internal_counters.push_back(95346);
        internal_counters.push_back(95429);
        internal_counters.push_back(95512);
        internal_counters.push_back(95595);
        internal_counters.push_back(95678);
        internal_counters.push_back(95761);
        internal_counters.push_back(95844);
        internal_counters.push_back(95927);
        internal_counters.push_back(96010);
        internal_counters.push_back(96093);
        internal_counters.push_back(96176);
        internal_counters.push_back(96259);
        internal_counters.push_back(96342);
        internal_counters.push_back(96425);
        internal_counters.push_back(96508);
        internal_counters.push_back(96591);
        internal_counters.push_back(96674);

        c.DefineDerivedCounter("L1CacheHit", "MemoryCache", "The percentage of read or write requests that hit the data in the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),(1),32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum32,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,ifnotzero", "5a34915a-24b8-8baf-2bf8-5878e7894ae3");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(94097);
        internal_counters.push_back(94180);
        internal_counters.push_back(94263);
        internal_counters.push_back(94346);
        internal_counters.push_back(94429);
        internal_counters.push_back(94512);
        internal_counters.push_back(94595);
        internal_counters.push_back(94678);
        internal_counters.push_back(94761);
        internal_counters.push_back(94844);
        internal_counters.push_back(94927);
        internal_counters.push_back(95010);
        internal_counters.push_back(95093);
        internal_counters.push_back(95176);
        internal_counters.push_back(95259);
        internal_counters.push_back(95342);
        internal_counters.push_back(95425);
        internal_counters.push_back(95508);
        internal_counters.push_back(95591);
        internal_counters.push_back(95674);
        internal_counters.push_back(95757);
        internal_counters.push_back(95840);
        internal_counters.push_back(95923);
        internal_counters.push_back(96006);
        internal_counters.push_back(96089);
        internal_counters.push_back(96172);
        internal_counters.push_back(96255);
        internal_counters.push_back(96338);
        internal_counters.push_back(96421);
        internal_counters.push_back(96504);
        internal_counters.push_back(96587);
        internal_counters.push_back(96670);

        c.DefineDerivedCounter("L1CacheRequestCount", "MemoryCache", "The number of read or write requests made to the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32", "29c76c67-4611-205d-0b88-d08668df03c5");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(94097);
        internal_counters.push_back(94180);
        internal_counters.push_back(94263);
        internal_counters.push_back(94346);
        internal_counters.push_back(94429);
        internal_counters.push_back(94512);
        internal_counters.push_back(94595);
        internal_counters.push_back(94678);
        internal_counters.push_back(94761);
        internal_counters.push_back(94844);
        internal_counters.push_back(94927);
        internal_counters.push_back(95010);
        internal_counters.push_back(95093);
        internal_counters.push_back(95176);
        internal_counters.push_back(95259);
        internal_counters.push_back(95342);
        internal_counters.push_back(95425);
        internal_counters.push_back(95508);
        internal_counters.push_back(95591);
        internal_counters.push_back(95674);
        internal_counters.push_back(95757);
        internal_counters.push_back(95840);
        internal_counters.push_back(95923);
        internal_counters.push_back(96006);
        internal_counters.push_back(96089);
        internal_counters.push_back(96172);
        internal_counters.push_back(96255);
        internal_counters.push_back(96338);
        internal_counters.push_back(96421);
        internal_counters.push_back(96504);
        internal_counters.push_back(96587);
        internal_counters.push_back(96670);
        internal_counters.push_back(94101);
        internal_counters.push_back(94184);
        internal_counters.push_back(94267);
        internal_counters.push_back(94350);
        internal_counters.push_back(94433);
        internal_counters.push_back(94516);
        internal_counters.push_back(94599);
        internal_counters.push_back(94682);
        internal_counters.push_back(94765);
        internal_counters.push_back(94848);
        internal_counters.push_back(94931);
        internal_counters.push_back(95014);
        internal_counters.push_back(95097);
        internal_counters.push_back(95180);
        internal_counters.push_back(95263);
        internal_counters.push_back(95346);
        internal_counters.push_back(95429);
        internal_counters.push_back(95512);
        internal_counters.push_back(95595);
        internal_counters.push_back(95678);
        internal_counters.push_back(95761);
        internal_counters.push_back(95844);
        internal_counters.push_back(95927);
        internal_counters.push_back(96010);
        internal_counters.push_back(96093);
        internal_counters.push_back(96176);
        internal_counters.push_back(96259);
        internal_counters.push_back(96342);
        internal_counters.push_back(96425);
        internal_counters.push_back(96508);
        internal_counters.push_back(96591);
        internal_counters.push_back(96674);

        c.DefineDerivedCounter("L1CacheHitCount", "MemoryCache", "The number of read or write requests which result in a cache hit from the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum32,-", "1ae150c3-f2d0-82c6-a51b-a77fd8d5fc33");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(94101);
        internal_counters.push_back(94184);
        internal_counters.push_back(94267);
        internal_counters.push_back(94350);
        internal_counters.push_back(94433);
        internal_counters.push_back(94516);
        internal_counters.push_back(94599);
        internal_counters.push_back(94682);
        internal_counters.push_back(94765);
        internal_counters.push_back(94848);
        internal_counters.push_back(94931);
        internal_counters.push_back(95014);
        internal_counters.push_back(95097);
        internal_counters.push_back(95180);
        internal_counters.push_back(95263);
        internal_counters.push_back(95346);
        internal_counters.push_back(95429);
        internal_counters.push_back(95512);
        internal_counters.push_back(95595);
        internal_counters.push_back(95678);
        internal_counters.push_back(95761);
        internal_counters.push_back(95844);
        internal_counters.push_back(95927);
        internal_counters.push_back(96010);
        internal_counters.push_back(96093);
        internal_counters.push_back(96176);
        internal_counters.push_back(96259);
        internal_counters.push_back(96342);
        internal_counters.push_back(96425);
        internal_counters.push_back(96508);
        internal_counters.push_back(96591);
        internal_counters.push_back(96674);

        c.DefineDerivedCounter("L1CacheMissCount", "MemoryCache", "The number of read or write requests which result in a cache miss from the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32", "71bfec6d-257b-849d-e212-cdf5c1b1de65");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(98322);
        internal_counters.push_back(98576);
        internal_counters.push_back(98830);
        internal_counters.push_back(99084);
        internal_counters.push_back(99338);
        internal_counters.push_back(99592);
        internal_counters.push_back(99846);
        internal_counters.push_back(100100);
        internal_counters.push_back(100354);
        internal_counters.push_back(100608);
        internal_counters.push_back(100862);
        internal_counters.push_back(101116);
        internal_counters.push_back(101370);
        internal_counters.push_back(101624);
        internal_counters.push_back(101878);
        internal_counters.push_back(102132);
        internal_counters.push_back(98362);
        internal_counters.push_back(98616);
        internal_counters.push_back(98870);
        internal_counters.push_back(99124);
        internal_counters.push_back(99378);
        internal_counters.push_back(99632);
        internal_counters.push_back(99886);
        internal_counters.push_back(100140);
        internal_counters.push_back(100394);
        internal_counters.push_back(100648);
        internal_counters.push_back(100902);
        internal_counters.push_back(101156);
        internal_counters.push_back(101410);
        internal_counters.push_back(101664);
        internal_counters.push_back(101918);
        internal_counters.push_back(102172);

        c.DefineDerivedCounter("L2CacheHit", "MemoryCache", "The percentage of read or write requests that hit the data in the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),(1),16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,ifnotzero", "47694e4d-6ce6-f387-080d-b1f3d00b73ac");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(98362);
        internal_counters.push_back(98616);
        internal_counters.push_back(98870);
        internal_counters.push_back(99124);
        internal_counters.push_back(99378);
        internal_counters.push_back(99632);
        internal_counters.push_back(99886);
        internal_counters.push_back(100140);
        internal_counters.push_back(100394);
        internal_counters.push_back(100648);
        internal_counters.push_back(100902);
        internal_counters.push_back(101156);
        internal_counters.push_back(101410);
        internal_counters.push_back(101664);
        internal_counters.push_back(101918);
        internal_counters.push_back(102172);
        internal_counters.push_back(98322);
        internal_counters.push_back(98576);
        internal_counters.push_back(98830);
        internal_counters.push_back(99084);
        internal_counters.push_back(99338);
        internal_counters.push_back(99592);
        internal_counters.push_back(99846);
        internal_counters.push_back(100100);
        internal_counters.push_back(100354);
        internal_counters.push_back(100608);
        internal_counters.push_back(100862);
        internal_counters.push_back(101116);
        internal_counters.push_back(101370);
        internal_counters.push_back(101624);
        internal_counters.push_back(101878);
        internal_counters.push_back(102132);

        c.DefineDerivedCounter("L2CacheMiss", "MemoryCache", "The percentage of read or write requests that miss the data in the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size. Value range: 0% (optimal) to 100% (all miss).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*", "8aee5458-a58e-11b6-5131-7f19ed070117");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(98322);
        internal_counters.push_back(98576);
        internal_counters.push_back(98830);
        internal_counters.push_back(99084);
        internal_counters.push_back(99338);
        internal_counters.push_back(99592);
        internal_counters.push_back(99846);
        internal_counters.push_back(100100);
        internal_counters.push_back(100354);
        internal_counters.push_back(100608);
        internal_counters.push_back(100862);
        internal_counters.push_back(101116);
        internal_counters.push_back(101370);
        internal_counters.push_back(101624);
        internal_counters.push_back(101878);
        internal_counters.push_back(102132);

        c.DefineDerivedCounter("L2CacheRequestCount", "MemoryCache", "The number of read or write requests made to the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "21e9219c-e725-0d96-06b1-b21698b736b2");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(98322);
        internal_counters.push_back(98576);
        internal_counters.push_back(98830);
        internal_counters.push_back(99084);
        internal_counters.push_back(99338);
        internal_counters.push_back(99592);
        internal_counters.push_back(99846);
        internal_counters.push_back(100100);
        internal_counters.push_back(100354);
        internal_counters.push_back(100608);
        internal_counters.push_back(100862);
        internal_counters.push_back(101116);
        internal_counters.push_back(101370);
        internal_counters.push_back(101624);
        internal_counters.push_back(101878);
        internal_counters.push_back(102132);
        internal_counters.push_back(98362);
        internal_counters.push_back(98616);
        internal_counters.push_back(98870);
        internal_counters.push_back(99124);
        internal_counters.push_back(99378);
        internal_counters.push_back(99632);
        internal_counters.push_back(99886);
        internal_counters.push_back(100140);
        internal_counters.push_back(100394);
        internal_counters.push_back(100648);
        internal_counters.push_back(100902);
        internal_counters.push_back(101156);
        internal_counters.push_back(101410);
        internal_counters.push_back(101664);
        internal_counters.push_back(101918);
        internal_counters.push_back(102172);

        c.DefineDerivedCounter("L2CacheHitCount", "MemoryCache", "The number of read or write requests which result in a cache hit from the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-", "29ddcb92-d3dd-951b-1b23-efe52e4eeee4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(98362);
        internal_counters.push_back(98616);
        internal_counters.push_back(98870);
        internal_counters.push_back(99124);
        internal_counters.push_back(99378);
        internal_counters.push_back(99632);
        internal_counters.push_back(99886);
        internal_counters.push_back(100140);
        internal_counters.push_back(100394);
        internal_counters.push_back(100648);
        internal_counters.push_back(100902);
        internal_counters.push_back(101156);
        internal_counters.push_back(101410);
        internal_counters.push_back(101664);
        internal_counters.push_back(101918);
        internal_counters.push_back(102172);

        c.DefineDerivedCounter("L2CacheMissCount", "MemoryCache", "The number of read or write requests which result in a cache miss from the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "376eec7b-ab25-9012-06b5-63291a17fd47");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(98418);
        internal_counters.push_back(98672);
        internal_counters.push_back(98926);
        internal_counters.push_back(99180);
        internal_counters.push_back(99434);
        internal_counters.push_back(99688);
        internal_counters.push_back(99942);
        internal_counters.push_back(100196);
        internal_counters.push_back(100450);
        internal_counters.push_back(100704);
        internal_counters.push_back(100958);
        internal_counters.push_back(101212);
        internal_counters.push_back(101466);
        internal_counters.push_back(101720);
        internal_counters.push_back(101974);
        internal_counters.push_back(102228);
        internal_counters.push_back(98419);
        internal_counters.push_back(98673);
        internal_counters.push_back(98927);
        internal_counters.push_back(99181);
        internal_counters.push_back(99435);
        internal_counters.push_back(99689);
        internal_counters.push_back(99943);
        internal_counters.push_back(100197);
        internal_counters.push_back(100451);
        internal_counters.push_back(100705);
        internal_counters.push_back(100959);
        internal_counters.push_back(101213);
        internal_counters.push_back(101467);
        internal_counters.push_back(101721);
        internal_counters.push_back(101975);
        internal_counters.push_back(102229);
        internal_counters.push_back(98420);
        internal_counters.push_back(98674);
        internal_counters.push_back(98928);
        internal_counters.push_back(99182);
        internal_counters.push_back(99436);
        internal_counters.push_back(99690);
        internal_counters.push_back(99944);
        internal_counters.push_back(100198);
        internal_counters.push_back(100452);
        internal_counters.push_back(100706);
        internal_counters.push_back(100960);
        internal_counters.push_back(101214);
        internal_counters.push_back(101468);
        internal_counters.push_back(101722);
        internal_counters.push_back(101976);
        internal_counters.push_back(102230);
        internal_counters.push_back(98421);
        internal_counters.push_back(98675);
        internal_counters.push_back(98929);
        internal_counters.push_back(99183);
        internal_counters.push_back(99437);
        internal_counters.push_back(99691);
        internal_counters.push_back(99945);
        internal_counters.push_back(100199);
        internal_counters.push_back(100453);
        internal_counters.push_back(100707);
        internal_counters.push_back(100961);
        internal_counters.push_back(101215);
        internal_counters.push_back(101469);
        internal_counters.push_back(101723);
        internal_counters.push_back(101977);
        internal_counters.push_back(102231);

        c.DefineDerivedCounter("FetchSize", "GlobalMemory", "The total bytes fetched from the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(64),*,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum16,(96),*,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum16,(128),*,sum4", "664bb3ef-6eca-86b1-1e2d-30cb897b5fa9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(98402);
        internal_counters.push_back(98656);
        internal_counters.push_back(98910);
        internal_counters.push_back(99164);
        internal_counters.push_back(99418);
        internal_counters.push_back(99672);
        internal_counters.push_back(99926);
        internal_counters.push_back(100180);
        internal_counters.push_back(100434);
        internal_counters.push_back(100688);
        internal_counters.push_back(100942);
        internal_counters.push_back(101196);
        internal_counters.push_back(101450);
        internal_counters.push_back(101704);
        internal_counters.push_back(101958);
        internal_counters.push_back(102212);
        internal_counters.push_back(98404);
        internal_counters.push_back(98658);
        internal_counters.push_back(98912);
        internal_counters.push_back(99166);
        internal_counters.push_back(99420);
        internal_counters.push_back(99674);
        internal_counters.push_back(99928);
        internal_counters.push_back(100182);
        internal_counters.push_back(100436);
        internal_counters.push_back(100690);
        internal_counters.push_back(100944);
        internal_counters.push_back(101198);
        internal_counters.push_back(101452);
        internal_counters.push_back(101706);
        internal_counters.push_back(101960);
        internal_counters.push_back(102214);

        c.DefineDerivedCounter("WriteSize", "GlobalMemory", "The total bytes written to the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(64),*,+", "f96f2c16-b1b4-4ec4-229c-fc82e6f80a82");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29919);
        internal_counters.push_back(30155);
        internal_counters.push_back(30391);
        internal_counters.push_back(30627);
        internal_counters.push_back(30863);
        internal_counters.push_back(31099);
        internal_counters.push_back(31335);
        internal_counters.push_back(31571);
        internal_counters.push_back(31807);
        internal_counters.push_back(32043);
        internal_counters.push_back(32279);
        internal_counters.push_back(32515);
        internal_counters.push_back(32751);
        internal_counters.push_back(32987);
        internal_counters.push_back(33223);
        internal_counters.push_back(33459);
        internal_counters.push_back(33695);
        internal_counters.push_back(33931);
        internal_counters.push_back(34167);
        internal_counters.push_back(34403);
        internal_counters.push_back(34639);
        internal_counters.push_back(34875);
        internal_counters.push_back(35111);
        internal_counters.push_back(35347);
        internal_counters.push_back(35583);
        internal_counters.push_back(35819);
        internal_counters.push_back(36055);
        internal_counters.push_back(36291);
        internal_counters.push_back(36527);
        internal_counters.push_back(36763);
        internal_counters.push_back(36999);
        internal_counters.push_back(37235);
        internal_counters.push_back(37471);
        internal_counters.push_back(37707);
        internal_counters.push_back(37943);
        internal_counters.push_back(38179);
        internal_counters.push_back(38415);
        internal_counters.push_back(38651);
        internal_counters.push_back(38887);
        internal_counters.push_back(39123);
        internal_counters.push_back(39359);
        internal_counters.push_back(39595);
        internal_counters.push_back(39831);
        internal_counters.push_back(40067);
        internal_counters.push_back(40303);
        internal_counters.push_back(40539);
        internal_counters.push_back(40775);
        internal_counters.push_back(41011);
        internal_counters.push_back(41247);
        internal_counters.push_back(41483);
        internal_counters.push_back(41719);
        internal_counters.push_back(41955);
        internal_counters.push_back(42191);
        internal_counters.push_back(42427);
        internal_counters.push_back(42663);
        internal_counters.push_back(42899);
        internal_counters.push_back(43135);
        internal_counters.push_back(43371);
        internal_counters.push_back(43607);
        internal_counters.push_back(43843);
        internal_counters.push_back(44079);
        internal_counters.push_back(44315);
        internal_counters.push_back(44551);
        internal_counters.push_back(44787);
        internal_counters.push_back(45023);
        internal_counters.push_back(45259);
        internal_counters.push_back(45495);
        internal_counters.push_back(45731);
        internal_counters.push_back(45967);
        internal_counters.push_back(46203);
        internal_counters.push_back(46439);
        internal_counters.push_back(46675);
        internal_counters.push_back(46911);
        internal_counters.push_back(47147);
        internal_counters.push_back(47383);
        internal_counters.push_back(47619);
        internal_counters.push_back(47855);
        internal_counters.push_back(48091);
        internal_counters.push_back(48327);
        internal_counters.push_back(48563);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("MemUnitBusy", "GlobalMemory", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*", "a1efa380-4a72-e066-e06a-2ab71a488521");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29919);
        internal_counters.push_back(30155);
        internal_counters.push_back(30391);
        internal_counters.push_back(30627);
        internal_counters.push_back(30863);
        internal_counters.push_back(31099);
        internal_counters.push_back(31335);
        internal_counters.push_back(31571);
        internal_counters.push_back(31807);
        internal_counters.push_back(32043);
        internal_counters.push_back(32279);
        internal_counters.push_back(32515);
        internal_counters.push_back(32751);
        internal_counters.push_back(32987);
        internal_counters.push_back(33223);
        internal_counters.push_back(33459);
        internal_counters.push_back(33695);
        internal_counters.push_back(33931);
        internal_counters.push_back(34167);
        internal_counters.push_back(34403);
        internal_counters.push_back(34639);
        internal_counters.push_back(34875);
        internal_counters.push_back(35111);
        internal_counters.push_back(35347);
        internal_counters.push_back(35583);
        internal_counters.push_back(35819);
        internal_counters.push_back(36055);
        internal_counters.push_back(36291);
        internal_counters.push_back(36527);
        internal_counters.push_back(36763);
        internal_counters.push_back(36999);
        internal_counters.push_back(37235);
        internal_counters.push_back(37471);
        internal_counters.push_back(37707);
        internal_counters.push_back(37943);
        internal_counters.push_back(38179);
        internal_counters.push_back(38415);
        internal_counters.push_back(38651);
        internal_counters.push_back(38887);
        internal_counters.push_back(39123);
        internal_counters.push_back(39359);
        internal_counters.push_back(39595);
        internal_counters.push_back(39831);
        internal_counters.push_back(40067);
        internal_counters.push_back(40303);
        internal_counters.push_back(40539);
        internal_counters.push_back(40775);
        internal_counters.push_back(41011);
        internal_counters.push_back(41247);
        internal_counters.push_back(41483);
        internal_counters.push_back(41719);
        internal_counters.push_back(41955);
        internal_counters.push_back(42191);
        internal_counters.push_back(42427);
        internal_counters.push_back(42663);
        internal_counters.push_back(42899);
        internal_counters.push_back(43135);
        internal_counters.push_back(43371);
        internal_counters.push_back(43607);
        internal_counters.push_back(43843);
        internal_counters.push_back(44079);
        internal_counters.push_back(44315);
        internal_counters.push_back(44551);
        internal_counters.push_back(44787);
        internal_counters.push_back(45023);
        internal_counters.push_back(45259);
        internal_counters.push_back(45495);
        internal_counters.push_back(45731);
        internal_counters.push_back(45967);
        internal_counters.push_back(46203);
        internal_counters.push_back(46439);
        internal_counters.push_back(46675);
        internal_counters.push_back(46911);
        internal_counters.push_back(47147);
        internal_counters.push_back(47383);
        internal_counters.push_back(47619);
        internal_counters.push_back(47855);
        internal_counters.push_back(48091);
        internal_counters.push_back(48327);
        internal_counters.push_back(48563);

        c.DefineDerivedCounter("MemUnitBusyCycles", "GlobalMemory", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalledCycles). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80", "168f077c-4797-b2f5-717f-105c725266c8");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(64180);
        internal_counters.push_back(64241);
        internal_counters.push_back(64302);
        internal_counters.push_back(64363);
        internal_counters.push_back(64424);
        internal_counters.push_back(64485);
        internal_counters.push_back(64546);
        internal_counters.push_back(64607);
        internal_counters.push_back(64668);
        internal_counters.push_back(64729);
        internal_counters.push_back(64790);
        internal_counters.push_back(64851);
        internal_counters.push_back(64912);
        internal_counters.push_back(64973);
        internal_counters.push_back(65034);
        internal_counters.push_back(65095);
        internal_counters.push_back(65156);
        internal_counters.push_back(65217);
        internal_counters.push_back(65278);
        internal_counters.push_back(65339);
        internal_counters.push_back(65400);
        internal_counters.push_back(65461);
        internal_counters.push_back(65522);
        internal_counters.push_back(65583);
        internal_counters.push_back(65644);
        internal_counters.push_back(65705);
        internal_counters.push_back(65766);
        internal_counters.push_back(65827);
        internal_counters.push_back(65888);
        internal_counters.push_back(65949);
        internal_counters.push_back(66010);
        internal_counters.push_back(66071);
        internal_counters.push_back(66132);
        internal_counters.push_back(66193);
        internal_counters.push_back(66254);
        internal_counters.push_back(66315);
        internal_counters.push_back(66376);
        internal_counters.push_back(66437);
        internal_counters.push_back(66498);
        internal_counters.push_back(66559);
        internal_counters.push_back(66620);
        internal_counters.push_back(66681);
        internal_counters.push_back(66742);
        internal_counters.push_back(66803);
        internal_counters.push_back(66864);
        internal_counters.push_back(66925);
        internal_counters.push_back(66986);
        internal_counters.push_back(67047);
        internal_counters.push_back(67108);
        internal_counters.push_back(67169);
        internal_counters.push_back(67230);
        internal_counters.push_back(67291);
        internal_counters.push_back(67352);
        internal_counters.push_back(67413);
        internal_counters.push_back(67474);
        internal_counters.push_back(67535);
        internal_counters.push_back(67596);
        internal_counters.push_back(67657);
        internal_counters.push_back(67718);
        internal_counters.push_back(67779);
        internal_counters.push_back(67840);
        internal_counters.push_back(67901);
        internal_counters.push_back(67962);
        internal_counters.push_back(68023);
        internal_counters.push_back(68084);
        internal_counters.push_back(68145);
        internal_counters.push_back(68206);
        internal_counters.push_back(68267);
        internal_counters.push_back(68328);
        internal_counters.push_back(68389);
        internal_counters.push_back(68450);
        internal_counters.push_back(68511);
        internal_counters.push_back(68572);
        internal_counters.push_back(68633);
        internal_counters.push_back(68694);
        internal_counters.push_back(68755);
        internal_counters.push_back(68816);
        internal_counters.push_back(68877);
        internal_counters.push_back(68938);
        internal_counters.push_back(68999);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("MemUnitStalled", "GlobalMemory", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*", "465ba54f-d250-1453-790a-731b10d230b1");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(64180);
        internal_counters.push_back(64241);
        internal_counters.push_back(64302);
        internal_counters.push_back(64363);
        internal_counters.push_back(64424);
        internal_counters.push_back(64485);
        internal_counters.push_back(64546);
        internal_counters.push_back(64607);
        internal_counters.push_back(64668);
        internal_counters.push_back(64729);
        internal_counters.push_back(64790);
        internal_counters.push_back(64851);
        internal_counters.push_back(64912);
        internal_counters.push_back(64973);
        internal_counters.push_back(65034);
        internal_counters.push_back(65095);
        internal_counters.push_back(65156);
        internal_counters.push_back(65217);
        internal_counters.push_back(65278);
        internal_counters.push_back(65339);
        internal_counters.push_back(65400);
        internal_counters.push_back(65461);
        internal_counters.push_back(65522);
        internal_counters.push_back(65583);
        internal_counters.push_back(65644);
        internal_counters.push_back(65705);
        internal_counters.push_back(65766);
        internal_counters.push_back(65827);
        internal_counters.push_back(65888);
        internal_counters.push_back(65949);
        internal_counters.push_back(66010);
        internal_counters.push_back(66071);
        internal_counters.push_back(66132);
        internal_counters.push_back(66193);
        internal_counters.push_back(66254);
        internal_counters.push_back(66315);
        internal_counters.push_back(66376);
        internal_counters.push_back(66437);
        internal_counters.push_back(66498);
        internal_counters.push_back(66559);
        internal_counters.push_back(66620);
        internal_counters.push_back(66681);
        internal_counters.push_back(66742);
        internal_counters.push_back(66803);
        internal_counters.push_back(66864);
        internal_counters.push_back(66925);
        internal_counters.push_back(66986);
        internal_counters.push_back(67047);
        internal_counters.push_back(67108);
        internal_counters.push_back(67169);
        internal_counters.push_back(67230);
        internal_counters.push_back(67291);
        internal_counters.push_back(67352);
        internal_counters.push_back(67413);
        internal_counters.push_back(67474);
        internal_counters.push_back(67535);
        internal_counters.push_back(67596);
        internal_counters.push_back(67657);
        internal_counters.push_back(67718);
        internal_counters.push_back(67779);
        internal_counters.push_back(67840);
        internal_counters.push_back(67901);
        internal_counters.push_back(67962);
        internal_counters.push_back(68023);
        internal_counters.push_back(68084);
        internal_counters.push_back(68145);
        internal_counters.push_back(68206);
        internal_counters.push_back(68267);
        internal_counters.push_back(68328);
        internal_counters.push_back(68389);
        internal_counters.push_back(68450);
        internal_counters.push_back(68511);
        internal_counters.push_back(68572);
        internal_counters.push_back(68633);
        internal_counters.push_back(68694);
        internal_counters.push_back(68755);
        internal_counters.push_back(68816);
        internal_counters.push_back(68877);
        internal_counters.push_back(68938);
        internal_counters.push_back(68999);

        c.DefineDerivedCounter("MemUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the memory unit is stalled.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80", "2745659a-0e40-bace-3b9b-86a54f8e4623");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(98407);
        internal_counters.push_back(98661);
        internal_counters.push_back(98915);
        internal_counters.push_back(99169);
        internal_counters.push_back(99423);
        internal_counters.push_back(99677);
        internal_counters.push_back(99931);
        internal_counters.push_back(100185);
        internal_counters.push_back(100439);
        internal_counters.push_back(100693);
        internal_counters.push_back(100947);
        internal_counters.push_back(101201);
        internal_counters.push_back(101455);
        internal_counters.push_back(101709);
        internal_counters.push_back(101963);
        internal_counters.push_back(102217);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("WriteUnitStalled", "GlobalMemory", "The percentage of GPUTime the Write unit is stalled. Value range: 0% to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "594ad3ce-d1ec-10fc-7d59-25738e397d72");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(98407);
        internal_counters.push_back(98661);
        internal_counters.push_back(98915);
        internal_counters.push_back(99169);
        internal_counters.push_back(99423);
        internal_counters.push_back(99677);
        internal_counters.push_back(99931);
        internal_counters.push_back(100185);
        internal_counters.push_back(100439);
        internal_counters.push_back(100693);
        internal_counters.push_back(100947);
        internal_counters.push_back(101201);
        internal_counters.push_back(101455);
        internal_counters.push_back(101709);
        internal_counters.push_back(101963);
        internal_counters.push_back(102217);

        c.DefineDerivedCounter("WriteUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the Write unit is stalled.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "ede3305e-abd4-d6bf-6b00-ffc57a29fce3");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(83346);
        internal_counters.push_back(83436);
        internal_counters.push_back(83526);
        internal_counters.push_back(83616);
        internal_counters.push_back(83706);
        internal_counters.push_back(83796);
        internal_counters.push_back(83886);
        internal_counters.push_back(83976);
        internal_counters.push_back(84066);
        internal_counters.push_back(84156);
        internal_counters.push_back(84246);
        internal_counters.push_back(84336);
        internal_counters.push_back(84426);
        internal_counters.push_back(84516);
        internal_counters.push_back(84606);
        internal_counters.push_back(84696);

        c.DefineDerivedCounter("LocalVidMemBytes", "GlobalMemory", "Number of bytes read from or written to local video memory", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "2a601145-56c1-625b-bedd-66d959c5ecc3");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(83348);
        internal_counters.push_back(83438);
        internal_counters.push_back(83528);
        internal_counters.push_back(83618);
        internal_counters.push_back(83708);
        internal_counters.push_back(83798);
        internal_counters.push_back(83888);
        internal_counters.push_back(83978);
        internal_counters.push_back(84068);
        internal_counters.push_back(84158);
        internal_counters.push_back(84248);
        internal_counters.push_back(84338);
        internal_counters.push_back(84428);
        internal_counters.push_back(84518);
        internal_counters.push_back(84608);
        internal_counters.push_back(84698);

        c.DefineDerivedCounter("PcieBytes", "GlobalMemory", "Number of bytes sent and received over the PCIe bus", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "4bbe92de-f79e-ed39-bfde-9e08390cdb21");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(48902);
        internal_counters.push_back(49094);
        internal_counters.push_back(49286);
        internal_counters.push_back(49478);
        internal_counters.push_back(49670);
        internal_counters.push_back(49862);
        internal_counters.push_back(50054);
        internal_counters.push_back(50246);
        internal_counters.push_back(50438);
        internal_counters.push_back(50630);
        internal_counters.push_back(50822);
        internal_counters.push_back(51014);
        internal_counters.push_back(51206);
        internal_counters.push_back(51398);
        internal_counters.push_back(51590);
        internal_counters.push_back(51782);
        internal_counters.push_back(51974);
        internal_counters.push_back(52166);
        internal_counters.push_back(52358);
        internal_counters.push_back(52550);
        internal_counters.push_back(52742);
        internal_counters.push_back(52934);
        internal_counters.push_back(53126);
        internal_counters.push_back(53318);
        internal_counters.push_back(53510);
        internal_counters.push_back(53702);
        internal_counters.push_back(53894);
        internal_counters.push_back(54086);
        internal_counters.push_back(54278);
        internal_counters.push_back(54470);
        internal_counters.push_back(54662);
        internal_counters.push_back(54854);
        internal_counters.push_back(55046);
        internal_counters.push_back(55238);
        internal_counters.push_back(55430);
        internal_counters.push_back(55622);
        internal_counters.push_back(55814);
        internal_counters.push_back(56006);
        internal_counters.push_back(56198);
        internal_counters.push_back(56390);
        internal_counters.push_back(56582);
        internal_counters.push_back(56774);
        internal_counters.push_back(56966);
        internal_counters.push_back(57158);
        internal_counters.push_back(57350);
        internal_counters.push_back(57542);
        internal_counters.push_back(57734);
        internal_counters.push_back(57926);
        internal_counters.push_back(58118);
        internal_counters.push_back(58310);
        internal_counters.push_back(58502);
        internal_counters.push_back(58694);
        internal_counters.push_back(58886);
        internal_counters.push_back(59078);
        internal_counters.push_back(59270);
        internal_counters.push_back(59462);
        internal_counters.push_back(59654);
        internal_counters.push_back(59846);
        internal_counters.push_back(60038);
        internal_counters.push_back(60230);
        internal_counters.push_back(60422);
        internal_counters.push_back(60614);
        internal_counters.push_back(60806);
        internal_counters.push_back(60998);
        internal_counters.push_back(61190);
        internal_counters.push_back(61382);
        internal_counters.push_back(61574);
        internal_counters.push_back(61766);
        internal_counters.push_back(61958);
        internal_counters.push_back(62150);
        internal_counters.push_back(62342);
        internal_counters.push_back(62534);
        internal_counters.push_back(62726);
        internal_counters.push_back(62918);
        internal_counters.push_back(63110);
        internal_counters.push_back(63302);
        internal_counters.push_back(63494);
        internal_counters.push_back(63686);
        internal_counters.push_back(63878);
        internal_counters.push_back(64070);

        c.DefineDerivedCounter("RayTriTests", "RayTracing", "The number of ray triangle intersection tests.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "20c646f5-fa99-51c2-b583-0a3d77d675a8");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(48900);
        internal_counters.push_back(49092);
        internal_counters.push_back(49284);
        internal_counters.push_back(49476);
        internal_counters.push_back(49668);
        internal_counters.push_back(49860);
        internal_counters.push_back(50052);
        internal_counters.push_back(50244);
        internal_counters.push_back(50436);
        internal_counters.push_back(50628);
        internal_counters.push_back(50820);
        internal_counters.push_back(51012);
        internal_counters.push_back(51204);
        internal_counters.push_back(51396);
        internal_counters.push_back(51588);
        internal_counters.push_back(51780);
        internal_counters.push_back(51972);
        internal_counters.push_back(52164);
        internal_counters.push_back(52356);
        internal_counters.push_back(52548);
        internal_counters.push_back(52740);
        internal_counters.push_back(52932);
        internal_counters.push_back(53124);
        internal_counters.push_back(53316);
        internal_counters.push_back(53508);
        internal_counters.push_back(53700);
        internal_counters.push_back(53892);
        internal_counters.push_back(54084);
        internal_counters.push_back(54276);
        internal_counters.push_back(54468);
        internal_counters.push_back(54660);
        internal_counters.push_back(54852);
        internal_counters.push_back(55044);
        internal_counters.push_back(55236);
        internal_counters.push_back(55428);
        internal_counters.push_back(55620);
        internal_counters.push_back(55812);
        internal_counters.push_back(56004);
        internal_counters.push_back(56196);
        internal_counters.push_back(56388);
        internal_counters.push_back(56580);
        internal_counters.push_back(56772);
        internal_counters.push_back(56964);
        internal_counters.push_back(57156);
        internal_counters.push_back(57348);
        internal_counters.push_back(57540);
        internal_counters.push_back(57732);
        internal_counters.push_back(57924);
        internal_counters.push_back(58116);
        internal_counters.push_back(58308);
        internal_counters.push_back(58500);
        internal_counters.push_back(58692);
        internal_counters.push_back(58884);
        internal_counters.push_back(59076);
        internal_counters.push_back(59268);
        internal_counters.push_back(59460);
        internal_counters.push_back(59652);
        internal_counters.push_back(59844);
        internal_counters.push_back(60036);
        internal_counters.push_back(60228);
        internal_counters.push_back(60420);
        internal_counters.push_back(60612);
        internal_counters.push_back(60804);
        internal_counters.push_back(60996);
        internal_counters.push_back(61188);
        internal_counters.push_back(61380);
        internal_counters.push_back(61572);
        internal_counters.push_back(61764);
        internal_counters.push_back(61956);
        internal_counters.push_back(62148);
        internal_counters.push_back(62340);
        internal_counters.push_back(62532);
        internal_counters.push_back(62724);
        internal_counters.push_back(62916);
        internal_counters.push_back(63108);
        internal_counters.push_back(63300);
        internal_counters.push_back(63492);
        internal_counters.push_back(63684);
        internal_counters.push_back(63876);
        internal_counters.push_back(64068);
        internal_counters.push_back(48901);
        internal_counters.push_back(49093);
        internal_counters.push_back(49285);
        internal_counters.push_back(49477);
        internal_counters.push_back(49669);
        internal_counters.push_back(49861);
        internal_counters.push_back(50053);
        internal_counters.push_back(50245);
        internal_counters.push_back(50437);
        internal_counters.push_back(50629);
        internal_counters.push_back(50821);
        internal_counters.push_back(51013);
        internal_counters.push_back(51205);
        internal_counters.push_back(51397);
        internal_counters.push_back(51589);
        internal_counters.push_back(51781);
        internal_counters.push_back(51973);
        internal_counters.push_back(52165);
        internal_counters.push_back(52357);
        internal_counters.push_back(52549);
        internal_counters.push_back(52741);
        internal_counters.push_back(52933);
        internal_counters.push_back(53125);
        internal_counters.push_back(53317);
        internal_counters.push_back(53509);
        internal_counters.push_back(53701);
        internal_counters.push_back(53893);
        internal_counters.push_back(54085);
        internal_counters.push_back(54277);
        internal_counters.push_back(54469);
        internal_counters.push_back(54661);
        internal_counters.push_back(54853);
        internal_counters.push_back(55045);
        internal_counters.push_back(55237);
        internal_counters.push_back(55429);
        internal_counters.push_back(55621);
        internal_counters.push_back(55813);
        internal_counters.push_back(56005);
        internal_counters.push_back(56197);
        internal_counters.push_back(56389);
        internal_counters.push_back(56581);
        internal_counters.push_back(56773);
        internal_counters.push_back(56965);
        internal_counters.push_back(57157);
        internal_counters.push_back(57349);
        internal_counters.push_back(57541);
        internal_counters.push_back(57733);
        internal_counters.push_back(57925);
        internal_counters.push_back(58117);
        internal_counters.push_back(58309);
        internal_counters.push_back(58501);
        internal_counters.push_back(58693);
        internal_counters.push_back(58885);
        internal_counters.push_back(59077);
        internal_counters.push_back(59269);
        internal_counters.push_back(59461);
        internal_counters.push_back(59653);
        internal_counters.push_back(59845);
        internal_counters.push_back(60037);
        internal_counters.push_back(60229);
        internal_counters.push_back(60421);
        internal_counters.push_back(60613);
        internal_counters.push_back(60805);
        internal_counters.push_back(60997);
        internal_counters.push_back(61189);
        internal_counters.push_back(61381);
        internal_counters.push_back(61573);
        internal_counters.push_back(61765);
        internal_counters.push_back(61957);
        internal_counters.push_back(62149);
        internal_counters.push_back(62341);
        internal_counters.push_back(62533);
        internal_counters.push_back(62725);
        internal_counters.push_back(62917);
        internal_counters.push_back(63109);
        internal_counters.push_back(63301);
        internal_counters.push_back(63493);
        internal_counters.push_back(63685);
        internal_counters.push_back(63877);
        internal_counters.push_back(64069);

        c.DefineDerivedCounter("RayBoxTests", "RayTracing", "The number of ray box intersection tests.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,sum2", "7769ceee-824d-b84a-8779-bb3f8e449582");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(48902);
        internal_counters.push_back(49094);
        internal_counters.push_back(49286);
        internal_counters.push_back(49478);
        internal_counters.push_back(49670);
        internal_counters.push_back(49862);
        internal_counters.push_back(50054);
        internal_counters.push_back(50246);
        internal_counters.push_back(50438);
        internal_counters.push_back(50630);
        internal_counters.push_back(50822);
        internal_counters.push_back(51014);
        internal_counters.push_back(51206);
        internal_counters.push_back(51398);
        internal_counters.push_back(51590);
        internal_counters.push_back(51782);
        internal_counters.push_back(51974);
        internal_counters.push_back(52166);
        internal_counters.push_back(52358);
        internal_counters.push_back(52550);
        internal_counters.push_back(52742);
        internal_counters.push_back(52934);
        internal_counters.push_back(53126);
        internal_counters.push_back(53318);
        internal_counters.push_back(53510);
        internal_counters.push_back(53702);
        internal_counters.push_back(53894);
        internal_counters.push_back(54086);
        internal_counters.push_back(54278);
        internal_counters.push_back(54470);
        internal_counters.push_back(54662);
        internal_counters.push_back(54854);
        internal_counters.push_back(55046);
        internal_counters.push_back(55238);
        internal_counters.push_back(55430);
        internal_counters.push_back(55622);
        internal_counters.push_back(55814);
        internal_counters.push_back(56006);
        internal_counters.push_back(56198);
        internal_counters.push_back(56390);
        internal_counters.push_back(56582);
        internal_counters.push_back(56774);
        internal_counters.push_back(56966);
        internal_counters.push_back(57158);
        internal_counters.push_back(57350);
        internal_counters.push_back(57542);
        internal_counters.push_back(57734);
        internal_counters.push_back(57926);
        internal_counters.push_back(58118);
        internal_counters.push_back(58310);
        internal_counters.push_back(58502);
        internal_counters.push_back(58694);
        internal_counters.push_back(58886);
        internal_counters.push_back(59078);
        internal_counters.push_back(59270);
        internal_counters.push_back(59462);
        internal_counters.push_back(59654);
        internal_counters.push_back(59846);
        internal_counters.push_back(60038);
        internal_counters.push_back(60230);
        internal_counters.push_back(60422);
        internal_counters.push_back(60614);
        internal_counters.push_back(60806);
        internal_counters.push_back(60998);
        internal_counters.push_back(61190);
        internal_counters.push_back(61382);
        internal_counters.push_back(61574);
        internal_counters.push_back(61766);
        internal_counters.push_back(61958);
        internal_counters.push_back(62150);
        internal_counters.push_back(62342);
        internal_counters.push_back(62534);
        internal_counters.push_back(62726);
        internal_counters.push_back(62918);
        internal_counters.push_back(63110);
        internal_counters.push_back(63302);
        internal_counters.push_back(63494);
        internal_counters.push_back(63686);
        internal_counters.push_back(63878);
        internal_counters.push_back(64070);
        internal_counters.push_back(48900);
        internal_counters.push_back(49092);
        internal_counters.push_back(49284);
        internal_counters.push_back(49476);
        internal_counters.push_back(49668);
        internal_counters.push_back(49860);
        internal_counters.push_back(50052);
        internal_counters.push_back(50244);
        internal_counters.push_back(50436);
        internal_counters.push_back(50628);
        internal_counters.push_back(50820);
        internal_counters.push_back(51012);
        internal_counters.push_back(51204);
        internal_counters.push_back(51396);
        internal_counters.push_back(51588);
        internal_counters.push_back(51780);
        internal_counters.push_back(51972);
        internal_counters.push_back(52164);
        internal_counters.push_back(52356);
        internal_counters.push_back(52548);
        internal_counters.push_back(52740);
        internal_counters.push_back(52932);
        internal_counters.push_back(53124);
        internal_counters.push_back(53316);
        internal_counters.push_back(53508);
        internal_counters.push_back(53700);
        internal_counters.push_back(53892);
        internal_counters.push_back(54084);
        internal_counters.push_back(54276);
        internal_counters.push_back(54468);
        internal_counters.push_back(54660);
        internal_counters.push_back(54852);
        internal_counters.push_back(55044);
        internal_counters.push_back(55236);
        internal_counters.push_back(55428);
        internal_counters.push_back(55620);
        internal_counters.push_back(55812);
        internal_counters.push_back(56004);
        internal_counters.push_back(56196);
        internal_counters.push_back(56388);
        internal_counters.push_back(56580);
        internal_counters.push_back(56772);
        internal_counters.push_back(56964);
        internal_counters.push_back(57156);
        internal_counters.push_back(57348);
        internal_counters.push_back(57540);
        internal_counters.push_back(57732);
        internal_counters.push_back(57924);
        internal_counters.push_back(58116);
        internal_counters.push_back(58308);
        internal_counters.push_back(58500);
        internal_counters.push_back(58692);
        internal_counters.push_back(58884);
        internal_counters.push_back(59076);
        internal_counters.push_back(59268);
        internal_counters.push_back(59460);
        internal_counters.push_back(59652);
        internal_counters.push_back(59844);
        internal_counters.push_back(60036);
        internal_counters.push_back(60228);
        internal_counters.push_back(60420);
        internal_counters.push_back(60612);
        internal_counters.push_back(60804);
        internal_counters.push_back(60996);
        internal_counters.push_back(61188);
        internal_counters.push_back(61380);
        internal_counters.push_back(61572);
        internal_counters.push_back(61764);
        internal_counters.push_back(61956);
        internal_counters.push_back(62148);
        internal_counters.push_back(62340);
        internal_counters.push_back(62532);
        internal_counters.push_back(62724);
        internal_counters.push_back(62916);
        internal_counters.push_back(63108);
        internal_counters.push_back(63300);
        internal_counters.push_back(63492);
        internal_counters.push_back(63684);
        internal_counters.push_back(63876);
        internal_counters.push_back(64068);
        internal_counters.push_back(48901);
        internal_counters.push_back(49093);
        internal_counters.push_back(49285);
        internal_counters.push_back(49477);
        internal_counters.push_back(49669);
        internal_counters.push_back(49861);
        internal_counters.push_back(50053);
        internal_counters.push_back(50245);
        internal_counters.push_back(50437);
        internal_counters.push_back(50629);
        internal_counters.push_back(50821);
        internal_counters.push_back(51013);
        internal_counters.push_back(51205);
        internal_counters.push_back(51397);
        internal_counters.push_back(51589);
        internal_counters.push_back(51781);
        internal_counters.push_back(51973);
        internal_counters.push_back(52165);
        internal_counters.push_back(52357);
        internal_counters.push_back(52549);
        internal_counters.push_back(52741);
        internal_counters.push_back(52933);
        internal_counters.push_back(53125);
        internal_counters.push_back(53317);
        internal_counters.push_back(53509);
        internal_counters.push_back(53701);
        internal_counters.push_back(53893);
        internal_counters.push_back(54085);
        internal_counters.push_back(54277);
        internal_counters.push_back(54469);
        internal_counters.push_back(54661);
        internal_counters.push_back(54853);
        internal_counters.push_back(55045);
        internal_counters.push_back(55237);
        internal_counters.push_back(55429);
        internal_counters.push_back(55621);
        internal_counters.push_back(55813);
        internal_counters.push_back(56005);
        internal_counters.push_back(56197);
        internal_counters.push_back(56389);
        internal_counters.push_back(56581);
        internal_counters.push_back(56773);
        internal_counters.push_back(56965);
        internal_counters.push_back(57157);
        internal_counters.push_back(57349);
        internal_counters.push_back(57541);
        internal_counters.push_back(57733);
        internal_counters.push_back(57925);
        internal_counters.push_back(58117);
        internal_counters.push_back(58309);
        internal_counters.push_back(58501);
        internal_counters.push_back(58693);
        internal_counters.push_back(58885);
        internal_counters.push_back(59077);
        internal_counters.push_back(59269);
        internal_counters.push_back(59461);
        internal_counters.push_back(59653);
        internal_counters.push_back(59845);
        internal_counters.push_back(60037);
        internal_counters.push_back(60229);
        internal_counters.push_back(60421);
        internal_counters.push_back(60613);
        internal_counters.push_back(60805);
        internal_counters.push_back(60997);
        internal_counters.push_back(61189);
        internal_counters.push_back(61381);
        internal_counters.push_back(61573);
        internal_counters.push_back(61765);
        internal_counters.push_back(61957);
        internal_counters.push_back(62149);
        internal_counters.push_back(62341);
        internal_counters.push_back(62533);
        internal_counters.push_back(62725);
        internal_counters.push_back(62917);
        internal_counters.push_back(63109);
        internal_counters.push_back(63301);
        internal_counters.push_back(63493);
        internal_counters.push_back(63685);
        internal_counters.push_back(63877);
        internal_counters.push_back(64069);

        c.DefineDerivedCounter("TotalRayTests", "RayTracing", "Total number of ray intersection tests, includes both box and triangle intersections.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,sum2,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,sum80,sum2", "ce6e4c7f-cf9d-6f8f-4456-70f670354bbe");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(48866);
        internal_counters.push_back(49058);
        internal_counters.push_back(49250);
        internal_counters.push_back(49442);
        internal_counters.push_back(49634);
        internal_counters.push_back(49826);
        internal_counters.push_back(50018);
        internal_counters.push_back(50210);
        internal_counters.push_back(50402);
        internal_counters.push_back(50594);
        internal_counters.push_back(50786);
        internal_counters.push_back(50978);
        internal_counters.push_back(51170);
        internal_counters.push_back(51362);
        internal_counters.push_back(51554);
        internal_counters.push_back(51746);
        internal_counters.push_back(51938);
        internal_counters.push_back(52130);
        internal_counters.push_back(52322);
        internal_counters.push_back(52514);
        internal_counters.push_back(52706);
        internal_counters.push_back(52898);
        internal_counters.push_back(53090);
        internal_counters.push_back(53282);
        internal_counters.push_back(53474);
        internal_counters.push_back(53666);
        internal_counters.push_back(53858);
        internal_counters.push_back(54050);
        internal_counters.push_back(54242);
        internal_counters.push_back(54434);
        internal_counters.push_back(54626);
        internal_counters.push_back(54818);
        internal_counters.push_back(55010);
        internal_counters.push_back(55202);
        internal_counters.push_back(55394);
        internal_counters.push_back(55586);
        internal_counters.push_back(55778);
        internal_counters.push_back(55970);
        internal_counters.push_back(56162);
        internal_counters.push_back(56354);
        internal_counters.push_back(56546);
        internal_counters.push_back(56738);
        internal_counters.push_back(56930);
        internal_counters.push_back(57122);
        internal_counters.push_back(57314);
        internal_counters.push_back(57506);
        internal_counters.push_back(57698);
        internal_counters.push_back(57890);
        internal_counters.push_back(58082);
        internal_counters.push_back(58274);
        internal_counters.push_back(58466);
        internal_counters.push_back(58658);
        internal_counters.push_back(58850);
        internal_counters.push_back(59042);
        internal_counters.push_back(59234);
        internal_counters.push_back(59426);
        internal_counters.push_back(59618);
        internal_counters.push_back(59810);
        internal_counters.push_back(60002);
        internal_counters.push_back(60194);
        internal_counters.push_back(60386);
        internal_counters.push_back(60578);
        internal_counters.push_back(60770);
        internal_counters.push_back(60962);
        internal_counters.push_back(61154);
        internal_counters.push_back(61346);
        internal_counters.push_back(61538);
        internal_counters.push_back(61730);
        internal_counters.push_back(61922);
        internal_counters.push_back(62114);
        internal_counters.push_back(62306);
        internal_counters.push_back(62498);
        internal_counters.push_back(62690);
        internal_counters.push_back(62882);
        internal_counters.push_back(63074);
        internal_counters.push_back(63266);
        internal_counters.push_back(63458);
        internal_counters.push_back(63650);
        internal_counters.push_back(63842);
        internal_counters.push_back(64034);

        c.DefineDerivedCounter("RayTestsPerWave", "RayTracing", "The number of ray intersection tests per wave.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "45b0cd7f-3b43-6344-37d7-054062e50f60");
    }
}

