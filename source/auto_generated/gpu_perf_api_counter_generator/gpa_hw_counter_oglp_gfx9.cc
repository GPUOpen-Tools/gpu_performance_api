//==============================================================================
// Copyright (c) 2010-2024 Advanced Micro Devices, Inc. All rights reserved.
/// @author AMD Developer Tools Team
/// @file
/// @brief OGLP counter definitions for GFX9.
//==============================================================================

#include "gpu_perf_api_counter_generator/gpa_counter.h"
#include "auto_generated/gpu_perf_api_counter_generator/gpa_hw_counter_gfx9.h"
#include "auto_generated/gpu_perf_api_counter_generator/gpa_hw_counter_oglp_gfx9.h"

// This file is autogenerated by the ConvertHWEnums project

// clang-format off

namespace counter_oglp_gfx9
{
    using namespace counter_gfx9;

    std::vector<std::vector<GpaHardwareCounterDesc>*> kOglpCounterGroupArrayGfx9 = {
        &kCpfCountersGfx9,
        &kVgt0CountersGfx9,
        &kVgt1CountersGfx9,
        &kVgt2CountersGfx9,
        &kVgt3CountersGfx9,
        &kPaSu0CountersGfx9,
        &kPaSu1CountersGfx9,
        &kPaSu2CountersGfx9,
        &kPaSu3CountersGfx9,
        &kPaSc0CountersGfx9,
        &kPaSc1CountersGfx9,
        &kPaSc2CountersGfx9,
        &kPaSc3CountersGfx9,
        &kSpi0CountersGfx9,
        &kSpi1CountersGfx9,
        &kSpi2CountersGfx9,
        &kSpi3CountersGfx9,
        &kSq0CountersGfx9,
        &kSq1CountersGfx9,
        &kSq2CountersGfx9,
        &kSq3CountersGfx9,
        &kSqEs0CountersGfx9,
        &kSqEs1CountersGfx9,
        &kSqEs2CountersGfx9,
        &kSqEs3CountersGfx9,
        &kSqGs0CountersGfx9,
        &kSqGs1CountersGfx9,
        &kSqGs2CountersGfx9,
        &kSqGs3CountersGfx9,
        &kSqVs0CountersGfx9,
        &kSqVs1CountersGfx9,
        &kSqVs2CountersGfx9,
        &kSqVs3CountersGfx9,
        &kSqPs0CountersGfx9,
        &kSqPs1CountersGfx9,
        &kSqPs2CountersGfx9,
        &kSqPs3CountersGfx9,
        &kSqLs0CountersGfx9,
        &kSqLs1CountersGfx9,
        &kSqLs2CountersGfx9,
        &kSqLs3CountersGfx9,
        &kSqHs0CountersGfx9,
        &kSqHs1CountersGfx9,
        &kSqHs2CountersGfx9,
        &kSqHs3CountersGfx9,
        &kSqCs0CountersGfx9,
        &kSqCs1CountersGfx9,
        &kSqCs2CountersGfx9,
        &kSqCs3CountersGfx9,
        &kSx0CountersGfx9,
        &kSx1CountersGfx9,
        &kSx2CountersGfx9,
        &kSx3CountersGfx9,
        &kTa0CountersGfx9,
        &kTa1CountersGfx9,
        &kTa2CountersGfx9,
        &kTa3CountersGfx9,
        &kTa4CountersGfx9,
        &kTa5CountersGfx9,
        &kTa6CountersGfx9,
        &kTa7CountersGfx9,
        &kTa8CountersGfx9,
        &kTa9CountersGfx9,
        &kTa10CountersGfx9,
        &kTa11CountersGfx9,
        &kTa12CountersGfx9,
        &kTa13CountersGfx9,
        &kTa14CountersGfx9,
        &kTa15CountersGfx9,
        &kTa16CountersGfx9,
        &kTa17CountersGfx9,
        &kTa18CountersGfx9,
        &kTa19CountersGfx9,
        &kTa20CountersGfx9,
        &kTa21CountersGfx9,
        &kTa22CountersGfx9,
        &kTa23CountersGfx9,
        &kTa24CountersGfx9,
        &kTa25CountersGfx9,
        &kTa26CountersGfx9,
        &kTa27CountersGfx9,
        &kTa28CountersGfx9,
        &kTa29CountersGfx9,
        &kTa30CountersGfx9,
        &kTa31CountersGfx9,
        &kTa32CountersGfx9,
        &kTa33CountersGfx9,
        &kTa34CountersGfx9,
        &kTa35CountersGfx9,
        &kTa36CountersGfx9,
        &kTa37CountersGfx9,
        &kTa38CountersGfx9,
        &kTa39CountersGfx9,
        &kTa40CountersGfx9,
        &kTa41CountersGfx9,
        &kTa42CountersGfx9,
        &kTa43CountersGfx9,
        &kTa44CountersGfx9,
        &kTa45CountersGfx9,
        &kTa46CountersGfx9,
        &kTa47CountersGfx9,
        &kTa48CountersGfx9,
        &kTa49CountersGfx9,
        &kTa50CountersGfx9,
        &kTa51CountersGfx9,
        &kTa52CountersGfx9,
        &kTa53CountersGfx9,
        &kTa54CountersGfx9,
        &kTa55CountersGfx9,
        &kTa56CountersGfx9,
        &kTa57CountersGfx9,
        &kTa58CountersGfx9,
        &kTa59CountersGfx9,
        &kTa60CountersGfx9,
        &kTa61CountersGfx9,
        &kTa62CountersGfx9,
        &kTa63CountersGfx9,
        &kTcp0CountersGfx9,
        &kTcp1CountersGfx9,
        &kTcp2CountersGfx9,
        &kTcp3CountersGfx9,
        &kTcp4CountersGfx9,
        &kTcp5CountersGfx9,
        &kTcp6CountersGfx9,
        &kTcp7CountersGfx9,
        &kTcp8CountersGfx9,
        &kTcp9CountersGfx9,
        &kTcp10CountersGfx9,
        &kTcp11CountersGfx9,
        &kTcp12CountersGfx9,
        &kTcp13CountersGfx9,
        &kTcp14CountersGfx9,
        &kTcp15CountersGfx9,
        &kTcp16CountersGfx9,
        &kTcp17CountersGfx9,
        &kTcp18CountersGfx9,
        &kTcp19CountersGfx9,
        &kTcp20CountersGfx9,
        &kTcp21CountersGfx9,
        &kTcp22CountersGfx9,
        &kTcp23CountersGfx9,
        &kTcp24CountersGfx9,
        &kTcp25CountersGfx9,
        &kTcp26CountersGfx9,
        &kTcp27CountersGfx9,
        &kTcp28CountersGfx9,
        &kTcp29CountersGfx9,
        &kTcp30CountersGfx9,
        &kTcp31CountersGfx9,
        &kTcp32CountersGfx9,
        &kTcp33CountersGfx9,
        &kTcp34CountersGfx9,
        &kTcp35CountersGfx9,
        &kTcp36CountersGfx9,
        &kTcp37CountersGfx9,
        &kTcp38CountersGfx9,
        &kTcp39CountersGfx9,
        &kTcp40CountersGfx9,
        &kTcp41CountersGfx9,
        &kTcp42CountersGfx9,
        &kTcp43CountersGfx9,
        &kTcp44CountersGfx9,
        &kTcp45CountersGfx9,
        &kTcp46CountersGfx9,
        &kTcp47CountersGfx9,
        &kTcp48CountersGfx9,
        &kTcp49CountersGfx9,
        &kTcp50CountersGfx9,
        &kTcp51CountersGfx9,
        &kTcp52CountersGfx9,
        &kTcp53CountersGfx9,
        &kTcp54CountersGfx9,
        &kTcp55CountersGfx9,
        &kTcp56CountersGfx9,
        &kTcp57CountersGfx9,
        &kTcp58CountersGfx9,
        &kTcp59CountersGfx9,
        &kTcp60CountersGfx9,
        &kTcp61CountersGfx9,
        &kTcp62CountersGfx9,
        &kTcp63CountersGfx9,
        &kTcc0CountersGfx9,
        &kTcc1CountersGfx9,
        &kTcc2CountersGfx9,
        &kTcc3CountersGfx9,
        &kTcc4CountersGfx9,
        &kTcc5CountersGfx9,
        &kTcc6CountersGfx9,
        &kTcc7CountersGfx9,
        &kTcc8CountersGfx9,
        &kTcc9CountersGfx9,
        &kTcc10CountersGfx9,
        &kTcc11CountersGfx9,
        &kTcc12CountersGfx9,
        &kTcc13CountersGfx9,
        &kTcc14CountersGfx9,
        &kTcc15CountersGfx9,
        &kDb0CountersGfx9,
        &kDb1CountersGfx9,
        &kDb2CountersGfx9,
        &kDb3CountersGfx9,
        &kDb4CountersGfx9,
        &kDb5CountersGfx9,
        &kDb6CountersGfx9,
        &kDb7CountersGfx9,
        &kDb8CountersGfx9,
        &kDb9CountersGfx9,
        &kDb10CountersGfx9,
        &kDb11CountersGfx9,
        &kDb12CountersGfx9,
        &kDb13CountersGfx9,
        &kDb14CountersGfx9,
        &kDb15CountersGfx9,
        &kCb0CountersGfx9,
        &kCb1CountersGfx9,
        &kCb2CountersGfx9,
        &kCb3CountersGfx9,
        &kCb4CountersGfx9,
        &kCb5CountersGfx9,
        &kCb6CountersGfx9,
        &kCb7CountersGfx9,
        &kCb8CountersGfx9,
        &kCb9CountersGfx9,
        &kCb10CountersGfx9,
        &kCb11CountersGfx9,
        &kCb12CountersGfx9,
        &kCb13CountersGfx9,
        &kCb14CountersGfx9,
        &kCb15CountersGfx9,
        &kGrbmCountersGfx9,
        &kGcea0CountersGfx9,
        &kGcea1CountersGfx9,
        &kGcea2CountersGfx9,
        &kGcea3CountersGfx9,
        &kGcea4CountersGfx9,
        &kGcea5CountersGfx9,
        &kGcea6CountersGfx9,
        &kGcea7CountersGfx9,
        &kGcea8CountersGfx9,
        &kGcea9CountersGfx9,
        &kGcea10CountersGfx9,
        &kGcea11CountersGfx9,
        &kGcea12CountersGfx9,
        &kGcea13CountersGfx9,
        &kGcea14CountersGfx9,
        &kGcea15CountersGfx9,
        &kGcea16CountersGfx9,
        &kGcea17CountersGfx9,
        &kGcea18CountersGfx9,
        &kGcea19CountersGfx9,
        &kGcea20CountersGfx9,
        &kGcea21CountersGfx9,
        &kGcea22CountersGfx9,
        &kGcea23CountersGfx9,
        &kGcea24CountersGfx9,
        &kGcea25CountersGfx9,
        &kGcea26CountersGfx9,
        &kGcea27CountersGfx9,
        &kGcea28CountersGfx9,
        &kGcea29CountersGfx9,
        &kGcea30CountersGfx9,
        &kGcea31CountersGfx9,
        &kGpuTimeCountersGfx9,
    };


    std::vector<GpaCounterGroupDesc> kHwOglpGroupsGfx9 = {
        {0, "CPF", 0, 32, 2, 0},
        {1, "IA0", 0, 32, 4, 0},
        {2, "IA1", 1, 32, 4, 0},
        {3, "VGT0", 0, 148, 4, 0},
        {4, "VGT1", 1, 148, 4, 0},
        {5, "VGT2", 2, 148, 4, 0},
        {6, "VGT3", 3, 148, 4, 0},
        {7, "PA_SU0", 0, 351, 4, 0},
        {8, "PA_SU1", 1, 351, 4, 0},
        {9, "PA_SU2", 2, 351, 4, 0},
        {10, "PA_SU3", 3, 351, 4, 0},
        {11, "PA_SC0", 0, 492, 8, 0},
        {12, "PA_SC1", 1, 492, 8, 0},
        {13, "PA_SC2", 2, 492, 8, 0},
        {14, "PA_SC3", 3, 492, 8, 0},
        {15, "SPI0", 0, 196, 6, 0},
        {16, "SPI1", 1, 196, 6, 0},
        {17, "SPI2", 2, 196, 6, 0},
        {18, "SPI3", 3, 196, 6, 0},
        {19, "SQ0", 0, 374, 16, 0},
        {20, "SQ1", 1, 374, 16, 0},
        {21, "SQ2", 2, 374, 16, 0},
        {22, "SQ3", 3, 374, 16, 0},
        {23, "SQ_ES0", 0, 374, 16, 0},
        {24, "SQ_ES1", 1, 374, 16, 0},
        {25, "SQ_ES2", 2, 374, 16, 0},
        {26, "SQ_ES3", 3, 374, 16, 0},
        {27, "SQ_GS0", 0, 374, 16, 0},
        {28, "SQ_GS1", 1, 374, 16, 0},
        {29, "SQ_GS2", 2, 374, 16, 0},
        {30, "SQ_GS3", 3, 374, 16, 0},
        {31, "SQ_VS0", 0, 374, 16, 0},
        {32, "SQ_VS1", 1, 374, 16, 0},
        {33, "SQ_VS2", 2, 374, 16, 0},
        {34, "SQ_VS3", 3, 374, 16, 0},
        {35, "SQ_PS0", 0, 374, 16, 0},
        {36, "SQ_PS1", 1, 374, 16, 0},
        {37, "SQ_PS2", 2, 374, 16, 0},
        {38, "SQ_PS3", 3, 374, 16, 0},
        {39, "SQ_LS0", 0, 374, 16, 0},
        {40, "SQ_LS1", 1, 374, 16, 0},
        {41, "SQ_LS2", 2, 374, 16, 0},
        {42, "SQ_LS3", 3, 374, 16, 0},
        {43, "SQ_HS0", 0, 374, 16, 0},
        {44, "SQ_HS1", 1, 374, 16, 0},
        {45, "SQ_HS2", 2, 374, 16, 0},
        {46, "SQ_HS3", 3, 374, 16, 0},
        {47, "SQ_CS0", 0, 374, 16, 0},
        {48, "SQ_CS1", 1, 374, 16, 0},
        {49, "SQ_CS2", 2, 374, 16, 0},
        {50, "SQ_CS3", 3, 374, 16, 0},
        {51, "SX0", 0, 208, 4, 0},
        {52, "SX1", 1, 208, 4, 0},
        {53, "SX2", 2, 208, 4, 0},
        {54, "SX3", 3, 208, 4, 0},
        {55, "TA0", 0, 119, 2, 0},
        {56, "TA1", 1, 119, 2, 0},
        {57, "TA2", 2, 119, 2, 0},
        {58, "TA3", 3, 119, 2, 0},
        {59, "TA4", 4, 119, 2, 0},
        {60, "TA5", 5, 119, 2, 0},
        {61, "TA6", 6, 119, 2, 0},
        {62, "TA7", 7, 119, 2, 0},
        {63, "TA8", 8, 119, 2, 0},
        {64, "TA9", 9, 119, 2, 0},
        {65, "TA10", 10, 119, 2, 0},
        {66, "TA11", 11, 119, 2, 0},
        {67, "TA12", 12, 119, 2, 0},
        {68, "TA13", 13, 119, 2, 0},
        {69, "TA14", 14, 119, 2, 0},
        {70, "TA15", 15, 119, 2, 0},
        {71, "TA16", 16, 119, 2, 0},
        {72, "TA17", 17, 119, 2, 0},
        {73, "TA18", 18, 119, 2, 0},
        {74, "TA19", 19, 119, 2, 0},
        {75, "TA20", 20, 119, 2, 0},
        {76, "TA21", 21, 119, 2, 0},
        {77, "TA22", 22, 119, 2, 0},
        {78, "TA23", 23, 119, 2, 0},
        {79, "TA24", 24, 119, 2, 0},
        {80, "TA25", 25, 119, 2, 0},
        {81, "TA26", 26, 119, 2, 0},
        {82, "TA27", 27, 119, 2, 0},
        {83, "TA28", 28, 119, 2, 0},
        {84, "TA29", 29, 119, 2, 0},
        {85, "TA30", 30, 119, 2, 0},
        {86, "TA31", 31, 119, 2, 0},
        {87, "TA32", 32, 119, 2, 0},
        {88, "TA33", 33, 119, 2, 0},
        {89, "TA34", 34, 119, 2, 0},
        {90, "TA35", 35, 119, 2, 0},
        {91, "TA36", 36, 119, 2, 0},
        {92, "TA37", 37, 119, 2, 0},
        {93, "TA38", 38, 119, 2, 0},
        {94, "TA39", 39, 119, 2, 0},
        {95, "TA40", 40, 119, 2, 0},
        {96, "TA41", 41, 119, 2, 0},
        {97, "TA42", 42, 119, 2, 0},
        {98, "TA43", 43, 119, 2, 0},
        {99, "TA44", 44, 119, 2, 0},
        {100, "TA45", 45, 119, 2, 0},
        {101, "TA46", 46, 119, 2, 0},
        {102, "TA47", 47, 119, 2, 0},
        {103, "TA48", 48, 119, 2, 0},
        {104, "TA49", 49, 119, 2, 0},
        {105, "TA50", 50, 119, 2, 0},
        {106, "TA51", 51, 119, 2, 0},
        {107, "TA52", 52, 119, 2, 0},
        {108, "TA53", 53, 119, 2, 0},
        {109, "TA54", 54, 119, 2, 0},
        {110, "TA55", 55, 119, 2, 0},
        {111, "TA56", 56, 119, 2, 0},
        {112, "TA57", 57, 119, 2, 0},
        {113, "TA58", 58, 119, 2, 0},
        {114, "TA59", 59, 119, 2, 0},
        {115, "TA60", 60, 119, 2, 0},
        {116, "TA61", 61, 119, 2, 0},
        {117, "TA62", 62, 119, 2, 0},
        {118, "TA63", 63, 119, 2, 0},
        {119, "TD0", 0, 57, 2, 0},
        {120, "TD1", 1, 57, 2, 0},
        {121, "TD2", 2, 57, 2, 0},
        {122, "TD3", 3, 57, 2, 0},
        {123, "TD4", 4, 57, 2, 0},
        {124, "TD5", 5, 57, 2, 0},
        {125, "TD6", 6, 57, 2, 0},
        {126, "TD7", 7, 57, 2, 0},
        {127, "TD8", 8, 57, 2, 0},
        {128, "TD9", 9, 57, 2, 0},
        {129, "TD10", 10, 57, 2, 0},
        {130, "TD11", 11, 57, 2, 0},
        {131, "TD12", 12, 57, 2, 0},
        {132, "TD13", 13, 57, 2, 0},
        {133, "TD14", 14, 57, 2, 0},
        {134, "TD15", 15, 57, 2, 0},
        {135, "TD16", 16, 57, 2, 0},
        {136, "TD17", 17, 57, 2, 0},
        {137, "TD18", 18, 57, 2, 0},
        {138, "TD19", 19, 57, 2, 0},
        {139, "TD20", 20, 57, 2, 0},
        {140, "TD21", 21, 57, 2, 0},
        {141, "TD22", 22, 57, 2, 0},
        {142, "TD23", 23, 57, 2, 0},
        {143, "TD24", 24, 57, 2, 0},
        {144, "TD25", 25, 57, 2, 0},
        {145, "TD26", 26, 57, 2, 0},
        {146, "TD27", 27, 57, 2, 0},
        {147, "TD28", 28, 57, 2, 0},
        {148, "TD29", 29, 57, 2, 0},
        {149, "TD30", 30, 57, 2, 0},
        {150, "TD31", 31, 57, 2, 0},
        {151, "TD32", 32, 57, 2, 0},
        {152, "TD33", 33, 57, 2, 0},
        {153, "TD34", 34, 57, 2, 0},
        {154, "TD35", 35, 57, 2, 0},
        {155, "TD36", 36, 57, 2, 0},
        {156, "TD37", 37, 57, 2, 0},
        {157, "TD38", 38, 57, 2, 0},
        {158, "TD39", 39, 57, 2, 0},
        {159, "TD40", 40, 57, 2, 0},
        {160, "TD41", 41, 57, 2, 0},
        {161, "TD42", 42, 57, 2, 0},
        {162, "TD43", 43, 57, 2, 0},
        {163, "TD44", 44, 57, 2, 0},
        {164, "TD45", 45, 57, 2, 0},
        {165, "TD46", 46, 57, 2, 0},
        {166, "TD47", 47, 57, 2, 0},
        {167, "TD48", 48, 57, 2, 0},
        {168, "TD49", 49, 57, 2, 0},
        {169, "TD50", 50, 57, 2, 0},
        {170, "TD51", 51, 57, 2, 0},
        {171, "TD52", 52, 57, 2, 0},
        {172, "TD53", 53, 57, 2, 0},
        {173, "TD54", 54, 57, 2, 0},
        {174, "TD55", 55, 57, 2, 0},
        {175, "TD56", 56, 57, 2, 0},
        {176, "TD57", 57, 57, 2, 0},
        {177, "TD58", 58, 57, 2, 0},
        {178, "TD59", 59, 57, 2, 0},
        {179, "TD60", 60, 57, 2, 0},
        {180, "TD61", 61, 57, 2, 0},
        {181, "TD62", 62, 57, 2, 0},
        {182, "TD63", 63, 57, 2, 0},
        {183, "TCP0", 0, 85, 4, 0},
        {184, "TCP1", 1, 85, 4, 0},
        {185, "TCP2", 2, 85, 4, 0},
        {186, "TCP3", 3, 85, 4, 0},
        {187, "TCP4", 4, 85, 4, 0},
        {188, "TCP5", 5, 85, 4, 0},
        {189, "TCP6", 6, 85, 4, 0},
        {190, "TCP7", 7, 85, 4, 0},
        {191, "TCP8", 8, 85, 4, 0},
        {192, "TCP9", 9, 85, 4, 0},
        {193, "TCP10", 10, 85, 4, 0},
        {194, "TCP11", 11, 85, 4, 0},
        {195, "TCP12", 12, 85, 4, 0},
        {196, "TCP13", 13, 85, 4, 0},
        {197, "TCP14", 14, 85, 4, 0},
        {198, "TCP15", 15, 85, 4, 0},
        {199, "TCP16", 16, 85, 4, 0},
        {200, "TCP17", 17, 85, 4, 0},
        {201, "TCP18", 18, 85, 4, 0},
        {202, "TCP19", 19, 85, 4, 0},
        {203, "TCP20", 20, 85, 4, 0},
        {204, "TCP21", 21, 85, 4, 0},
        {205, "TCP22", 22, 85, 4, 0},
        {206, "TCP23", 23, 85, 4, 0},
        {207, "TCP24", 24, 85, 4, 0},
        {208, "TCP25", 25, 85, 4, 0},
        {209, "TCP26", 26, 85, 4, 0},
        {210, "TCP27", 27, 85, 4, 0},
        {211, "TCP28", 28, 85, 4, 0},
        {212, "TCP29", 29, 85, 4, 0},
        {213, "TCP30", 30, 85, 4, 0},
        {214, "TCP31", 31, 85, 4, 0},
        {215, "TCP32", 32, 85, 4, 0},
        {216, "TCP33", 33, 85, 4, 0},
        {217, "TCP34", 34, 85, 4, 0},
        {218, "TCP35", 35, 85, 4, 0},
        {219, "TCP36", 36, 85, 4, 0},
        {220, "TCP37", 37, 85, 4, 0},
        {221, "TCP38", 38, 85, 4, 0},
        {222, "TCP39", 39, 85, 4, 0},
        {223, "TCP40", 40, 85, 4, 0},
        {224, "TCP41", 41, 85, 4, 0},
        {225, "TCP42", 42, 85, 4, 0},
        {226, "TCP43", 43, 85, 4, 0},
        {227, "TCP44", 44, 85, 4, 0},
        {228, "TCP45", 45, 85, 4, 0},
        {229, "TCP46", 46, 85, 4, 0},
        {230, "TCP47", 47, 85, 4, 0},
        {231, "TCP48", 48, 85, 4, 0},
        {232, "TCP49", 49, 85, 4, 0},
        {233, "TCP50", 50, 85, 4, 0},
        {234, "TCP51", 51, 85, 4, 0},
        {235, "TCP52", 52, 85, 4, 0},
        {236, "TCP53", 53, 85, 4, 0},
        {237, "TCP54", 54, 85, 4, 0},
        {238, "TCP55", 55, 85, 4, 0},
        {239, "TCP56", 56, 85, 4, 0},
        {240, "TCP57", 57, 85, 4, 0},
        {241, "TCP58", 58, 85, 4, 0},
        {242, "TCP59", 59, 85, 4, 0},
        {243, "TCP60", 60, 85, 4, 0},
        {244, "TCP61", 61, 85, 4, 0},
        {245, "TCP62", 62, 85, 4, 0},
        {246, "TCP63", 63, 85, 4, 0},
        {247, "TCC0", 0, 282, 4, 0},
        {248, "TCC1", 1, 282, 4, 0},
        {249, "TCC2", 2, 282, 4, 0},
        {250, "TCC3", 3, 282, 4, 0},
        {251, "TCC4", 4, 282, 4, 0},
        {252, "TCC5", 5, 282, 4, 0},
        {253, "TCC6", 6, 282, 4, 0},
        {254, "TCC7", 7, 282, 4, 0},
        {255, "TCC8", 8, 282, 4, 0},
        {256, "TCC9", 9, 282, 4, 0},
        {257, "TCC10", 10, 282, 4, 0},
        {258, "TCC11", 11, 282, 4, 0},
        {259, "TCC12", 12, 282, 4, 0},
        {260, "TCC13", 13, 282, 4, 0},
        {261, "TCC14", 14, 282, 4, 0},
        {262, "TCC15", 15, 282, 4, 0},
        {263, "TCA0", 0, 35, 4, 0},
        {264, "TCA1", 1, 35, 4, 0},
        {265, "DB0", 0, 328, 4, 0},
        {266, "DB1", 1, 328, 4, 0},
        {267, "DB2", 2, 328, 4, 0},
        {268, "DB3", 3, 328, 4, 0},
        {269, "DB4", 4, 328, 4, 0},
        {270, "DB5", 5, 328, 4, 0},
        {271, "DB6", 6, 328, 4, 0},
        {272, "DB7", 7, 328, 4, 0},
        {273, "DB8", 8, 328, 4, 0},
        {274, "DB9", 9, 328, 4, 0},
        {275, "DB10", 10, 328, 4, 0},
        {276, "DB11", 11, 328, 4, 0},
        {277, "DB12", 12, 328, 4, 0},
        {278, "DB13", 13, 328, 4, 0},
        {279, "DB14", 14, 328, 4, 0},
        {280, "DB15", 15, 328, 4, 0},
        {281, "CB0", 0, 444, 4, 0},
        {282, "CB1", 1, 444, 4, 0},
        {283, "CB2", 2, 444, 4, 0},
        {284, "CB3", 3, 444, 4, 0},
        {285, "CB4", 4, 444, 4, 0},
        {286, "CB5", 5, 444, 4, 0},
        {287, "CB6", 6, 444, 4, 0},
        {288, "CB7", 7, 444, 4, 0},
        {289, "CB8", 8, 444, 4, 0},
        {290, "CB9", 9, 444, 4, 0},
        {291, "CB10", 10, 444, 4, 0},
        {292, "CB11", 11, 444, 4, 0},
        {293, "CB12", 12, 444, 4, 0},
        {294, "CB13", 13, 444, 4, 0},
        {295, "CB14", 14, 444, 4, 0},
        {296, "CB15", 15, 444, 4, 0},
        {297, "GDS", 0, 121, 4, 0},
        {298, "GRBM", 0, 38, 2, 0},
        {299, "GRBMSE0", 0, 16, 4, 0},
        {300, "GRBMSE1", 1, 16, 4, 0},
        {301, "GRBMSE2", 2, 16, 4, 0},
        {302, "GRBMSE3", 3, 16, 4, 0},
        {303, "RLC", 0, 7, 2, 0},
        {304, "SDMA0", 0, 97, 2, 0},
        {305, "SDMA1", 1, 97, 2, 0},
        {306, "CPG", 0, 60, 2, 0},
        {307, "CPC", 0, 35, 2, 0},
        {308, "WD", 0, 58, 4, 0},
        {309, "ATC", 0, 24, 4, 0},
        {310, "ATCL2", 0, 8, 2, 0},
        {311, "MCVML2", 0, 21, 8, 0},
        {312, "GCEA0", 0, 83, 2, 0},
        {313, "GCEA1", 1, 83, 2, 0},
        {314, "GCEA2", 2, 83, 2, 0},
        {315, "GCEA3", 3, 83, 2, 0},
        {316, "GCEA4", 4, 83, 2, 0},
        {317, "GCEA5", 5, 83, 2, 0},
        {318, "GCEA6", 6, 83, 2, 0},
        {319, "GCEA7", 7, 83, 2, 0},
        {320, "GCEA8", 8, 83, 2, 0},
        {321, "GCEA9", 9, 83, 2, 0},
        {322, "GCEA10", 10, 83, 2, 0},
        {323, "GCEA11", 11, 83, 2, 0},
        {324, "GCEA12", 12, 83, 2, 0},
        {325, "GCEA13", 13, 83, 2, 0},
        {326, "GCEA14", 14, 83, 2, 0},
        {327, "GCEA15", 15, 83, 2, 0},
        {328, "GCEA16", 16, 83, 2, 0},
        {329, "GCEA17", 17, 83, 2, 0},
        {330, "GCEA18", 18, 83, 2, 0},
        {331, "GCEA19", 19, 83, 2, 0},
        {332, "GCEA20", 20, 83, 2, 0},
        {333, "GCEA21", 21, 83, 2, 0},
        {334, "GCEA22", 22, 83, 2, 0},
        {335, "GCEA23", 23, 83, 2, 0},
        {336, "GCEA24", 24, 83, 2, 0},
        {337, "GCEA25", 25, 83, 2, 0},
        {338, "GCEA26", 26, 83, 2, 0},
        {339, "GCEA27", 27, 83, 2, 0},
        {340, "GCEA28", 28, 83, 2, 0},
        {341, "GCEA29", 29, 83, 2, 0},
        {342, "GCEA30", 30, 83, 2, 0},
        {343, "GCEA31", 31, 83, 2, 0},
        {344, "RPB", 0, 95, 4, 0},
        {345, "RMI0", 0, 257, 4, 0},
        {346, "RMI1", 1, 257, 4, 0},
        {347, "RMI2", 2, 257, 4, 0},
        {348, "RMI3", 3, 257, 4, 0},
        {349, "RMI4", 4, 257, 4, 0},
        {350, "RMI5", 5, 257, 4, 0},
        {351, "RMI6", 6, 257, 4, 0},
        {352, "RMI7", 7, 257, 4, 0},
        {353, "UMC0", 0, 40, 5, 0},
        {354, "UMC1", 1, 40, 5, 0},
        {355, "UMC2", 2, 40, 5, 0},
        {356, "UMC3", 3, 40, 5, 0},
        {357, "UMC4", 4, 40, 5, 0},
        {358, "UMC5", 5, 40, 5, 0},
        {359, "UMC6", 6, 40, 5, 0},
        {360, "UMC7", 7, 40, 5, 0},
        {361, "UMC8", 8, 40, 5, 0},
        {362, "UMC9", 9, 40, 5, 0},
        {363, "UMC10", 10, 40, 5, 0},
        {364, "UMC11", 11, 40, 5, 0},
        {365, "UMC12", 12, 40, 5, 0},
        {366, "UMC13", 13, 40, 5, 0},
        {367, "UMC14", 14, 40, 5, 0},
        {368, "UMC15", 15, 40, 5, 0},
        {369, "UMC16", 16, 40, 5, 0},
        {370, "UMC17", 17, 40, 5, 0},
        {371, "UMC18", 18, 40, 5, 0},
        {372, "UMC19", 19, 40, 5, 0},
        {373, "UMC20", 20, 40, 5, 0},
        {374, "UMC21", 21, 40, 5, 0},
        {375, "UMC22", 22, 40, 5, 0},
        {376, "UMC23", 23, 40, 5, 0},
        {377, "UMC24", 24, 40, 5, 0},
        {378, "UMC25", 25, 40, 5, 0},
        {379, "UMC26", 26, 40, 5, 0},
        {380, "UMC27", 27, 40, 5, 0},
        {381, "UMC28", 28, 40, 5, 0},
        {382, "UMC29", 29, 40, 5, 0},
        {383, "UMC30", 30, 40, 5, 0},
        {384, "UMC31", 31, 40, 5, 0},
        {385, "GPIN", 0, 5, 5, 0},
        {386, "GPUTime", 0, 6, 2, 0},
    };

    GpaCounterGroupExposedCounterDesc kHwOglpExposedCountersByGroupGfx9[] = {
        {0, 0},
        {3, 96},
        {4, 244},
        {5, 392},
        {6, 540},
        {7, 688},
        {8, 1039},
        {9, 1390},
        {10, 1741},
        {11, 2092},
        {12, 2584},
        {13, 3076},
        {14, 3568},
        {15, 4060},
        {16, 4256},
        {17, 4452},
        {18, 4648},
        {19, 4844},
        {20, 5218},
        {21, 5592},
        {22, 5966},
        {23, 6340},
        {24, 6714},
        {25, 7088},
        {26, 7462},
        {27, 7836},
        {28, 8210},
        {29, 8584},
        {30, 8958},
        {31, 9332},
        {32, 9706},
        {33, 10080},
        {34, 10454},
        {35, 10828},
        {36, 11202},
        {37, 11576},
        {38, 11950},
        {39, 12324},
        {40, 12698},
        {41, 13072},
        {42, 13446},
        {43, 13820},
        {44, 14194},
        {45, 14568},
        {46, 14942},
        {47, 15316},
        {48, 15690},
        {49, 16064},
        {50, 16438},
        {51, 16812},
        {52, 17020},
        {53, 17228},
        {54, 17436},
        {55, 17644},
        {56, 17763},
        {57, 17882},
        {58, 18001},
        {59, 18120},
        {60, 18239},
        {61, 18358},
        {62, 18477},
        {63, 18596},
        {64, 18715},
        {65, 18834},
        {66, 18953},
        {67, 19072},
        {68, 19191},
        {69, 19310},
        {70, 19429},
        {71, 19548},
        {72, 19667},
        {73, 19786},
        {74, 19905},
        {75, 20024},
        {76, 20143},
        {77, 20262},
        {78, 20381},
        {79, 20500},
        {80, 20619},
        {81, 20738},
        {82, 20857},
        {83, 20976},
        {84, 21095},
        {85, 21214},
        {86, 21333},
        {87, 21452},
        {88, 21571},
        {89, 21690},
        {90, 21809},
        {91, 21928},
        {92, 22047},
        {93, 22166},
        {94, 22285},
        {95, 22404},
        {96, 22523},
        {97, 22642},
        {98, 22761},
        {99, 22880},
        {100, 22999},
        {101, 23118},
        {102, 23237},
        {103, 23356},
        {104, 23475},
        {105, 23594},
        {106, 23713},
        {107, 23832},
        {108, 23951},
        {109, 24070},
        {110, 24189},
        {111, 24308},
        {112, 24427},
        {113, 24546},
        {114, 24665},
        {115, 24784},
        {116, 24903},
        {117, 25022},
        {118, 25141},
        {183, 28908},
        {184, 28993},
        {185, 29078},
        {186, 29163},
        {187, 29248},
        {188, 29333},
        {189, 29418},
        {190, 29503},
        {191, 29588},
        {192, 29673},
        {193, 29758},
        {194, 29843},
        {195, 29928},
        {196, 30013},
        {197, 30098},
        {198, 30183},
        {199, 30268},
        {200, 30353},
        {201, 30438},
        {202, 30523},
        {203, 30608},
        {204, 30693},
        {205, 30778},
        {206, 30863},
        {207, 30948},
        {208, 31033},
        {209, 31118},
        {210, 31203},
        {211, 31288},
        {212, 31373},
        {213, 31458},
        {214, 31543},
        {215, 31628},
        {216, 31713},
        {217, 31798},
        {218, 31883},
        {219, 31968},
        {220, 32053},
        {221, 32138},
        {222, 32223},
        {223, 32308},
        {224, 32393},
        {225, 32478},
        {226, 32563},
        {227, 32648},
        {228, 32733},
        {229, 32818},
        {230, 32903},
        {231, 32988},
        {232, 33073},
        {233, 33158},
        {234, 33243},
        {235, 33328},
        {236, 33413},
        {237, 33498},
        {238, 33583},
        {239, 33668},
        {240, 33753},
        {241, 33838},
        {242, 33923},
        {243, 34008},
        {244, 34093},
        {245, 34178},
        {246, 34263},
        {247, 34348},
        {248, 34630},
        {249, 34912},
        {250, 35194},
        {251, 35476},
        {252, 35758},
        {253, 36040},
        {254, 36322},
        {255, 36604},
        {256, 36886},
        {257, 37168},
        {258, 37450},
        {259, 37732},
        {260, 38014},
        {261, 38296},
        {262, 38578},
        {265, 38930},
        {266, 39258},
        {267, 39586},
        {268, 39914},
        {269, 40242},
        {270, 40570},
        {271, 40898},
        {272, 41226},
        {273, 41554},
        {274, 41882},
        {275, 42210},
        {276, 42538},
        {277, 42866},
        {278, 43194},
        {279, 43522},
        {280, 43850},
        {281, 44178},
        {282, 44622},
        {283, 45066},
        {284, 45510},
        {285, 45954},
        {286, 46398},
        {287, 46842},
        {288, 47286},
        {289, 47730},
        {290, 48174},
        {291, 48618},
        {292, 49062},
        {293, 49506},
        {294, 49950},
        {295, 50394},
        {296, 50838},
        {298, 51403},
        {312, 51912},
        {313, 51995},
        {314, 52078},
        {315, 52161},
        {316, 52244},
        {317, 52327},
        {318, 52410},
        {319, 52493},
        {320, 52576},
        {321, 52659},
        {322, 52742},
        {323, 52825},
        {324, 52908},
        {325, 52991},
        {326, 53074},
        {327, 53157},
        {328, 53240},
        {329, 53323},
        {330, 53406},
        {331, 53489},
        {332, 53572},
        {333, 53655},
        {334, 53738},
        {335, 53821},
        {336, 53904},
        {337, 53987},
        {338, 54070},
        {339, 54153},
        {340, 54236},
        {341, 54319},
        {342, 54402},
        {343, 54485},
        {386, 58004},
    };

    GpaPaddedCounterDesc kOglpPaddedCounterByGroupGfx9[] = {
        {7, 688, {292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350}},
        {8, 1039, {292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350}},
        {9, 1390, {292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350}},
        {10, 1741, {292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350}},
        {11, 2092, {491}},
        {12, 2584, {491}},
        {13, 3076, {491}},
        {14, 3568, {491}},
        {247, 34348, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {248, 34630, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {249, 34912, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {250, 35194, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {251, 35476, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {252, 35758, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {253, 36040, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {254, 36322, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {255, 36604, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {256, 36886, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {257, 37168, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {258, 37450, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {259, 37732, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {260, 38014, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {261, 38296, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {262, 38578, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {281, 44178, {438, 439, 440, 441, 442, 443}},
        {282, 44622, {438, 439, 440, 441, 442, 443}},
        {283, 45066, {438, 439, 440, 441, 442, 443}},
        {284, 45510, {438, 439, 440, 441, 442, 443}},
        {285, 45954, {438, 439, 440, 441, 442, 443}},
        {286, 46398, {438, 439, 440, 441, 442, 443}},
        {287, 46842, {438, 439, 440, 441, 442, 443}},
        {288, 47286, {438, 439, 440, 441, 442, 443}},
        {289, 47730, {438, 439, 440, 441, 442, 443}},
        {290, 48174, {438, 439, 440, 441, 442, 443}},
        {291, 48618, {438, 439, 440, 441, 442, 443}},
        {292, 49062, {438, 439, 440, 441, 442, 443}},
        {293, 49506, {438, 439, 440, 441, 442, 443}},
        {294, 49950, {438, 439, 440, 441, 442, 443}},
        {295, 50394, {438, 439, 440, 441, 442, 443}},
        {296, 50838, {438, 439, 440, 441, 442, 443}},
        {312, 51912, {77, 78, 79, 80, 81, 82}},
        {313, 51995, {77, 78, 79, 80, 81, 82}},
        {314, 52078, {77, 78, 79, 80, 81, 82}},
        {315, 52161, {77, 78, 79, 80, 81, 82}},
        {316, 52244, {77, 78, 79, 80, 81, 82}},
        {317, 52327, {77, 78, 79, 80, 81, 82}},
        {318, 52410, {77, 78, 79, 80, 81, 82}},
        {319, 52493, {77, 78, 79, 80, 81, 82}},
        {320, 52576, {77, 78, 79, 80, 81, 82}},
        {321, 52659, {77, 78, 79, 80, 81, 82}},
        {322, 52742, {77, 78, 79, 80, 81, 82}},
        {323, 52825, {77, 78, 79, 80, 81, 82}},
        {324, 52908, {77, 78, 79, 80, 81, 82}},
        {325, 52991, {77, 78, 79, 80, 81, 82}},
        {326, 53074, {77, 78, 79, 80, 81, 82}},
        {327, 53157, {77, 78, 79, 80, 81, 82}},
        {328, 53240, {77, 78, 79, 80, 81, 82}},
        {329, 53323, {77, 78, 79, 80, 81, 82}},
        {330, 53406, {77, 78, 79, 80, 81, 82}},
        {331, 53489, {77, 78, 79, 80, 81, 82}},
        {332, 53572, {77, 78, 79, 80, 81, 82}},
        {333, 53655, {77, 78, 79, 80, 81, 82}},
        {334, 53738, {77, 78, 79, 80, 81, 82}},
        {335, 53821, {77, 78, 79, 80, 81, 82}},
        {336, 53904, {77, 78, 79, 80, 81, 82}},
        {337, 53987, {77, 78, 79, 80, 81, 82}},
        {338, 54070, {77, 78, 79, 80, 81, 82}},
        {339, 54153, {77, 78, 79, 80, 81, 82}},
        {340, 54236, {77, 78, 79, 80, 81, 82}},
        {341, 54319, {77, 78, 79, 80, 81, 82}},
        {342, 54402, {77, 78, 79, 80, 81, 82}},
        {343, 54485, {77, 78, 79, 80, 81, 82}},
        {344, 54568, {63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94}},
    };

    GpaSqCounterGroupDesc kHwOglpSqGroupsGfx9[] = {
        {19, 0, kSqAll},
        {20, 1, kSqAll},
        {21, 2, kSqAll},
        {22, 3, kSqAll},
        {23, 0, kSqEs},
        {24, 1, kSqEs},
        {25, 2, kSqEs},
        {26, 3, kSqEs},
        {27, 0, kSqGs},
        {28, 1, kSqGs},
        {29, 2, kSqGs},
        {30, 3, kSqGs},
        {31, 0, kSqVs},
        {32, 1, kSqVs},
        {33, 2, kSqVs},
        {34, 3, kSqVs},
        {35, 0, kSqPs},
        {36, 1, kSqPs},
        {37, 2, kSqPs},
        {38, 3, kSqPs},
        {39, 0, kSqLs},
        {40, 1, kSqLs},
        {41, 2, kSqLs},
        {42, 3, kSqLs},
        {43, 0, kSqHs},
        {44, 1, kSqHs},
        {45, 2, kSqHs},
        {46, 3, kSqHs},
        {47, 0, kSqCs},
        {48, 1, kSqCs},
        {49, 2, kSqCs},
        {50, 3, kSqCs},
    };


    unsigned int kHwOglpSqIsolatedGroupsGfx9[] = {
        55, // Ta
        56, // Ta
        57, // Ta
        58, // Ta
        59, // Ta
        60, // Ta
        61, // Ta
        62, // Ta
        63, // Ta
        64, // Ta
        65, // Ta
        66, // Ta
        67, // Ta
        68, // Ta
        69, // Ta
        70, // Ta
        71, // Ta
        72, // Ta
        73, // Ta
        74, // Ta
        75, // Ta
        76, // Ta
        77, // Ta
        78, // Ta
        79, // Ta
        80, // Ta
        81, // Ta
        82, // Ta
        83, // Ta
        84, // Ta
        85, // Ta
        86, // Ta
        87, // Ta
        88, // Ta
        89, // Ta
        90, // Ta
        91, // Ta
        92, // Ta
        93, // Ta
        94, // Ta
        95, // Ta
        96, // Ta
        97, // Ta
        98, // Ta
        99, // Ta
        100, // Ta
        101, // Ta
        102, // Ta
        103, // Ta
        104, // Ta
        105, // Ta
        106, // Ta
        107, // Ta
        108, // Ta
        109, // Ta
        110, // Ta
        111, // Ta
        112, // Ta
        113, // Ta
        114, // Ta
        115, // Ta
        116, // Ta
        117, // Ta
        118, // Ta
        119, // Td
        120, // Td
        121, // Td
        122, // Td
        123, // Td
        124, // Td
        125, // Td
        126, // Td
        127, // Td
        128, // Td
        129, // Td
        130, // Td
        131, // Td
        132, // Td
        133, // Td
        134, // Td
        135, // Td
        136, // Td
        137, // Td
        138, // Td
        139, // Td
        140, // Td
        141, // Td
        142, // Td
        143, // Td
        144, // Td
        145, // Td
        146, // Td
        147, // Td
        148, // Td
        149, // Td
        150, // Td
        151, // Td
        152, // Td
        153, // Td
        154, // Td
        155, // Td
        156, // Td
        157, // Td
        158, // Td
        159, // Td
        160, // Td
        161, // Td
        162, // Td
        163, // Td
        164, // Td
        165, // Td
        166, // Td
        167, // Td
        168, // Td
        169, // Td
        170, // Td
        171, // Td
        172, // Td
        173, // Td
        174, // Td
        175, // Td
        176, // Td
        177, // Td
        178, // Td
        179, // Td
        180, // Td
        181, // Td
        182, // Td
        183, // Tcp
        184, // Tcp
        185, // Tcp
        186, // Tcp
        187, // Tcp
        188, // Tcp
        189, // Tcp
        190, // Tcp
        191, // Tcp
        192, // Tcp
        193, // Tcp
        194, // Tcp
        195, // Tcp
        196, // Tcp
        197, // Tcp
        198, // Tcp
        199, // Tcp
        200, // Tcp
        201, // Tcp
        202, // Tcp
        203, // Tcp
        204, // Tcp
        205, // Tcp
        206, // Tcp
        207, // Tcp
        208, // Tcp
        209, // Tcp
        210, // Tcp
        211, // Tcp
        212, // Tcp
        213, // Tcp
        214, // Tcp
        215, // Tcp
        216, // Tcp
        217, // Tcp
        218, // Tcp
        219, // Tcp
        220, // Tcp
        221, // Tcp
        222, // Tcp
        223, // Tcp
        224, // Tcp
        225, // Tcp
        226, // Tcp
        227, // Tcp
        228, // Tcp
        229, // Tcp
        230, // Tcp
        231, // Tcp
        232, // Tcp
        233, // Tcp
        234, // Tcp
        235, // Tcp
        236, // Tcp
        237, // Tcp
        238, // Tcp
        239, // Tcp
        240, // Tcp
        241, // Tcp
        242, // Tcp
        243, // Tcp
        244, // Tcp
        245, // Tcp
        246, // Tcp
        247, // Tcc
        248, // Tcc
        249, // Tcc
        250, // Tcc
        251, // Tcc
        252, // Tcc
        253, // Tcc
        254, // Tcc
        255, // Tcc
        256, // Tcc
        257, // Tcc
        258, // Tcc
        259, // Tcc
        260, // Tcc
        261, // Tcc
        262, // Tcc
        263, // Tca
        264, // Tca
    };

    const unsigned int kHwOglpGpuTimeBottomToBottomDurationIndexGfx9 = 58004; ///< Index of delta between the previous command reaching bottom of pipe and the current command reaching bottom of pipe, will not include latency of first data to travel through pipeline, best for large data sets. for Oglp for Gfx9 family
    const unsigned int kHwOglpGpuTimeBottomToBottomStartIndexGfx9 = static_cast<unsigned int>(-1); ///< Index of time of the previous command reaching bottom of pipe for Oglp for Gfx9 family
    const unsigned int kHwOglpGpuTimeBottomToBottomEndIndexGfx9 = static_cast<unsigned int>(-1); ///< Index of time of the current command reaching bottom of pipe for Oglp for Gfx9 family
    const unsigned int kHwOglpGpuTimeTopToBottomDurationIndexGfx9 = 58007; ///< Index of execution duration of the current command from top of pipe to bottom of pipe, may include overhead of time in queue for Oglp for Gfx9 family
    const unsigned int kHwOglpGpuTimeTopToBottomStartIndexGfx9 = static_cast<unsigned int>(-1); ///< Index of time that the current command reaches the top of pipe for Oglp for Gfx9 family
    const unsigned int kHwOglpGpuTimeTopToBottomEndIndexGfx9 = static_cast<unsigned int>(-1); ///< Index of time that the current command reaches the bottom of pipe for Oglp for Gfx9 family
    const std::set<unsigned int> kHwOglpTimestampBlockIdsGfx9 =       {386}; ///< Timestamp block id's for OGLP for gfx9 family
    const std::set<unsigned int> kHwOglpTimeCounterIndicesGfx9 =      {58004, 58005, 58006, 58007, 58008, 58009}; ///< Timestamp counter indices for OGLP for gfx9 family
    const unsigned int           kHwOglpGroupCountGfx9                = static_cast<unsigned int>(kHwOglpGroupsGfx9.size());
    const unsigned int           kOglpPaddedCounterGroupCountGfx9 = 73;
    const unsigned int           kHwOglpSqGroupCountGfx9              = sizeof(kHwOglpSqGroupsGfx9) / sizeof(GpaSqCounterGroupDesc);
    const unsigned int           kHwOglpSqIsolatedGroupCountGfx9      = sizeof(kHwOglpSqIsolatedGroupsGfx9) / sizeof(unsigned int);
} //  namespace counter_oglp_gfx9

// clang-format on
