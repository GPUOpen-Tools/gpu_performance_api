//==============================================================================
// Copyright (c) 2010-2021 Advanced Micro Devices, Inc. All rights reserved.
/// @author AMD Developer Tools Team
/// @file
/// @brief Public Counter Definitions for DX11 GFX103.
//==============================================================================

#include "gpu_perf_api_counter_generator/gpa_counter.h"
#include "auto_generated/gpu_perf_api_counter_generator/public_counter_definitions_dx11_gfx103.h"

// *** Note, this is an auto-generated file. Do not edit. Execute PublicCounterCompiler to rebuild.

void AutoDefinePublicDerivedCountersDx11Gfx103(GpaDerivedCounters& c)
{
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(103665);

        c.DefineDerivedCounter("GPUTime", "Timing", "Time this API command took to execute on the GPU in nanoseconds from the time the previous command reached the bottom of the pipeline (BOP) to the time this command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "0,TS_FREQ,/,(1000000000),*", "cbd338f2-de6c-7b14-92ad-ba724ca2e501");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24);
        internal_counters.push_back(0);

        c.DefineDerivedCounter("GPUBusy", "Timing", "The percentage of time the GPU command processor was busy.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,/,(100),*,(100),min", "b1ba5363-1abc-fe66-2fdd-1fe6ee8989a0");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24);

        c.DefineDerivedCounter("GPUBusyCycles", "Timing", "Number of GPU cycles that the GPU command processor was busy.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0", "451cb045-23af-ac44-4603-d5832fa041d9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26134);
        internal_counters.push_back(26466);
        internal_counters.push_back(26798);
        internal_counters.push_back(27130);
        internal_counters.push_back(26146);
        internal_counters.push_back(26478);
        internal_counters.push_back(26810);
        internal_counters.push_back(27142);
        internal_counters.push_back(25827);
        internal_counters.push_back(26159);
        internal_counters.push_back(26491);
        internal_counters.push_back(26823);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("VSBusy", "Timing", "The percentage of time the ShaderUnit has vertex shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,4,4,ifnotzero,8,8,ifnotzero,1,5,5,ifnotzero,9,9,ifnotzero,max,2,6,6,ifnotzero,10,10,ifnotzero,max,3,7,7,ifnotzero,11,11,ifnotzero,max,12,/,(100),*,(100),min", "94caad5e-867c-6c09-cf3a-d05b51df8f3b");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(26134);
        internal_counters.push_back(26466);
        internal_counters.push_back(26798);
        internal_counters.push_back(27130);
        internal_counters.push_back(26146);
        internal_counters.push_back(26478);
        internal_counters.push_back(26810);
        internal_counters.push_back(27142);
        internal_counters.push_back(25827);
        internal_counters.push_back(26159);
        internal_counters.push_back(26491);
        internal_counters.push_back(26823);

        c.DefineDerivedCounter("VSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has vertex shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,4,4,ifnotzero,8,8,ifnotzero,1,5,5,ifnotzero,9,9,ifnotzero,max,2,6,6,ifnotzero,10,10,ifnotzero,max,3,7,7,ifnotzero,11,11,ifnotzero,max", "a2086d4e-274b-48a8-3e08-a4ab76ac15dd");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(103665);
        internal_counters.push_back(26134);
        internal_counters.push_back(26466);
        internal_counters.push_back(26798);
        internal_counters.push_back(27130);
        internal_counters.push_back(26146);
        internal_counters.push_back(26478);
        internal_counters.push_back(26810);
        internal_counters.push_back(27142);
        internal_counters.push_back(25827);
        internal_counters.push_back(26159);
        internal_counters.push_back(26491);
        internal_counters.push_back(26823);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("VSTime", "Timing", "Time vertex shaders are busy in nanoseconds.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "1,5,5,ifnotzero,9,9,ifnotzero,2,6,6,ifnotzero,10,10,ifnotzero,max,3,7,7,ifnotzero,11,11,ifnotzero,max,4,8,8,ifnotzero,12,12,ifnotzero,max,13,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "d6ce819e-69af-a241-d07a-5dd8d146e436");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(25860);
        internal_counters.push_back(26192);
        internal_counters.push_back(26524);
        internal_counters.push_back(26856);
        internal_counters.push_back(25867);
        internal_counters.push_back(26199);
        internal_counters.push_back(26531);
        internal_counters.push_back(26863);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("HSBusy", "Timing", "The percentage of time the ShaderUnit has hull shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "16f30a0b-4cbf-eccd-b13f-ab68dd254d32");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(25860);
        internal_counters.push_back(26192);
        internal_counters.push_back(26524);
        internal_counters.push_back(26856);
        internal_counters.push_back(25867);
        internal_counters.push_back(26199);
        internal_counters.push_back(26531);
        internal_counters.push_back(26863);

        c.DefineDerivedCounter("HSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has hull shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "753e76ef-8ef8-3f13-b511-4bd9f3589fdb");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(103665);
        internal_counters.push_back(25860);
        internal_counters.push_back(26192);
        internal_counters.push_back(26524);
        internal_counters.push_back(26856);
        internal_counters.push_back(25867);
        internal_counters.push_back(26199);
        internal_counters.push_back(26531);
        internal_counters.push_back(26863);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("HSTime", "Timing", "Time hull shaders are busy in nanoseconds.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "8386a863-dd34-1526-f703-0f0c7b241bc4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(25827);
        internal_counters.push_back(26159);
        internal_counters.push_back(26491);
        internal_counters.push_back(26823);
        internal_counters.push_back(26134);
        internal_counters.push_back(26466);
        internal_counters.push_back(26798);
        internal_counters.push_back(27130);
        internal_counters.push_back(26140);
        internal_counters.push_back(26472);
        internal_counters.push_back(26804);
        internal_counters.push_back(27136);
        internal_counters.push_back(26152);
        internal_counters.push_back(26484);
        internal_counters.push_back(26816);
        internal_counters.push_back(27148);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("DSBusy", "Timing", "The percentage of time the ShaderUnit has domain shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,4,8,ifnotzero,12,ifnotzero,(0),1,5,9,ifnotzero,13,ifnotzero,max,(0),2,6,10,ifnotzero,14,ifnotzero,max,(0),3,7,11,ifnotzero,15,ifnotzero,max,16,/,(100),*,(100),min", "0c626e8a-9b82-b6d4-d9a3-578509316301");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(25827);
        internal_counters.push_back(26159);
        internal_counters.push_back(26491);
        internal_counters.push_back(26823);
        internal_counters.push_back(26134);
        internal_counters.push_back(26466);
        internal_counters.push_back(26798);
        internal_counters.push_back(27130);
        internal_counters.push_back(26140);
        internal_counters.push_back(26472);
        internal_counters.push_back(26804);
        internal_counters.push_back(27136);
        internal_counters.push_back(26152);
        internal_counters.push_back(26484);
        internal_counters.push_back(26816);
        internal_counters.push_back(27148);

        c.DefineDerivedCounter("DSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has domain shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,4,8,ifnotzero,12,ifnotzero,(0),1,5,9,ifnotzero,13,ifnotzero,max,(0),2,6,10,ifnotzero,14,ifnotzero,max,(0),3,7,11,ifnotzero,15,ifnotzero,max", "2f3f7561-0549-2232-536d-129ffc5f7703");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(103665);
        internal_counters.push_back(25827);
        internal_counters.push_back(26159);
        internal_counters.push_back(26491);
        internal_counters.push_back(26823);
        internal_counters.push_back(26134);
        internal_counters.push_back(26466);
        internal_counters.push_back(26798);
        internal_counters.push_back(27130);
        internal_counters.push_back(26140);
        internal_counters.push_back(26472);
        internal_counters.push_back(26804);
        internal_counters.push_back(27136);
        internal_counters.push_back(26152);
        internal_counters.push_back(26484);
        internal_counters.push_back(26816);
        internal_counters.push_back(27148);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("DSTime", "Timing", "Time domain shaders are busy in nanoseconds.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "(0),1,5,9,ifnotzero,13,ifnotzero,(0),2,6,10,ifnotzero,14,ifnotzero,max,(0),3,7,11,ifnotzero,15,ifnotzero,max,(0),4,8,12,ifnotzero,16,ifnotzero,max,17,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "bfe28947-c727-8a9f-aa59-c218e58bfba5");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(25886);
        internal_counters.push_back(26218);
        internal_counters.push_back(26550);
        internal_counters.push_back(26882);
        internal_counters.push_back(25906);
        internal_counters.push_back(26238);
        internal_counters.push_back(26570);
        internal_counters.push_back(26902);
        internal_counters.push_back(25887);
        internal_counters.push_back(26219);
        internal_counters.push_back(26551);
        internal_counters.push_back(26883);
        internal_counters.push_back(25907);
        internal_counters.push_back(26239);
        internal_counters.push_back(26571);
        internal_counters.push_back(26903);
        internal_counters.push_back(25888);
        internal_counters.push_back(26220);
        internal_counters.push_back(26552);
        internal_counters.push_back(26884);
        internal_counters.push_back(25908);
        internal_counters.push_back(26240);
        internal_counters.push_back(26572);
        internal_counters.push_back(26904);
        internal_counters.push_back(25889);
        internal_counters.push_back(26221);
        internal_counters.push_back(26553);
        internal_counters.push_back(26885);
        internal_counters.push_back(25909);
        internal_counters.push_back(26241);
        internal_counters.push_back(26573);
        internal_counters.push_back(26905);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSBusy", "Timing", "The percentage of time the ShaderUnit has pixel shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,(0),2,6,ifnotzero,(0),3,7,ifnotzero,max4,(0),8,12,ifnotzero,(0),9,13,ifnotzero,(0),10,14,ifnotzero,(0),11,15,ifnotzero,max4,(0),16,20,ifnotzero,(0),17,21,ifnotzero,(0),18,22,ifnotzero,(0),19,23,ifnotzero,max4,(0),24,28,ifnotzero,(0),25,29,ifnotzero,(0),26,30,ifnotzero,(0),27,31,ifnotzero,max4,max4,32,/,(100),*,(100),min", "7e772beb-d82c-bd9a-aed0-fe504d416ce5");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(25886);
        internal_counters.push_back(26218);
        internal_counters.push_back(26550);
        internal_counters.push_back(26882);
        internal_counters.push_back(25906);
        internal_counters.push_back(26238);
        internal_counters.push_back(26570);
        internal_counters.push_back(26902);
        internal_counters.push_back(25887);
        internal_counters.push_back(26219);
        internal_counters.push_back(26551);
        internal_counters.push_back(26883);
        internal_counters.push_back(25907);
        internal_counters.push_back(26239);
        internal_counters.push_back(26571);
        internal_counters.push_back(26903);
        internal_counters.push_back(25888);
        internal_counters.push_back(26220);
        internal_counters.push_back(26552);
        internal_counters.push_back(26884);
        internal_counters.push_back(25908);
        internal_counters.push_back(26240);
        internal_counters.push_back(26572);
        internal_counters.push_back(26904);
        internal_counters.push_back(25889);
        internal_counters.push_back(26221);
        internal_counters.push_back(26553);
        internal_counters.push_back(26885);
        internal_counters.push_back(25909);
        internal_counters.push_back(26241);
        internal_counters.push_back(26573);
        internal_counters.push_back(26905);

        c.DefineDerivedCounter("PSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has pixel shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,(0),2,6,ifnotzero,(0),3,7,ifnotzero,max4,(0),8,12,ifnotzero,(0),9,13,ifnotzero,(0),10,14,ifnotzero,(0),11,15,ifnotzero,max4,(0),16,20,ifnotzero,(0),17,21,ifnotzero,(0),18,22,ifnotzero,(0),19,23,ifnotzero,max4,(0),24,28,ifnotzero,(0),25,29,ifnotzero,(0),26,30,ifnotzero,(0),27,31,ifnotzero,max4,max4", "b58bea04-ce8e-2984-80f4-8aba7d4c817b");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(103665);
        internal_counters.push_back(25886);
        internal_counters.push_back(26218);
        internal_counters.push_back(26550);
        internal_counters.push_back(26882);
        internal_counters.push_back(25906);
        internal_counters.push_back(26238);
        internal_counters.push_back(26570);
        internal_counters.push_back(26902);
        internal_counters.push_back(25887);
        internal_counters.push_back(26219);
        internal_counters.push_back(26551);
        internal_counters.push_back(26883);
        internal_counters.push_back(25907);
        internal_counters.push_back(26239);
        internal_counters.push_back(26571);
        internal_counters.push_back(26903);
        internal_counters.push_back(25888);
        internal_counters.push_back(26220);
        internal_counters.push_back(26552);
        internal_counters.push_back(26884);
        internal_counters.push_back(25908);
        internal_counters.push_back(26240);
        internal_counters.push_back(26572);
        internal_counters.push_back(26904);
        internal_counters.push_back(25889);
        internal_counters.push_back(26221);
        internal_counters.push_back(26553);
        internal_counters.push_back(26885);
        internal_counters.push_back(25909);
        internal_counters.push_back(26241);
        internal_counters.push_back(26573);
        internal_counters.push_back(26905);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSTime", "Timing", "Time pixel shaders are busy in nanoseconds.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,(0),3,7,ifnotzero,(0),4,8,ifnotzero,max4,(0),9,13,ifnotzero,(0),10,14,ifnotzero,(0),11,15,ifnotzero,(0),12,16,ifnotzero,max4,(0),17,21,ifnotzero,(0),18,22,ifnotzero,(0),19,23,ifnotzero,(0),20,24,ifnotzero,max4,(0),25,29,ifnotzero,(0),26,30,ifnotzero,(0),27,31,ifnotzero,(0),28,32,ifnotzero,max4,max4,33,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "edca7694-7416-e8a6-0c5a-63a5ad5f3d74");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(25871);
        internal_counters.push_back(26203);
        internal_counters.push_back(26535);
        internal_counters.push_back(26867);
        internal_counters.push_back(25875);
        internal_counters.push_back(26207);
        internal_counters.push_back(26539);
        internal_counters.push_back(26871);
        internal_counters.push_back(25877);
        internal_counters.push_back(26209);
        internal_counters.push_back(26541);
        internal_counters.push_back(26873);
        internal_counters.push_back(25881);
        internal_counters.push_back(26213);
        internal_counters.push_back(26545);
        internal_counters.push_back(26877);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("CSBusy", "Timing", "The percentage of time the ShaderUnit has compute shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max,16,/,(100),*,(100),min", "493fdd90-8d2b-a055-5e4e-2d29c3396b8c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(25871);
        internal_counters.push_back(26203);
        internal_counters.push_back(26535);
        internal_counters.push_back(26867);
        internal_counters.push_back(25875);
        internal_counters.push_back(26207);
        internal_counters.push_back(26539);
        internal_counters.push_back(26871);
        internal_counters.push_back(25877);
        internal_counters.push_back(26209);
        internal_counters.push_back(26541);
        internal_counters.push_back(26873);
        internal_counters.push_back(25881);
        internal_counters.push_back(26213);
        internal_counters.push_back(26545);
        internal_counters.push_back(26877);

        c.DefineDerivedCounter("CSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has compute shader work to do.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max", "39bcf1b8-f6b2-4c37-f9af-0a2bb59512f9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(103665);
        internal_counters.push_back(25871);
        internal_counters.push_back(26203);
        internal_counters.push_back(26535);
        internal_counters.push_back(26867);
        internal_counters.push_back(25875);
        internal_counters.push_back(26207);
        internal_counters.push_back(26539);
        internal_counters.push_back(26871);
        internal_counters.push_back(25877);
        internal_counters.push_back(26209);
        internal_counters.push_back(26541);
        internal_counters.push_back(26873);
        internal_counters.push_back(25881);
        internal_counters.push_back(26213);
        internal_counters.push_back(26545);
        internal_counters.push_back(26877);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("CSTime", "Timing", "Time compute shaders are busy in nanoseconds.", kGpaDataTypeFloat64, kGpaUsageTypeNanoseconds, internal_counters, "1,2,3,4,5,6,7,8,comparemax4,9,10,11,12,13,14,15,16,comparemax4,max,17,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "dbc24916-ecb2-7eef-8d63-7afadaaab6bc");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(103181);
        internal_counters.push_back(103320);
        internal_counters.push_back(103459);
        internal_counters.push_back(103598);
        internal_counters.push_back(103200);
        internal_counters.push_back(103339);
        internal_counters.push_back(103478);
        internal_counters.push_back(103617);
        internal_counters.push_back(103219);
        internal_counters.push_back(103358);
        internal_counters.push_back(103497);
        internal_counters.push_back(103636);

        c.DefineDerivedCounter("VSVerticesIn", "VertexShader", "The number of vertices processed by the VS.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero", "810a04c8-2ff4-081d-766d-bfa2bd4ad916");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29266);
        internal_counters.push_back(29778);
        internal_counters.push_back(30290);
        internal_counters.push_back(30802);
        internal_counters.push_back(29206);
        internal_counters.push_back(29718);
        internal_counters.push_back(30230);
        internal_counters.push_back(30742);
        internal_counters.push_back(37458);
        internal_counters.push_back(37970);
        internal_counters.push_back(38482);
        internal_counters.push_back(38994);
        internal_counters.push_back(37398);
        internal_counters.push_back(37910);
        internal_counters.push_back(38422);
        internal_counters.push_back(38934);
        internal_counters.push_back(33362);
        internal_counters.push_back(33874);
        internal_counters.push_back(34386);
        internal_counters.push_back(34898);
        internal_counters.push_back(33302);
        internal_counters.push_back(33814);
        internal_counters.push_back(34326);
        internal_counters.push_back(34838);

        c.DefineDerivedCounter("VSVALUInstCount", "VertexShader", "Average number of vector ALU instructions executed in the VS. Affected by flow control.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,12,13,14,15,sum4,/,12,13,14,15,sum4,ifnotzero,16,17,18,19,sum4,20,21,22,23,sum4,/,20,21,22,23,sum4,ifnotzero", "8ec604e4-63f5-e6b5-4558-c38f0b26d4b1");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29262);
        internal_counters.push_back(29774);
        internal_counters.push_back(30286);
        internal_counters.push_back(30798);
        internal_counters.push_back(29206);
        internal_counters.push_back(29718);
        internal_counters.push_back(30230);
        internal_counters.push_back(30742);
        internal_counters.push_back(37454);
        internal_counters.push_back(37966);
        internal_counters.push_back(38478);
        internal_counters.push_back(38990);
        internal_counters.push_back(37398);
        internal_counters.push_back(37910);
        internal_counters.push_back(38422);
        internal_counters.push_back(38934);
        internal_counters.push_back(33358);
        internal_counters.push_back(33870);
        internal_counters.push_back(34382);
        internal_counters.push_back(34894);
        internal_counters.push_back(33302);
        internal_counters.push_back(33814);
        internal_counters.push_back(34326);
        internal_counters.push_back(34838);

        c.DefineDerivedCounter("VSSALUInstCount", "VertexShader", "Average number of scalar ALU instructions executed in the VS. Affected by flow control.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,12,13,14,15,sum4,/,12,13,14,15,sum4,ifnotzero,16,17,18,19,sum4,20,21,22,23,sum4,/,20,21,22,23,sum4,ifnotzero", "e3da0383-7322-7f65-8cf2-3ce641578e54");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29319);
        internal_counters.push_back(29831);
        internal_counters.push_back(30343);
        internal_counters.push_back(30855);
        internal_counters.push_back(37511);
        internal_counters.push_back(38023);
        internal_counters.push_back(38535);
        internal_counters.push_back(39047);
        internal_counters.push_back(33415);
        internal_counters.push_back(33927);
        internal_counters.push_back(34439);
        internal_counters.push_back(34951);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("VSVALUBusy", "VertexShader", "The percentage of GPUTime vector ALU instructions are being processed by the VS.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero,NUM_SIMDS,/,12,/,(100),*", "8b3572f7-fda0-eddf-6c93-2ab145b8754b");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29319);
        internal_counters.push_back(29831);
        internal_counters.push_back(30343);
        internal_counters.push_back(30855);
        internal_counters.push_back(37511);
        internal_counters.push_back(38023);
        internal_counters.push_back(38535);
        internal_counters.push_back(39047);
        internal_counters.push_back(33415);
        internal_counters.push_back(33927);
        internal_counters.push_back(34439);
        internal_counters.push_back(34951);

        c.DefineDerivedCounter("VSVALUBusyCycles", "VertexShader", "Number of GPU cycles where vector ALU instructions are being processed by the VS.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero", "0af1686e-6d77-2f6e-2862-7bb8e869a776");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29262);
        internal_counters.push_back(29774);
        internal_counters.push_back(30286);
        internal_counters.push_back(30798);
        internal_counters.push_back(37454);
        internal_counters.push_back(37966);
        internal_counters.push_back(38478);
        internal_counters.push_back(38990);
        internal_counters.push_back(33358);
        internal_counters.push_back(33870);
        internal_counters.push_back(34382);
        internal_counters.push_back(34894);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("VSSALUBusy", "VertexShader", "The percentage of GPUTime scalar ALU instructions are being processed by the VS.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero,NUM_CUS,/,12,/,(100),*", "3bc8730c-e3bc-e2f0-7d24-36974064c25a");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(29262);
        internal_counters.push_back(29774);
        internal_counters.push_back(30286);
        internal_counters.push_back(30798);
        internal_counters.push_back(37454);
        internal_counters.push_back(37966);
        internal_counters.push_back(38478);
        internal_counters.push_back(38990);
        internal_counters.push_back(33358);
        internal_counters.push_back(33870);
        internal_counters.push_back(34382);
        internal_counters.push_back(34894);

        c.DefineDerivedCounter("VSSALUBusyCycles", "VertexShader", "Number of GPU cycles where scalar ALU instructions are being processed by the VS.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero,NUM_CUS,/", "357ac7cd-2e1c-dcb0-77f6-37527237f35b");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(103194);
        internal_counters.push_back(103333);
        internal_counters.push_back(103472);
        internal_counters.push_back(103611);

        c.DefineDerivedCounter("HSPatches", "HullShader", "The number of patches processed by the HS.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4", "d1bbd27d-d591-4509-df52-d329fb73a98f");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(39506);
        internal_counters.push_back(40018);
        internal_counters.push_back(40530);
        internal_counters.push_back(41042);
        internal_counters.push_back(39446);
        internal_counters.push_back(39958);
        internal_counters.push_back(40470);
        internal_counters.push_back(40982);

        c.DefineDerivedCounter("HSVALUInstCount", "HullShader", "Average number of vector ALU instructions executed in the HS. Affected by flow control.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "786673bf-d58f-9895-3a37-9d6efb5e5804");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(39502);
        internal_counters.push_back(40014);
        internal_counters.push_back(40526);
        internal_counters.push_back(41038);
        internal_counters.push_back(39446);
        internal_counters.push_back(39958);
        internal_counters.push_back(40470);
        internal_counters.push_back(40982);

        c.DefineDerivedCounter("HSSALUInstCount", "HullShader", "Average number of scalar ALU instructions executed in the HS. Affected by flow control.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "1af675c4-cb0b-c4c5-c131-2796750f683e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(39559);
        internal_counters.push_back(40071);
        internal_counters.push_back(40583);
        internal_counters.push_back(41095);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("HSVALUBusy", "HullShader", "The percentage of GPUTime vector ALU instructions are being processed by the HS.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,sum4,NUM_SIMDS,/,4,/,(100),*", "7880d192-8015-0311-d43e-fb0b7a4df179");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(39559);
        internal_counters.push_back(40071);
        internal_counters.push_back(40583);
        internal_counters.push_back(41095);

        c.DefineDerivedCounter("HSVALUBusyCycles", "HullShader", "Number of GPU cycles vector where ALU instructions are being processed by the HS.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,sum4,NUM_SIMDS,/", "3afb94e4-e937-5730-0cc9-41d3113ba012");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(39502);
        internal_counters.push_back(40014);
        internal_counters.push_back(40526);
        internal_counters.push_back(41038);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("HSSALUBusy", "HullShader", "The percentage of GPUTime scalar ALU instructions are being processed by the HS.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "34748a4b-9148-0b06-b7b9-5700d6631bde");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(39502);
        internal_counters.push_back(40014);
        internal_counters.push_back(40526);
        internal_counters.push_back(41038);

        c.DefineDerivedCounter("HSSALUBusyCycles", "HullShader", "Number of GPU cycles where scalar ALU instructions are being processed by the HS.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,sum4,NUM_CUS,/", "9bceabf7-3f01-2fd9-7b1d-8fe46c729efc");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(103219);
        internal_counters.push_back(103358);
        internal_counters.push_back(103497);
        internal_counters.push_back(103636);
        internal_counters.push_back(103181);
        internal_counters.push_back(103320);
        internal_counters.push_back(103459);
        internal_counters.push_back(103598);
        internal_counters.push_back(103200);
        internal_counters.push_back(103339);
        internal_counters.push_back(103478);
        internal_counters.push_back(103617);

        c.DefineDerivedCounter("DSVerticesIn", "DomainShader", "The number of vertices processed by the DS.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,ifnotzero", "b88d9d05-2418-e639-4e3d-3a5815855f8d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(33362);
        internal_counters.push_back(33874);
        internal_counters.push_back(34386);
        internal_counters.push_back(34898);
        internal_counters.push_back(33302);
        internal_counters.push_back(33814);
        internal_counters.push_back(34326);
        internal_counters.push_back(34838);
        internal_counters.push_back(29266);
        internal_counters.push_back(29778);
        internal_counters.push_back(30290);
        internal_counters.push_back(30802);
        internal_counters.push_back(29206);
        internal_counters.push_back(29718);
        internal_counters.push_back(30230);
        internal_counters.push_back(30742);
        internal_counters.push_back(29210);
        internal_counters.push_back(29722);
        internal_counters.push_back(30234);
        internal_counters.push_back(30746);
        internal_counters.push_back(37402);
        internal_counters.push_back(37914);
        internal_counters.push_back(38426);
        internal_counters.push_back(38938);

        c.DefineDerivedCounter("DSVALUInstCount", "DomainShader", "Average number of vector ALU instructions executed in the DS. Affected by flow control.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,sum4,12,13,14,15,sum4,/,16,17,18,19,sum4,ifnotzero,20,21,22,23,sum4,ifnotzero", "03a3e949-82f9-be4d-7228-5eb5ad80915a");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(33358);
        internal_counters.push_back(33870);
        internal_counters.push_back(34382);
        internal_counters.push_back(34894);
        internal_counters.push_back(33302);
        internal_counters.push_back(33814);
        internal_counters.push_back(34326);
        internal_counters.push_back(34838);
        internal_counters.push_back(29262);
        internal_counters.push_back(29774);
        internal_counters.push_back(30286);
        internal_counters.push_back(30798);
        internal_counters.push_back(29206);
        internal_counters.push_back(29718);
        internal_counters.push_back(30230);
        internal_counters.push_back(30742);
        internal_counters.push_back(29210);
        internal_counters.push_back(29722);
        internal_counters.push_back(30234);
        internal_counters.push_back(30746);
        internal_counters.push_back(37402);
        internal_counters.push_back(37914);
        internal_counters.push_back(38426);
        internal_counters.push_back(38938);

        c.DefineDerivedCounter("DSSALUInstCount", "DomainShader", "Average number of scalar ALU instructions executed in the DS. Affected by flow control.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,sum4,12,13,14,15,sum4,/,16,17,18,19,sum4,ifnotzero,20,21,22,23,sum4,ifnotzero", "73daa728-483e-95d0-5b40-504719aadc1c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(13779);
        internal_counters.push_back(14055);
        internal_counters.push_back(14331);
        internal_counters.push_back(14607);
        internal_counters.push_back(13783);
        internal_counters.push_back(14059);
        internal_counters.push_back(14335);
        internal_counters.push_back(14611);
        internal_counters.push_back(13735);
        internal_counters.push_back(14011);
        internal_counters.push_back(14287);
        internal_counters.push_back(14563);
        internal_counters.push_back(13747);
        internal_counters.push_back(14023);
        internal_counters.push_back(14299);
        internal_counters.push_back(14575);
        internal_counters.push_back(13736);
        internal_counters.push_back(14012);
        internal_counters.push_back(14288);
        internal_counters.push_back(14564);
        internal_counters.push_back(13748);
        internal_counters.push_back(14024);
        internal_counters.push_back(14300);
        internal_counters.push_back(14576);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PrimitiveAssemblyBusy", "Timing", "The percentage of GPUTime that primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max,24,/,(100),*,(100),min", "54ac5640-c4d7-95e2-20e0-6a9fdfc07333");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(13779);
        internal_counters.push_back(14055);
        internal_counters.push_back(14331);
        internal_counters.push_back(14607);
        internal_counters.push_back(13783);
        internal_counters.push_back(14059);
        internal_counters.push_back(14335);
        internal_counters.push_back(14611);
        internal_counters.push_back(13735);
        internal_counters.push_back(14011);
        internal_counters.push_back(14287);
        internal_counters.push_back(14563);
        internal_counters.push_back(13747);
        internal_counters.push_back(14023);
        internal_counters.push_back(14299);
        internal_counters.push_back(14575);
        internal_counters.push_back(13736);
        internal_counters.push_back(14012);
        internal_counters.push_back(14288);
        internal_counters.push_back(14564);
        internal_counters.push_back(13748);
        internal_counters.push_back(14024);
        internal_counters.push_back(14300);
        internal_counters.push_back(14576);

        c.DefineDerivedCounter("PrimitiveAssemblyBusyCycles", "Timing", "Number of GPU cycles the primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max", "99777f2d-9626-c78a-a97c-c4505eba1e5f");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(13682);
        internal_counters.push_back(13958);
        internal_counters.push_back(14234);
        internal_counters.push_back(14510);

        c.DefineDerivedCounter("PrimitivesIn", "PrimitiveAssembly", "The number of primitives received by the hardware. This includes primitives generated by tessellation.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4", "a515b80d-75c3-c7d2-0d2f-d7766b4759a6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(13688);
        internal_counters.push_back(13964);
        internal_counters.push_back(14240);
        internal_counters.push_back(14516);
        internal_counters.push_back(13728);
        internal_counters.push_back(14004);
        internal_counters.push_back(14280);
        internal_counters.push_back(14556);
        internal_counters.push_back(13729);
        internal_counters.push_back(14005);
        internal_counters.push_back(14281);
        internal_counters.push_back(14557);
        internal_counters.push_back(13730);
        internal_counters.push_back(14006);
        internal_counters.push_back(14282);
        internal_counters.push_back(14558);
        internal_counters.push_back(13731);
        internal_counters.push_back(14007);
        internal_counters.push_back(14283);
        internal_counters.push_back(14559);

        c.DefineDerivedCounter("CulledPrims", "PrimitiveAssembly", "The number of culled primitives. Typical reasons include scissor, the primitive having zero area, and back or front face culling.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,sum20", "589bdf55-9192-280a-41c3-584bc94f2562");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(13695);
        internal_counters.push_back(13971);
        internal_counters.push_back(14247);
        internal_counters.push_back(14523);

        c.DefineDerivedCounter("ClippedPrims", "PrimitiveAssembly", "The number of primitives that required one or more clipping operations due to intersecting the view volume or user clip planes.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4", "5ef6f9d5-155e-5baa-163f-8359d9ea9bbf");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(13783);
        internal_counters.push_back(14059);
        internal_counters.push_back(14335);
        internal_counters.push_back(14611);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PAStalledOnRasterizer", "PrimitiveAssembly", "Percentage of GPUTime that primitive assembly waits for rasterization to be ready to accept data. This roughly indicates for what percentage of time the pipeline is bottlenecked by pixel operations.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,max4,4,/,(100),*", "6f9f416b-53c1-0457-f88c-7b6ba8973974");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(13783);
        internal_counters.push_back(14059);
        internal_counters.push_back(14335);
        internal_counters.push_back(14611);

        c.DefineDerivedCounter("PAStalledOnRasterizerCycles", "PrimitiveAssembly", "Number of GPU cycles the primitive assembly waits for rasterization to be ready to accept data. Indicates the number of GPU cycles the pipeline is bottlenecked by pixel operations.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,max4", "7a8c492a-c566-9328-6805-760dbff5c0f2");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24038);
        internal_counters.push_back(24263);
        internal_counters.push_back(24488);
        internal_counters.push_back(24713);
        internal_counters.push_back(24938);
        internal_counters.push_back(25163);
        internal_counters.push_back(25388);
        internal_counters.push_back(25613);
        internal_counters.push_back(24043);
        internal_counters.push_back(24268);
        internal_counters.push_back(24493);
        internal_counters.push_back(24718);
        internal_counters.push_back(24943);
        internal_counters.push_back(25168);
        internal_counters.push_back(25393);
        internal_counters.push_back(25618);
        internal_counters.push_back(24048);
        internal_counters.push_back(24273);
        internal_counters.push_back(24498);
        internal_counters.push_back(24723);
        internal_counters.push_back(24948);
        internal_counters.push_back(25173);
        internal_counters.push_back(25398);
        internal_counters.push_back(25623);
        internal_counters.push_back(24053);
        internal_counters.push_back(24278);
        internal_counters.push_back(24503);
        internal_counters.push_back(24728);
        internal_counters.push_back(24953);
        internal_counters.push_back(25178);
        internal_counters.push_back(25403);
        internal_counters.push_back(25628);

        c.DefineDerivedCounter("PSPixelsOut", "PixelShader", "Pixels exported from shader to color buffers. Does not include killed or alpha tested pixels; if there are multiple render targets, each render target receives one export, so this will be 2 for 1 pixel written to two RTs.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32", "24cba16c-baa6-6ecd-95ad-92ecb1338da1");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24040);
        internal_counters.push_back(24265);
        internal_counters.push_back(24490);
        internal_counters.push_back(24715);
        internal_counters.push_back(24940);
        internal_counters.push_back(25165);
        internal_counters.push_back(25390);
        internal_counters.push_back(25615);
        internal_counters.push_back(24045);
        internal_counters.push_back(24270);
        internal_counters.push_back(24495);
        internal_counters.push_back(24720);
        internal_counters.push_back(24945);
        internal_counters.push_back(25170);
        internal_counters.push_back(25395);
        internal_counters.push_back(25620);
        internal_counters.push_back(24050);
        internal_counters.push_back(24275);
        internal_counters.push_back(24500);
        internal_counters.push_back(24725);
        internal_counters.push_back(24950);
        internal_counters.push_back(25175);
        internal_counters.push_back(25400);
        internal_counters.push_back(25625);
        internal_counters.push_back(24055);
        internal_counters.push_back(24280);
        internal_counters.push_back(24505);
        internal_counters.push_back(24730);
        internal_counters.push_back(24955);
        internal_counters.push_back(25180);
        internal_counters.push_back(25405);
        internal_counters.push_back(25630);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSExportStalls", "PixelShader", "Pixel shader output stalls. Percentage of GPUBusy. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,max32,32,/,(100),*", "9b4f466c-ff97-22bb-557d-84d3c4c51895");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(24040);
        internal_counters.push_back(24265);
        internal_counters.push_back(24490);
        internal_counters.push_back(24715);
        internal_counters.push_back(24940);
        internal_counters.push_back(25165);
        internal_counters.push_back(25390);
        internal_counters.push_back(25615);
        internal_counters.push_back(24045);
        internal_counters.push_back(24270);
        internal_counters.push_back(24495);
        internal_counters.push_back(24720);
        internal_counters.push_back(24945);
        internal_counters.push_back(25170);
        internal_counters.push_back(25395);
        internal_counters.push_back(25620);
        internal_counters.push_back(24050);
        internal_counters.push_back(24275);
        internal_counters.push_back(24500);
        internal_counters.push_back(24725);
        internal_counters.push_back(24950);
        internal_counters.push_back(25175);
        internal_counters.push_back(25400);
        internal_counters.push_back(25625);
        internal_counters.push_back(24055);
        internal_counters.push_back(24280);
        internal_counters.push_back(24505);
        internal_counters.push_back(24730);
        internal_counters.push_back(24955);
        internal_counters.push_back(25180);
        internal_counters.push_back(25405);
        internal_counters.push_back(25630);

        c.DefineDerivedCounter("PSExportStallsCycles", "PixelShader", "Number of GPU cycles the pixel shader output stalls. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,max32", "47c72aad-64e6-0864-d533-d8e0bc27c156");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35410);
        internal_counters.push_back(35922);
        internal_counters.push_back(36434);
        internal_counters.push_back(36946);
        internal_counters.push_back(35350);
        internal_counters.push_back(35862);
        internal_counters.push_back(36374);
        internal_counters.push_back(36886);

        c.DefineDerivedCounter("PSVALUInstCount", "PixelShader", "Average number of vector ALU instructions executed in the PS. Affected by flow control.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "eb74389e-435c-4137-ecf1-39eb5bc1cbfe");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35406);
        internal_counters.push_back(35918);
        internal_counters.push_back(36430);
        internal_counters.push_back(36942);
        internal_counters.push_back(35350);
        internal_counters.push_back(35862);
        internal_counters.push_back(36374);
        internal_counters.push_back(36886);

        c.DefineDerivedCounter("PSSALUInstCount", "PixelShader", "Average number of scalar ALU instructions executed in the PS. Affected by flow control.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "e6a06580-8a82-96d6-976c-acc121fc5516");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35463);
        internal_counters.push_back(35975);
        internal_counters.push_back(36487);
        internal_counters.push_back(36999);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSVALUBusy", "PixelShader", "The percentage of GPUTime vector ALU instructions are being processed by the PS.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,sum4,NUM_SIMDS,/,4,/,(100),*", "6ce6fef7-8e33-10b4-f351-af755e177e85");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35463);
        internal_counters.push_back(35975);
        internal_counters.push_back(36487);
        internal_counters.push_back(36999);

        c.DefineDerivedCounter("PSVALUBusyCycles", "PixelShader", "Number of GPU cycles where vector ALU instructions are being processed by the PS.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,sum4,NUM_SIMDS,/", "1e276f86-cd2a-72e7-fc9d-004f666f2981");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35406);
        internal_counters.push_back(35918);
        internal_counters.push_back(36430);
        internal_counters.push_back(36942);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("PSSALUBusy", "PixelShader", "The percentage of GPUTime scalar ALU instructions are being processed by the PS.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "2ff9f34f-e94b-af4d-18c2-5fbbf6d1727a");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(35406);
        internal_counters.push_back(35918);
        internal_counters.push_back(36430);
        internal_counters.push_back(36942);

        c.DefineDerivedCounter("PSSALUBusyCycles", "PixelShader", "Number of GPU cycles where scalar ALU instructions are being processed by the PS.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,sum4,NUM_CUS,/", "29808906-f128-b078-fc79-820a4b3b3b8d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSThreadGroups", "ComputeShader", "Total number of thread groups.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,sum8", "8ce3fc80-56b2-97f9-8e70-2e8c747cea68");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(25875);
        internal_counters.push_back(26207);
        internal_counters.push_back(26539);
        internal_counters.push_back(26871);
        internal_counters.push_back(25881);
        internal_counters.push_back(26213);
        internal_counters.push_back(26545);
        internal_counters.push_back(26877);

        c.DefineDerivedCounter("CSWavefronts", "ComputeShader", "The total number of wavefronts used for the CS.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,sum8", "42379c6e-369b-c237-8b25-cdb9cdc65c4d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);
        internal_counters.push_back(41498);
        internal_counters.push_back(42010);
        internal_counters.push_back(42522);
        internal_counters.push_back(43034);

        c.DefineDerivedCounter("CSThreads", "ComputeShader", "The number of CS threads processed by the hardware.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,4,5,6,7,sum8,8,9,10,11,sum4,ifnotzero", "7a648013-6eac-2665-ac36-13c6f4ac9c26");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(41554);
        internal_counters.push_back(42066);
        internal_counters.push_back(42578);
        internal_counters.push_back(43090);
        internal_counters.push_back(41494);
        internal_counters.push_back(42006);
        internal_counters.push_back(42518);
        internal_counters.push_back(43030);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSVALUInsts", "ComputeShader", "The average number of vector ALU instructions executed per work-item (affected by flow control).", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "376cb1cc-5a40-9d1d-404c-f1736c0c5084");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(41572);
        internal_counters.push_back(42084);
        internal_counters.push_back(42596);
        internal_counters.push_back(43108);
        internal_counters.push_back(41607);
        internal_counters.push_back(42119);
        internal_counters.push_back(42631);
        internal_counters.push_back(43143);
        internal_counters.push_back(41495);
        internal_counters.push_back(42007);
        internal_counters.push_back(42519);
        internal_counters.push_back(43031);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSVALUUtilization", "ComputeShader", "The percentage of active vector ALU threads in a wave. A lower number can mean either more thread divergence in a wave or that the work-group size is not a multiple of the wave size. Value range: 0% (bad), 100% (ideal - no thread divergence).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,(64),(32),8,9,10,11,sum4,ifnotzero,*,/,(100),*,4,5,6,7,sum4,ifnotzero,(100),min,12,13,14,15,16,17,18,19,sum8,ifnotzero", "ae943d2a-76e1-bb68-e1e2-0e06c9031611");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(41550);
        internal_counters.push_back(42062);
        internal_counters.push_back(42574);
        internal_counters.push_back(43086);
        internal_counters.push_back(41494);
        internal_counters.push_back(42006);
        internal_counters.push_back(42518);
        internal_counters.push_back(43030);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSSALUInsts", "ComputeShader", "The average number of scalar ALU instructions executed per work-item (affected by flow control).", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "eb211144-8136-ff86-e8bf-4d0493a904cb");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(41559);
        internal_counters.push_back(42071);
        internal_counters.push_back(42583);
        internal_counters.push_back(43095);
        internal_counters.push_back(41494);
        internal_counters.push_back(42006);
        internal_counters.push_back(42518);
        internal_counters.push_back(43030);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSVFetchInsts", "ComputeShader", "The average number of vector fetch instructions from the video memory executed per work-item (affected by flow control).", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "3e2829c0-6215-783b-c271-6d57ff2c520e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(41551);
        internal_counters.push_back(42063);
        internal_counters.push_back(42575);
        internal_counters.push_back(43087);
        internal_counters.push_back(41494);
        internal_counters.push_back(42006);
        internal_counters.push_back(42518);
        internal_counters.push_back(43030);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSSFetchInsts", "ComputeShader", "The average number of scalar fetch instructions from the video memory executed per work-item (affected by flow control).", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "da09171c-6a0a-584f-fddc-dc5062d63a3e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(41560);
        internal_counters.push_back(42072);
        internal_counters.push_back(42584);
        internal_counters.push_back(43096);
        internal_counters.push_back(41494);
        internal_counters.push_back(42006);
        internal_counters.push_back(42518);
        internal_counters.push_back(43030);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSVWriteInsts", "ComputeShader", "The average number of vector write instructions to the video memory executed per work-item (affected by flow control).", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "43438c22-e910-b377-b767-b32902e0df0d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(41607);
        internal_counters.push_back(42119);
        internal_counters.push_back(42631);
        internal_counters.push_back(43143);
        internal_counters.push_back(24);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSVALUBusy", "ComputeShader", "The percentage of GPUTime vector ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "f1e64815-f6a8-c277-d4f9-d054b443e205");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(41607);
        internal_counters.push_back(42119);
        internal_counters.push_back(42631);
        internal_counters.push_back(43143);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSVALUBusyCycles", "ComputeShader", "Number of GPU cycles where vector ALU instructions are processed.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "2d0d5852-2658-eb73-68d2-f23f7118c9c3");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(41550);
        internal_counters.push_back(42062);
        internal_counters.push_back(42574);
        internal_counters.push_back(43086);
        internal_counters.push_back(24);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSSALUBusy", "ComputeShader", "The percentage of GPUTime scalar ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "3fc35f4e-9882-94e3-6f5f-4e81cd97082a");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(41550);
        internal_counters.push_back(42062);
        internal_counters.push_back(42574);
        internal_counters.push_back(43086);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSSALUBusyCycles", "ComputeShader", "Number of GPU cycles where scalar ALU instructions are processed.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,sum4,NUM_CUS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "de58f8fc-8ed4-a799-648d-62ded7b1c4c4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(43553);
        internal_counters.push_back(43789);
        internal_counters.push_back(44025);
        internal_counters.push_back(44261);
        internal_counters.push_back(44497);
        internal_counters.push_back(44733);
        internal_counters.push_back(44969);
        internal_counters.push_back(45205);
        internal_counters.push_back(45441);
        internal_counters.push_back(45677);
        internal_counters.push_back(45913);
        internal_counters.push_back(46149);
        internal_counters.push_back(46385);
        internal_counters.push_back(46621);
        internal_counters.push_back(46857);
        internal_counters.push_back(47093);
        internal_counters.push_back(47329);
        internal_counters.push_back(47565);
        internal_counters.push_back(47801);
        internal_counters.push_back(48037);
        internal_counters.push_back(48273);
        internal_counters.push_back(48509);
        internal_counters.push_back(48745);
        internal_counters.push_back(48981);
        internal_counters.push_back(49217);
        internal_counters.push_back(49453);
        internal_counters.push_back(49689);
        internal_counters.push_back(49925);
        internal_counters.push_back(50161);
        internal_counters.push_back(50397);
        internal_counters.push_back(50633);
        internal_counters.push_back(50869);
        internal_counters.push_back(51105);
        internal_counters.push_back(51341);
        internal_counters.push_back(51577);
        internal_counters.push_back(51813);
        internal_counters.push_back(52049);
        internal_counters.push_back(52285);
        internal_counters.push_back(52521);
        internal_counters.push_back(52757);
        internal_counters.push_back(52993);
        internal_counters.push_back(53229);
        internal_counters.push_back(53465);
        internal_counters.push_back(53701);
        internal_counters.push_back(53937);
        internal_counters.push_back(54173);
        internal_counters.push_back(54409);
        internal_counters.push_back(54645);
        internal_counters.push_back(54881);
        internal_counters.push_back(55117);
        internal_counters.push_back(55353);
        internal_counters.push_back(55589);
        internal_counters.push_back(55825);
        internal_counters.push_back(56061);
        internal_counters.push_back(56297);
        internal_counters.push_back(56533);
        internal_counters.push_back(56769);
        internal_counters.push_back(57005);
        internal_counters.push_back(57241);
        internal_counters.push_back(57477);
        internal_counters.push_back(57713);
        internal_counters.push_back(57949);
        internal_counters.push_back(58185);
        internal_counters.push_back(58421);
        internal_counters.push_back(58657);
        internal_counters.push_back(58893);
        internal_counters.push_back(59129);
        internal_counters.push_back(59365);
        internal_counters.push_back(59601);
        internal_counters.push_back(59837);
        internal_counters.push_back(60073);
        internal_counters.push_back(60309);
        internal_counters.push_back(60545);
        internal_counters.push_back(60781);
        internal_counters.push_back(61017);
        internal_counters.push_back(61253);
        internal_counters.push_back(61489);
        internal_counters.push_back(61725);
        internal_counters.push_back(61961);
        internal_counters.push_back(62197);
        internal_counters.push_back(24);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSMemUnitBusy", "ComputeShader", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*,81,82,83,84,85,86,87,88,sum8,ifnotzero", "42ab96e1-0a24-96c8-c4ff-098fa267d78e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(43553);
        internal_counters.push_back(43789);
        internal_counters.push_back(44025);
        internal_counters.push_back(44261);
        internal_counters.push_back(44497);
        internal_counters.push_back(44733);
        internal_counters.push_back(44969);
        internal_counters.push_back(45205);
        internal_counters.push_back(45441);
        internal_counters.push_back(45677);
        internal_counters.push_back(45913);
        internal_counters.push_back(46149);
        internal_counters.push_back(46385);
        internal_counters.push_back(46621);
        internal_counters.push_back(46857);
        internal_counters.push_back(47093);
        internal_counters.push_back(47329);
        internal_counters.push_back(47565);
        internal_counters.push_back(47801);
        internal_counters.push_back(48037);
        internal_counters.push_back(48273);
        internal_counters.push_back(48509);
        internal_counters.push_back(48745);
        internal_counters.push_back(48981);
        internal_counters.push_back(49217);
        internal_counters.push_back(49453);
        internal_counters.push_back(49689);
        internal_counters.push_back(49925);
        internal_counters.push_back(50161);
        internal_counters.push_back(50397);
        internal_counters.push_back(50633);
        internal_counters.push_back(50869);
        internal_counters.push_back(51105);
        internal_counters.push_back(51341);
        internal_counters.push_back(51577);
        internal_counters.push_back(51813);
        internal_counters.push_back(52049);
        internal_counters.push_back(52285);
        internal_counters.push_back(52521);
        internal_counters.push_back(52757);
        internal_counters.push_back(52993);
        internal_counters.push_back(53229);
        internal_counters.push_back(53465);
        internal_counters.push_back(53701);
        internal_counters.push_back(53937);
        internal_counters.push_back(54173);
        internal_counters.push_back(54409);
        internal_counters.push_back(54645);
        internal_counters.push_back(54881);
        internal_counters.push_back(55117);
        internal_counters.push_back(55353);
        internal_counters.push_back(55589);
        internal_counters.push_back(55825);
        internal_counters.push_back(56061);
        internal_counters.push_back(56297);
        internal_counters.push_back(56533);
        internal_counters.push_back(56769);
        internal_counters.push_back(57005);
        internal_counters.push_back(57241);
        internal_counters.push_back(57477);
        internal_counters.push_back(57713);
        internal_counters.push_back(57949);
        internal_counters.push_back(58185);
        internal_counters.push_back(58421);
        internal_counters.push_back(58657);
        internal_counters.push_back(58893);
        internal_counters.push_back(59129);
        internal_counters.push_back(59365);
        internal_counters.push_back(59601);
        internal_counters.push_back(59837);
        internal_counters.push_back(60073);
        internal_counters.push_back(60309);
        internal_counters.push_back(60545);
        internal_counters.push_back(60781);
        internal_counters.push_back(61017);
        internal_counters.push_back(61253);
        internal_counters.push_back(61489);
        internal_counters.push_back(61725);
        internal_counters.push_back(61961);
        internal_counters.push_back(62197);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSMemUnitBusyCycles", "ComputeShader", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,81,82,83,84,85,86,87,sum8,ifnotzero", "39d5687f-c727-7c0c-af82-bb711d3897ed");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(77814);
        internal_counters.push_back(77875);
        internal_counters.push_back(77936);
        internal_counters.push_back(77997);
        internal_counters.push_back(78058);
        internal_counters.push_back(78119);
        internal_counters.push_back(78180);
        internal_counters.push_back(78241);
        internal_counters.push_back(78302);
        internal_counters.push_back(78363);
        internal_counters.push_back(78424);
        internal_counters.push_back(78485);
        internal_counters.push_back(78546);
        internal_counters.push_back(78607);
        internal_counters.push_back(78668);
        internal_counters.push_back(78729);
        internal_counters.push_back(78790);
        internal_counters.push_back(78851);
        internal_counters.push_back(78912);
        internal_counters.push_back(78973);
        internal_counters.push_back(79034);
        internal_counters.push_back(79095);
        internal_counters.push_back(79156);
        internal_counters.push_back(79217);
        internal_counters.push_back(79278);
        internal_counters.push_back(79339);
        internal_counters.push_back(79400);
        internal_counters.push_back(79461);
        internal_counters.push_back(79522);
        internal_counters.push_back(79583);
        internal_counters.push_back(79644);
        internal_counters.push_back(79705);
        internal_counters.push_back(79766);
        internal_counters.push_back(79827);
        internal_counters.push_back(79888);
        internal_counters.push_back(79949);
        internal_counters.push_back(80010);
        internal_counters.push_back(80071);
        internal_counters.push_back(80132);
        internal_counters.push_back(80193);
        internal_counters.push_back(80254);
        internal_counters.push_back(80315);
        internal_counters.push_back(80376);
        internal_counters.push_back(80437);
        internal_counters.push_back(80498);
        internal_counters.push_back(80559);
        internal_counters.push_back(80620);
        internal_counters.push_back(80681);
        internal_counters.push_back(80742);
        internal_counters.push_back(80803);
        internal_counters.push_back(80864);
        internal_counters.push_back(80925);
        internal_counters.push_back(80986);
        internal_counters.push_back(81047);
        internal_counters.push_back(81108);
        internal_counters.push_back(81169);
        internal_counters.push_back(81230);
        internal_counters.push_back(81291);
        internal_counters.push_back(81352);
        internal_counters.push_back(81413);
        internal_counters.push_back(81474);
        internal_counters.push_back(81535);
        internal_counters.push_back(81596);
        internal_counters.push_back(81657);
        internal_counters.push_back(81718);
        internal_counters.push_back(81779);
        internal_counters.push_back(81840);
        internal_counters.push_back(81901);
        internal_counters.push_back(81962);
        internal_counters.push_back(82023);
        internal_counters.push_back(82084);
        internal_counters.push_back(82145);
        internal_counters.push_back(82206);
        internal_counters.push_back(82267);
        internal_counters.push_back(82328);
        internal_counters.push_back(82389);
        internal_counters.push_back(82450);
        internal_counters.push_back(82511);
        internal_counters.push_back(82572);
        internal_counters.push_back(82633);
        internal_counters.push_back(24);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSMemUnitStalled", "ComputeShader", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*,81,82,83,84,85,86,87,88,sum8,ifnotzero", "f18e8679-1511-d533-d9ee-4365197f7d0c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(77814);
        internal_counters.push_back(77875);
        internal_counters.push_back(77936);
        internal_counters.push_back(77997);
        internal_counters.push_back(78058);
        internal_counters.push_back(78119);
        internal_counters.push_back(78180);
        internal_counters.push_back(78241);
        internal_counters.push_back(78302);
        internal_counters.push_back(78363);
        internal_counters.push_back(78424);
        internal_counters.push_back(78485);
        internal_counters.push_back(78546);
        internal_counters.push_back(78607);
        internal_counters.push_back(78668);
        internal_counters.push_back(78729);
        internal_counters.push_back(78790);
        internal_counters.push_back(78851);
        internal_counters.push_back(78912);
        internal_counters.push_back(78973);
        internal_counters.push_back(79034);
        internal_counters.push_back(79095);
        internal_counters.push_back(79156);
        internal_counters.push_back(79217);
        internal_counters.push_back(79278);
        internal_counters.push_back(79339);
        internal_counters.push_back(79400);
        internal_counters.push_back(79461);
        internal_counters.push_back(79522);
        internal_counters.push_back(79583);
        internal_counters.push_back(79644);
        internal_counters.push_back(79705);
        internal_counters.push_back(79766);
        internal_counters.push_back(79827);
        internal_counters.push_back(79888);
        internal_counters.push_back(79949);
        internal_counters.push_back(80010);
        internal_counters.push_back(80071);
        internal_counters.push_back(80132);
        internal_counters.push_back(80193);
        internal_counters.push_back(80254);
        internal_counters.push_back(80315);
        internal_counters.push_back(80376);
        internal_counters.push_back(80437);
        internal_counters.push_back(80498);
        internal_counters.push_back(80559);
        internal_counters.push_back(80620);
        internal_counters.push_back(80681);
        internal_counters.push_back(80742);
        internal_counters.push_back(80803);
        internal_counters.push_back(80864);
        internal_counters.push_back(80925);
        internal_counters.push_back(80986);
        internal_counters.push_back(81047);
        internal_counters.push_back(81108);
        internal_counters.push_back(81169);
        internal_counters.push_back(81230);
        internal_counters.push_back(81291);
        internal_counters.push_back(81352);
        internal_counters.push_back(81413);
        internal_counters.push_back(81474);
        internal_counters.push_back(81535);
        internal_counters.push_back(81596);
        internal_counters.push_back(81657);
        internal_counters.push_back(81718);
        internal_counters.push_back(81779);
        internal_counters.push_back(81840);
        internal_counters.push_back(81901);
        internal_counters.push_back(81962);
        internal_counters.push_back(82023);
        internal_counters.push_back(82084);
        internal_counters.push_back(82145);
        internal_counters.push_back(82206);
        internal_counters.push_back(82267);
        internal_counters.push_back(82328);
        internal_counters.push_back(82389);
        internal_counters.push_back(82450);
        internal_counters.push_back(82511);
        internal_counters.push_back(82572);
        internal_counters.push_back(82633);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSMemUnitStalledCycles", "ComputeShader", "Number of GPU cycles the memory unit is stalled. Try reducing the number or size of fetches and writes if possible.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,81,82,83,84,85,86,87,sum8,ifnotzero", "51991c84-ed2b-bf31-c4ab-8f8e9eb8f29f");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(97733);
        internal_counters.push_back(97987);
        internal_counters.push_back(98241);
        internal_counters.push_back(98495);
        internal_counters.push_back(98749);
        internal_counters.push_back(99003);
        internal_counters.push_back(99257);
        internal_counters.push_back(99511);
        internal_counters.push_back(99765);
        internal_counters.push_back(100019);
        internal_counters.push_back(100273);
        internal_counters.push_back(100527);
        internal_counters.push_back(100781);
        internal_counters.push_back(101035);
        internal_counters.push_back(101289);
        internal_counters.push_back(101543);
        internal_counters.push_back(24);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSWriteUnitStalled", "ComputeShader", "The percentage of GPUTime the write unit is stalled.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*,17,18,19,20,21,22,23,24,sum8,ifnotzero", "55118f7a-8f92-726f-78c6-407f689a2eb4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(97733);
        internal_counters.push_back(97987);
        internal_counters.push_back(98241);
        internal_counters.push_back(98495);
        internal_counters.push_back(98749);
        internal_counters.push_back(99003);
        internal_counters.push_back(99257);
        internal_counters.push_back(99511);
        internal_counters.push_back(99765);
        internal_counters.push_back(100019);
        internal_counters.push_back(100273);
        internal_counters.push_back(100527);
        internal_counters.push_back(100781);
        internal_counters.push_back(101035);
        internal_counters.push_back(101289);
        internal_counters.push_back(101543);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSWriteUnitStalledCycles", "ComputeShader", "Number of GPU cycles the write unit is stalled.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,17,18,19,20,21,22,23,sum8,ifnotzero", "be164c60-5e48-acac-9622-29616d09aa9a");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(41545);
        internal_counters.push_back(42057);
        internal_counters.push_back(42569);
        internal_counters.push_back(43081);
        internal_counters.push_back(41494);
        internal_counters.push_back(42006);
        internal_counters.push_back(42518);
        internal_counters.push_back(43030);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSGDSInsts", "ComputeShader", "The average number of GDS read or GDS write instructions executed per work item (affected by flow control).", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "2a867f3e-4a37-ad16-55d1-f03d74707819");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(41549);
        internal_counters.push_back(42061);
        internal_counters.push_back(42573);
        internal_counters.push_back(43085);
        internal_counters.push_back(41494);
        internal_counters.push_back(42006);
        internal_counters.push_back(42518);
        internal_counters.push_back(43030);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSLDSInsts", "ComputeShader", "The average number of LDS read/write instructions executed per work-item (affected by flow control).", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "61b0b351-7e06-ef8e-a8e0-7a9e3200a836");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(41521);
        internal_counters.push_back(42033);
        internal_counters.push_back(42545);
        internal_counters.push_back(43057);
        internal_counters.push_back(41494);
        internal_counters.push_back(42006);
        internal_counters.push_back(42518);
        internal_counters.push_back(43030);
        internal_counters.push_back(24);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSALUStalledByLDS", "ComputeShader", "The percentage of GPUTime ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible. Value range: 0% (optimal) to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,/,NUM_SHADER_ENGINES,/,(100),*,4,5,6,7,sum4,ifnotzero,9,10,11,12,13,14,15,16,sum8,ifnotzero", "6dc4f1c2-bad0-c9ff-156e-883b319a752a");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(41521);
        internal_counters.push_back(42033);
        internal_counters.push_back(42545);
        internal_counters.push_back(43057);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSALUStalledByLDSCycles", "ComputeShader", "Number of GPU cycles the ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,sum4,NUM_SHADER_ENGINES,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "8f3d5f25-2159-0374-fafe-e26a7799b6c8");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(41775);
        internal_counters.push_back(42287);
        internal_counters.push_back(42799);
        internal_counters.push_back(43311);
        internal_counters.push_back(24);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSLDSBankConflict", "ComputeShader", "The percentage of GPUTime LDS is stalled by bank conflicts. Value range: 0% (optimal) to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),0,1,2,3,sum4,4,/,NUM_SIMDS,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "1065ee10-2e41-ea41-1eb3-b61b491752f4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(41775);
        internal_counters.push_back(42287);
        internal_counters.push_back(42799);
        internal_counters.push_back(43311);
        internal_counters.push_back(25872);
        internal_counters.push_back(26204);
        internal_counters.push_back(26536);
        internal_counters.push_back(26868);
        internal_counters.push_back(25878);
        internal_counters.push_back(26210);
        internal_counters.push_back(26542);
        internal_counters.push_back(26874);

        c.DefineDerivedCounter("CSLDSBankConflictCycles", "ComputeShader", "Number of GPU cycles the LDS is stalled by bank conflicts. Value range: 0 (optimal) to GPUBusyCycles (bad).", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "1fd1adf3-c51e-94fd-083e-c482a0a0809e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(43553);
        internal_counters.push_back(43789);
        internal_counters.push_back(44025);
        internal_counters.push_back(44261);
        internal_counters.push_back(44497);
        internal_counters.push_back(44733);
        internal_counters.push_back(44969);
        internal_counters.push_back(45205);
        internal_counters.push_back(45441);
        internal_counters.push_back(45677);
        internal_counters.push_back(45913);
        internal_counters.push_back(46149);
        internal_counters.push_back(46385);
        internal_counters.push_back(46621);
        internal_counters.push_back(46857);
        internal_counters.push_back(47093);
        internal_counters.push_back(47329);
        internal_counters.push_back(47565);
        internal_counters.push_back(47801);
        internal_counters.push_back(48037);
        internal_counters.push_back(48273);
        internal_counters.push_back(48509);
        internal_counters.push_back(48745);
        internal_counters.push_back(48981);
        internal_counters.push_back(49217);
        internal_counters.push_back(49453);
        internal_counters.push_back(49689);
        internal_counters.push_back(49925);
        internal_counters.push_back(50161);
        internal_counters.push_back(50397);
        internal_counters.push_back(50633);
        internal_counters.push_back(50869);
        internal_counters.push_back(51105);
        internal_counters.push_back(51341);
        internal_counters.push_back(51577);
        internal_counters.push_back(51813);
        internal_counters.push_back(52049);
        internal_counters.push_back(52285);
        internal_counters.push_back(52521);
        internal_counters.push_back(52757);
        internal_counters.push_back(52993);
        internal_counters.push_back(53229);
        internal_counters.push_back(53465);
        internal_counters.push_back(53701);
        internal_counters.push_back(53937);
        internal_counters.push_back(54173);
        internal_counters.push_back(54409);
        internal_counters.push_back(54645);
        internal_counters.push_back(54881);
        internal_counters.push_back(55117);
        internal_counters.push_back(55353);
        internal_counters.push_back(55589);
        internal_counters.push_back(55825);
        internal_counters.push_back(56061);
        internal_counters.push_back(56297);
        internal_counters.push_back(56533);
        internal_counters.push_back(56769);
        internal_counters.push_back(57005);
        internal_counters.push_back(57241);
        internal_counters.push_back(57477);
        internal_counters.push_back(57713);
        internal_counters.push_back(57949);
        internal_counters.push_back(58185);
        internal_counters.push_back(58421);
        internal_counters.push_back(58657);
        internal_counters.push_back(58893);
        internal_counters.push_back(59129);
        internal_counters.push_back(59365);
        internal_counters.push_back(59601);
        internal_counters.push_back(59837);
        internal_counters.push_back(60073);
        internal_counters.push_back(60309);
        internal_counters.push_back(60545);
        internal_counters.push_back(60781);
        internal_counters.push_back(61017);
        internal_counters.push_back(61253);
        internal_counters.push_back(61489);
        internal_counters.push_back(61725);
        internal_counters.push_back(61961);
        internal_counters.push_back(62197);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("TexUnitBusy", "Timing", "The percentage of GPUTime the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*", "36afb8d9-42fc-aafe-66c5-449542153b2c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(43553);
        internal_counters.push_back(43789);
        internal_counters.push_back(44025);
        internal_counters.push_back(44261);
        internal_counters.push_back(44497);
        internal_counters.push_back(44733);
        internal_counters.push_back(44969);
        internal_counters.push_back(45205);
        internal_counters.push_back(45441);
        internal_counters.push_back(45677);
        internal_counters.push_back(45913);
        internal_counters.push_back(46149);
        internal_counters.push_back(46385);
        internal_counters.push_back(46621);
        internal_counters.push_back(46857);
        internal_counters.push_back(47093);
        internal_counters.push_back(47329);
        internal_counters.push_back(47565);
        internal_counters.push_back(47801);
        internal_counters.push_back(48037);
        internal_counters.push_back(48273);
        internal_counters.push_back(48509);
        internal_counters.push_back(48745);
        internal_counters.push_back(48981);
        internal_counters.push_back(49217);
        internal_counters.push_back(49453);
        internal_counters.push_back(49689);
        internal_counters.push_back(49925);
        internal_counters.push_back(50161);
        internal_counters.push_back(50397);
        internal_counters.push_back(50633);
        internal_counters.push_back(50869);
        internal_counters.push_back(51105);
        internal_counters.push_back(51341);
        internal_counters.push_back(51577);
        internal_counters.push_back(51813);
        internal_counters.push_back(52049);
        internal_counters.push_back(52285);
        internal_counters.push_back(52521);
        internal_counters.push_back(52757);
        internal_counters.push_back(52993);
        internal_counters.push_back(53229);
        internal_counters.push_back(53465);
        internal_counters.push_back(53701);
        internal_counters.push_back(53937);
        internal_counters.push_back(54173);
        internal_counters.push_back(54409);
        internal_counters.push_back(54645);
        internal_counters.push_back(54881);
        internal_counters.push_back(55117);
        internal_counters.push_back(55353);
        internal_counters.push_back(55589);
        internal_counters.push_back(55825);
        internal_counters.push_back(56061);
        internal_counters.push_back(56297);
        internal_counters.push_back(56533);
        internal_counters.push_back(56769);
        internal_counters.push_back(57005);
        internal_counters.push_back(57241);
        internal_counters.push_back(57477);
        internal_counters.push_back(57713);
        internal_counters.push_back(57949);
        internal_counters.push_back(58185);
        internal_counters.push_back(58421);
        internal_counters.push_back(58657);
        internal_counters.push_back(58893);
        internal_counters.push_back(59129);
        internal_counters.push_back(59365);
        internal_counters.push_back(59601);
        internal_counters.push_back(59837);
        internal_counters.push_back(60073);
        internal_counters.push_back(60309);
        internal_counters.push_back(60545);
        internal_counters.push_back(60781);
        internal_counters.push_back(61017);
        internal_counters.push_back(61253);
        internal_counters.push_back(61489);
        internal_counters.push_back(61725);
        internal_counters.push_back(61961);
        internal_counters.push_back(62197);

        c.DefineDerivedCounter("TexUnitBusyCycles", "Timing", "Number of GPU cycles the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80", "c68761f2-248c-4f39-6528-c308b1c0807c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(43627);
        internal_counters.push_back(43863);
        internal_counters.push_back(44099);
        internal_counters.push_back(44335);
        internal_counters.push_back(44571);
        internal_counters.push_back(44807);
        internal_counters.push_back(45043);
        internal_counters.push_back(45279);
        internal_counters.push_back(45515);
        internal_counters.push_back(45751);
        internal_counters.push_back(45987);
        internal_counters.push_back(46223);
        internal_counters.push_back(46459);
        internal_counters.push_back(46695);
        internal_counters.push_back(46931);
        internal_counters.push_back(47167);
        internal_counters.push_back(47403);
        internal_counters.push_back(47639);
        internal_counters.push_back(47875);
        internal_counters.push_back(48111);
        internal_counters.push_back(48347);
        internal_counters.push_back(48583);
        internal_counters.push_back(48819);
        internal_counters.push_back(49055);
        internal_counters.push_back(49291);
        internal_counters.push_back(49527);
        internal_counters.push_back(49763);
        internal_counters.push_back(49999);
        internal_counters.push_back(50235);
        internal_counters.push_back(50471);
        internal_counters.push_back(50707);
        internal_counters.push_back(50943);
        internal_counters.push_back(51179);
        internal_counters.push_back(51415);
        internal_counters.push_back(51651);
        internal_counters.push_back(51887);
        internal_counters.push_back(52123);
        internal_counters.push_back(52359);
        internal_counters.push_back(52595);
        internal_counters.push_back(52831);
        internal_counters.push_back(53067);
        internal_counters.push_back(53303);
        internal_counters.push_back(53539);
        internal_counters.push_back(53775);
        internal_counters.push_back(54011);
        internal_counters.push_back(54247);
        internal_counters.push_back(54483);
        internal_counters.push_back(54719);
        internal_counters.push_back(54955);
        internal_counters.push_back(55191);
        internal_counters.push_back(55427);
        internal_counters.push_back(55663);
        internal_counters.push_back(55899);
        internal_counters.push_back(56135);
        internal_counters.push_back(56371);
        internal_counters.push_back(56607);
        internal_counters.push_back(56843);
        internal_counters.push_back(57079);
        internal_counters.push_back(57315);
        internal_counters.push_back(57551);
        internal_counters.push_back(57787);
        internal_counters.push_back(58023);
        internal_counters.push_back(58259);
        internal_counters.push_back(58495);
        internal_counters.push_back(58731);
        internal_counters.push_back(58967);
        internal_counters.push_back(59203);
        internal_counters.push_back(59439);
        internal_counters.push_back(59675);
        internal_counters.push_back(59911);
        internal_counters.push_back(60147);
        internal_counters.push_back(60383);
        internal_counters.push_back(60619);
        internal_counters.push_back(60855);
        internal_counters.push_back(61091);
        internal_counters.push_back(61327);
        internal_counters.push_back(61563);
        internal_counters.push_back(61799);
        internal_counters.push_back(62035);
        internal_counters.push_back(62271);
        internal_counters.push_back(43628);
        internal_counters.push_back(43864);
        internal_counters.push_back(44100);
        internal_counters.push_back(44336);
        internal_counters.push_back(44572);
        internal_counters.push_back(44808);
        internal_counters.push_back(45044);
        internal_counters.push_back(45280);
        internal_counters.push_back(45516);
        internal_counters.push_back(45752);
        internal_counters.push_back(45988);
        internal_counters.push_back(46224);
        internal_counters.push_back(46460);
        internal_counters.push_back(46696);
        internal_counters.push_back(46932);
        internal_counters.push_back(47168);
        internal_counters.push_back(47404);
        internal_counters.push_back(47640);
        internal_counters.push_back(47876);
        internal_counters.push_back(48112);
        internal_counters.push_back(48348);
        internal_counters.push_back(48584);
        internal_counters.push_back(48820);
        internal_counters.push_back(49056);
        internal_counters.push_back(49292);
        internal_counters.push_back(49528);
        internal_counters.push_back(49764);
        internal_counters.push_back(50000);
        internal_counters.push_back(50236);
        internal_counters.push_back(50472);
        internal_counters.push_back(50708);
        internal_counters.push_back(50944);
        internal_counters.push_back(51180);
        internal_counters.push_back(51416);
        internal_counters.push_back(51652);
        internal_counters.push_back(51888);
        internal_counters.push_back(52124);
        internal_counters.push_back(52360);
        internal_counters.push_back(52596);
        internal_counters.push_back(52832);
        internal_counters.push_back(53068);
        internal_counters.push_back(53304);
        internal_counters.push_back(53540);
        internal_counters.push_back(53776);
        internal_counters.push_back(54012);
        internal_counters.push_back(54248);
        internal_counters.push_back(54484);
        internal_counters.push_back(54720);
        internal_counters.push_back(54956);
        internal_counters.push_back(55192);
        internal_counters.push_back(55428);
        internal_counters.push_back(55664);
        internal_counters.push_back(55900);
        internal_counters.push_back(56136);
        internal_counters.push_back(56372);
        internal_counters.push_back(56608);
        internal_counters.push_back(56844);
        internal_counters.push_back(57080);
        internal_counters.push_back(57316);
        internal_counters.push_back(57552);
        internal_counters.push_back(57788);
        internal_counters.push_back(58024);
        internal_counters.push_back(58260);
        internal_counters.push_back(58496);
        internal_counters.push_back(58732);
        internal_counters.push_back(58968);
        internal_counters.push_back(59204);
        internal_counters.push_back(59440);
        internal_counters.push_back(59676);
        internal_counters.push_back(59912);
        internal_counters.push_back(60148);
        internal_counters.push_back(60384);
        internal_counters.push_back(60620);
        internal_counters.push_back(60856);
        internal_counters.push_back(61092);
        internal_counters.push_back(61328);
        internal_counters.push_back(61564);
        internal_counters.push_back(61800);
        internal_counters.push_back(62036);
        internal_counters.push_back(62272);
        internal_counters.push_back(43629);
        internal_counters.push_back(43865);
        internal_counters.push_back(44101);
        internal_counters.push_back(44337);
        internal_counters.push_back(44573);
        internal_counters.push_back(44809);
        internal_counters.push_back(45045);
        internal_counters.push_back(45281);
        internal_counters.push_back(45517);
        internal_counters.push_back(45753);
        internal_counters.push_back(45989);
        internal_counters.push_back(46225);
        internal_counters.push_back(46461);
        internal_counters.push_back(46697);
        internal_counters.push_back(46933);
        internal_counters.push_back(47169);
        internal_counters.push_back(47405);
        internal_counters.push_back(47641);
        internal_counters.push_back(47877);
        internal_counters.push_back(48113);
        internal_counters.push_back(48349);
        internal_counters.push_back(48585);
        internal_counters.push_back(48821);
        internal_counters.push_back(49057);
        internal_counters.push_back(49293);
        internal_counters.push_back(49529);
        internal_counters.push_back(49765);
        internal_counters.push_back(50001);
        internal_counters.push_back(50237);
        internal_counters.push_back(50473);
        internal_counters.push_back(50709);
        internal_counters.push_back(50945);
        internal_counters.push_back(51181);
        internal_counters.push_back(51417);
        internal_counters.push_back(51653);
        internal_counters.push_back(51889);
        internal_counters.push_back(52125);
        internal_counters.push_back(52361);
        internal_counters.push_back(52597);
        internal_counters.push_back(52833);
        internal_counters.push_back(53069);
        internal_counters.push_back(53305);
        internal_counters.push_back(53541);
        internal_counters.push_back(53777);
        internal_counters.push_back(54013);
        internal_counters.push_back(54249);
        internal_counters.push_back(54485);
        internal_counters.push_back(54721);
        internal_counters.push_back(54957);
        internal_counters.push_back(55193);
        internal_counters.push_back(55429);
        internal_counters.push_back(55665);
        internal_counters.push_back(55901);
        internal_counters.push_back(56137);
        internal_counters.push_back(56373);
        internal_counters.push_back(56609);
        internal_counters.push_back(56845);
        internal_counters.push_back(57081);
        internal_counters.push_back(57317);
        internal_counters.push_back(57553);
        internal_counters.push_back(57789);
        internal_counters.push_back(58025);
        internal_counters.push_back(58261);
        internal_counters.push_back(58497);
        internal_counters.push_back(58733);
        internal_counters.push_back(58969);
        internal_counters.push_back(59205);
        internal_counters.push_back(59441);
        internal_counters.push_back(59677);
        internal_counters.push_back(59913);
        internal_counters.push_back(60149);
        internal_counters.push_back(60385);
        internal_counters.push_back(60621);
        internal_counters.push_back(60857);
        internal_counters.push_back(61093);
        internal_counters.push_back(61329);
        internal_counters.push_back(61565);
        internal_counters.push_back(61801);
        internal_counters.push_back(62037);
        internal_counters.push_back(62273);
        internal_counters.push_back(43630);
        internal_counters.push_back(43866);
        internal_counters.push_back(44102);
        internal_counters.push_back(44338);
        internal_counters.push_back(44574);
        internal_counters.push_back(44810);
        internal_counters.push_back(45046);
        internal_counters.push_back(45282);
        internal_counters.push_back(45518);
        internal_counters.push_back(45754);
        internal_counters.push_back(45990);
        internal_counters.push_back(46226);
        internal_counters.push_back(46462);
        internal_counters.push_back(46698);
        internal_counters.push_back(46934);
        internal_counters.push_back(47170);
        internal_counters.push_back(47406);
        internal_counters.push_back(47642);
        internal_counters.push_back(47878);
        internal_counters.push_back(48114);
        internal_counters.push_back(48350);
        internal_counters.push_back(48586);
        internal_counters.push_back(48822);
        internal_counters.push_back(49058);
        internal_counters.push_back(49294);
        internal_counters.push_back(49530);
        internal_counters.push_back(49766);
        internal_counters.push_back(50002);
        internal_counters.push_back(50238);
        internal_counters.push_back(50474);
        internal_counters.push_back(50710);
        internal_counters.push_back(50946);
        internal_counters.push_back(51182);
        internal_counters.push_back(51418);
        internal_counters.push_back(51654);
        internal_counters.push_back(51890);
        internal_counters.push_back(52126);
        internal_counters.push_back(52362);
        internal_counters.push_back(52598);
        internal_counters.push_back(52834);
        internal_counters.push_back(53070);
        internal_counters.push_back(53306);
        internal_counters.push_back(53542);
        internal_counters.push_back(53778);
        internal_counters.push_back(54014);
        internal_counters.push_back(54250);
        internal_counters.push_back(54486);
        internal_counters.push_back(54722);
        internal_counters.push_back(54958);
        internal_counters.push_back(55194);
        internal_counters.push_back(55430);
        internal_counters.push_back(55666);
        internal_counters.push_back(55902);
        internal_counters.push_back(56138);
        internal_counters.push_back(56374);
        internal_counters.push_back(56610);
        internal_counters.push_back(56846);
        internal_counters.push_back(57082);
        internal_counters.push_back(57318);
        internal_counters.push_back(57554);
        internal_counters.push_back(57790);
        internal_counters.push_back(58026);
        internal_counters.push_back(58262);
        internal_counters.push_back(58498);
        internal_counters.push_back(58734);
        internal_counters.push_back(58970);
        internal_counters.push_back(59206);
        internal_counters.push_back(59442);
        internal_counters.push_back(59678);
        internal_counters.push_back(59914);
        internal_counters.push_back(60150);
        internal_counters.push_back(60386);
        internal_counters.push_back(60622);
        internal_counters.push_back(60858);
        internal_counters.push_back(61094);
        internal_counters.push_back(61330);
        internal_counters.push_back(61566);
        internal_counters.push_back(61802);
        internal_counters.push_back(62038);
        internal_counters.push_back(62274);
        internal_counters.push_back(43631);
        internal_counters.push_back(43867);
        internal_counters.push_back(44103);
        internal_counters.push_back(44339);
        internal_counters.push_back(44575);
        internal_counters.push_back(44811);
        internal_counters.push_back(45047);
        internal_counters.push_back(45283);
        internal_counters.push_back(45519);
        internal_counters.push_back(45755);
        internal_counters.push_back(45991);
        internal_counters.push_back(46227);
        internal_counters.push_back(46463);
        internal_counters.push_back(46699);
        internal_counters.push_back(46935);
        internal_counters.push_back(47171);
        internal_counters.push_back(47407);
        internal_counters.push_back(47643);
        internal_counters.push_back(47879);
        internal_counters.push_back(48115);
        internal_counters.push_back(48351);
        internal_counters.push_back(48587);
        internal_counters.push_back(48823);
        internal_counters.push_back(49059);
        internal_counters.push_back(49295);
        internal_counters.push_back(49531);
        internal_counters.push_back(49767);
        internal_counters.push_back(50003);
        internal_counters.push_back(50239);
        internal_counters.push_back(50475);
        internal_counters.push_back(50711);
        internal_counters.push_back(50947);
        internal_counters.push_back(51183);
        internal_counters.push_back(51419);
        internal_counters.push_back(51655);
        internal_counters.push_back(51891);
        internal_counters.push_back(52127);
        internal_counters.push_back(52363);
        internal_counters.push_back(52599);
        internal_counters.push_back(52835);
        internal_counters.push_back(53071);
        internal_counters.push_back(53307);
        internal_counters.push_back(53543);
        internal_counters.push_back(53779);
        internal_counters.push_back(54015);
        internal_counters.push_back(54251);
        internal_counters.push_back(54487);
        internal_counters.push_back(54723);
        internal_counters.push_back(54959);
        internal_counters.push_back(55195);
        internal_counters.push_back(55431);
        internal_counters.push_back(55667);
        internal_counters.push_back(55903);
        internal_counters.push_back(56139);
        internal_counters.push_back(56375);
        internal_counters.push_back(56611);
        internal_counters.push_back(56847);
        internal_counters.push_back(57083);
        internal_counters.push_back(57319);
        internal_counters.push_back(57555);
        internal_counters.push_back(57791);
        internal_counters.push_back(58027);
        internal_counters.push_back(58263);
        internal_counters.push_back(58499);
        internal_counters.push_back(58735);
        internal_counters.push_back(58971);
        internal_counters.push_back(59207);
        internal_counters.push_back(59443);
        internal_counters.push_back(59679);
        internal_counters.push_back(59915);
        internal_counters.push_back(60151);
        internal_counters.push_back(60387);
        internal_counters.push_back(60623);
        internal_counters.push_back(60859);
        internal_counters.push_back(61095);
        internal_counters.push_back(61331);
        internal_counters.push_back(61567);
        internal_counters.push_back(61803);
        internal_counters.push_back(62039);
        internal_counters.push_back(62275);
        internal_counters.push_back(43632);
        internal_counters.push_back(43868);
        internal_counters.push_back(44104);
        internal_counters.push_back(44340);
        internal_counters.push_back(44576);
        internal_counters.push_back(44812);
        internal_counters.push_back(45048);
        internal_counters.push_back(45284);
        internal_counters.push_back(45520);
        internal_counters.push_back(45756);
        internal_counters.push_back(45992);
        internal_counters.push_back(46228);
        internal_counters.push_back(46464);
        internal_counters.push_back(46700);
        internal_counters.push_back(46936);
        internal_counters.push_back(47172);
        internal_counters.push_back(47408);
        internal_counters.push_back(47644);
        internal_counters.push_back(47880);
        internal_counters.push_back(48116);
        internal_counters.push_back(48352);
        internal_counters.push_back(48588);
        internal_counters.push_back(48824);
        internal_counters.push_back(49060);
        internal_counters.push_back(49296);
        internal_counters.push_back(49532);
        internal_counters.push_back(49768);
        internal_counters.push_back(50004);
        internal_counters.push_back(50240);
        internal_counters.push_back(50476);
        internal_counters.push_back(50712);
        internal_counters.push_back(50948);
        internal_counters.push_back(51184);
        internal_counters.push_back(51420);
        internal_counters.push_back(51656);
        internal_counters.push_back(51892);
        internal_counters.push_back(52128);
        internal_counters.push_back(52364);
        internal_counters.push_back(52600);
        internal_counters.push_back(52836);
        internal_counters.push_back(53072);
        internal_counters.push_back(53308);
        internal_counters.push_back(53544);
        internal_counters.push_back(53780);
        internal_counters.push_back(54016);
        internal_counters.push_back(54252);
        internal_counters.push_back(54488);
        internal_counters.push_back(54724);
        internal_counters.push_back(54960);
        internal_counters.push_back(55196);
        internal_counters.push_back(55432);
        internal_counters.push_back(55668);
        internal_counters.push_back(55904);
        internal_counters.push_back(56140);
        internal_counters.push_back(56376);
        internal_counters.push_back(56612);
        internal_counters.push_back(56848);
        internal_counters.push_back(57084);
        internal_counters.push_back(57320);
        internal_counters.push_back(57556);
        internal_counters.push_back(57792);
        internal_counters.push_back(58028);
        internal_counters.push_back(58264);
        internal_counters.push_back(58500);
        internal_counters.push_back(58736);
        internal_counters.push_back(58972);
        internal_counters.push_back(59208);
        internal_counters.push_back(59444);
        internal_counters.push_back(59680);
        internal_counters.push_back(59916);
        internal_counters.push_back(60152);
        internal_counters.push_back(60388);
        internal_counters.push_back(60624);
        internal_counters.push_back(60860);
        internal_counters.push_back(61096);
        internal_counters.push_back(61332);
        internal_counters.push_back(61568);
        internal_counters.push_back(61804);
        internal_counters.push_back(62040);
        internal_counters.push_back(62276);
        internal_counters.push_back(43633);
        internal_counters.push_back(43869);
        internal_counters.push_back(44105);
        internal_counters.push_back(44341);
        internal_counters.push_back(44577);
        internal_counters.push_back(44813);
        internal_counters.push_back(45049);
        internal_counters.push_back(45285);
        internal_counters.push_back(45521);
        internal_counters.push_back(45757);
        internal_counters.push_back(45993);
        internal_counters.push_back(46229);
        internal_counters.push_back(46465);
        internal_counters.push_back(46701);
        internal_counters.push_back(46937);
        internal_counters.push_back(47173);
        internal_counters.push_back(47409);
        internal_counters.push_back(47645);
        internal_counters.push_back(47881);
        internal_counters.push_back(48117);
        internal_counters.push_back(48353);
        internal_counters.push_back(48589);
        internal_counters.push_back(48825);
        internal_counters.push_back(49061);
        internal_counters.push_back(49297);
        internal_counters.push_back(49533);
        internal_counters.push_back(49769);
        internal_counters.push_back(50005);
        internal_counters.push_back(50241);
        internal_counters.push_back(50477);
        internal_counters.push_back(50713);
        internal_counters.push_back(50949);
        internal_counters.push_back(51185);
        internal_counters.push_back(51421);
        internal_counters.push_back(51657);
        internal_counters.push_back(51893);
        internal_counters.push_back(52129);
        internal_counters.push_back(52365);
        internal_counters.push_back(52601);
        internal_counters.push_back(52837);
        internal_counters.push_back(53073);
        internal_counters.push_back(53309);
        internal_counters.push_back(53545);
        internal_counters.push_back(53781);
        internal_counters.push_back(54017);
        internal_counters.push_back(54253);
        internal_counters.push_back(54489);
        internal_counters.push_back(54725);
        internal_counters.push_back(54961);
        internal_counters.push_back(55197);
        internal_counters.push_back(55433);
        internal_counters.push_back(55669);
        internal_counters.push_back(55905);
        internal_counters.push_back(56141);
        internal_counters.push_back(56377);
        internal_counters.push_back(56613);
        internal_counters.push_back(56849);
        internal_counters.push_back(57085);
        internal_counters.push_back(57321);
        internal_counters.push_back(57557);
        internal_counters.push_back(57793);
        internal_counters.push_back(58029);
        internal_counters.push_back(58265);
        internal_counters.push_back(58501);
        internal_counters.push_back(58737);
        internal_counters.push_back(58973);
        internal_counters.push_back(59209);
        internal_counters.push_back(59445);
        internal_counters.push_back(59681);
        internal_counters.push_back(59917);
        internal_counters.push_back(60153);
        internal_counters.push_back(60389);
        internal_counters.push_back(60625);
        internal_counters.push_back(60861);
        internal_counters.push_back(61097);
        internal_counters.push_back(61333);
        internal_counters.push_back(61569);
        internal_counters.push_back(61805);
        internal_counters.push_back(62041);
        internal_counters.push_back(62277);
        internal_counters.push_back(43634);
        internal_counters.push_back(43870);
        internal_counters.push_back(44106);
        internal_counters.push_back(44342);
        internal_counters.push_back(44578);
        internal_counters.push_back(44814);
        internal_counters.push_back(45050);
        internal_counters.push_back(45286);
        internal_counters.push_back(45522);
        internal_counters.push_back(45758);
        internal_counters.push_back(45994);
        internal_counters.push_back(46230);
        internal_counters.push_back(46466);
        internal_counters.push_back(46702);
        internal_counters.push_back(46938);
        internal_counters.push_back(47174);
        internal_counters.push_back(47410);
        internal_counters.push_back(47646);
        internal_counters.push_back(47882);
        internal_counters.push_back(48118);
        internal_counters.push_back(48354);
        internal_counters.push_back(48590);
        internal_counters.push_back(48826);
        internal_counters.push_back(49062);
        internal_counters.push_back(49298);
        internal_counters.push_back(49534);
        internal_counters.push_back(49770);
        internal_counters.push_back(50006);
        internal_counters.push_back(50242);
        internal_counters.push_back(50478);
        internal_counters.push_back(50714);
        internal_counters.push_back(50950);
        internal_counters.push_back(51186);
        internal_counters.push_back(51422);
        internal_counters.push_back(51658);
        internal_counters.push_back(51894);
        internal_counters.push_back(52130);
        internal_counters.push_back(52366);
        internal_counters.push_back(52602);
        internal_counters.push_back(52838);
        internal_counters.push_back(53074);
        internal_counters.push_back(53310);
        internal_counters.push_back(53546);
        internal_counters.push_back(53782);
        internal_counters.push_back(54018);
        internal_counters.push_back(54254);
        internal_counters.push_back(54490);
        internal_counters.push_back(54726);
        internal_counters.push_back(54962);
        internal_counters.push_back(55198);
        internal_counters.push_back(55434);
        internal_counters.push_back(55670);
        internal_counters.push_back(55906);
        internal_counters.push_back(56142);
        internal_counters.push_back(56378);
        internal_counters.push_back(56614);
        internal_counters.push_back(56850);
        internal_counters.push_back(57086);
        internal_counters.push_back(57322);
        internal_counters.push_back(57558);
        internal_counters.push_back(57794);
        internal_counters.push_back(58030);
        internal_counters.push_back(58266);
        internal_counters.push_back(58502);
        internal_counters.push_back(58738);
        internal_counters.push_back(58974);
        internal_counters.push_back(59210);
        internal_counters.push_back(59446);
        internal_counters.push_back(59682);
        internal_counters.push_back(59918);
        internal_counters.push_back(60154);
        internal_counters.push_back(60390);
        internal_counters.push_back(60626);
        internal_counters.push_back(60862);
        internal_counters.push_back(61098);
        internal_counters.push_back(61334);
        internal_counters.push_back(61570);
        internal_counters.push_back(61806);
        internal_counters.push_back(62042);
        internal_counters.push_back(62278);
        internal_counters.push_back(43635);
        internal_counters.push_back(43871);
        internal_counters.push_back(44107);
        internal_counters.push_back(44343);
        internal_counters.push_back(44579);
        internal_counters.push_back(44815);
        internal_counters.push_back(45051);
        internal_counters.push_back(45287);
        internal_counters.push_back(45523);
        internal_counters.push_back(45759);
        internal_counters.push_back(45995);
        internal_counters.push_back(46231);
        internal_counters.push_back(46467);
        internal_counters.push_back(46703);
        internal_counters.push_back(46939);
        internal_counters.push_back(47175);
        internal_counters.push_back(47411);
        internal_counters.push_back(47647);
        internal_counters.push_back(47883);
        internal_counters.push_back(48119);
        internal_counters.push_back(48355);
        internal_counters.push_back(48591);
        internal_counters.push_back(48827);
        internal_counters.push_back(49063);
        internal_counters.push_back(49299);
        internal_counters.push_back(49535);
        internal_counters.push_back(49771);
        internal_counters.push_back(50007);
        internal_counters.push_back(50243);
        internal_counters.push_back(50479);
        internal_counters.push_back(50715);
        internal_counters.push_back(50951);
        internal_counters.push_back(51187);
        internal_counters.push_back(51423);
        internal_counters.push_back(51659);
        internal_counters.push_back(51895);
        internal_counters.push_back(52131);
        internal_counters.push_back(52367);
        internal_counters.push_back(52603);
        internal_counters.push_back(52839);
        internal_counters.push_back(53075);
        internal_counters.push_back(53311);
        internal_counters.push_back(53547);
        internal_counters.push_back(53783);
        internal_counters.push_back(54019);
        internal_counters.push_back(54255);
        internal_counters.push_back(54491);
        internal_counters.push_back(54727);
        internal_counters.push_back(54963);
        internal_counters.push_back(55199);
        internal_counters.push_back(55435);
        internal_counters.push_back(55671);
        internal_counters.push_back(55907);
        internal_counters.push_back(56143);
        internal_counters.push_back(56379);
        internal_counters.push_back(56615);
        internal_counters.push_back(56851);
        internal_counters.push_back(57087);
        internal_counters.push_back(57323);
        internal_counters.push_back(57559);
        internal_counters.push_back(57795);
        internal_counters.push_back(58031);
        internal_counters.push_back(58267);
        internal_counters.push_back(58503);
        internal_counters.push_back(58739);
        internal_counters.push_back(58975);
        internal_counters.push_back(59211);
        internal_counters.push_back(59447);
        internal_counters.push_back(59683);
        internal_counters.push_back(59919);
        internal_counters.push_back(60155);
        internal_counters.push_back(60391);
        internal_counters.push_back(60627);
        internal_counters.push_back(60863);
        internal_counters.push_back(61099);
        internal_counters.push_back(61335);
        internal_counters.push_back(61571);
        internal_counters.push_back(61807);
        internal_counters.push_back(62043);
        internal_counters.push_back(62279);

        c.DefineDerivedCounter("TexAveAnisotropy", "TextureUnit", "The average degree of anisotropy applied. A number between 1 and 16. The anisotropic filtering algorithm only applies samples where they are required (e.g. there will be no extra anisotropic samples if the view vector is perpendicular to the surface) so this can be much lower than the requested anisotropy.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,(2),80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,*,+,(4),160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,sum80,*,+,(6),240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum80,*,+,(8),320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,sum80,*,+,(10),400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,sum80,*,+,(12),480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,sum80,*,+,(14),560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,sum80,*,+,(16),640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,sum80,*,+,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,+,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,sum80,+,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum80,+,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,sum80,+,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,sum80,+,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,sum80,+,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,sum80,+,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,sum80,+,/", "7ca2a2b9-a4eb-ce23-d163-59147e672396");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7432);
        internal_counters.push_back(7823);
        internal_counters.push_back(8214);
        internal_counters.push_back(8605);
        internal_counters.push_back(8996);
        internal_counters.push_back(9387);
        internal_counters.push_back(9778);
        internal_counters.push_back(10169);
        internal_counters.push_back(10560);
        internal_counters.push_back(10951);
        internal_counters.push_back(11342);
        internal_counters.push_back(11733);
        internal_counters.push_back(12124);
        internal_counters.push_back(12515);
        internal_counters.push_back(12906);
        internal_counters.push_back(13297);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("DepthStencilTestBusy", "Timing", "Percentage of time GPU spent performing depth and stencil tests relative to GPUBusy.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "6834fb52-42e8-bb50-fd48-ec2f2904e7e0");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7432);
        internal_counters.push_back(7823);
        internal_counters.push_back(8214);
        internal_counters.push_back(8605);
        internal_counters.push_back(8996);
        internal_counters.push_back(9387);
        internal_counters.push_back(9778);
        internal_counters.push_back(10169);
        internal_counters.push_back(10560);
        internal_counters.push_back(10951);
        internal_counters.push_back(11342);
        internal_counters.push_back(11733);
        internal_counters.push_back(12124);
        internal_counters.push_back(12515);
        internal_counters.push_back(12906);
        internal_counters.push_back(13297);

        c.DefineDerivedCounter("DepthStencilTestBusyCount", "Timing", "Number of GPU cycles spent performing depth and stencil tests.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "e02860fa-c7bd-90ea-2149-69b4e98a636c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7303);
        internal_counters.push_back(7694);
        internal_counters.push_back(8085);
        internal_counters.push_back(8476);
        internal_counters.push_back(8867);
        internal_counters.push_back(9258);
        internal_counters.push_back(9649);
        internal_counters.push_back(10040);
        internal_counters.push_back(10431);
        internal_counters.push_back(10822);
        internal_counters.push_back(11213);
        internal_counters.push_back(11604);
        internal_counters.push_back(11995);
        internal_counters.push_back(12386);
        internal_counters.push_back(12777);
        internal_counters.push_back(13168);
        internal_counters.push_back(7292);
        internal_counters.push_back(7683);
        internal_counters.push_back(8074);
        internal_counters.push_back(8465);
        internal_counters.push_back(8856);
        internal_counters.push_back(9247);
        internal_counters.push_back(9638);
        internal_counters.push_back(10029);
        internal_counters.push_back(10420);
        internal_counters.push_back(10811);
        internal_counters.push_back(11202);
        internal_counters.push_back(11593);
        internal_counters.push_back(11984);
        internal_counters.push_back(12375);
        internal_counters.push_back(12766);
        internal_counters.push_back(13157);

        c.DefineDerivedCounter("HiZTilesAccepted", "DepthAndStencil", "Percentage of tiles accepted by HiZ and will be rendered to the depth or color buffers.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*", "56176f45-d7ff-813d-4f05-3b2f046067e7");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7303);
        internal_counters.push_back(7694);
        internal_counters.push_back(8085);
        internal_counters.push_back(8476);
        internal_counters.push_back(8867);
        internal_counters.push_back(9258);
        internal_counters.push_back(9649);
        internal_counters.push_back(10040);
        internal_counters.push_back(10431);
        internal_counters.push_back(10822);
        internal_counters.push_back(11213);
        internal_counters.push_back(11604);
        internal_counters.push_back(11995);
        internal_counters.push_back(12386);
        internal_counters.push_back(12777);
        internal_counters.push_back(13168);

        c.DefineDerivedCounter("HiZTilesAcceptedCount", "DepthAndStencil", "Count of tiles accepted by HiZ and will be rendered to the depth or color buffers.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "95d4e3f6-b2f0-f26e-8423-aacdfaf79ea3");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7292);
        internal_counters.push_back(7683);
        internal_counters.push_back(8074);
        internal_counters.push_back(8465);
        internal_counters.push_back(8856);
        internal_counters.push_back(9247);
        internal_counters.push_back(9638);
        internal_counters.push_back(10029);
        internal_counters.push_back(10420);
        internal_counters.push_back(10811);
        internal_counters.push_back(11202);
        internal_counters.push_back(11593);
        internal_counters.push_back(11984);
        internal_counters.push_back(12375);
        internal_counters.push_back(12766);
        internal_counters.push_back(13157);

        c.DefineDerivedCounter("HiZTilesRejectedCount", "DepthAndStencil", "Count of tiles not accepted by HiZ.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "156ba142-7eeb-aa6e-a00a-f8aea4e41e0b");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7292);
        internal_counters.push_back(7683);
        internal_counters.push_back(8074);
        internal_counters.push_back(8465);
        internal_counters.push_back(8856);
        internal_counters.push_back(9247);
        internal_counters.push_back(9638);
        internal_counters.push_back(10029);
        internal_counters.push_back(10420);
        internal_counters.push_back(10811);
        internal_counters.push_back(11202);
        internal_counters.push_back(11593);
        internal_counters.push_back(11984);
        internal_counters.push_back(12375);
        internal_counters.push_back(12766);
        internal_counters.push_back(13157);
        internal_counters.push_back(7316);
        internal_counters.push_back(7707);
        internal_counters.push_back(8098);
        internal_counters.push_back(8489);
        internal_counters.push_back(8880);
        internal_counters.push_back(9271);
        internal_counters.push_back(9662);
        internal_counters.push_back(10053);
        internal_counters.push_back(10444);
        internal_counters.push_back(10835);
        internal_counters.push_back(11226);
        internal_counters.push_back(11617);
        internal_counters.push_back(12008);
        internal_counters.push_back(12399);
        internal_counters.push_back(12790);
        internal_counters.push_back(13181);

        c.DefineDerivedCounter("PreZTilesDetailCulled", "DepthAndStencil", "Percentage of tiles rejected because the associated prim had no contributing area.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "cad7f54d-a044-7574-c472-6f2065cbeeac");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7316);
        internal_counters.push_back(7707);
        internal_counters.push_back(8098);
        internal_counters.push_back(8489);
        internal_counters.push_back(8880);
        internal_counters.push_back(9271);
        internal_counters.push_back(9662);
        internal_counters.push_back(10053);
        internal_counters.push_back(10444);
        internal_counters.push_back(10835);
        internal_counters.push_back(11226);
        internal_counters.push_back(11617);
        internal_counters.push_back(12008);
        internal_counters.push_back(12399);
        internal_counters.push_back(12790);
        internal_counters.push_back(13181);

        c.DefineDerivedCounter("PreZTilesDetailCulledCount", "DepthAndStencil", "Count of tiles rejected because the associated primitive had no contributing area.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "49262c8a-b1e6-90dd-f096-0fc4921715e9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7292);
        internal_counters.push_back(7683);
        internal_counters.push_back(8074);
        internal_counters.push_back(8465);
        internal_counters.push_back(8856);
        internal_counters.push_back(9247);
        internal_counters.push_back(9638);
        internal_counters.push_back(10029);
        internal_counters.push_back(10420);
        internal_counters.push_back(10811);
        internal_counters.push_back(11202);
        internal_counters.push_back(11593);
        internal_counters.push_back(11984);
        internal_counters.push_back(12375);
        internal_counters.push_back(12766);
        internal_counters.push_back(13157);

        c.DefineDerivedCounter("PreZTilesDetailSurvivingCount", "DepthAndStencil", "Count of tiles surviving because the associated primitive had contributing area.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "f803eaa4-bbed-bd39-775f-a64df92e2c08");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(14937);
        internal_counters.push_back(15515);
        internal_counters.push_back(16093);
        internal_counters.push_back(16671);
        internal_counters.push_back(17249);
        internal_counters.push_back(17827);
        internal_counters.push_back(18405);
        internal_counters.push_back(18983);
        internal_counters.push_back(19561);
        internal_counters.push_back(20139);
        internal_counters.push_back(20717);
        internal_counters.push_back(21295);
        internal_counters.push_back(21873);
        internal_counters.push_back(22451);
        internal_counters.push_back(23029);
        internal_counters.push_back(23607);
        internal_counters.push_back(14938);
        internal_counters.push_back(15516);
        internal_counters.push_back(16094);
        internal_counters.push_back(16672);
        internal_counters.push_back(17250);
        internal_counters.push_back(17828);
        internal_counters.push_back(18406);
        internal_counters.push_back(18984);
        internal_counters.push_back(19562);
        internal_counters.push_back(20140);
        internal_counters.push_back(20718);
        internal_counters.push_back(21296);
        internal_counters.push_back(21874);
        internal_counters.push_back(22452);
        internal_counters.push_back(23030);
        internal_counters.push_back(23608);
        internal_counters.push_back(14939);
        internal_counters.push_back(15517);
        internal_counters.push_back(16095);
        internal_counters.push_back(16673);
        internal_counters.push_back(17251);
        internal_counters.push_back(17829);
        internal_counters.push_back(18407);
        internal_counters.push_back(18985);
        internal_counters.push_back(19563);
        internal_counters.push_back(20141);
        internal_counters.push_back(20719);
        internal_counters.push_back(21297);
        internal_counters.push_back(21875);
        internal_counters.push_back(22453);
        internal_counters.push_back(23031);
        internal_counters.push_back(23609);
        internal_counters.push_back(14940);
        internal_counters.push_back(15518);
        internal_counters.push_back(16096);
        internal_counters.push_back(16674);
        internal_counters.push_back(17252);
        internal_counters.push_back(17830);
        internal_counters.push_back(18408);
        internal_counters.push_back(18986);
        internal_counters.push_back(19564);
        internal_counters.push_back(20142);
        internal_counters.push_back(20720);
        internal_counters.push_back(21298);
        internal_counters.push_back(21876);
        internal_counters.push_back(22454);
        internal_counters.push_back(23032);
        internal_counters.push_back(23610);
        internal_counters.push_back(15013);
        internal_counters.push_back(15591);
        internal_counters.push_back(16169);
        internal_counters.push_back(16747);
        internal_counters.push_back(17325);
        internal_counters.push_back(17903);
        internal_counters.push_back(18481);
        internal_counters.push_back(19059);
        internal_counters.push_back(19637);
        internal_counters.push_back(20215);
        internal_counters.push_back(20793);
        internal_counters.push_back(21371);
        internal_counters.push_back(21949);
        internal_counters.push_back(22527);
        internal_counters.push_back(23105);
        internal_counters.push_back(23683);
        internal_counters.push_back(15014);
        internal_counters.push_back(15592);
        internal_counters.push_back(16170);
        internal_counters.push_back(16748);
        internal_counters.push_back(17326);
        internal_counters.push_back(17904);
        internal_counters.push_back(18482);
        internal_counters.push_back(19060);
        internal_counters.push_back(19638);
        internal_counters.push_back(20216);
        internal_counters.push_back(20794);
        internal_counters.push_back(21372);
        internal_counters.push_back(21950);
        internal_counters.push_back(22528);
        internal_counters.push_back(23106);
        internal_counters.push_back(23684);
        internal_counters.push_back(15015);
        internal_counters.push_back(15593);
        internal_counters.push_back(16171);
        internal_counters.push_back(16749);
        internal_counters.push_back(17327);
        internal_counters.push_back(17905);
        internal_counters.push_back(18483);
        internal_counters.push_back(19061);
        internal_counters.push_back(19639);
        internal_counters.push_back(20217);
        internal_counters.push_back(20795);
        internal_counters.push_back(21373);
        internal_counters.push_back(21951);
        internal_counters.push_back(22529);
        internal_counters.push_back(23107);
        internal_counters.push_back(23685);
        internal_counters.push_back(15016);
        internal_counters.push_back(15594);
        internal_counters.push_back(16172);
        internal_counters.push_back(16750);
        internal_counters.push_back(17328);
        internal_counters.push_back(17906);
        internal_counters.push_back(18484);
        internal_counters.push_back(19062);
        internal_counters.push_back(19640);
        internal_counters.push_back(20218);
        internal_counters.push_back(20796);
        internal_counters.push_back(21374);
        internal_counters.push_back(21952);
        internal_counters.push_back(22530);
        internal_counters.push_back(23108);
        internal_counters.push_back(23686);

        c.DefineDerivedCounter("HiZQuadsCulled", "DepthAndStencil", "Percentage of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,/,(100),*", "fa0e319b-5573-6d34-5bab-904769925036");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(14937);
        internal_counters.push_back(15515);
        internal_counters.push_back(16093);
        internal_counters.push_back(16671);
        internal_counters.push_back(17249);
        internal_counters.push_back(17827);
        internal_counters.push_back(18405);
        internal_counters.push_back(18983);
        internal_counters.push_back(19561);
        internal_counters.push_back(20139);
        internal_counters.push_back(20717);
        internal_counters.push_back(21295);
        internal_counters.push_back(21873);
        internal_counters.push_back(22451);
        internal_counters.push_back(23029);
        internal_counters.push_back(23607);
        internal_counters.push_back(14938);
        internal_counters.push_back(15516);
        internal_counters.push_back(16094);
        internal_counters.push_back(16672);
        internal_counters.push_back(17250);
        internal_counters.push_back(17828);
        internal_counters.push_back(18406);
        internal_counters.push_back(18984);
        internal_counters.push_back(19562);
        internal_counters.push_back(20140);
        internal_counters.push_back(20718);
        internal_counters.push_back(21296);
        internal_counters.push_back(21874);
        internal_counters.push_back(22452);
        internal_counters.push_back(23030);
        internal_counters.push_back(23608);
        internal_counters.push_back(14939);
        internal_counters.push_back(15517);
        internal_counters.push_back(16095);
        internal_counters.push_back(16673);
        internal_counters.push_back(17251);
        internal_counters.push_back(17829);
        internal_counters.push_back(18407);
        internal_counters.push_back(18985);
        internal_counters.push_back(19563);
        internal_counters.push_back(20141);
        internal_counters.push_back(20719);
        internal_counters.push_back(21297);
        internal_counters.push_back(21875);
        internal_counters.push_back(22453);
        internal_counters.push_back(23031);
        internal_counters.push_back(23609);
        internal_counters.push_back(14940);
        internal_counters.push_back(15518);
        internal_counters.push_back(16096);
        internal_counters.push_back(16674);
        internal_counters.push_back(17252);
        internal_counters.push_back(17830);
        internal_counters.push_back(18408);
        internal_counters.push_back(18986);
        internal_counters.push_back(19564);
        internal_counters.push_back(20142);
        internal_counters.push_back(20720);
        internal_counters.push_back(21298);
        internal_counters.push_back(21876);
        internal_counters.push_back(22454);
        internal_counters.push_back(23032);
        internal_counters.push_back(23610);
        internal_counters.push_back(15013);
        internal_counters.push_back(15591);
        internal_counters.push_back(16169);
        internal_counters.push_back(16747);
        internal_counters.push_back(17325);
        internal_counters.push_back(17903);
        internal_counters.push_back(18481);
        internal_counters.push_back(19059);
        internal_counters.push_back(19637);
        internal_counters.push_back(20215);
        internal_counters.push_back(20793);
        internal_counters.push_back(21371);
        internal_counters.push_back(21949);
        internal_counters.push_back(22527);
        internal_counters.push_back(23105);
        internal_counters.push_back(23683);
        internal_counters.push_back(15014);
        internal_counters.push_back(15592);
        internal_counters.push_back(16170);
        internal_counters.push_back(16748);
        internal_counters.push_back(17326);
        internal_counters.push_back(17904);
        internal_counters.push_back(18482);
        internal_counters.push_back(19060);
        internal_counters.push_back(19638);
        internal_counters.push_back(20216);
        internal_counters.push_back(20794);
        internal_counters.push_back(21372);
        internal_counters.push_back(21950);
        internal_counters.push_back(22528);
        internal_counters.push_back(23106);
        internal_counters.push_back(23684);
        internal_counters.push_back(15015);
        internal_counters.push_back(15593);
        internal_counters.push_back(16171);
        internal_counters.push_back(16749);
        internal_counters.push_back(17327);
        internal_counters.push_back(17905);
        internal_counters.push_back(18483);
        internal_counters.push_back(19061);
        internal_counters.push_back(19639);
        internal_counters.push_back(20217);
        internal_counters.push_back(20795);
        internal_counters.push_back(21373);
        internal_counters.push_back(21951);
        internal_counters.push_back(22529);
        internal_counters.push_back(23107);
        internal_counters.push_back(23685);
        internal_counters.push_back(15016);
        internal_counters.push_back(15594);
        internal_counters.push_back(16172);
        internal_counters.push_back(16750);
        internal_counters.push_back(17328);
        internal_counters.push_back(17906);
        internal_counters.push_back(18484);
        internal_counters.push_back(19062);
        internal_counters.push_back(19640);
        internal_counters.push_back(20218);
        internal_counters.push_back(20796);
        internal_counters.push_back(21374);
        internal_counters.push_back(21952);
        internal_counters.push_back(22530);
        internal_counters.push_back(23108);
        internal_counters.push_back(23686);

        c.DefineDerivedCounter("HiZQuadsCulledCount", "DepthAndStencil", "Count of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,-,(0),max", "73b0b39d-6df2-3e24-0b5c-7cb0ac8b6f39");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(15013);
        internal_counters.push_back(15591);
        internal_counters.push_back(16169);
        internal_counters.push_back(16747);
        internal_counters.push_back(17325);
        internal_counters.push_back(17903);
        internal_counters.push_back(18481);
        internal_counters.push_back(19059);
        internal_counters.push_back(19637);
        internal_counters.push_back(20215);
        internal_counters.push_back(20793);
        internal_counters.push_back(21371);
        internal_counters.push_back(21949);
        internal_counters.push_back(22527);
        internal_counters.push_back(23105);
        internal_counters.push_back(23683);
        internal_counters.push_back(15014);
        internal_counters.push_back(15592);
        internal_counters.push_back(16170);
        internal_counters.push_back(16748);
        internal_counters.push_back(17326);
        internal_counters.push_back(17904);
        internal_counters.push_back(18482);
        internal_counters.push_back(19060);
        internal_counters.push_back(19638);
        internal_counters.push_back(20216);
        internal_counters.push_back(20794);
        internal_counters.push_back(21372);
        internal_counters.push_back(21950);
        internal_counters.push_back(22528);
        internal_counters.push_back(23106);
        internal_counters.push_back(23684);
        internal_counters.push_back(15015);
        internal_counters.push_back(15593);
        internal_counters.push_back(16171);
        internal_counters.push_back(16749);
        internal_counters.push_back(17327);
        internal_counters.push_back(17905);
        internal_counters.push_back(18483);
        internal_counters.push_back(19061);
        internal_counters.push_back(19639);
        internal_counters.push_back(20217);
        internal_counters.push_back(20795);
        internal_counters.push_back(21373);
        internal_counters.push_back(21951);
        internal_counters.push_back(22529);
        internal_counters.push_back(23107);
        internal_counters.push_back(23685);
        internal_counters.push_back(15016);
        internal_counters.push_back(15594);
        internal_counters.push_back(16172);
        internal_counters.push_back(16750);
        internal_counters.push_back(17328);
        internal_counters.push_back(17906);
        internal_counters.push_back(18484);
        internal_counters.push_back(19062);
        internal_counters.push_back(19640);
        internal_counters.push_back(20218);
        internal_counters.push_back(20796);
        internal_counters.push_back(21374);
        internal_counters.push_back(21952);
        internal_counters.push_back(22530);
        internal_counters.push_back(23108);
        internal_counters.push_back(23686);

        c.DefineDerivedCounter("HiZQuadsAcceptedCount", "DepthAndStencil", "Count of quads that did continue on in the pipeline after HiZ.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "59049ad9-42b5-c7cb-3616-6a8f6a8e4894");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(14937);
        internal_counters.push_back(15515);
        internal_counters.push_back(16093);
        internal_counters.push_back(16671);
        internal_counters.push_back(17249);
        internal_counters.push_back(17827);
        internal_counters.push_back(18405);
        internal_counters.push_back(18983);
        internal_counters.push_back(19561);
        internal_counters.push_back(20139);
        internal_counters.push_back(20717);
        internal_counters.push_back(21295);
        internal_counters.push_back(21873);
        internal_counters.push_back(22451);
        internal_counters.push_back(23029);
        internal_counters.push_back(23607);
        internal_counters.push_back(14938);
        internal_counters.push_back(15516);
        internal_counters.push_back(16094);
        internal_counters.push_back(16672);
        internal_counters.push_back(17250);
        internal_counters.push_back(17828);
        internal_counters.push_back(18406);
        internal_counters.push_back(18984);
        internal_counters.push_back(19562);
        internal_counters.push_back(20140);
        internal_counters.push_back(20718);
        internal_counters.push_back(21296);
        internal_counters.push_back(21874);
        internal_counters.push_back(22452);
        internal_counters.push_back(23030);
        internal_counters.push_back(23608);
        internal_counters.push_back(14939);
        internal_counters.push_back(15517);
        internal_counters.push_back(16095);
        internal_counters.push_back(16673);
        internal_counters.push_back(17251);
        internal_counters.push_back(17829);
        internal_counters.push_back(18407);
        internal_counters.push_back(18985);
        internal_counters.push_back(19563);
        internal_counters.push_back(20141);
        internal_counters.push_back(20719);
        internal_counters.push_back(21297);
        internal_counters.push_back(21875);
        internal_counters.push_back(22453);
        internal_counters.push_back(23031);
        internal_counters.push_back(23609);
        internal_counters.push_back(14940);
        internal_counters.push_back(15518);
        internal_counters.push_back(16096);
        internal_counters.push_back(16674);
        internal_counters.push_back(17252);
        internal_counters.push_back(17830);
        internal_counters.push_back(18408);
        internal_counters.push_back(18986);
        internal_counters.push_back(19564);
        internal_counters.push_back(20142);
        internal_counters.push_back(20720);
        internal_counters.push_back(21298);
        internal_counters.push_back(21876);
        internal_counters.push_back(22454);
        internal_counters.push_back(23032);
        internal_counters.push_back(23610);
        internal_counters.push_back(15037);
        internal_counters.push_back(15615);
        internal_counters.push_back(16193);
        internal_counters.push_back(16771);
        internal_counters.push_back(17349);
        internal_counters.push_back(17927);
        internal_counters.push_back(18505);
        internal_counters.push_back(19083);
        internal_counters.push_back(19661);
        internal_counters.push_back(20239);
        internal_counters.push_back(20817);
        internal_counters.push_back(21395);
        internal_counters.push_back(21973);
        internal_counters.push_back(22551);
        internal_counters.push_back(23129);
        internal_counters.push_back(23707);
        internal_counters.push_back(15013);
        internal_counters.push_back(15591);
        internal_counters.push_back(16169);
        internal_counters.push_back(16747);
        internal_counters.push_back(17325);
        internal_counters.push_back(17903);
        internal_counters.push_back(18481);
        internal_counters.push_back(19059);
        internal_counters.push_back(19637);
        internal_counters.push_back(20215);
        internal_counters.push_back(20793);
        internal_counters.push_back(21371);
        internal_counters.push_back(21949);
        internal_counters.push_back(22527);
        internal_counters.push_back(23105);
        internal_counters.push_back(23683);
        internal_counters.push_back(15014);
        internal_counters.push_back(15592);
        internal_counters.push_back(16170);
        internal_counters.push_back(16748);
        internal_counters.push_back(17326);
        internal_counters.push_back(17904);
        internal_counters.push_back(18482);
        internal_counters.push_back(19060);
        internal_counters.push_back(19638);
        internal_counters.push_back(20216);
        internal_counters.push_back(20794);
        internal_counters.push_back(21372);
        internal_counters.push_back(21950);
        internal_counters.push_back(22528);
        internal_counters.push_back(23106);
        internal_counters.push_back(23684);
        internal_counters.push_back(15015);
        internal_counters.push_back(15593);
        internal_counters.push_back(16171);
        internal_counters.push_back(16749);
        internal_counters.push_back(17327);
        internal_counters.push_back(17905);
        internal_counters.push_back(18483);
        internal_counters.push_back(19061);
        internal_counters.push_back(19639);
        internal_counters.push_back(20217);
        internal_counters.push_back(20795);
        internal_counters.push_back(21373);
        internal_counters.push_back(21951);
        internal_counters.push_back(22529);
        internal_counters.push_back(23107);
        internal_counters.push_back(23685);
        internal_counters.push_back(15016);
        internal_counters.push_back(15594);
        internal_counters.push_back(16172);
        internal_counters.push_back(16750);
        internal_counters.push_back(17328);
        internal_counters.push_back(17906);
        internal_counters.push_back(18484);
        internal_counters.push_back(19062);
        internal_counters.push_back(19640);
        internal_counters.push_back(20218);
        internal_counters.push_back(20796);
        internal_counters.push_back(21374);
        internal_counters.push_back(21952);
        internal_counters.push_back(22530);
        internal_counters.push_back(23108);
        internal_counters.push_back(23686);

        c.DefineDerivedCounter("PreZQuadsCulled", "DepthAndStencil", "Percentage of quads rejected based on the detailZ and earlyZ tests.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum16,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,/,(100),*", "4e77547b-ec55-5663-f034-af59be66d77d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(14937);
        internal_counters.push_back(15515);
        internal_counters.push_back(16093);
        internal_counters.push_back(16671);
        internal_counters.push_back(17249);
        internal_counters.push_back(17827);
        internal_counters.push_back(18405);
        internal_counters.push_back(18983);
        internal_counters.push_back(19561);
        internal_counters.push_back(20139);
        internal_counters.push_back(20717);
        internal_counters.push_back(21295);
        internal_counters.push_back(21873);
        internal_counters.push_back(22451);
        internal_counters.push_back(23029);
        internal_counters.push_back(23607);
        internal_counters.push_back(14938);
        internal_counters.push_back(15516);
        internal_counters.push_back(16094);
        internal_counters.push_back(16672);
        internal_counters.push_back(17250);
        internal_counters.push_back(17828);
        internal_counters.push_back(18406);
        internal_counters.push_back(18984);
        internal_counters.push_back(19562);
        internal_counters.push_back(20140);
        internal_counters.push_back(20718);
        internal_counters.push_back(21296);
        internal_counters.push_back(21874);
        internal_counters.push_back(22452);
        internal_counters.push_back(23030);
        internal_counters.push_back(23608);
        internal_counters.push_back(14939);
        internal_counters.push_back(15517);
        internal_counters.push_back(16095);
        internal_counters.push_back(16673);
        internal_counters.push_back(17251);
        internal_counters.push_back(17829);
        internal_counters.push_back(18407);
        internal_counters.push_back(18985);
        internal_counters.push_back(19563);
        internal_counters.push_back(20141);
        internal_counters.push_back(20719);
        internal_counters.push_back(21297);
        internal_counters.push_back(21875);
        internal_counters.push_back(22453);
        internal_counters.push_back(23031);
        internal_counters.push_back(23609);
        internal_counters.push_back(14940);
        internal_counters.push_back(15518);
        internal_counters.push_back(16096);
        internal_counters.push_back(16674);
        internal_counters.push_back(17252);
        internal_counters.push_back(17830);
        internal_counters.push_back(18408);
        internal_counters.push_back(18986);
        internal_counters.push_back(19564);
        internal_counters.push_back(20142);
        internal_counters.push_back(20720);
        internal_counters.push_back(21298);
        internal_counters.push_back(21876);
        internal_counters.push_back(22454);
        internal_counters.push_back(23032);
        internal_counters.push_back(23610);
        internal_counters.push_back(15037);
        internal_counters.push_back(15615);
        internal_counters.push_back(16193);
        internal_counters.push_back(16771);
        internal_counters.push_back(17349);
        internal_counters.push_back(17927);
        internal_counters.push_back(18505);
        internal_counters.push_back(19083);
        internal_counters.push_back(19661);
        internal_counters.push_back(20239);
        internal_counters.push_back(20817);
        internal_counters.push_back(21395);
        internal_counters.push_back(21973);
        internal_counters.push_back(22551);
        internal_counters.push_back(23129);
        internal_counters.push_back(23707);
        internal_counters.push_back(15013);
        internal_counters.push_back(15591);
        internal_counters.push_back(16169);
        internal_counters.push_back(16747);
        internal_counters.push_back(17325);
        internal_counters.push_back(17903);
        internal_counters.push_back(18481);
        internal_counters.push_back(19059);
        internal_counters.push_back(19637);
        internal_counters.push_back(20215);
        internal_counters.push_back(20793);
        internal_counters.push_back(21371);
        internal_counters.push_back(21949);
        internal_counters.push_back(22527);
        internal_counters.push_back(23105);
        internal_counters.push_back(23683);
        internal_counters.push_back(15014);
        internal_counters.push_back(15592);
        internal_counters.push_back(16170);
        internal_counters.push_back(16748);
        internal_counters.push_back(17326);
        internal_counters.push_back(17904);
        internal_counters.push_back(18482);
        internal_counters.push_back(19060);
        internal_counters.push_back(19638);
        internal_counters.push_back(20216);
        internal_counters.push_back(20794);
        internal_counters.push_back(21372);
        internal_counters.push_back(21950);
        internal_counters.push_back(22528);
        internal_counters.push_back(23106);
        internal_counters.push_back(23684);
        internal_counters.push_back(15015);
        internal_counters.push_back(15593);
        internal_counters.push_back(16171);
        internal_counters.push_back(16749);
        internal_counters.push_back(17327);
        internal_counters.push_back(17905);
        internal_counters.push_back(18483);
        internal_counters.push_back(19061);
        internal_counters.push_back(19639);
        internal_counters.push_back(20217);
        internal_counters.push_back(20795);
        internal_counters.push_back(21373);
        internal_counters.push_back(21951);
        internal_counters.push_back(22529);
        internal_counters.push_back(23107);
        internal_counters.push_back(23685);
        internal_counters.push_back(15016);
        internal_counters.push_back(15594);
        internal_counters.push_back(16172);
        internal_counters.push_back(16750);
        internal_counters.push_back(17328);
        internal_counters.push_back(17906);
        internal_counters.push_back(18484);
        internal_counters.push_back(19062);
        internal_counters.push_back(19640);
        internal_counters.push_back(20218);
        internal_counters.push_back(20796);
        internal_counters.push_back(21374);
        internal_counters.push_back(21952);
        internal_counters.push_back(22530);
        internal_counters.push_back(23108);
        internal_counters.push_back(23686);

        c.DefineDerivedCounter("PreZQuadsCulledCount", "DepthAndStencil", "Count of quads rejected based on the detailZ and earlyZ tests.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum16,-,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,sum64,-,(0),max", "1bf169e6-9304-834e-df5f-0c44d7890a08");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(15037);
        internal_counters.push_back(15615);
        internal_counters.push_back(16193);
        internal_counters.push_back(16771);
        internal_counters.push_back(17349);
        internal_counters.push_back(17927);
        internal_counters.push_back(18505);
        internal_counters.push_back(19083);
        internal_counters.push_back(19661);
        internal_counters.push_back(20239);
        internal_counters.push_back(20817);
        internal_counters.push_back(21395);
        internal_counters.push_back(21973);
        internal_counters.push_back(22551);
        internal_counters.push_back(23129);
        internal_counters.push_back(23707);
        internal_counters.push_back(15013);
        internal_counters.push_back(15591);
        internal_counters.push_back(16169);
        internal_counters.push_back(16747);
        internal_counters.push_back(17325);
        internal_counters.push_back(17903);
        internal_counters.push_back(18481);
        internal_counters.push_back(19059);
        internal_counters.push_back(19637);
        internal_counters.push_back(20215);
        internal_counters.push_back(20793);
        internal_counters.push_back(21371);
        internal_counters.push_back(21949);
        internal_counters.push_back(22527);
        internal_counters.push_back(23105);
        internal_counters.push_back(23683);
        internal_counters.push_back(15014);
        internal_counters.push_back(15592);
        internal_counters.push_back(16170);
        internal_counters.push_back(16748);
        internal_counters.push_back(17326);
        internal_counters.push_back(17904);
        internal_counters.push_back(18482);
        internal_counters.push_back(19060);
        internal_counters.push_back(19638);
        internal_counters.push_back(20216);
        internal_counters.push_back(20794);
        internal_counters.push_back(21372);
        internal_counters.push_back(21950);
        internal_counters.push_back(22528);
        internal_counters.push_back(23106);
        internal_counters.push_back(23684);
        internal_counters.push_back(15015);
        internal_counters.push_back(15593);
        internal_counters.push_back(16171);
        internal_counters.push_back(16749);
        internal_counters.push_back(17327);
        internal_counters.push_back(17905);
        internal_counters.push_back(18483);
        internal_counters.push_back(19061);
        internal_counters.push_back(19639);
        internal_counters.push_back(20217);
        internal_counters.push_back(20795);
        internal_counters.push_back(21373);
        internal_counters.push_back(21951);
        internal_counters.push_back(22529);
        internal_counters.push_back(23107);
        internal_counters.push_back(23685);
        internal_counters.push_back(15016);
        internal_counters.push_back(15594);
        internal_counters.push_back(16172);
        internal_counters.push_back(16750);
        internal_counters.push_back(17328);
        internal_counters.push_back(17906);
        internal_counters.push_back(18484);
        internal_counters.push_back(19062);
        internal_counters.push_back(19640);
        internal_counters.push_back(20218);
        internal_counters.push_back(20796);
        internal_counters.push_back(21374);
        internal_counters.push_back(21952);
        internal_counters.push_back(22530);
        internal_counters.push_back(23108);
        internal_counters.push_back(23686);

        c.DefineDerivedCounter("PreZQuadsSurvivingCount", "DepthAndStencil", "Count of quads surviving detailZ and earlyZ tests.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,-,(0),max", "50e25e51-3713-89cb-7f92-559cde5e5532");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(15037);
        internal_counters.push_back(15615);
        internal_counters.push_back(16193);
        internal_counters.push_back(16771);
        internal_counters.push_back(17349);
        internal_counters.push_back(17927);
        internal_counters.push_back(18505);
        internal_counters.push_back(19083);
        internal_counters.push_back(19661);
        internal_counters.push_back(20239);
        internal_counters.push_back(20817);
        internal_counters.push_back(21395);
        internal_counters.push_back(21973);
        internal_counters.push_back(22551);
        internal_counters.push_back(23129);
        internal_counters.push_back(23707);
        internal_counters.push_back(14937);
        internal_counters.push_back(15515);
        internal_counters.push_back(16093);
        internal_counters.push_back(16671);
        internal_counters.push_back(17249);
        internal_counters.push_back(17827);
        internal_counters.push_back(18405);
        internal_counters.push_back(18983);
        internal_counters.push_back(19561);
        internal_counters.push_back(20139);
        internal_counters.push_back(20717);
        internal_counters.push_back(21295);
        internal_counters.push_back(21873);
        internal_counters.push_back(22451);
        internal_counters.push_back(23029);
        internal_counters.push_back(23607);
        internal_counters.push_back(14938);
        internal_counters.push_back(15516);
        internal_counters.push_back(16094);
        internal_counters.push_back(16672);
        internal_counters.push_back(17250);
        internal_counters.push_back(17828);
        internal_counters.push_back(18406);
        internal_counters.push_back(18984);
        internal_counters.push_back(19562);
        internal_counters.push_back(20140);
        internal_counters.push_back(20718);
        internal_counters.push_back(21296);
        internal_counters.push_back(21874);
        internal_counters.push_back(22452);
        internal_counters.push_back(23030);
        internal_counters.push_back(23608);
        internal_counters.push_back(14939);
        internal_counters.push_back(15517);
        internal_counters.push_back(16095);
        internal_counters.push_back(16673);
        internal_counters.push_back(17251);
        internal_counters.push_back(17829);
        internal_counters.push_back(18407);
        internal_counters.push_back(18985);
        internal_counters.push_back(19563);
        internal_counters.push_back(20141);
        internal_counters.push_back(20719);
        internal_counters.push_back(21297);
        internal_counters.push_back(21875);
        internal_counters.push_back(22453);
        internal_counters.push_back(23031);
        internal_counters.push_back(23609);
        internal_counters.push_back(14940);
        internal_counters.push_back(15518);
        internal_counters.push_back(16096);
        internal_counters.push_back(16674);
        internal_counters.push_back(17252);
        internal_counters.push_back(17830);
        internal_counters.push_back(18408);
        internal_counters.push_back(18986);
        internal_counters.push_back(19564);
        internal_counters.push_back(20142);
        internal_counters.push_back(20720);
        internal_counters.push_back(21298);
        internal_counters.push_back(21876);
        internal_counters.push_back(22454);
        internal_counters.push_back(23032);
        internal_counters.push_back(23610);

        c.DefineDerivedCounter("PostZQuads", "DepthAndStencil", "Percentage of quads for which the pixel shader will run and may be postZ tested.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum64,/,(100),*", "58f0d34b-eeb8-e8db-abce-cb72584144be");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(15037);
        internal_counters.push_back(15615);
        internal_counters.push_back(16193);
        internal_counters.push_back(16771);
        internal_counters.push_back(17349);
        internal_counters.push_back(17927);
        internal_counters.push_back(18505);
        internal_counters.push_back(19083);
        internal_counters.push_back(19661);
        internal_counters.push_back(20239);
        internal_counters.push_back(20817);
        internal_counters.push_back(21395);
        internal_counters.push_back(21973);
        internal_counters.push_back(22551);
        internal_counters.push_back(23129);
        internal_counters.push_back(23707);

        c.DefineDerivedCounter("PostZQuadCount", "DepthAndStencil", "Count of quads for which the pixel shader will run and may be postZ tested.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "08404526-ce35-939b-34c8-a7a35a0ff4d6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7465);
        internal_counters.push_back(7856);
        internal_counters.push_back(8247);
        internal_counters.push_back(8638);
        internal_counters.push_back(9029);
        internal_counters.push_back(9420);
        internal_counters.push_back(9811);
        internal_counters.push_back(10202);
        internal_counters.push_back(10593);
        internal_counters.push_back(10984);
        internal_counters.push_back(11375);
        internal_counters.push_back(11766);
        internal_counters.push_back(12157);
        internal_counters.push_back(12548);
        internal_counters.push_back(12939);
        internal_counters.push_back(13330);

        c.DefineDerivedCounter("PreZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z before shading and passed.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "3bfe6c4d-7422-ca03-7ea5-e67ff1a00136");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7467);
        internal_counters.push_back(7858);
        internal_counters.push_back(8249);
        internal_counters.push_back(8640);
        internal_counters.push_back(9031);
        internal_counters.push_back(9422);
        internal_counters.push_back(9813);
        internal_counters.push_back(10204);
        internal_counters.push_back(10595);
        internal_counters.push_back(10986);
        internal_counters.push_back(11377);
        internal_counters.push_back(11768);
        internal_counters.push_back(12159);
        internal_counters.push_back(12550);
        internal_counters.push_back(12941);
        internal_counters.push_back(13332);

        c.DefineDerivedCounter("PreZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z before shading and failed stencil test.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "df7f705e-5162-d3b5-da8b-63466cf9c4e5");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7466);
        internal_counters.push_back(7857);
        internal_counters.push_back(8248);
        internal_counters.push_back(8639);
        internal_counters.push_back(9030);
        internal_counters.push_back(9421);
        internal_counters.push_back(9812);
        internal_counters.push_back(10203);
        internal_counters.push_back(10594);
        internal_counters.push_back(10985);
        internal_counters.push_back(11376);
        internal_counters.push_back(11767);
        internal_counters.push_back(12158);
        internal_counters.push_back(12549);
        internal_counters.push_back(12940);
        internal_counters.push_back(13331);

        c.DefineDerivedCounter("PreZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z before shading and failed Z test.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4484e950-f7a4-3800-bc74-78dd297f017e");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7462);
        internal_counters.push_back(7853);
        internal_counters.push_back(8244);
        internal_counters.push_back(8635);
        internal_counters.push_back(9026);
        internal_counters.push_back(9417);
        internal_counters.push_back(9808);
        internal_counters.push_back(10199);
        internal_counters.push_back(10590);
        internal_counters.push_back(10981);
        internal_counters.push_back(11372);
        internal_counters.push_back(11763);
        internal_counters.push_back(12154);
        internal_counters.push_back(12545);
        internal_counters.push_back(12936);
        internal_counters.push_back(13327);

        c.DefineDerivedCounter("PostZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z after shading and passed.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4995d5d6-2330-b986-508b-fae24856f44c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7464);
        internal_counters.push_back(7855);
        internal_counters.push_back(8246);
        internal_counters.push_back(8637);
        internal_counters.push_back(9028);
        internal_counters.push_back(9419);
        internal_counters.push_back(9810);
        internal_counters.push_back(10201);
        internal_counters.push_back(10592);
        internal_counters.push_back(10983);
        internal_counters.push_back(11374);
        internal_counters.push_back(11765);
        internal_counters.push_back(12156);
        internal_counters.push_back(12547);
        internal_counters.push_back(12938);
        internal_counters.push_back(13329);

        c.DefineDerivedCounter("PostZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z after shading and failed stencil test.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "ae558af4-f4be-3dd4-7316-b2c4dcf0def8");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7463);
        internal_counters.push_back(7854);
        internal_counters.push_back(8245);
        internal_counters.push_back(8636);
        internal_counters.push_back(9027);
        internal_counters.push_back(9418);
        internal_counters.push_back(9809);
        internal_counters.push_back(10200);
        internal_counters.push_back(10591);
        internal_counters.push_back(10982);
        internal_counters.push_back(11373);
        internal_counters.push_back(11764);
        internal_counters.push_back(12155);
        internal_counters.push_back(12546);
        internal_counters.push_back(12937);
        internal_counters.push_back(13328);

        c.DefineDerivedCounter("PostZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z after shading and failed Z test.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "b3684c94-814a-c695-c85d-a5b6ab798b35");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7334);
        internal_counters.push_back(7725);
        internal_counters.push_back(8116);
        internal_counters.push_back(8507);
        internal_counters.push_back(8898);
        internal_counters.push_back(9289);
        internal_counters.push_back(9680);
        internal_counters.push_back(10071);
        internal_counters.push_back(10462);
        internal_counters.push_back(10853);
        internal_counters.push_back(11244);
        internal_counters.push_back(11635);
        internal_counters.push_back(12026);
        internal_counters.push_back(12417);
        internal_counters.push_back(12808);
        internal_counters.push_back(13199);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("ZUnitStalled", "DepthAndStencil", "The percentage of GPUTime the depth buffer spends waiting for the color buffer to be ready to accept data. High figures here indicate a bottleneck in color buffer operations.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "5e86c3ad-1726-3157-1d01-7ed188bf854d");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7334);
        internal_counters.push_back(7725);
        internal_counters.push_back(8116);
        internal_counters.push_back(8507);
        internal_counters.push_back(8898);
        internal_counters.push_back(9289);
        internal_counters.push_back(9680);
        internal_counters.push_back(10071);
        internal_counters.push_back(10462);
        internal_counters.push_back(10853);
        internal_counters.push_back(11244);
        internal_counters.push_back(11635);
        internal_counters.push_back(12026);
        internal_counters.push_back(12417);
        internal_counters.push_back(12808);
        internal_counters.push_back(13199);

        c.DefineDerivedCounter("ZUnitStalledCycles", "DepthAndStencil", "Number of GPU cycles the depth buffer spends waiting for the color buffer to be ready to accept data. Larger numbers indicate a bottleneck in color buffer operations.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "4351fa7f-6737-2c3e-3ffb-b3addbdceedd");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7336);
        internal_counters.push_back(7727);
        internal_counters.push_back(8118);
        internal_counters.push_back(8509);
        internal_counters.push_back(8900);
        internal_counters.push_back(9291);
        internal_counters.push_back(9682);
        internal_counters.push_back(10073);
        internal_counters.push_back(10464);
        internal_counters.push_back(10855);
        internal_counters.push_back(11246);
        internal_counters.push_back(11637);
        internal_counters.push_back(12028);
        internal_counters.push_back(12419);
        internal_counters.push_back(12810);
        internal_counters.push_back(13201);
        internal_counters.push_back(7343);
        internal_counters.push_back(7734);
        internal_counters.push_back(8125);
        internal_counters.push_back(8516);
        internal_counters.push_back(8907);
        internal_counters.push_back(9298);
        internal_counters.push_back(9689);
        internal_counters.push_back(10080);
        internal_counters.push_back(10471);
        internal_counters.push_back(10862);
        internal_counters.push_back(11253);
        internal_counters.push_back(11644);
        internal_counters.push_back(12035);
        internal_counters.push_back(12426);
        internal_counters.push_back(12817);
        internal_counters.push_back(13208);

        c.DefineDerivedCounter("DBMemRead", "DepthAndStencil", "Number of bytes read from the depth buffer.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(256),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "dcdb4ee7-bd50-00f7-c028-9e5f4ce888c0");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(7348);
        internal_counters.push_back(7739);
        internal_counters.push_back(8130);
        internal_counters.push_back(8521);
        internal_counters.push_back(8912);
        internal_counters.push_back(9303);
        internal_counters.push_back(9694);
        internal_counters.push_back(10085);
        internal_counters.push_back(10476);
        internal_counters.push_back(10867);
        internal_counters.push_back(11258);
        internal_counters.push_back(11649);
        internal_counters.push_back(12040);
        internal_counters.push_back(12431);
        internal_counters.push_back(12822);
        internal_counters.push_back(13213);
        internal_counters.push_back(7351);
        internal_counters.push_back(7742);
        internal_counters.push_back(8133);
        internal_counters.push_back(8524);
        internal_counters.push_back(8915);
        internal_counters.push_back(9306);
        internal_counters.push_back(9697);
        internal_counters.push_back(10088);
        internal_counters.push_back(10479);
        internal_counters.push_back(10870);
        internal_counters.push_back(11261);
        internal_counters.push_back(11652);
        internal_counters.push_back(12043);
        internal_counters.push_back(12434);
        internal_counters.push_back(12825);
        internal_counters.push_back(13216);

        c.DefineDerivedCounter("DBMemWritten", "DepthAndStencil", "Number of bytes written to the depth buffer.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "de5717f8-8a49-ee44-4645-10de51b37dcf");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(168);
        internal_counters.push_back(621);
        internal_counters.push_back(1074);
        internal_counters.push_back(1527);
        internal_counters.push_back(1980);
        internal_counters.push_back(2433);
        internal_counters.push_back(2886);
        internal_counters.push_back(3339);
        internal_counters.push_back(3792);
        internal_counters.push_back(4245);
        internal_counters.push_back(4698);
        internal_counters.push_back(5151);
        internal_counters.push_back(5604);
        internal_counters.push_back(6057);
        internal_counters.push_back(6510);
        internal_counters.push_back(6963);

        c.DefineDerivedCounter("CBMemRead", "ColorBuffer", "Number of bytes read from the color buffer.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "84b531d8-a1f8-7f49-7c27-7bc97801f1e6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(299);
        internal_counters.push_back(752);
        internal_counters.push_back(1205);
        internal_counters.push_back(1658);
        internal_counters.push_back(2111);
        internal_counters.push_back(2564);
        internal_counters.push_back(3017);
        internal_counters.push_back(3470);
        internal_counters.push_back(3923);
        internal_counters.push_back(4376);
        internal_counters.push_back(4829);
        internal_counters.push_back(5282);
        internal_counters.push_back(5735);
        internal_counters.push_back(6188);
        internal_counters.push_back(6641);
        internal_counters.push_back(7094);
        internal_counters.push_back(166);
        internal_counters.push_back(619);
        internal_counters.push_back(1072);
        internal_counters.push_back(1525);
        internal_counters.push_back(1978);
        internal_counters.push_back(2431);
        internal_counters.push_back(2884);
        internal_counters.push_back(3337);
        internal_counters.push_back(3790);
        internal_counters.push_back(4243);
        internal_counters.push_back(4696);
        internal_counters.push_back(5149);
        internal_counters.push_back(5602);
        internal_counters.push_back(6055);
        internal_counters.push_back(6508);
        internal_counters.push_back(6961);
        internal_counters.push_back(167);
        internal_counters.push_back(620);
        internal_counters.push_back(1073);
        internal_counters.push_back(1526);
        internal_counters.push_back(1979);
        internal_counters.push_back(2432);
        internal_counters.push_back(2885);
        internal_counters.push_back(3338);
        internal_counters.push_back(3791);
        internal_counters.push_back(4244);
        internal_counters.push_back(4697);
        internal_counters.push_back(5150);
        internal_counters.push_back(5603);
        internal_counters.push_back(6056);
        internal_counters.push_back(6509);
        internal_counters.push_back(6962);
        internal_counters.push_back(168);
        internal_counters.push_back(621);
        internal_counters.push_back(1074);
        internal_counters.push_back(1527);
        internal_counters.push_back(1980);
        internal_counters.push_back(2433);
        internal_counters.push_back(2886);
        internal_counters.push_back(3339);
        internal_counters.push_back(3792);
        internal_counters.push_back(4245);
        internal_counters.push_back(4698);
        internal_counters.push_back(5151);
        internal_counters.push_back(5604);
        internal_counters.push_back(6057);
        internal_counters.push_back(6510);
        internal_counters.push_back(6963);

        c.DefineDerivedCounter("CBColorAndMaskRead", "ColorBuffer", "Total number of bytes read from the color and mask buffers.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "da41660e-eb6f-32ec-8a64-b32ca17bd7eb");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(158);
        internal_counters.push_back(611);
        internal_counters.push_back(1064);
        internal_counters.push_back(1517);
        internal_counters.push_back(1970);
        internal_counters.push_back(2423);
        internal_counters.push_back(2876);
        internal_counters.push_back(3329);
        internal_counters.push_back(3782);
        internal_counters.push_back(4235);
        internal_counters.push_back(4688);
        internal_counters.push_back(5141);
        internal_counters.push_back(5594);
        internal_counters.push_back(6047);
        internal_counters.push_back(6500);
        internal_counters.push_back(6953);

        c.DefineDerivedCounter("CBMemWritten", "ColorBuffer", "Number of bytes written to the color buffer.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "550f8ff8-60b6-a6bf-87d0-25ac9e87de70");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(297);
        internal_counters.push_back(750);
        internal_counters.push_back(1203);
        internal_counters.push_back(1656);
        internal_counters.push_back(2109);
        internal_counters.push_back(2562);
        internal_counters.push_back(3015);
        internal_counters.push_back(3468);
        internal_counters.push_back(3921);
        internal_counters.push_back(4374);
        internal_counters.push_back(4827);
        internal_counters.push_back(5280);
        internal_counters.push_back(5733);
        internal_counters.push_back(6186);
        internal_counters.push_back(6639);
        internal_counters.push_back(7092);
        internal_counters.push_back(156);
        internal_counters.push_back(609);
        internal_counters.push_back(1062);
        internal_counters.push_back(1515);
        internal_counters.push_back(1968);
        internal_counters.push_back(2421);
        internal_counters.push_back(2874);
        internal_counters.push_back(3327);
        internal_counters.push_back(3780);
        internal_counters.push_back(4233);
        internal_counters.push_back(4686);
        internal_counters.push_back(5139);
        internal_counters.push_back(5592);
        internal_counters.push_back(6045);
        internal_counters.push_back(6498);
        internal_counters.push_back(6951);
        internal_counters.push_back(157);
        internal_counters.push_back(610);
        internal_counters.push_back(1063);
        internal_counters.push_back(1516);
        internal_counters.push_back(1969);
        internal_counters.push_back(2422);
        internal_counters.push_back(2875);
        internal_counters.push_back(3328);
        internal_counters.push_back(3781);
        internal_counters.push_back(4234);
        internal_counters.push_back(4687);
        internal_counters.push_back(5140);
        internal_counters.push_back(5593);
        internal_counters.push_back(6046);
        internal_counters.push_back(6499);
        internal_counters.push_back(6952);
        internal_counters.push_back(158);
        internal_counters.push_back(611);
        internal_counters.push_back(1064);
        internal_counters.push_back(1517);
        internal_counters.push_back(1970);
        internal_counters.push_back(2423);
        internal_counters.push_back(2876);
        internal_counters.push_back(3329);
        internal_counters.push_back(3782);
        internal_counters.push_back(4235);
        internal_counters.push_back(4688);
        internal_counters.push_back(5141);
        internal_counters.push_back(5594);
        internal_counters.push_back(6047);
        internal_counters.push_back(6500);
        internal_counters.push_back(6953);

        c.DefineDerivedCounter("CBColorAndMaskWritten", "ColorBuffer", "Total number of bytes written to the color and mask buffers.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "29a04b69-8f5f-b770-a0f2-3453e2c99e49");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(202);
        internal_counters.push_back(655);
        internal_counters.push_back(1108);
        internal_counters.push_back(1561);
        internal_counters.push_back(2014);
        internal_counters.push_back(2467);
        internal_counters.push_back(2920);
        internal_counters.push_back(3373);
        internal_counters.push_back(3826);
        internal_counters.push_back(4279);
        internal_counters.push_back(4732);
        internal_counters.push_back(5185);
        internal_counters.push_back(5638);
        internal_counters.push_back(6091);
        internal_counters.push_back(6544);
        internal_counters.push_back(6997);
        internal_counters.push_back(47);
        internal_counters.push_back(500);
        internal_counters.push_back(953);
        internal_counters.push_back(1406);
        internal_counters.push_back(1859);
        internal_counters.push_back(2312);
        internal_counters.push_back(2765);
        internal_counters.push_back(3218);
        internal_counters.push_back(3671);
        internal_counters.push_back(4124);
        internal_counters.push_back(4577);
        internal_counters.push_back(5030);
        internal_counters.push_back(5483);
        internal_counters.push_back(5936);
        internal_counters.push_back(6389);
        internal_counters.push_back(6842);

        c.DefineDerivedCounter("CBSlowPixelPct", "ColorBuffer", "Percentage of pixels written to the color buffer using a half-rate or quarter-rate format.", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*,(100),min", "5775943f-0313-7e52-9638-b24a449197bc");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(202);
        internal_counters.push_back(655);
        internal_counters.push_back(1108);
        internal_counters.push_back(1561);
        internal_counters.push_back(2014);
        internal_counters.push_back(2467);
        internal_counters.push_back(2920);
        internal_counters.push_back(3373);
        internal_counters.push_back(3826);
        internal_counters.push_back(4279);
        internal_counters.push_back(4732);
        internal_counters.push_back(5185);
        internal_counters.push_back(5638);
        internal_counters.push_back(6091);
        internal_counters.push_back(6544);
        internal_counters.push_back(6997);

        c.DefineDerivedCounter("CBSlowPixelCount", "ColorBuffer", "Number of pixels written to the color buffer using a half-rate or quarter-rate format.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "47eacbb0-28c8-22b4-5c69-c00d5813bb1c");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(77787);
        internal_counters.push_back(77848);
        internal_counters.push_back(77909);
        internal_counters.push_back(77970);
        internal_counters.push_back(78031);
        internal_counters.push_back(78092);
        internal_counters.push_back(78153);
        internal_counters.push_back(78214);
        internal_counters.push_back(78275);
        internal_counters.push_back(78336);
        internal_counters.push_back(78397);
        internal_counters.push_back(78458);
        internal_counters.push_back(78519);
        internal_counters.push_back(78580);
        internal_counters.push_back(78641);
        internal_counters.push_back(78702);
        internal_counters.push_back(78763);
        internal_counters.push_back(78824);
        internal_counters.push_back(78885);
        internal_counters.push_back(78946);
        internal_counters.push_back(79007);
        internal_counters.push_back(79068);
        internal_counters.push_back(79129);
        internal_counters.push_back(79190);
        internal_counters.push_back(79251);
        internal_counters.push_back(79312);
        internal_counters.push_back(79373);
        internal_counters.push_back(79434);
        internal_counters.push_back(79495);
        internal_counters.push_back(79556);
        internal_counters.push_back(79617);
        internal_counters.push_back(79678);
        internal_counters.push_back(79739);
        internal_counters.push_back(79800);
        internal_counters.push_back(79861);
        internal_counters.push_back(79922);
        internal_counters.push_back(79983);
        internal_counters.push_back(80044);
        internal_counters.push_back(80105);
        internal_counters.push_back(80166);
        internal_counters.push_back(80227);
        internal_counters.push_back(80288);
        internal_counters.push_back(80349);
        internal_counters.push_back(80410);
        internal_counters.push_back(80471);
        internal_counters.push_back(80532);
        internal_counters.push_back(80593);
        internal_counters.push_back(80654);
        internal_counters.push_back(80715);
        internal_counters.push_back(80776);
        internal_counters.push_back(80837);
        internal_counters.push_back(80898);
        internal_counters.push_back(80959);
        internal_counters.push_back(81020);
        internal_counters.push_back(81081);
        internal_counters.push_back(81142);
        internal_counters.push_back(81203);
        internal_counters.push_back(81264);
        internal_counters.push_back(81325);
        internal_counters.push_back(81386);
        internal_counters.push_back(81447);
        internal_counters.push_back(81508);
        internal_counters.push_back(81569);
        internal_counters.push_back(81630);
        internal_counters.push_back(81691);
        internal_counters.push_back(81752);
        internal_counters.push_back(81813);
        internal_counters.push_back(81874);
        internal_counters.push_back(81935);
        internal_counters.push_back(81996);
        internal_counters.push_back(82057);
        internal_counters.push_back(82118);
        internal_counters.push_back(82179);
        internal_counters.push_back(82240);
        internal_counters.push_back(82301);
        internal_counters.push_back(82362);
        internal_counters.push_back(82423);
        internal_counters.push_back(82484);
        internal_counters.push_back(82545);
        internal_counters.push_back(82606);
        internal_counters.push_back(77796);
        internal_counters.push_back(77857);
        internal_counters.push_back(77918);
        internal_counters.push_back(77979);
        internal_counters.push_back(78040);
        internal_counters.push_back(78101);
        internal_counters.push_back(78162);
        internal_counters.push_back(78223);
        internal_counters.push_back(78284);
        internal_counters.push_back(78345);
        internal_counters.push_back(78406);
        internal_counters.push_back(78467);
        internal_counters.push_back(78528);
        internal_counters.push_back(78589);
        internal_counters.push_back(78650);
        internal_counters.push_back(78711);
        internal_counters.push_back(78772);
        internal_counters.push_back(78833);
        internal_counters.push_back(78894);
        internal_counters.push_back(78955);
        internal_counters.push_back(79016);
        internal_counters.push_back(79077);
        internal_counters.push_back(79138);
        internal_counters.push_back(79199);
        internal_counters.push_back(79260);
        internal_counters.push_back(79321);
        internal_counters.push_back(79382);
        internal_counters.push_back(79443);
        internal_counters.push_back(79504);
        internal_counters.push_back(79565);
        internal_counters.push_back(79626);
        internal_counters.push_back(79687);
        internal_counters.push_back(79748);
        internal_counters.push_back(79809);
        internal_counters.push_back(79870);
        internal_counters.push_back(79931);
        internal_counters.push_back(79992);
        internal_counters.push_back(80053);
        internal_counters.push_back(80114);
        internal_counters.push_back(80175);
        internal_counters.push_back(80236);
        internal_counters.push_back(80297);
        internal_counters.push_back(80358);
        internal_counters.push_back(80419);
        internal_counters.push_back(80480);
        internal_counters.push_back(80541);
        internal_counters.push_back(80602);
        internal_counters.push_back(80663);
        internal_counters.push_back(80724);
        internal_counters.push_back(80785);
        internal_counters.push_back(80846);
        internal_counters.push_back(80907);
        internal_counters.push_back(80968);
        internal_counters.push_back(81029);
        internal_counters.push_back(81090);
        internal_counters.push_back(81151);
        internal_counters.push_back(81212);
        internal_counters.push_back(81273);
        internal_counters.push_back(81334);
        internal_counters.push_back(81395);
        internal_counters.push_back(81456);
        internal_counters.push_back(81517);
        internal_counters.push_back(81578);
        internal_counters.push_back(81639);
        internal_counters.push_back(81700);
        internal_counters.push_back(81761);
        internal_counters.push_back(81822);
        internal_counters.push_back(81883);
        internal_counters.push_back(81944);
        internal_counters.push_back(82005);
        internal_counters.push_back(82066);
        internal_counters.push_back(82127);
        internal_counters.push_back(82188);
        internal_counters.push_back(82249);
        internal_counters.push_back(82310);
        internal_counters.push_back(82371);
        internal_counters.push_back(82432);
        internal_counters.push_back(82493);
        internal_counters.push_back(82554);
        internal_counters.push_back(82615);

        c.DefineDerivedCounter("L0CacheHit", "MemoryCache", "The percentage of read requests that hit the data in the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),(1),80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,ifnotzero", "286c786e-9a42-3371-9dea-dd54e6e612e9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(77787);
        internal_counters.push_back(77848);
        internal_counters.push_back(77909);
        internal_counters.push_back(77970);
        internal_counters.push_back(78031);
        internal_counters.push_back(78092);
        internal_counters.push_back(78153);
        internal_counters.push_back(78214);
        internal_counters.push_back(78275);
        internal_counters.push_back(78336);
        internal_counters.push_back(78397);
        internal_counters.push_back(78458);
        internal_counters.push_back(78519);
        internal_counters.push_back(78580);
        internal_counters.push_back(78641);
        internal_counters.push_back(78702);
        internal_counters.push_back(78763);
        internal_counters.push_back(78824);
        internal_counters.push_back(78885);
        internal_counters.push_back(78946);
        internal_counters.push_back(79007);
        internal_counters.push_back(79068);
        internal_counters.push_back(79129);
        internal_counters.push_back(79190);
        internal_counters.push_back(79251);
        internal_counters.push_back(79312);
        internal_counters.push_back(79373);
        internal_counters.push_back(79434);
        internal_counters.push_back(79495);
        internal_counters.push_back(79556);
        internal_counters.push_back(79617);
        internal_counters.push_back(79678);
        internal_counters.push_back(79739);
        internal_counters.push_back(79800);
        internal_counters.push_back(79861);
        internal_counters.push_back(79922);
        internal_counters.push_back(79983);
        internal_counters.push_back(80044);
        internal_counters.push_back(80105);
        internal_counters.push_back(80166);
        internal_counters.push_back(80227);
        internal_counters.push_back(80288);
        internal_counters.push_back(80349);
        internal_counters.push_back(80410);
        internal_counters.push_back(80471);
        internal_counters.push_back(80532);
        internal_counters.push_back(80593);
        internal_counters.push_back(80654);
        internal_counters.push_back(80715);
        internal_counters.push_back(80776);
        internal_counters.push_back(80837);
        internal_counters.push_back(80898);
        internal_counters.push_back(80959);
        internal_counters.push_back(81020);
        internal_counters.push_back(81081);
        internal_counters.push_back(81142);
        internal_counters.push_back(81203);
        internal_counters.push_back(81264);
        internal_counters.push_back(81325);
        internal_counters.push_back(81386);
        internal_counters.push_back(81447);
        internal_counters.push_back(81508);
        internal_counters.push_back(81569);
        internal_counters.push_back(81630);
        internal_counters.push_back(81691);
        internal_counters.push_back(81752);
        internal_counters.push_back(81813);
        internal_counters.push_back(81874);
        internal_counters.push_back(81935);
        internal_counters.push_back(81996);
        internal_counters.push_back(82057);
        internal_counters.push_back(82118);
        internal_counters.push_back(82179);
        internal_counters.push_back(82240);
        internal_counters.push_back(82301);
        internal_counters.push_back(82362);
        internal_counters.push_back(82423);
        internal_counters.push_back(82484);
        internal_counters.push_back(82545);
        internal_counters.push_back(82606);

        c.DefineDerivedCounter("L0CacheRequestCount", "MemoryCache", "The number of read requests made to the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "74983cae-ee57-2e1b-d990-5128fef84e1f");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(77787);
        internal_counters.push_back(77848);
        internal_counters.push_back(77909);
        internal_counters.push_back(77970);
        internal_counters.push_back(78031);
        internal_counters.push_back(78092);
        internal_counters.push_back(78153);
        internal_counters.push_back(78214);
        internal_counters.push_back(78275);
        internal_counters.push_back(78336);
        internal_counters.push_back(78397);
        internal_counters.push_back(78458);
        internal_counters.push_back(78519);
        internal_counters.push_back(78580);
        internal_counters.push_back(78641);
        internal_counters.push_back(78702);
        internal_counters.push_back(78763);
        internal_counters.push_back(78824);
        internal_counters.push_back(78885);
        internal_counters.push_back(78946);
        internal_counters.push_back(79007);
        internal_counters.push_back(79068);
        internal_counters.push_back(79129);
        internal_counters.push_back(79190);
        internal_counters.push_back(79251);
        internal_counters.push_back(79312);
        internal_counters.push_back(79373);
        internal_counters.push_back(79434);
        internal_counters.push_back(79495);
        internal_counters.push_back(79556);
        internal_counters.push_back(79617);
        internal_counters.push_back(79678);
        internal_counters.push_back(79739);
        internal_counters.push_back(79800);
        internal_counters.push_back(79861);
        internal_counters.push_back(79922);
        internal_counters.push_back(79983);
        internal_counters.push_back(80044);
        internal_counters.push_back(80105);
        internal_counters.push_back(80166);
        internal_counters.push_back(80227);
        internal_counters.push_back(80288);
        internal_counters.push_back(80349);
        internal_counters.push_back(80410);
        internal_counters.push_back(80471);
        internal_counters.push_back(80532);
        internal_counters.push_back(80593);
        internal_counters.push_back(80654);
        internal_counters.push_back(80715);
        internal_counters.push_back(80776);
        internal_counters.push_back(80837);
        internal_counters.push_back(80898);
        internal_counters.push_back(80959);
        internal_counters.push_back(81020);
        internal_counters.push_back(81081);
        internal_counters.push_back(81142);
        internal_counters.push_back(81203);
        internal_counters.push_back(81264);
        internal_counters.push_back(81325);
        internal_counters.push_back(81386);
        internal_counters.push_back(81447);
        internal_counters.push_back(81508);
        internal_counters.push_back(81569);
        internal_counters.push_back(81630);
        internal_counters.push_back(81691);
        internal_counters.push_back(81752);
        internal_counters.push_back(81813);
        internal_counters.push_back(81874);
        internal_counters.push_back(81935);
        internal_counters.push_back(81996);
        internal_counters.push_back(82057);
        internal_counters.push_back(82118);
        internal_counters.push_back(82179);
        internal_counters.push_back(82240);
        internal_counters.push_back(82301);
        internal_counters.push_back(82362);
        internal_counters.push_back(82423);
        internal_counters.push_back(82484);
        internal_counters.push_back(82545);
        internal_counters.push_back(82606);
        internal_counters.push_back(77796);
        internal_counters.push_back(77857);
        internal_counters.push_back(77918);
        internal_counters.push_back(77979);
        internal_counters.push_back(78040);
        internal_counters.push_back(78101);
        internal_counters.push_back(78162);
        internal_counters.push_back(78223);
        internal_counters.push_back(78284);
        internal_counters.push_back(78345);
        internal_counters.push_back(78406);
        internal_counters.push_back(78467);
        internal_counters.push_back(78528);
        internal_counters.push_back(78589);
        internal_counters.push_back(78650);
        internal_counters.push_back(78711);
        internal_counters.push_back(78772);
        internal_counters.push_back(78833);
        internal_counters.push_back(78894);
        internal_counters.push_back(78955);
        internal_counters.push_back(79016);
        internal_counters.push_back(79077);
        internal_counters.push_back(79138);
        internal_counters.push_back(79199);
        internal_counters.push_back(79260);
        internal_counters.push_back(79321);
        internal_counters.push_back(79382);
        internal_counters.push_back(79443);
        internal_counters.push_back(79504);
        internal_counters.push_back(79565);
        internal_counters.push_back(79626);
        internal_counters.push_back(79687);
        internal_counters.push_back(79748);
        internal_counters.push_back(79809);
        internal_counters.push_back(79870);
        internal_counters.push_back(79931);
        internal_counters.push_back(79992);
        internal_counters.push_back(80053);
        internal_counters.push_back(80114);
        internal_counters.push_back(80175);
        internal_counters.push_back(80236);
        internal_counters.push_back(80297);
        internal_counters.push_back(80358);
        internal_counters.push_back(80419);
        internal_counters.push_back(80480);
        internal_counters.push_back(80541);
        internal_counters.push_back(80602);
        internal_counters.push_back(80663);
        internal_counters.push_back(80724);
        internal_counters.push_back(80785);
        internal_counters.push_back(80846);
        internal_counters.push_back(80907);
        internal_counters.push_back(80968);
        internal_counters.push_back(81029);
        internal_counters.push_back(81090);
        internal_counters.push_back(81151);
        internal_counters.push_back(81212);
        internal_counters.push_back(81273);
        internal_counters.push_back(81334);
        internal_counters.push_back(81395);
        internal_counters.push_back(81456);
        internal_counters.push_back(81517);
        internal_counters.push_back(81578);
        internal_counters.push_back(81639);
        internal_counters.push_back(81700);
        internal_counters.push_back(81761);
        internal_counters.push_back(81822);
        internal_counters.push_back(81883);
        internal_counters.push_back(81944);
        internal_counters.push_back(82005);
        internal_counters.push_back(82066);
        internal_counters.push_back(82127);
        internal_counters.push_back(82188);
        internal_counters.push_back(82249);
        internal_counters.push_back(82310);
        internal_counters.push_back(82371);
        internal_counters.push_back(82432);
        internal_counters.push_back(82493);
        internal_counters.push_back(82554);
        internal_counters.push_back(82615);

        c.DefineDerivedCounter("L0CacheHitCount", "MemoryCache", "The number of read requests which result in a cache hit from the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,-", "c0de7338-069b-c5ba-ead3-c65e030cd2ac");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(77796);
        internal_counters.push_back(77857);
        internal_counters.push_back(77918);
        internal_counters.push_back(77979);
        internal_counters.push_back(78040);
        internal_counters.push_back(78101);
        internal_counters.push_back(78162);
        internal_counters.push_back(78223);
        internal_counters.push_back(78284);
        internal_counters.push_back(78345);
        internal_counters.push_back(78406);
        internal_counters.push_back(78467);
        internal_counters.push_back(78528);
        internal_counters.push_back(78589);
        internal_counters.push_back(78650);
        internal_counters.push_back(78711);
        internal_counters.push_back(78772);
        internal_counters.push_back(78833);
        internal_counters.push_back(78894);
        internal_counters.push_back(78955);
        internal_counters.push_back(79016);
        internal_counters.push_back(79077);
        internal_counters.push_back(79138);
        internal_counters.push_back(79199);
        internal_counters.push_back(79260);
        internal_counters.push_back(79321);
        internal_counters.push_back(79382);
        internal_counters.push_back(79443);
        internal_counters.push_back(79504);
        internal_counters.push_back(79565);
        internal_counters.push_back(79626);
        internal_counters.push_back(79687);
        internal_counters.push_back(79748);
        internal_counters.push_back(79809);
        internal_counters.push_back(79870);
        internal_counters.push_back(79931);
        internal_counters.push_back(79992);
        internal_counters.push_back(80053);
        internal_counters.push_back(80114);
        internal_counters.push_back(80175);
        internal_counters.push_back(80236);
        internal_counters.push_back(80297);
        internal_counters.push_back(80358);
        internal_counters.push_back(80419);
        internal_counters.push_back(80480);
        internal_counters.push_back(80541);
        internal_counters.push_back(80602);
        internal_counters.push_back(80663);
        internal_counters.push_back(80724);
        internal_counters.push_back(80785);
        internal_counters.push_back(80846);
        internal_counters.push_back(80907);
        internal_counters.push_back(80968);
        internal_counters.push_back(81029);
        internal_counters.push_back(81090);
        internal_counters.push_back(81151);
        internal_counters.push_back(81212);
        internal_counters.push_back(81273);
        internal_counters.push_back(81334);
        internal_counters.push_back(81395);
        internal_counters.push_back(81456);
        internal_counters.push_back(81517);
        internal_counters.push_back(81578);
        internal_counters.push_back(81639);
        internal_counters.push_back(81700);
        internal_counters.push_back(81761);
        internal_counters.push_back(81822);
        internal_counters.push_back(81883);
        internal_counters.push_back(81944);
        internal_counters.push_back(82005);
        internal_counters.push_back(82066);
        internal_counters.push_back(82127);
        internal_counters.push_back(82188);
        internal_counters.push_back(82249);
        internal_counters.push_back(82310);
        internal_counters.push_back(82371);
        internal_counters.push_back(82432);
        internal_counters.push_back(82493);
        internal_counters.push_back(82554);
        internal_counters.push_back(82615);

        c.DefineDerivedCounter("L0CacheMissCount", "MemoryCache", "The number of read requests which result in a cache miss from the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "a2f08766-ea1b-6eae-6eaf-faa04125d3e6");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(93423);
        internal_counters.push_back(93506);
        internal_counters.push_back(93589);
        internal_counters.push_back(93672);
        internal_counters.push_back(93755);
        internal_counters.push_back(93838);
        internal_counters.push_back(93921);
        internal_counters.push_back(94004);
        internal_counters.push_back(94087);
        internal_counters.push_back(94170);
        internal_counters.push_back(94253);
        internal_counters.push_back(94336);
        internal_counters.push_back(94419);
        internal_counters.push_back(94502);
        internal_counters.push_back(94585);
        internal_counters.push_back(94668);
        internal_counters.push_back(94751);
        internal_counters.push_back(94834);
        internal_counters.push_back(94917);
        internal_counters.push_back(95000);
        internal_counters.push_back(95083);
        internal_counters.push_back(95166);
        internal_counters.push_back(95249);
        internal_counters.push_back(95332);
        internal_counters.push_back(95415);
        internal_counters.push_back(95498);
        internal_counters.push_back(95581);
        internal_counters.push_back(95664);
        internal_counters.push_back(95747);
        internal_counters.push_back(95830);
        internal_counters.push_back(95913);
        internal_counters.push_back(95996);
        internal_counters.push_back(93427);
        internal_counters.push_back(93510);
        internal_counters.push_back(93593);
        internal_counters.push_back(93676);
        internal_counters.push_back(93759);
        internal_counters.push_back(93842);
        internal_counters.push_back(93925);
        internal_counters.push_back(94008);
        internal_counters.push_back(94091);
        internal_counters.push_back(94174);
        internal_counters.push_back(94257);
        internal_counters.push_back(94340);
        internal_counters.push_back(94423);
        internal_counters.push_back(94506);
        internal_counters.push_back(94589);
        internal_counters.push_back(94672);
        internal_counters.push_back(94755);
        internal_counters.push_back(94838);
        internal_counters.push_back(94921);
        internal_counters.push_back(95004);
        internal_counters.push_back(95087);
        internal_counters.push_back(95170);
        internal_counters.push_back(95253);
        internal_counters.push_back(95336);
        internal_counters.push_back(95419);
        internal_counters.push_back(95502);
        internal_counters.push_back(95585);
        internal_counters.push_back(95668);
        internal_counters.push_back(95751);
        internal_counters.push_back(95834);
        internal_counters.push_back(95917);
        internal_counters.push_back(96000);

        c.DefineDerivedCounter("L1CacheHit", "MemoryCache", "The percentage of read or write requests that hit the data in the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),(1),32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum32,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,ifnotzero", "5a34915a-24b8-8baf-2bf8-5878e7894ae3");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(93423);
        internal_counters.push_back(93506);
        internal_counters.push_back(93589);
        internal_counters.push_back(93672);
        internal_counters.push_back(93755);
        internal_counters.push_back(93838);
        internal_counters.push_back(93921);
        internal_counters.push_back(94004);
        internal_counters.push_back(94087);
        internal_counters.push_back(94170);
        internal_counters.push_back(94253);
        internal_counters.push_back(94336);
        internal_counters.push_back(94419);
        internal_counters.push_back(94502);
        internal_counters.push_back(94585);
        internal_counters.push_back(94668);
        internal_counters.push_back(94751);
        internal_counters.push_back(94834);
        internal_counters.push_back(94917);
        internal_counters.push_back(95000);
        internal_counters.push_back(95083);
        internal_counters.push_back(95166);
        internal_counters.push_back(95249);
        internal_counters.push_back(95332);
        internal_counters.push_back(95415);
        internal_counters.push_back(95498);
        internal_counters.push_back(95581);
        internal_counters.push_back(95664);
        internal_counters.push_back(95747);
        internal_counters.push_back(95830);
        internal_counters.push_back(95913);
        internal_counters.push_back(95996);

        c.DefineDerivedCounter("L1CacheRequestCount", "MemoryCache", "The number of read or write requests made to the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32", "29c76c67-4611-205d-0b88-d08668df03c5");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(93423);
        internal_counters.push_back(93506);
        internal_counters.push_back(93589);
        internal_counters.push_back(93672);
        internal_counters.push_back(93755);
        internal_counters.push_back(93838);
        internal_counters.push_back(93921);
        internal_counters.push_back(94004);
        internal_counters.push_back(94087);
        internal_counters.push_back(94170);
        internal_counters.push_back(94253);
        internal_counters.push_back(94336);
        internal_counters.push_back(94419);
        internal_counters.push_back(94502);
        internal_counters.push_back(94585);
        internal_counters.push_back(94668);
        internal_counters.push_back(94751);
        internal_counters.push_back(94834);
        internal_counters.push_back(94917);
        internal_counters.push_back(95000);
        internal_counters.push_back(95083);
        internal_counters.push_back(95166);
        internal_counters.push_back(95249);
        internal_counters.push_back(95332);
        internal_counters.push_back(95415);
        internal_counters.push_back(95498);
        internal_counters.push_back(95581);
        internal_counters.push_back(95664);
        internal_counters.push_back(95747);
        internal_counters.push_back(95830);
        internal_counters.push_back(95913);
        internal_counters.push_back(95996);
        internal_counters.push_back(93427);
        internal_counters.push_back(93510);
        internal_counters.push_back(93593);
        internal_counters.push_back(93676);
        internal_counters.push_back(93759);
        internal_counters.push_back(93842);
        internal_counters.push_back(93925);
        internal_counters.push_back(94008);
        internal_counters.push_back(94091);
        internal_counters.push_back(94174);
        internal_counters.push_back(94257);
        internal_counters.push_back(94340);
        internal_counters.push_back(94423);
        internal_counters.push_back(94506);
        internal_counters.push_back(94589);
        internal_counters.push_back(94672);
        internal_counters.push_back(94755);
        internal_counters.push_back(94838);
        internal_counters.push_back(94921);
        internal_counters.push_back(95004);
        internal_counters.push_back(95087);
        internal_counters.push_back(95170);
        internal_counters.push_back(95253);
        internal_counters.push_back(95336);
        internal_counters.push_back(95419);
        internal_counters.push_back(95502);
        internal_counters.push_back(95585);
        internal_counters.push_back(95668);
        internal_counters.push_back(95751);
        internal_counters.push_back(95834);
        internal_counters.push_back(95917);
        internal_counters.push_back(96000);

        c.DefineDerivedCounter("L1CacheHitCount", "MemoryCache", "The number of read or write requests which result in a cache hit from the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum32,-", "1ae150c3-f2d0-82c6-a51b-a77fd8d5fc33");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(93427);
        internal_counters.push_back(93510);
        internal_counters.push_back(93593);
        internal_counters.push_back(93676);
        internal_counters.push_back(93759);
        internal_counters.push_back(93842);
        internal_counters.push_back(93925);
        internal_counters.push_back(94008);
        internal_counters.push_back(94091);
        internal_counters.push_back(94174);
        internal_counters.push_back(94257);
        internal_counters.push_back(94340);
        internal_counters.push_back(94423);
        internal_counters.push_back(94506);
        internal_counters.push_back(94589);
        internal_counters.push_back(94672);
        internal_counters.push_back(94755);
        internal_counters.push_back(94838);
        internal_counters.push_back(94921);
        internal_counters.push_back(95004);
        internal_counters.push_back(95087);
        internal_counters.push_back(95170);
        internal_counters.push_back(95253);
        internal_counters.push_back(95336);
        internal_counters.push_back(95419);
        internal_counters.push_back(95502);
        internal_counters.push_back(95585);
        internal_counters.push_back(95668);
        internal_counters.push_back(95751);
        internal_counters.push_back(95834);
        internal_counters.push_back(95917);
        internal_counters.push_back(96000);

        c.DefineDerivedCounter("L1CacheMissCount", "MemoryCache", "The number of read or write requests which result in a cache miss from the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32", "71bfec6d-257b-849d-e212-cdf5c1b1de65");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(97648);
        internal_counters.push_back(97902);
        internal_counters.push_back(98156);
        internal_counters.push_back(98410);
        internal_counters.push_back(98664);
        internal_counters.push_back(98918);
        internal_counters.push_back(99172);
        internal_counters.push_back(99426);
        internal_counters.push_back(99680);
        internal_counters.push_back(99934);
        internal_counters.push_back(100188);
        internal_counters.push_back(100442);
        internal_counters.push_back(100696);
        internal_counters.push_back(100950);
        internal_counters.push_back(101204);
        internal_counters.push_back(101458);
        internal_counters.push_back(97688);
        internal_counters.push_back(97942);
        internal_counters.push_back(98196);
        internal_counters.push_back(98450);
        internal_counters.push_back(98704);
        internal_counters.push_back(98958);
        internal_counters.push_back(99212);
        internal_counters.push_back(99466);
        internal_counters.push_back(99720);
        internal_counters.push_back(99974);
        internal_counters.push_back(100228);
        internal_counters.push_back(100482);
        internal_counters.push_back(100736);
        internal_counters.push_back(100990);
        internal_counters.push_back(101244);
        internal_counters.push_back(101498);

        c.DefineDerivedCounter("L2CacheHit", "MemoryCache", "The percentage of read or write requests that hit the data in the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "(0),(1),16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,ifnotzero", "47694e4d-6ce6-f387-080d-b1f3d00b73ac");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(97688);
        internal_counters.push_back(97942);
        internal_counters.push_back(98196);
        internal_counters.push_back(98450);
        internal_counters.push_back(98704);
        internal_counters.push_back(98958);
        internal_counters.push_back(99212);
        internal_counters.push_back(99466);
        internal_counters.push_back(99720);
        internal_counters.push_back(99974);
        internal_counters.push_back(100228);
        internal_counters.push_back(100482);
        internal_counters.push_back(100736);
        internal_counters.push_back(100990);
        internal_counters.push_back(101244);
        internal_counters.push_back(101498);
        internal_counters.push_back(97648);
        internal_counters.push_back(97902);
        internal_counters.push_back(98156);
        internal_counters.push_back(98410);
        internal_counters.push_back(98664);
        internal_counters.push_back(98918);
        internal_counters.push_back(99172);
        internal_counters.push_back(99426);
        internal_counters.push_back(99680);
        internal_counters.push_back(99934);
        internal_counters.push_back(100188);
        internal_counters.push_back(100442);
        internal_counters.push_back(100696);
        internal_counters.push_back(100950);
        internal_counters.push_back(101204);
        internal_counters.push_back(101458);

        c.DefineDerivedCounter("L2CacheMiss", "MemoryCache", "The percentage of read or write requests that miss the data in the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size. Value range: 0% (optimal) to 100% (all miss).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*", "8aee5458-a58e-11b6-5131-7f19ed070117");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(97648);
        internal_counters.push_back(97902);
        internal_counters.push_back(98156);
        internal_counters.push_back(98410);
        internal_counters.push_back(98664);
        internal_counters.push_back(98918);
        internal_counters.push_back(99172);
        internal_counters.push_back(99426);
        internal_counters.push_back(99680);
        internal_counters.push_back(99934);
        internal_counters.push_back(100188);
        internal_counters.push_back(100442);
        internal_counters.push_back(100696);
        internal_counters.push_back(100950);
        internal_counters.push_back(101204);
        internal_counters.push_back(101458);

        c.DefineDerivedCounter("L2CacheRequestCount", "MemoryCache", "The number of read or write requests made to the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "21e9219c-e725-0d96-06b1-b21698b736b2");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(97648);
        internal_counters.push_back(97902);
        internal_counters.push_back(98156);
        internal_counters.push_back(98410);
        internal_counters.push_back(98664);
        internal_counters.push_back(98918);
        internal_counters.push_back(99172);
        internal_counters.push_back(99426);
        internal_counters.push_back(99680);
        internal_counters.push_back(99934);
        internal_counters.push_back(100188);
        internal_counters.push_back(100442);
        internal_counters.push_back(100696);
        internal_counters.push_back(100950);
        internal_counters.push_back(101204);
        internal_counters.push_back(101458);
        internal_counters.push_back(97688);
        internal_counters.push_back(97942);
        internal_counters.push_back(98196);
        internal_counters.push_back(98450);
        internal_counters.push_back(98704);
        internal_counters.push_back(98958);
        internal_counters.push_back(99212);
        internal_counters.push_back(99466);
        internal_counters.push_back(99720);
        internal_counters.push_back(99974);
        internal_counters.push_back(100228);
        internal_counters.push_back(100482);
        internal_counters.push_back(100736);
        internal_counters.push_back(100990);
        internal_counters.push_back(101244);
        internal_counters.push_back(101498);

        c.DefineDerivedCounter("L2CacheHitCount", "MemoryCache", "The number of read or write requests which result in a cache hit from the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-", "29ddcb92-d3dd-951b-1b23-efe52e4eeee4");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(97688);
        internal_counters.push_back(97942);
        internal_counters.push_back(98196);
        internal_counters.push_back(98450);
        internal_counters.push_back(98704);
        internal_counters.push_back(98958);
        internal_counters.push_back(99212);
        internal_counters.push_back(99466);
        internal_counters.push_back(99720);
        internal_counters.push_back(99974);
        internal_counters.push_back(100228);
        internal_counters.push_back(100482);
        internal_counters.push_back(100736);
        internal_counters.push_back(100990);
        internal_counters.push_back(101244);
        internal_counters.push_back(101498);

        c.DefineDerivedCounter("L2CacheMissCount", "MemoryCache", "The number of read or write requests which result in a cache miss from the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.", kGpaDataTypeFloat64, kGpaUsageTypeItems, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "376eec7b-ab25-9012-06b5-63291a17fd47");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(97744);
        internal_counters.push_back(97998);
        internal_counters.push_back(98252);
        internal_counters.push_back(98506);
        internal_counters.push_back(98760);
        internal_counters.push_back(99014);
        internal_counters.push_back(99268);
        internal_counters.push_back(99522);
        internal_counters.push_back(99776);
        internal_counters.push_back(100030);
        internal_counters.push_back(100284);
        internal_counters.push_back(100538);
        internal_counters.push_back(100792);
        internal_counters.push_back(101046);
        internal_counters.push_back(101300);
        internal_counters.push_back(101554);
        internal_counters.push_back(97745);
        internal_counters.push_back(97999);
        internal_counters.push_back(98253);
        internal_counters.push_back(98507);
        internal_counters.push_back(98761);
        internal_counters.push_back(99015);
        internal_counters.push_back(99269);
        internal_counters.push_back(99523);
        internal_counters.push_back(99777);
        internal_counters.push_back(100031);
        internal_counters.push_back(100285);
        internal_counters.push_back(100539);
        internal_counters.push_back(100793);
        internal_counters.push_back(101047);
        internal_counters.push_back(101301);
        internal_counters.push_back(101555);
        internal_counters.push_back(97746);
        internal_counters.push_back(98000);
        internal_counters.push_back(98254);
        internal_counters.push_back(98508);
        internal_counters.push_back(98762);
        internal_counters.push_back(99016);
        internal_counters.push_back(99270);
        internal_counters.push_back(99524);
        internal_counters.push_back(99778);
        internal_counters.push_back(100032);
        internal_counters.push_back(100286);
        internal_counters.push_back(100540);
        internal_counters.push_back(100794);
        internal_counters.push_back(101048);
        internal_counters.push_back(101302);
        internal_counters.push_back(101556);
        internal_counters.push_back(97747);
        internal_counters.push_back(98001);
        internal_counters.push_back(98255);
        internal_counters.push_back(98509);
        internal_counters.push_back(98763);
        internal_counters.push_back(99017);
        internal_counters.push_back(99271);
        internal_counters.push_back(99525);
        internal_counters.push_back(99779);
        internal_counters.push_back(100033);
        internal_counters.push_back(100287);
        internal_counters.push_back(100541);
        internal_counters.push_back(100795);
        internal_counters.push_back(101049);
        internal_counters.push_back(101303);
        internal_counters.push_back(101557);

        c.DefineDerivedCounter("FetchSize", "GlobalMemory", "The total bytes fetched from the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(64),*,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum16,(96),*,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum16,(128),*,sum4", "664bb3ef-6eca-86b1-1e2d-30cb897b5fa9");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(97728);
        internal_counters.push_back(97982);
        internal_counters.push_back(98236);
        internal_counters.push_back(98490);
        internal_counters.push_back(98744);
        internal_counters.push_back(98998);
        internal_counters.push_back(99252);
        internal_counters.push_back(99506);
        internal_counters.push_back(99760);
        internal_counters.push_back(100014);
        internal_counters.push_back(100268);
        internal_counters.push_back(100522);
        internal_counters.push_back(100776);
        internal_counters.push_back(101030);
        internal_counters.push_back(101284);
        internal_counters.push_back(101538);
        internal_counters.push_back(97730);
        internal_counters.push_back(97984);
        internal_counters.push_back(98238);
        internal_counters.push_back(98492);
        internal_counters.push_back(98746);
        internal_counters.push_back(99000);
        internal_counters.push_back(99254);
        internal_counters.push_back(99508);
        internal_counters.push_back(99762);
        internal_counters.push_back(100016);
        internal_counters.push_back(100270);
        internal_counters.push_back(100524);
        internal_counters.push_back(100778);
        internal_counters.push_back(101032);
        internal_counters.push_back(101286);
        internal_counters.push_back(101540);

        c.DefineDerivedCounter("WriteSize", "GlobalMemory", "The total bytes written to the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeBytes, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(64),*,+", "f96f2c16-b1b4-4ec4-229c-fc82e6f80a82");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(43553);
        internal_counters.push_back(43789);
        internal_counters.push_back(44025);
        internal_counters.push_back(44261);
        internal_counters.push_back(44497);
        internal_counters.push_back(44733);
        internal_counters.push_back(44969);
        internal_counters.push_back(45205);
        internal_counters.push_back(45441);
        internal_counters.push_back(45677);
        internal_counters.push_back(45913);
        internal_counters.push_back(46149);
        internal_counters.push_back(46385);
        internal_counters.push_back(46621);
        internal_counters.push_back(46857);
        internal_counters.push_back(47093);
        internal_counters.push_back(47329);
        internal_counters.push_back(47565);
        internal_counters.push_back(47801);
        internal_counters.push_back(48037);
        internal_counters.push_back(48273);
        internal_counters.push_back(48509);
        internal_counters.push_back(48745);
        internal_counters.push_back(48981);
        internal_counters.push_back(49217);
        internal_counters.push_back(49453);
        internal_counters.push_back(49689);
        internal_counters.push_back(49925);
        internal_counters.push_back(50161);
        internal_counters.push_back(50397);
        internal_counters.push_back(50633);
        internal_counters.push_back(50869);
        internal_counters.push_back(51105);
        internal_counters.push_back(51341);
        internal_counters.push_back(51577);
        internal_counters.push_back(51813);
        internal_counters.push_back(52049);
        internal_counters.push_back(52285);
        internal_counters.push_back(52521);
        internal_counters.push_back(52757);
        internal_counters.push_back(52993);
        internal_counters.push_back(53229);
        internal_counters.push_back(53465);
        internal_counters.push_back(53701);
        internal_counters.push_back(53937);
        internal_counters.push_back(54173);
        internal_counters.push_back(54409);
        internal_counters.push_back(54645);
        internal_counters.push_back(54881);
        internal_counters.push_back(55117);
        internal_counters.push_back(55353);
        internal_counters.push_back(55589);
        internal_counters.push_back(55825);
        internal_counters.push_back(56061);
        internal_counters.push_back(56297);
        internal_counters.push_back(56533);
        internal_counters.push_back(56769);
        internal_counters.push_back(57005);
        internal_counters.push_back(57241);
        internal_counters.push_back(57477);
        internal_counters.push_back(57713);
        internal_counters.push_back(57949);
        internal_counters.push_back(58185);
        internal_counters.push_back(58421);
        internal_counters.push_back(58657);
        internal_counters.push_back(58893);
        internal_counters.push_back(59129);
        internal_counters.push_back(59365);
        internal_counters.push_back(59601);
        internal_counters.push_back(59837);
        internal_counters.push_back(60073);
        internal_counters.push_back(60309);
        internal_counters.push_back(60545);
        internal_counters.push_back(60781);
        internal_counters.push_back(61017);
        internal_counters.push_back(61253);
        internal_counters.push_back(61489);
        internal_counters.push_back(61725);
        internal_counters.push_back(61961);
        internal_counters.push_back(62197);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("MemUnitBusy", "GlobalMemory", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*", "a1efa380-4a72-e066-e06a-2ab71a488521");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(43553);
        internal_counters.push_back(43789);
        internal_counters.push_back(44025);
        internal_counters.push_back(44261);
        internal_counters.push_back(44497);
        internal_counters.push_back(44733);
        internal_counters.push_back(44969);
        internal_counters.push_back(45205);
        internal_counters.push_back(45441);
        internal_counters.push_back(45677);
        internal_counters.push_back(45913);
        internal_counters.push_back(46149);
        internal_counters.push_back(46385);
        internal_counters.push_back(46621);
        internal_counters.push_back(46857);
        internal_counters.push_back(47093);
        internal_counters.push_back(47329);
        internal_counters.push_back(47565);
        internal_counters.push_back(47801);
        internal_counters.push_back(48037);
        internal_counters.push_back(48273);
        internal_counters.push_back(48509);
        internal_counters.push_back(48745);
        internal_counters.push_back(48981);
        internal_counters.push_back(49217);
        internal_counters.push_back(49453);
        internal_counters.push_back(49689);
        internal_counters.push_back(49925);
        internal_counters.push_back(50161);
        internal_counters.push_back(50397);
        internal_counters.push_back(50633);
        internal_counters.push_back(50869);
        internal_counters.push_back(51105);
        internal_counters.push_back(51341);
        internal_counters.push_back(51577);
        internal_counters.push_back(51813);
        internal_counters.push_back(52049);
        internal_counters.push_back(52285);
        internal_counters.push_back(52521);
        internal_counters.push_back(52757);
        internal_counters.push_back(52993);
        internal_counters.push_back(53229);
        internal_counters.push_back(53465);
        internal_counters.push_back(53701);
        internal_counters.push_back(53937);
        internal_counters.push_back(54173);
        internal_counters.push_back(54409);
        internal_counters.push_back(54645);
        internal_counters.push_back(54881);
        internal_counters.push_back(55117);
        internal_counters.push_back(55353);
        internal_counters.push_back(55589);
        internal_counters.push_back(55825);
        internal_counters.push_back(56061);
        internal_counters.push_back(56297);
        internal_counters.push_back(56533);
        internal_counters.push_back(56769);
        internal_counters.push_back(57005);
        internal_counters.push_back(57241);
        internal_counters.push_back(57477);
        internal_counters.push_back(57713);
        internal_counters.push_back(57949);
        internal_counters.push_back(58185);
        internal_counters.push_back(58421);
        internal_counters.push_back(58657);
        internal_counters.push_back(58893);
        internal_counters.push_back(59129);
        internal_counters.push_back(59365);
        internal_counters.push_back(59601);
        internal_counters.push_back(59837);
        internal_counters.push_back(60073);
        internal_counters.push_back(60309);
        internal_counters.push_back(60545);
        internal_counters.push_back(60781);
        internal_counters.push_back(61017);
        internal_counters.push_back(61253);
        internal_counters.push_back(61489);
        internal_counters.push_back(61725);
        internal_counters.push_back(61961);
        internal_counters.push_back(62197);

        c.DefineDerivedCounter("MemUnitBusyCycles", "GlobalMemory", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalledCycles). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80", "168f077c-4797-b2f5-717f-105c725266c8");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(77814);
        internal_counters.push_back(77875);
        internal_counters.push_back(77936);
        internal_counters.push_back(77997);
        internal_counters.push_back(78058);
        internal_counters.push_back(78119);
        internal_counters.push_back(78180);
        internal_counters.push_back(78241);
        internal_counters.push_back(78302);
        internal_counters.push_back(78363);
        internal_counters.push_back(78424);
        internal_counters.push_back(78485);
        internal_counters.push_back(78546);
        internal_counters.push_back(78607);
        internal_counters.push_back(78668);
        internal_counters.push_back(78729);
        internal_counters.push_back(78790);
        internal_counters.push_back(78851);
        internal_counters.push_back(78912);
        internal_counters.push_back(78973);
        internal_counters.push_back(79034);
        internal_counters.push_back(79095);
        internal_counters.push_back(79156);
        internal_counters.push_back(79217);
        internal_counters.push_back(79278);
        internal_counters.push_back(79339);
        internal_counters.push_back(79400);
        internal_counters.push_back(79461);
        internal_counters.push_back(79522);
        internal_counters.push_back(79583);
        internal_counters.push_back(79644);
        internal_counters.push_back(79705);
        internal_counters.push_back(79766);
        internal_counters.push_back(79827);
        internal_counters.push_back(79888);
        internal_counters.push_back(79949);
        internal_counters.push_back(80010);
        internal_counters.push_back(80071);
        internal_counters.push_back(80132);
        internal_counters.push_back(80193);
        internal_counters.push_back(80254);
        internal_counters.push_back(80315);
        internal_counters.push_back(80376);
        internal_counters.push_back(80437);
        internal_counters.push_back(80498);
        internal_counters.push_back(80559);
        internal_counters.push_back(80620);
        internal_counters.push_back(80681);
        internal_counters.push_back(80742);
        internal_counters.push_back(80803);
        internal_counters.push_back(80864);
        internal_counters.push_back(80925);
        internal_counters.push_back(80986);
        internal_counters.push_back(81047);
        internal_counters.push_back(81108);
        internal_counters.push_back(81169);
        internal_counters.push_back(81230);
        internal_counters.push_back(81291);
        internal_counters.push_back(81352);
        internal_counters.push_back(81413);
        internal_counters.push_back(81474);
        internal_counters.push_back(81535);
        internal_counters.push_back(81596);
        internal_counters.push_back(81657);
        internal_counters.push_back(81718);
        internal_counters.push_back(81779);
        internal_counters.push_back(81840);
        internal_counters.push_back(81901);
        internal_counters.push_back(81962);
        internal_counters.push_back(82023);
        internal_counters.push_back(82084);
        internal_counters.push_back(82145);
        internal_counters.push_back(82206);
        internal_counters.push_back(82267);
        internal_counters.push_back(82328);
        internal_counters.push_back(82389);
        internal_counters.push_back(82450);
        internal_counters.push_back(82511);
        internal_counters.push_back(82572);
        internal_counters.push_back(82633);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("MemUnitStalled", "GlobalMemory", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*", "465ba54f-d250-1453-790a-731b10d230b1");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(77814);
        internal_counters.push_back(77875);
        internal_counters.push_back(77936);
        internal_counters.push_back(77997);
        internal_counters.push_back(78058);
        internal_counters.push_back(78119);
        internal_counters.push_back(78180);
        internal_counters.push_back(78241);
        internal_counters.push_back(78302);
        internal_counters.push_back(78363);
        internal_counters.push_back(78424);
        internal_counters.push_back(78485);
        internal_counters.push_back(78546);
        internal_counters.push_back(78607);
        internal_counters.push_back(78668);
        internal_counters.push_back(78729);
        internal_counters.push_back(78790);
        internal_counters.push_back(78851);
        internal_counters.push_back(78912);
        internal_counters.push_back(78973);
        internal_counters.push_back(79034);
        internal_counters.push_back(79095);
        internal_counters.push_back(79156);
        internal_counters.push_back(79217);
        internal_counters.push_back(79278);
        internal_counters.push_back(79339);
        internal_counters.push_back(79400);
        internal_counters.push_back(79461);
        internal_counters.push_back(79522);
        internal_counters.push_back(79583);
        internal_counters.push_back(79644);
        internal_counters.push_back(79705);
        internal_counters.push_back(79766);
        internal_counters.push_back(79827);
        internal_counters.push_back(79888);
        internal_counters.push_back(79949);
        internal_counters.push_back(80010);
        internal_counters.push_back(80071);
        internal_counters.push_back(80132);
        internal_counters.push_back(80193);
        internal_counters.push_back(80254);
        internal_counters.push_back(80315);
        internal_counters.push_back(80376);
        internal_counters.push_back(80437);
        internal_counters.push_back(80498);
        internal_counters.push_back(80559);
        internal_counters.push_back(80620);
        internal_counters.push_back(80681);
        internal_counters.push_back(80742);
        internal_counters.push_back(80803);
        internal_counters.push_back(80864);
        internal_counters.push_back(80925);
        internal_counters.push_back(80986);
        internal_counters.push_back(81047);
        internal_counters.push_back(81108);
        internal_counters.push_back(81169);
        internal_counters.push_back(81230);
        internal_counters.push_back(81291);
        internal_counters.push_back(81352);
        internal_counters.push_back(81413);
        internal_counters.push_back(81474);
        internal_counters.push_back(81535);
        internal_counters.push_back(81596);
        internal_counters.push_back(81657);
        internal_counters.push_back(81718);
        internal_counters.push_back(81779);
        internal_counters.push_back(81840);
        internal_counters.push_back(81901);
        internal_counters.push_back(81962);
        internal_counters.push_back(82023);
        internal_counters.push_back(82084);
        internal_counters.push_back(82145);
        internal_counters.push_back(82206);
        internal_counters.push_back(82267);
        internal_counters.push_back(82328);
        internal_counters.push_back(82389);
        internal_counters.push_back(82450);
        internal_counters.push_back(82511);
        internal_counters.push_back(82572);
        internal_counters.push_back(82633);

        c.DefineDerivedCounter("MemUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the memory unit is stalled.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80", "2745659a-0e40-bace-3b9b-86a54f8e4623");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(97733);
        internal_counters.push_back(97987);
        internal_counters.push_back(98241);
        internal_counters.push_back(98495);
        internal_counters.push_back(98749);
        internal_counters.push_back(99003);
        internal_counters.push_back(99257);
        internal_counters.push_back(99511);
        internal_counters.push_back(99765);
        internal_counters.push_back(100019);
        internal_counters.push_back(100273);
        internal_counters.push_back(100527);
        internal_counters.push_back(100781);
        internal_counters.push_back(101035);
        internal_counters.push_back(101289);
        internal_counters.push_back(101543);
        internal_counters.push_back(24);

        c.DefineDerivedCounter("WriteUnitStalled", "GlobalMemory", "The percentage of GPUTime the Write unit is stalled. Value range: 0% to 100% (bad).", kGpaDataTypeFloat64, kGpaUsageTypePercentage, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "594ad3ce-d1ec-10fc-7d59-25738e397d72");
    }
    {
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(97733);
        internal_counters.push_back(97987);
        internal_counters.push_back(98241);
        internal_counters.push_back(98495);
        internal_counters.push_back(98749);
        internal_counters.push_back(99003);
        internal_counters.push_back(99257);
        internal_counters.push_back(99511);
        internal_counters.push_back(99765);
        internal_counters.push_back(100019);
        internal_counters.push_back(100273);
        internal_counters.push_back(100527);
        internal_counters.push_back(100781);
        internal_counters.push_back(101035);
        internal_counters.push_back(101289);
        internal_counters.push_back(101543);

        c.DefineDerivedCounter("WriteUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the Write unit is stalled.", kGpaDataTypeFloat64, kGpaUsageTypeCycles, internal_counters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "ede3305e-abd4-d6bf-6b00-ffc57a29fce3");
    }
}

