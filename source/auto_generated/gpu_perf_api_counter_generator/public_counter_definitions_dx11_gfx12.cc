//==============================================================================
// Copyright (c) 2010-2025 Advanced Micro Devices, Inc. All rights reserved.
/// @author AMD Developer Tools Team
/// @file
/// @brief Public Counter Definitions for DX11 GFX12.
//==============================================================================

// clang-format off
#include "gpu_perf_api_counter_generator/gpa_counter.h"
#include "auto_generated/gpu_perf_api_counter_generator/public_counter_definitions_dx11_gfx12.h"

// *** Note, this is an auto-generated file. Do not edit. Execute PublicCounterCompiler to rebuild.

void AutoDefinePublicDerivedCountersDx11Gfx12(GpaDerivedCounters& c)
{
    { // Index:0
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(185658);

        c.DefineDerivedCounter("GPUTime",
                               "Timing",
                               "Time this API command took to execute on the GPU in nanoseconds from the time the previous command reached the bottom of the pipeline (BOP) to the time this command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeNanoseconds,
                               true,
                               false,
                               internal_counters,
                               "0,TS_FREQ,/,(1000000000),*",
                               "cbd338f2-de6c-7b14-92ad-ba724ca2e501");
    }
    { // Index:1
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(276);
        internal_counters.push_back(252);

        c.DefineDerivedCounter("GPUBusy",
                               "Timing",
                               "The percentage of time the GPU command processor was busy.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,/,(100),*,(100),min",
                               "b1ba5363-1abc-fe66-2fdd-1fe6ee8989a0");
    }
    { // Index:2
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(276);

        c.DefineDerivedCounter("GPUBusyCycles",
                               "Timing",
                               "Number of GPU cycles that the GPU command processor was busy.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "0",
                               "451cb045-23af-ac44-4603-d5832fa041d9");
    }
    { // Index:3
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(99262);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("TessellatorBusy",
                               "Timing",
                               "The percentage of time the tessellation engine is busy.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,/,(100),*",
                               "36af6c72-dcfb-8102-4fd4-ce8ddc573365");
    }
    { // Index:4
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(99262);

        c.DefineDerivedCounter("TessellatorBusyCycles",
                               "Timing",
                               "Number of GPU cycles that the tessellation engine is busy.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "0",
                               "60289dcb-7b33-46e7-26d1-8a2121605543");
    }
    { // Index:5
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(42865);
        internal_counters.push_back(43184);
        internal_counters.push_back(43503);
        internal_counters.push_back(43822);
        internal_counters.push_back(42890);
        internal_counters.push_back(43209);
        internal_counters.push_back(43528);
        internal_counters.push_back(43847);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("VsGsBusy",
                               "Timing",
                               "The percentage of time the ShaderUnit has VS or GS work to do in a VS-[GS-]PS pipeline.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,max4,(0),4,5,6,7,sum4,ifnotzero,8,/,(100),*,(100),min",
                               "969c41c7-eb0b-9706-a7a1-98f27c3af56b");
    }
    { // Index:6
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(42865);
        internal_counters.push_back(43184);
        internal_counters.push_back(43503);
        internal_counters.push_back(43822);
        internal_counters.push_back(42890);
        internal_counters.push_back(43209);
        internal_counters.push_back(43528);
        internal_counters.push_back(43847);

        c.DefineDerivedCounter("VsGsBusyCycles",
                               "Timing",
                               "Number of GPU cycles that the ShaderUnit has VS or GS work to do in a VS-[GS-]PS pipeline.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,max4,(0),4,5,6,7,sum4,ifnotzero",
                               "a8420bb7-6bd8-930a-9088-d73b9c039851");
    }
    { // Index:7
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(185658);
        internal_counters.push_back(42865);
        internal_counters.push_back(43184);
        internal_counters.push_back(43503);
        internal_counters.push_back(43822);
        internal_counters.push_back(42890);
        internal_counters.push_back(43209);
        internal_counters.push_back(43528);
        internal_counters.push_back(43847);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("VsGsTime",
                               "Timing",
                               "Time VS or GS are busy in nanoseconds in a VS-[GS-]PS pipeline.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeNanoseconds,
                               true,
                               false,
                               internal_counters,
                               "1,2,3,4,max4,(0),5,6,7,8,sum4,ifnotzero,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*",
                               "3ce33b11-210d-b3de-9b6c-b9f3cd04beff");
    }
    { // Index:8
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(42885);
        internal_counters.push_back(43204);
        internal_counters.push_back(43523);
        internal_counters.push_back(43842);
        internal_counters.push_back(42890);
        internal_counters.push_back(43209);
        internal_counters.push_back(43528);
        internal_counters.push_back(43847);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("PreTessellationBusy",
                               "Timing",
                               "The percentage of time the ShaderUnit has VS and HS work to do in a pipeline that uses tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "(0),0,1,2,3,max4,4,5,6,7,sum4,ifnotzero,8,/,(100),*,(100),min",
                               "346c7430-4666-7065-b5b7-1cb8cbb1c01c");
    }
    { // Index:9
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(42885);
        internal_counters.push_back(43204);
        internal_counters.push_back(43523);
        internal_counters.push_back(43842);
        internal_counters.push_back(42890);
        internal_counters.push_back(43209);
        internal_counters.push_back(43528);
        internal_counters.push_back(43847);

        c.DefineDerivedCounter("PreTessellationBusyCycles",
                               "Timing",
                               "Number of GPU cycles that the ShaderUnit has VS and HS work to do in a pipeline that uses tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "(0),0,1,2,3,max4,4,5,6,7,sum4,ifnotzero",
                               "dac68e38-0e3a-9364-2674-308e63bee2d2");
    }
    { // Index:10
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(185658);
        internal_counters.push_back(42885);
        internal_counters.push_back(43204);
        internal_counters.push_back(43523);
        internal_counters.push_back(43842);
        internal_counters.push_back(42890);
        internal_counters.push_back(43209);
        internal_counters.push_back(43528);
        internal_counters.push_back(43847);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("PreTessellationTime",
                               "Timing",
                               "Time VS and HS are busy in nanoseconds in a pipeline that uses tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeNanoseconds,
                               true,
                               false,
                               internal_counters,
                               "(0),1,2,3,4,max4,5,6,7,8,sum4,ifnotzero,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*",
                               "d5e6c54c-5ffb-b173-6118-bece61f0281c");
    }
    { // Index:11
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(42865);
        internal_counters.push_back(43184);
        internal_counters.push_back(43503);
        internal_counters.push_back(43822);
        internal_counters.push_back(42890);
        internal_counters.push_back(43209);
        internal_counters.push_back(43528);
        internal_counters.push_back(43847);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("PostTessellationBusy",
                               "Timing",
                               "The percentage of time the ShaderUnit has DS or GS work to do in a pipeline that uses tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "(0),0,1,2,3,max4,4,5,6,7,sum4,ifnotzero,8,/,(100),*,(100),min",
                               "1a275c68-9340-f358-71c6-a2648390381d");
    }
    { // Index:12
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(42865);
        internal_counters.push_back(43184);
        internal_counters.push_back(43503);
        internal_counters.push_back(43822);
        internal_counters.push_back(42890);
        internal_counters.push_back(43209);
        internal_counters.push_back(43528);
        internal_counters.push_back(43847);

        c.DefineDerivedCounter("PostTessellationBusyCycles",
                               "Timing",
                               "Number of GPU cycles that the ShaderUnit has DS or GS work to do in a pipeline that uses tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "(0),0,1,2,3,max4,4,5,6,7,sum4,ifnotzero",
                               "a5ed943b-13ef-942b-56fb-6d519eeb7337");
    }
    { // Index:13
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(185658);
        internal_counters.push_back(42865);
        internal_counters.push_back(43184);
        internal_counters.push_back(43503);
        internal_counters.push_back(43822);
        internal_counters.push_back(42890);
        internal_counters.push_back(43209);
        internal_counters.push_back(43528);
        internal_counters.push_back(43847);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("PostTessellationTime",
                               "Timing",
                               "Time DS or GS are busy in nanoseconds in a pipeline that uses tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeNanoseconds,
                               true,
                               false,
                               internal_counters,
                               "(0),1,2,3,4,max4,5,6,7,8,sum4,ifnotzero,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*",
                               "9f8dfa40-faee-2014-3467-2630a7d95c1e");
    }
    { // Index:14
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(42920);
        internal_counters.push_back(43239);
        internal_counters.push_back(43558);
        internal_counters.push_back(43877);
        internal_counters.push_back(42936);
        internal_counters.push_back(43255);
        internal_counters.push_back(43574);
        internal_counters.push_back(43893);
        internal_counters.push_back(42921);
        internal_counters.push_back(43240);
        internal_counters.push_back(43559);
        internal_counters.push_back(43878);
        internal_counters.push_back(42937);
        internal_counters.push_back(43256);
        internal_counters.push_back(43575);
        internal_counters.push_back(43894);
        internal_counters.push_back(42922);
        internal_counters.push_back(43241);
        internal_counters.push_back(43560);
        internal_counters.push_back(43879);
        internal_counters.push_back(42938);
        internal_counters.push_back(43257);
        internal_counters.push_back(43576);
        internal_counters.push_back(43895);
        internal_counters.push_back(42923);
        internal_counters.push_back(43242);
        internal_counters.push_back(43561);
        internal_counters.push_back(43880);
        internal_counters.push_back(42939);
        internal_counters.push_back(43258);
        internal_counters.push_back(43577);
        internal_counters.push_back(43896);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("PSBusy",
                               "Timing",
                               "The percentage of time the ShaderUnit has pixel shader work to do.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "(0),0,1,2,3,max4,4,5,6,7,sum4,ifnotzero,(0),8,9,10,11,max4,12,13,14,15,sum4,ifnotzero,(0),16,17,18,19,max4,20,21,22,23,sum4,ifnotzero,(0),24,25,26,27,max4,28,29,30,31,sum4,ifnotzero,max4,32,/,(100),*,(100),min",
                               "7e772beb-d82c-bd9a-aed0-fe504d416ce5");
    }
    { // Index:15
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(42920);
        internal_counters.push_back(43239);
        internal_counters.push_back(43558);
        internal_counters.push_back(43877);
        internal_counters.push_back(42936);
        internal_counters.push_back(43255);
        internal_counters.push_back(43574);
        internal_counters.push_back(43893);
        internal_counters.push_back(42921);
        internal_counters.push_back(43240);
        internal_counters.push_back(43559);
        internal_counters.push_back(43878);
        internal_counters.push_back(42937);
        internal_counters.push_back(43256);
        internal_counters.push_back(43575);
        internal_counters.push_back(43894);
        internal_counters.push_back(42922);
        internal_counters.push_back(43241);
        internal_counters.push_back(43560);
        internal_counters.push_back(43879);
        internal_counters.push_back(42938);
        internal_counters.push_back(43257);
        internal_counters.push_back(43576);
        internal_counters.push_back(43895);
        internal_counters.push_back(42923);
        internal_counters.push_back(43242);
        internal_counters.push_back(43561);
        internal_counters.push_back(43880);
        internal_counters.push_back(42939);
        internal_counters.push_back(43258);
        internal_counters.push_back(43577);
        internal_counters.push_back(43896);

        c.DefineDerivedCounter("PSBusyCycles",
                               "Timing",
                               "Number of GPU cycles that the ShaderUnit has pixel shader work to do.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "(0),0,1,2,3,max4,4,5,6,7,sum4,ifnotzero,(0),8,9,10,11,max4,12,13,14,15,sum4,ifnotzero,(0),16,17,18,19,max4,20,21,22,23,sum4,ifnotzero,(0),24,25,26,27,max4,28,29,30,31,sum4,ifnotzero,max4",
                               "b58bea04-ce8e-2984-80f4-8aba7d4c817b");
    }
    { // Index:16
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(185658);
        internal_counters.push_back(42920);
        internal_counters.push_back(43239);
        internal_counters.push_back(43558);
        internal_counters.push_back(43877);
        internal_counters.push_back(42936);
        internal_counters.push_back(43255);
        internal_counters.push_back(43574);
        internal_counters.push_back(43893);
        internal_counters.push_back(42921);
        internal_counters.push_back(43240);
        internal_counters.push_back(43559);
        internal_counters.push_back(43878);
        internal_counters.push_back(42937);
        internal_counters.push_back(43256);
        internal_counters.push_back(43575);
        internal_counters.push_back(43894);
        internal_counters.push_back(42922);
        internal_counters.push_back(43241);
        internal_counters.push_back(43560);
        internal_counters.push_back(43879);
        internal_counters.push_back(42938);
        internal_counters.push_back(43257);
        internal_counters.push_back(43576);
        internal_counters.push_back(43895);
        internal_counters.push_back(42923);
        internal_counters.push_back(43242);
        internal_counters.push_back(43561);
        internal_counters.push_back(43880);
        internal_counters.push_back(42939);
        internal_counters.push_back(43258);
        internal_counters.push_back(43577);
        internal_counters.push_back(43896);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("PSTime",
                               "Timing",
                               "Time pixel shaders are busy in nanoseconds.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeNanoseconds,
                               true,
                               false,
                               internal_counters,
                               "(0),1,2,3,4,max4,5,6,7,8,sum4,ifnotzero,(0),9,10,11,12,max4,13,14,15,16,sum4,ifnotzero,(0),17,18,19,20,max4,21,22,23,24,sum4,ifnotzero,(0),25,26,27,28,max4,29,30,31,32,sum4,ifnotzero,max4,33,/,(1),min,0,TS_FREQ,/,(1000000000),*,*",
                               "edca7694-7416-e8a6-0c5a-63a5ad5f3d74");
    }
    { // Index:17
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(42901);
        internal_counters.push_back(43220);
        internal_counters.push_back(43539);
        internal_counters.push_back(43858);
        internal_counters.push_back(42905);
        internal_counters.push_back(43224);
        internal_counters.push_back(43543);
        internal_counters.push_back(43862);
        internal_counters.push_back(42909);
        internal_counters.push_back(43228);
        internal_counters.push_back(43547);
        internal_counters.push_back(43866);
        internal_counters.push_back(42913);
        internal_counters.push_back(43232);
        internal_counters.push_back(43551);
        internal_counters.push_back(43870);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("CSBusy",
                               "Timing",
                               "The percentage of time the ShaderUnit has compute shader work to do.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max,16,/,(100),*,(100),min",
                               "493fdd90-8d2b-a055-5e4e-2d29c3396b8c");
    }
    { // Index:18
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(42901);
        internal_counters.push_back(43220);
        internal_counters.push_back(43539);
        internal_counters.push_back(43858);
        internal_counters.push_back(42905);
        internal_counters.push_back(43224);
        internal_counters.push_back(43543);
        internal_counters.push_back(43862);
        internal_counters.push_back(42909);
        internal_counters.push_back(43228);
        internal_counters.push_back(43547);
        internal_counters.push_back(43866);
        internal_counters.push_back(42913);
        internal_counters.push_back(43232);
        internal_counters.push_back(43551);
        internal_counters.push_back(43870);

        c.DefineDerivedCounter("CSBusyCycles",
                               "Timing",
                               "Number of GPU cycles that the ShaderUnit has compute shader work to do.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max",
                               "39bcf1b8-f6b2-4c37-f9af-0a2bb59512f9");
    }
    { // Index:19
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(185658);
        internal_counters.push_back(42901);
        internal_counters.push_back(43220);
        internal_counters.push_back(43539);
        internal_counters.push_back(43858);
        internal_counters.push_back(42905);
        internal_counters.push_back(43224);
        internal_counters.push_back(43543);
        internal_counters.push_back(43862);
        internal_counters.push_back(42909);
        internal_counters.push_back(43228);
        internal_counters.push_back(43547);
        internal_counters.push_back(43866);
        internal_counters.push_back(42913);
        internal_counters.push_back(43232);
        internal_counters.push_back(43551);
        internal_counters.push_back(43870);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("CSTime",
                               "Timing",
                               "Time compute shaders are busy in nanoseconds.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeNanoseconds,
                               true,
                               false,
                               internal_counters,
                               "1,2,3,4,5,6,7,8,comparemax4,9,10,11,12,13,14,15,16,comparemax4,max,17,/,(1),min,0,TS_FREQ,/,(1000000000),*,*",
                               "dbc24916-ecb2-7eef-8d63-7afadaaab6bc");
    }
    { // Index:20
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(99423);
        internal_counters.push_back(99527);
        internal_counters.push_back(99631);
        internal_counters.push_back(99735);
        internal_counters.push_back(42890);
        internal_counters.push_back(43209);
        internal_counters.push_back(43528);
        internal_counters.push_back(43847);

        c.DefineDerivedCounter("VsGsVerticesIn",
                               "VertexGeometry",
                               "The number of unique vertices processed by the VS and GS.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,sum4,(0),4,5,6,7,sum4,ifnotzero",
                               "17d0c775-3ed5-affb-d5ac-5391a198a4aa");
    }
    { // Index:21
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(99428);
        internal_counters.push_back(99532);
        internal_counters.push_back(99636);
        internal_counters.push_back(99740);
        internal_counters.push_back(42890);
        internal_counters.push_back(43209);
        internal_counters.push_back(43528);
        internal_counters.push_back(43847);

        c.DefineDerivedCounter("VsGsPrimsIn",
                               "VertexGeometry",
                               "The number of primitives passed into the GS.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,sum4,(0),4,5,6,7,sum4,ifnotzero",
                               "d9fa5ce8-5329-f5d4-c378-8fbc7e80d9a6");
    }
    { // Index:22
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(99434);
        internal_counters.push_back(99538);
        internal_counters.push_back(99642);
        internal_counters.push_back(99746);
        internal_counters.push_back(42890);
        internal_counters.push_back(43209);
        internal_counters.push_back(43528);
        internal_counters.push_back(43847);

        c.DefineDerivedCounter("PreTessVerticesIn",
                               "PreTessellation",
                               "The number of unique vertices processed by the VS and HS when using tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "(0),0,1,2,3,sum4,4,5,6,7,sum4,ifnotzero",
                               "84145f0c-ff96-0dfb-ffb7-ccf4c9b3f4c4");
    }
    { // Index:23
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(99412);
        internal_counters.push_back(99516);
        internal_counters.push_back(99620);
        internal_counters.push_back(99724);
        internal_counters.push_back(42890);
        internal_counters.push_back(43209);
        internal_counters.push_back(43528);
        internal_counters.push_back(43847);

        c.DefineDerivedCounter("PostTessPrimsOut",
                               "PostTessellation",
                               "The number of primitives output by the DS and GS when using tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "(0),0,1,2,3,sum4,4,5,6,7,sum4,ifnotzero",
                               "d38dabe8-1f13-ea34-d3c1-eb5783b737f1");
    }
    { // Index:24
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(12692);
        internal_counters.push_back(13521);
        internal_counters.push_back(14350);
        internal_counters.push_back(15179);
        internal_counters.push_back(12696);
        internal_counters.push_back(13525);
        internal_counters.push_back(14354);
        internal_counters.push_back(15183);
        internal_counters.push_back(12648);
        internal_counters.push_back(13477);
        internal_counters.push_back(14306);
        internal_counters.push_back(15135);
        internal_counters.push_back(12660);
        internal_counters.push_back(13489);
        internal_counters.push_back(14318);
        internal_counters.push_back(15147);
        internal_counters.push_back(13161);
        internal_counters.push_back(13990);
        internal_counters.push_back(14819);
        internal_counters.push_back(15648);
        internal_counters.push_back(13173);
        internal_counters.push_back(14002);
        internal_counters.push_back(14831);
        internal_counters.push_back(15660);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("PrimitiveAssemblyBusy",
                               "Timing",
                               "The percentage of GPUTime that primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,vecsub4,SU_CLOCKS_PRIM,8,9,10,11,12,13,14,15,vecsum4,16,17,18,19,vecsum4,(2),20,21,22,23,scalarmul4,vecsum4,scalarmul4,vecsub4,max4,(0),max,24,/,(100),*,(100),min",
                               "54ac5640-c4d7-95e2-20e0-6a9fdfc07333");
    }
    { // Index:25
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(12692);
        internal_counters.push_back(13521);
        internal_counters.push_back(14350);
        internal_counters.push_back(15179);
        internal_counters.push_back(12696);
        internal_counters.push_back(13525);
        internal_counters.push_back(14354);
        internal_counters.push_back(15183);
        internal_counters.push_back(12648);
        internal_counters.push_back(13477);
        internal_counters.push_back(14306);
        internal_counters.push_back(15135);
        internal_counters.push_back(12660);
        internal_counters.push_back(13489);
        internal_counters.push_back(14318);
        internal_counters.push_back(15147);
        internal_counters.push_back(13161);
        internal_counters.push_back(13990);
        internal_counters.push_back(14819);
        internal_counters.push_back(15648);
        internal_counters.push_back(13173);
        internal_counters.push_back(14002);
        internal_counters.push_back(14831);
        internal_counters.push_back(15660);

        c.DefineDerivedCounter("PrimitiveAssemblyBusyCycles",
                               "Timing",
                               "Number of GPU cycles the primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,vecsub4,SU_CLOCKS_PRIM,8,9,10,11,12,13,14,15,vecsum4,16,17,18,19,vecsum4,(2),20,21,22,23,scalarmul4,vecsum4,scalarmul4,vecsub4,max4,(0),max",
                               "99777f2d-9626-c78a-a97c-c4505eba1e5f");
    }
    { // Index:26
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(12595);
        internal_counters.push_back(13424);
        internal_counters.push_back(14253);
        internal_counters.push_back(15082);

        c.DefineDerivedCounter("PrimitivesIn",
                               "PrimitiveAssembly",
                               "The number of primitives received by the hardware. This includes primitives generated by tessellation.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,sum4",
                               "a515b80d-75c3-c7d2-0d2f-d7766b4759a6");
    }
    { // Index:27
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(12601);
        internal_counters.push_back(13430);
        internal_counters.push_back(14259);
        internal_counters.push_back(15088);
        internal_counters.push_back(12641);
        internal_counters.push_back(13470);
        internal_counters.push_back(14299);
        internal_counters.push_back(15128);
        internal_counters.push_back(12642);
        internal_counters.push_back(13471);
        internal_counters.push_back(14300);
        internal_counters.push_back(15129);
        internal_counters.push_back(12643);
        internal_counters.push_back(13472);
        internal_counters.push_back(14301);
        internal_counters.push_back(15130);
        internal_counters.push_back(12644);
        internal_counters.push_back(13473);
        internal_counters.push_back(14302);
        internal_counters.push_back(15131);

        c.DefineDerivedCounter("CulledPrims",
                               "PrimitiveAssembly",
                               "The number of culled primitives. Typical reasons include scissor, the primitive having zero area, and back or front face culling.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,sum4,+,8,9,10,11,sum4,+,12,13,14,15,sum4,+,16,17,18,19,sum4,+",
                               "589bdf55-9192-280a-41c3-584bc94f2562");
    }
    { // Index:28
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(13120);
        internal_counters.push_back(13949);
        internal_counters.push_back(14778);
        internal_counters.push_back(15607);

        c.DefineDerivedCounter("ClippedPrims",
                               "PrimitiveAssembly",
                               "The number of primitives that required one or more clipping operations due to intersecting the view volume or user clip planes.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,sum4",
                               "5ef6f9d5-155e-5baa-163f-8359d9ea9bbf");
    }
    { // Index:29
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(12696);
        internal_counters.push_back(13525);
        internal_counters.push_back(14354);
        internal_counters.push_back(15183);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("PAStalledOnRasterizer",
                               "PrimitiveAssembly",
                               "Percentage of GPUTime that primitive assembly waits for rasterization to be ready to accept data. This roughly indicates for what percentage of time the pipeline is bottlenecked by pixel operations.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,max4,4,/,(100),*",
                               "6f9f416b-53c1-0457-f88c-7b6ba8973974");
    }
    { // Index:30
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(12696);
        internal_counters.push_back(13525);
        internal_counters.push_back(14354);
        internal_counters.push_back(15183);

        c.DefineDerivedCounter("PAStalledOnRasterizerCycles",
                               "PrimitiveAssembly",
                               "Number of GPU cycles the primitive assembly waits for rasterization to be ready to accept data. Indicates the number of GPU cycles the pipeline is bottlenecked by pixel operations.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,max4",
                               "7a8c492a-c566-9328-6805-760dbff5c0f2");
    }
    { // Index:31
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(42219);
        internal_counters.push_back(42301);
        internal_counters.push_back(42383);
        internal_counters.push_back(42465);
        internal_counters.push_back(42547);
        internal_counters.push_back(42629);
        internal_counters.push_back(42711);
        internal_counters.push_back(42793);
        internal_counters.push_back(42224);
        internal_counters.push_back(42306);
        internal_counters.push_back(42388);
        internal_counters.push_back(42470);
        internal_counters.push_back(42552);
        internal_counters.push_back(42634);
        internal_counters.push_back(42716);
        internal_counters.push_back(42798);
        internal_counters.push_back(42229);
        internal_counters.push_back(42311);
        internal_counters.push_back(42393);
        internal_counters.push_back(42475);
        internal_counters.push_back(42557);
        internal_counters.push_back(42639);
        internal_counters.push_back(42721);
        internal_counters.push_back(42803);
        internal_counters.push_back(42234);
        internal_counters.push_back(42316);
        internal_counters.push_back(42398);
        internal_counters.push_back(42480);
        internal_counters.push_back(42562);
        internal_counters.push_back(42644);
        internal_counters.push_back(42726);
        internal_counters.push_back(42808);

        c.DefineDerivedCounter("PSPixelsOut",
                               "PixelShader",
                               "Pixels exported from shader to color buffers. Does not include killed or alpha tested pixels; if there are multiple render targets, each render target receives one export, so this will be 2 for 1 pixel written to two RTs.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,sum8,8,9,10,11,12,13,14,15,sum8,16,17,18,19,20,21,22,23,sum8,24,25,26,27,28,29,30,31,sum8,sum4",
                               "24cba16c-baa6-6ecd-95ad-92ecb1338da1");
    }
    { // Index:32
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(42221);
        internal_counters.push_back(42303);
        internal_counters.push_back(42385);
        internal_counters.push_back(42467);
        internal_counters.push_back(42549);
        internal_counters.push_back(42631);
        internal_counters.push_back(42713);
        internal_counters.push_back(42795);
        internal_counters.push_back(42226);
        internal_counters.push_back(42308);
        internal_counters.push_back(42390);
        internal_counters.push_back(42472);
        internal_counters.push_back(42554);
        internal_counters.push_back(42636);
        internal_counters.push_back(42718);
        internal_counters.push_back(42800);
        internal_counters.push_back(42231);
        internal_counters.push_back(42313);
        internal_counters.push_back(42395);
        internal_counters.push_back(42477);
        internal_counters.push_back(42559);
        internal_counters.push_back(42641);
        internal_counters.push_back(42723);
        internal_counters.push_back(42805);
        internal_counters.push_back(42236);
        internal_counters.push_back(42318);
        internal_counters.push_back(42400);
        internal_counters.push_back(42482);
        internal_counters.push_back(42564);
        internal_counters.push_back(42646);
        internal_counters.push_back(42728);
        internal_counters.push_back(42810);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("PSExportStalls",
                               "PixelShader",
                               "Pixel shader output stalls. Percentage of GPUBusy. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,max8,8,9,10,11,12,13,14,15,max8,16,17,18,19,20,21,22,23,max8,24,25,26,27,28,29,30,31,max8,max4,32,/,(100),*",
                               "9b4f466c-ff97-22bb-557d-84d3c4c51895");
    }
    { // Index:33
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(42221);
        internal_counters.push_back(42303);
        internal_counters.push_back(42385);
        internal_counters.push_back(42467);
        internal_counters.push_back(42549);
        internal_counters.push_back(42631);
        internal_counters.push_back(42713);
        internal_counters.push_back(42795);
        internal_counters.push_back(42226);
        internal_counters.push_back(42308);
        internal_counters.push_back(42390);
        internal_counters.push_back(42472);
        internal_counters.push_back(42554);
        internal_counters.push_back(42636);
        internal_counters.push_back(42718);
        internal_counters.push_back(42800);
        internal_counters.push_back(42231);
        internal_counters.push_back(42313);
        internal_counters.push_back(42395);
        internal_counters.push_back(42477);
        internal_counters.push_back(42559);
        internal_counters.push_back(42641);
        internal_counters.push_back(42723);
        internal_counters.push_back(42805);
        internal_counters.push_back(42236);
        internal_counters.push_back(42318);
        internal_counters.push_back(42400);
        internal_counters.push_back(42482);
        internal_counters.push_back(42564);
        internal_counters.push_back(42646);
        internal_counters.push_back(42728);
        internal_counters.push_back(42810);

        c.DefineDerivedCounter("PSExportStallsCycles",
                               "PixelShader",
                               "Number of GPU cycles the pixel shader output stalls. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,max8,8,9,10,11,12,13,14,15,max8,16,17,18,19,20,21,22,23,max8,24,25,26,27,28,29,30,31,max8,max4",
                               "47c72aad-64e6-0864-d533-d8e0bc27c156");
    }
    { // Index:34
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(42902);
        internal_counters.push_back(43221);
        internal_counters.push_back(43540);
        internal_counters.push_back(43859);
        internal_counters.push_back(42910);
        internal_counters.push_back(43229);
        internal_counters.push_back(43548);
        internal_counters.push_back(43867);

        c.DefineDerivedCounter("CSThreadGroupsLaunched",
                               "ComputeShader",
                               "Total number of thread groups launched.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,sum4,+",
                               "e1e2f302-868a-1d2e-ca81-9901bbc8b58f");
    }
    { // Index:35
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(42905);
        internal_counters.push_back(43224);
        internal_counters.push_back(43543);
        internal_counters.push_back(43862);
        internal_counters.push_back(42913);
        internal_counters.push_back(43232);
        internal_counters.push_back(43551);
        internal_counters.push_back(43870);

        c.DefineDerivedCounter("CSWavefrontsLaunched",
                               "ComputeShader",
                               "The total number of wavefronts launched for the CS.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,sum4,4,5,6,7,sum4,+",
                               "00c49129-6ae5-f6a0-1753-4738cbe17938");
    }
    { // Index:36
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(44897);
        internal_counters.push_back(44943);
        internal_counters.push_back(44989);
        internal_counters.push_back(45035);

        c.DefineDerivedCounter("CSThreadsLaunched",
                               "ComputeShader",
                               "The number of CS threads launched and processed by the hardware.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,sum4",
                               "cbbbf1ba-d164-1c90-9df0-6120c1660fb1");
    }
    { // Index:37
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(44897);
        internal_counters.push_back(44943);
        internal_counters.push_back(44989);
        internal_counters.push_back(45035);
        internal_counters.push_back(42902);
        internal_counters.push_back(43221);
        internal_counters.push_back(43540);
        internal_counters.push_back(43859);
        internal_counters.push_back(42910);
        internal_counters.push_back(43229);
        internal_counters.push_back(43548);
        internal_counters.push_back(43867);

        c.DefineDerivedCounter("CSThreadGroupSize",
                               "ComputeShader",
                               "The number of CS threads within each thread group.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "(0),0,1,2,3,sum4,4,5,6,7,sum4,8,9,10,11,sum4,+,/,4,5,6,7,sum4,8,9,10,11,sum4,+,ifnotzero",
                               "8c65008a-9957-7ca6-4199-f6fe940420f6");
    }
    { // Index:38
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(165652);
        internal_counters.push_back(166164);
        internal_counters.push_back(166676);
        internal_counters.push_back(167188);
        internal_counters.push_back(167700);
        internal_counters.push_back(168212);
        internal_counters.push_back(168724);
        internal_counters.push_back(169236);
        internal_counters.push_back(169748);
        internal_counters.push_back(170260);
        internal_counters.push_back(170772);
        internal_counters.push_back(171284);
        internal_counters.push_back(171796);
        internal_counters.push_back(172308);
        internal_counters.push_back(172820);
        internal_counters.push_back(173332);
        internal_counters.push_back(173844);
        internal_counters.push_back(174356);
        internal_counters.push_back(174868);
        internal_counters.push_back(175380);
        internal_counters.push_back(175892);
        internal_counters.push_back(176404);
        internal_counters.push_back(176916);
        internal_counters.push_back(177428);
        internal_counters.push_back(177940);
        internal_counters.push_back(178452);
        internal_counters.push_back(178964);
        internal_counters.push_back(179476);
        internal_counters.push_back(179988);
        internal_counters.push_back(180500);
        internal_counters.push_back(181012);
        internal_counters.push_back(181524);
        internal_counters.push_back(276);
        internal_counters.push_back(42902);
        internal_counters.push_back(43221);
        internal_counters.push_back(43540);
        internal_counters.push_back(43859);
        internal_counters.push_back(42910);
        internal_counters.push_back(43229);
        internal_counters.push_back(43548);
        internal_counters.push_back(43867);

        c.DefineDerivedCounter("CSLDSBankConflict",
                               "ComputeShader",
                               "The percentage of GPUTime LDS is stalled by bank conflicts. Value range: 0% (optimal) to 100% (bad).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,/,NUM_SIMDS,/,(100),*,33,34,35,36,sum4,37,38,39,40,sum4,+,ifnotzero",
                               "1065ee10-2e41-ea41-1eb3-b61b491752f4");
    }
    { // Index:39
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(165652);
        internal_counters.push_back(166164);
        internal_counters.push_back(166676);
        internal_counters.push_back(167188);
        internal_counters.push_back(167700);
        internal_counters.push_back(168212);
        internal_counters.push_back(168724);
        internal_counters.push_back(169236);
        internal_counters.push_back(169748);
        internal_counters.push_back(170260);
        internal_counters.push_back(170772);
        internal_counters.push_back(171284);
        internal_counters.push_back(171796);
        internal_counters.push_back(172308);
        internal_counters.push_back(172820);
        internal_counters.push_back(173332);
        internal_counters.push_back(173844);
        internal_counters.push_back(174356);
        internal_counters.push_back(174868);
        internal_counters.push_back(175380);
        internal_counters.push_back(175892);
        internal_counters.push_back(176404);
        internal_counters.push_back(176916);
        internal_counters.push_back(177428);
        internal_counters.push_back(177940);
        internal_counters.push_back(178452);
        internal_counters.push_back(178964);
        internal_counters.push_back(179476);
        internal_counters.push_back(179988);
        internal_counters.push_back(180500);
        internal_counters.push_back(181012);
        internal_counters.push_back(181524);
        internal_counters.push_back(42902);
        internal_counters.push_back(43221);
        internal_counters.push_back(43540);
        internal_counters.push_back(43859);
        internal_counters.push_back(42910);
        internal_counters.push_back(43229);
        internal_counters.push_back(43548);
        internal_counters.push_back(43867);

        c.DefineDerivedCounter("CSLDSBankConflictCycles",
                               "ComputeShader",
                               "Number of GPU cycles the LDS is stalled by bank conflicts. Value range: 0 (optimal) to GPUBusyCycles (bad).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,NUM_SIMDS,/,32,33,34,35,sum4,36,37,38,39,sum4,+,ifnotzero",
                               "1fd1adf3-c51e-94fd-083e-c482a0a0809e");
    }
    { // Index:40
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(45074);
        internal_counters.push_back(45329);
        internal_counters.push_back(45584);
        internal_counters.push_back(45839);
        internal_counters.push_back(46094);
        internal_counters.push_back(46349);
        internal_counters.push_back(46604);
        internal_counters.push_back(46859);
        internal_counters.push_back(47114);
        internal_counters.push_back(47369);
        internal_counters.push_back(47624);
        internal_counters.push_back(47879);
        internal_counters.push_back(48134);
        internal_counters.push_back(48389);
        internal_counters.push_back(48644);
        internal_counters.push_back(48899);
        internal_counters.push_back(49154);
        internal_counters.push_back(49409);
        internal_counters.push_back(49664);
        internal_counters.push_back(49919);
        internal_counters.push_back(50174);
        internal_counters.push_back(50429);
        internal_counters.push_back(50684);
        internal_counters.push_back(50939);
        internal_counters.push_back(51194);
        internal_counters.push_back(51449);
        internal_counters.push_back(51704);
        internal_counters.push_back(51959);
        internal_counters.push_back(52214);
        internal_counters.push_back(52469);
        internal_counters.push_back(52724);
        internal_counters.push_back(52979);
        internal_counters.push_back(53234);
        internal_counters.push_back(53489);
        internal_counters.push_back(53744);
        internal_counters.push_back(53999);
        internal_counters.push_back(54254);
        internal_counters.push_back(54509);
        internal_counters.push_back(54764);
        internal_counters.push_back(55019);
        internal_counters.push_back(55274);
        internal_counters.push_back(55529);
        internal_counters.push_back(55784);
        internal_counters.push_back(56039);
        internal_counters.push_back(56294);
        internal_counters.push_back(56549);
        internal_counters.push_back(56804);
        internal_counters.push_back(57059);
        internal_counters.push_back(57314);
        internal_counters.push_back(57569);
        internal_counters.push_back(57824);
        internal_counters.push_back(58079);
        internal_counters.push_back(58334);
        internal_counters.push_back(58589);
        internal_counters.push_back(58844);
        internal_counters.push_back(59099);
        internal_counters.push_back(59354);
        internal_counters.push_back(59609);
        internal_counters.push_back(59864);
        internal_counters.push_back(60119);
        internal_counters.push_back(60374);
        internal_counters.push_back(60629);
        internal_counters.push_back(60884);
        internal_counters.push_back(61139);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("TexUnitBusy",
                               "Timing",
                               "The percentage of GPUTime the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*",
                               "36afb8d9-42fc-aafe-66c5-449542153b2c");
    }
    { // Index:41
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(45074);
        internal_counters.push_back(45329);
        internal_counters.push_back(45584);
        internal_counters.push_back(45839);
        internal_counters.push_back(46094);
        internal_counters.push_back(46349);
        internal_counters.push_back(46604);
        internal_counters.push_back(46859);
        internal_counters.push_back(47114);
        internal_counters.push_back(47369);
        internal_counters.push_back(47624);
        internal_counters.push_back(47879);
        internal_counters.push_back(48134);
        internal_counters.push_back(48389);
        internal_counters.push_back(48644);
        internal_counters.push_back(48899);
        internal_counters.push_back(49154);
        internal_counters.push_back(49409);
        internal_counters.push_back(49664);
        internal_counters.push_back(49919);
        internal_counters.push_back(50174);
        internal_counters.push_back(50429);
        internal_counters.push_back(50684);
        internal_counters.push_back(50939);
        internal_counters.push_back(51194);
        internal_counters.push_back(51449);
        internal_counters.push_back(51704);
        internal_counters.push_back(51959);
        internal_counters.push_back(52214);
        internal_counters.push_back(52469);
        internal_counters.push_back(52724);
        internal_counters.push_back(52979);
        internal_counters.push_back(53234);
        internal_counters.push_back(53489);
        internal_counters.push_back(53744);
        internal_counters.push_back(53999);
        internal_counters.push_back(54254);
        internal_counters.push_back(54509);
        internal_counters.push_back(54764);
        internal_counters.push_back(55019);
        internal_counters.push_back(55274);
        internal_counters.push_back(55529);
        internal_counters.push_back(55784);
        internal_counters.push_back(56039);
        internal_counters.push_back(56294);
        internal_counters.push_back(56549);
        internal_counters.push_back(56804);
        internal_counters.push_back(57059);
        internal_counters.push_back(57314);
        internal_counters.push_back(57569);
        internal_counters.push_back(57824);
        internal_counters.push_back(58079);
        internal_counters.push_back(58334);
        internal_counters.push_back(58589);
        internal_counters.push_back(58844);
        internal_counters.push_back(59099);
        internal_counters.push_back(59354);
        internal_counters.push_back(59609);
        internal_counters.push_back(59864);
        internal_counters.push_back(60119);
        internal_counters.push_back(60374);
        internal_counters.push_back(60629);
        internal_counters.push_back(60884);
        internal_counters.push_back(61139);

        c.DefineDerivedCounter("TexUnitBusyCycles",
                               "Timing",
                               "Number of GPU cycles the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64",
                               "c68761f2-248c-4f39-6528-c308b1c0807c");
    }
    { // Index:42
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(45128);
        internal_counters.push_back(45383);
        internal_counters.push_back(45638);
        internal_counters.push_back(45893);
        internal_counters.push_back(46148);
        internal_counters.push_back(46403);
        internal_counters.push_back(46658);
        internal_counters.push_back(46913);
        internal_counters.push_back(47168);
        internal_counters.push_back(47423);
        internal_counters.push_back(47678);
        internal_counters.push_back(47933);
        internal_counters.push_back(48188);
        internal_counters.push_back(48443);
        internal_counters.push_back(48698);
        internal_counters.push_back(48953);
        internal_counters.push_back(49208);
        internal_counters.push_back(49463);
        internal_counters.push_back(49718);
        internal_counters.push_back(49973);
        internal_counters.push_back(50228);
        internal_counters.push_back(50483);
        internal_counters.push_back(50738);
        internal_counters.push_back(50993);
        internal_counters.push_back(51248);
        internal_counters.push_back(51503);
        internal_counters.push_back(51758);
        internal_counters.push_back(52013);
        internal_counters.push_back(52268);
        internal_counters.push_back(52523);
        internal_counters.push_back(52778);
        internal_counters.push_back(53033);
        internal_counters.push_back(53288);
        internal_counters.push_back(53543);
        internal_counters.push_back(53798);
        internal_counters.push_back(54053);
        internal_counters.push_back(54308);
        internal_counters.push_back(54563);
        internal_counters.push_back(54818);
        internal_counters.push_back(55073);
        internal_counters.push_back(55328);
        internal_counters.push_back(55583);
        internal_counters.push_back(55838);
        internal_counters.push_back(56093);
        internal_counters.push_back(56348);
        internal_counters.push_back(56603);
        internal_counters.push_back(56858);
        internal_counters.push_back(57113);
        internal_counters.push_back(57368);
        internal_counters.push_back(57623);
        internal_counters.push_back(57878);
        internal_counters.push_back(58133);
        internal_counters.push_back(58388);
        internal_counters.push_back(58643);
        internal_counters.push_back(58898);
        internal_counters.push_back(59153);
        internal_counters.push_back(59408);
        internal_counters.push_back(59663);
        internal_counters.push_back(59918);
        internal_counters.push_back(60173);
        internal_counters.push_back(60428);
        internal_counters.push_back(60683);
        internal_counters.push_back(60938);
        internal_counters.push_back(61193);
        internal_counters.push_back(45127);
        internal_counters.push_back(45382);
        internal_counters.push_back(45637);
        internal_counters.push_back(45892);
        internal_counters.push_back(46147);
        internal_counters.push_back(46402);
        internal_counters.push_back(46657);
        internal_counters.push_back(46912);
        internal_counters.push_back(47167);
        internal_counters.push_back(47422);
        internal_counters.push_back(47677);
        internal_counters.push_back(47932);
        internal_counters.push_back(48187);
        internal_counters.push_back(48442);
        internal_counters.push_back(48697);
        internal_counters.push_back(48952);
        internal_counters.push_back(49207);
        internal_counters.push_back(49462);
        internal_counters.push_back(49717);
        internal_counters.push_back(49972);
        internal_counters.push_back(50227);
        internal_counters.push_back(50482);
        internal_counters.push_back(50737);
        internal_counters.push_back(50992);
        internal_counters.push_back(51247);
        internal_counters.push_back(51502);
        internal_counters.push_back(51757);
        internal_counters.push_back(52012);
        internal_counters.push_back(52267);
        internal_counters.push_back(52522);
        internal_counters.push_back(52777);
        internal_counters.push_back(53032);
        internal_counters.push_back(53287);
        internal_counters.push_back(53542);
        internal_counters.push_back(53797);
        internal_counters.push_back(54052);
        internal_counters.push_back(54307);
        internal_counters.push_back(54562);
        internal_counters.push_back(54817);
        internal_counters.push_back(55072);
        internal_counters.push_back(55327);
        internal_counters.push_back(55582);
        internal_counters.push_back(55837);
        internal_counters.push_back(56092);
        internal_counters.push_back(56347);
        internal_counters.push_back(56602);
        internal_counters.push_back(56857);
        internal_counters.push_back(57112);
        internal_counters.push_back(57367);
        internal_counters.push_back(57622);
        internal_counters.push_back(57877);
        internal_counters.push_back(58132);
        internal_counters.push_back(58387);
        internal_counters.push_back(58642);
        internal_counters.push_back(58897);
        internal_counters.push_back(59152);
        internal_counters.push_back(59407);
        internal_counters.push_back(59662);
        internal_counters.push_back(59917);
        internal_counters.push_back(60172);
        internal_counters.push_back(60427);
        internal_counters.push_back(60682);
        internal_counters.push_back(60937);
        internal_counters.push_back(61192);

        c.DefineDerivedCounter("TexTriFilteringPct",
                               "TextureUnit",
                               "Percentage of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,+,/,(100),*",
                               "1affc3c8-b917-5c81-622b-7004527208ae");
    }
    { // Index:43
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(45128);
        internal_counters.push_back(45383);
        internal_counters.push_back(45638);
        internal_counters.push_back(45893);
        internal_counters.push_back(46148);
        internal_counters.push_back(46403);
        internal_counters.push_back(46658);
        internal_counters.push_back(46913);
        internal_counters.push_back(47168);
        internal_counters.push_back(47423);
        internal_counters.push_back(47678);
        internal_counters.push_back(47933);
        internal_counters.push_back(48188);
        internal_counters.push_back(48443);
        internal_counters.push_back(48698);
        internal_counters.push_back(48953);
        internal_counters.push_back(49208);
        internal_counters.push_back(49463);
        internal_counters.push_back(49718);
        internal_counters.push_back(49973);
        internal_counters.push_back(50228);
        internal_counters.push_back(50483);
        internal_counters.push_back(50738);
        internal_counters.push_back(50993);
        internal_counters.push_back(51248);
        internal_counters.push_back(51503);
        internal_counters.push_back(51758);
        internal_counters.push_back(52013);
        internal_counters.push_back(52268);
        internal_counters.push_back(52523);
        internal_counters.push_back(52778);
        internal_counters.push_back(53033);
        internal_counters.push_back(53288);
        internal_counters.push_back(53543);
        internal_counters.push_back(53798);
        internal_counters.push_back(54053);
        internal_counters.push_back(54308);
        internal_counters.push_back(54563);
        internal_counters.push_back(54818);
        internal_counters.push_back(55073);
        internal_counters.push_back(55328);
        internal_counters.push_back(55583);
        internal_counters.push_back(55838);
        internal_counters.push_back(56093);
        internal_counters.push_back(56348);
        internal_counters.push_back(56603);
        internal_counters.push_back(56858);
        internal_counters.push_back(57113);
        internal_counters.push_back(57368);
        internal_counters.push_back(57623);
        internal_counters.push_back(57878);
        internal_counters.push_back(58133);
        internal_counters.push_back(58388);
        internal_counters.push_back(58643);
        internal_counters.push_back(58898);
        internal_counters.push_back(59153);
        internal_counters.push_back(59408);
        internal_counters.push_back(59663);
        internal_counters.push_back(59918);
        internal_counters.push_back(60173);
        internal_counters.push_back(60428);
        internal_counters.push_back(60683);
        internal_counters.push_back(60938);
        internal_counters.push_back(61193);

        c.DefineDerivedCounter("TexTriFilteringCount",
                               "TextureUnit",
                               "Count of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(4),*",
                               "5785b3a1-a513-18db-4b1c-bdeef75bb2b6");
    }
    { // Index:44
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(45127);
        internal_counters.push_back(45382);
        internal_counters.push_back(45637);
        internal_counters.push_back(45892);
        internal_counters.push_back(46147);
        internal_counters.push_back(46402);
        internal_counters.push_back(46657);
        internal_counters.push_back(46912);
        internal_counters.push_back(47167);
        internal_counters.push_back(47422);
        internal_counters.push_back(47677);
        internal_counters.push_back(47932);
        internal_counters.push_back(48187);
        internal_counters.push_back(48442);
        internal_counters.push_back(48697);
        internal_counters.push_back(48952);
        internal_counters.push_back(49207);
        internal_counters.push_back(49462);
        internal_counters.push_back(49717);
        internal_counters.push_back(49972);
        internal_counters.push_back(50227);
        internal_counters.push_back(50482);
        internal_counters.push_back(50737);
        internal_counters.push_back(50992);
        internal_counters.push_back(51247);
        internal_counters.push_back(51502);
        internal_counters.push_back(51757);
        internal_counters.push_back(52012);
        internal_counters.push_back(52267);
        internal_counters.push_back(52522);
        internal_counters.push_back(52777);
        internal_counters.push_back(53032);
        internal_counters.push_back(53287);
        internal_counters.push_back(53542);
        internal_counters.push_back(53797);
        internal_counters.push_back(54052);
        internal_counters.push_back(54307);
        internal_counters.push_back(54562);
        internal_counters.push_back(54817);
        internal_counters.push_back(55072);
        internal_counters.push_back(55327);
        internal_counters.push_back(55582);
        internal_counters.push_back(55837);
        internal_counters.push_back(56092);
        internal_counters.push_back(56347);
        internal_counters.push_back(56602);
        internal_counters.push_back(56857);
        internal_counters.push_back(57112);
        internal_counters.push_back(57367);
        internal_counters.push_back(57622);
        internal_counters.push_back(57877);
        internal_counters.push_back(58132);
        internal_counters.push_back(58387);
        internal_counters.push_back(58642);
        internal_counters.push_back(58897);
        internal_counters.push_back(59152);
        internal_counters.push_back(59407);
        internal_counters.push_back(59662);
        internal_counters.push_back(59917);
        internal_counters.push_back(60172);
        internal_counters.push_back(60427);
        internal_counters.push_back(60682);
        internal_counters.push_back(60937);
        internal_counters.push_back(61192);

        c.DefineDerivedCounter("NoTexTriFilteringCount",
                               "TextureUnit",
                               "Count of pixels that did not receive trilinear filtering.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(4),*",
                               "179da29a-81af-c06e-ce8c-a0a731ea030d");
    }
    { // Index:45
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(45130);
        internal_counters.push_back(45385);
        internal_counters.push_back(45640);
        internal_counters.push_back(45895);
        internal_counters.push_back(46150);
        internal_counters.push_back(46405);
        internal_counters.push_back(46660);
        internal_counters.push_back(46915);
        internal_counters.push_back(47170);
        internal_counters.push_back(47425);
        internal_counters.push_back(47680);
        internal_counters.push_back(47935);
        internal_counters.push_back(48190);
        internal_counters.push_back(48445);
        internal_counters.push_back(48700);
        internal_counters.push_back(48955);
        internal_counters.push_back(49210);
        internal_counters.push_back(49465);
        internal_counters.push_back(49720);
        internal_counters.push_back(49975);
        internal_counters.push_back(50230);
        internal_counters.push_back(50485);
        internal_counters.push_back(50740);
        internal_counters.push_back(50995);
        internal_counters.push_back(51250);
        internal_counters.push_back(51505);
        internal_counters.push_back(51760);
        internal_counters.push_back(52015);
        internal_counters.push_back(52270);
        internal_counters.push_back(52525);
        internal_counters.push_back(52780);
        internal_counters.push_back(53035);
        internal_counters.push_back(53290);
        internal_counters.push_back(53545);
        internal_counters.push_back(53800);
        internal_counters.push_back(54055);
        internal_counters.push_back(54310);
        internal_counters.push_back(54565);
        internal_counters.push_back(54820);
        internal_counters.push_back(55075);
        internal_counters.push_back(55330);
        internal_counters.push_back(55585);
        internal_counters.push_back(55840);
        internal_counters.push_back(56095);
        internal_counters.push_back(56350);
        internal_counters.push_back(56605);
        internal_counters.push_back(56860);
        internal_counters.push_back(57115);
        internal_counters.push_back(57370);
        internal_counters.push_back(57625);
        internal_counters.push_back(57880);
        internal_counters.push_back(58135);
        internal_counters.push_back(58390);
        internal_counters.push_back(58645);
        internal_counters.push_back(58900);
        internal_counters.push_back(59155);
        internal_counters.push_back(59410);
        internal_counters.push_back(59665);
        internal_counters.push_back(59920);
        internal_counters.push_back(60175);
        internal_counters.push_back(60430);
        internal_counters.push_back(60685);
        internal_counters.push_back(60940);
        internal_counters.push_back(61195);
        internal_counters.push_back(45129);
        internal_counters.push_back(45384);
        internal_counters.push_back(45639);
        internal_counters.push_back(45894);
        internal_counters.push_back(46149);
        internal_counters.push_back(46404);
        internal_counters.push_back(46659);
        internal_counters.push_back(46914);
        internal_counters.push_back(47169);
        internal_counters.push_back(47424);
        internal_counters.push_back(47679);
        internal_counters.push_back(47934);
        internal_counters.push_back(48189);
        internal_counters.push_back(48444);
        internal_counters.push_back(48699);
        internal_counters.push_back(48954);
        internal_counters.push_back(49209);
        internal_counters.push_back(49464);
        internal_counters.push_back(49719);
        internal_counters.push_back(49974);
        internal_counters.push_back(50229);
        internal_counters.push_back(50484);
        internal_counters.push_back(50739);
        internal_counters.push_back(50994);
        internal_counters.push_back(51249);
        internal_counters.push_back(51504);
        internal_counters.push_back(51759);
        internal_counters.push_back(52014);
        internal_counters.push_back(52269);
        internal_counters.push_back(52524);
        internal_counters.push_back(52779);
        internal_counters.push_back(53034);
        internal_counters.push_back(53289);
        internal_counters.push_back(53544);
        internal_counters.push_back(53799);
        internal_counters.push_back(54054);
        internal_counters.push_back(54309);
        internal_counters.push_back(54564);
        internal_counters.push_back(54819);
        internal_counters.push_back(55074);
        internal_counters.push_back(55329);
        internal_counters.push_back(55584);
        internal_counters.push_back(55839);
        internal_counters.push_back(56094);
        internal_counters.push_back(56349);
        internal_counters.push_back(56604);
        internal_counters.push_back(56859);
        internal_counters.push_back(57114);
        internal_counters.push_back(57369);
        internal_counters.push_back(57624);
        internal_counters.push_back(57879);
        internal_counters.push_back(58134);
        internal_counters.push_back(58389);
        internal_counters.push_back(58644);
        internal_counters.push_back(58899);
        internal_counters.push_back(59154);
        internal_counters.push_back(59409);
        internal_counters.push_back(59664);
        internal_counters.push_back(59919);
        internal_counters.push_back(60174);
        internal_counters.push_back(60429);
        internal_counters.push_back(60684);
        internal_counters.push_back(60939);
        internal_counters.push_back(61194);

        c.DefineDerivedCounter("TexVolFilteringPct",
                               "TextureUnit",
                               "Percentage of pixels that received volume filtering.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,+,/,(100),*",
                               "b5ff6bed-3178-aee4-42dd-c74391c02a2d");
    }
    { // Index:46
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(45130);
        internal_counters.push_back(45385);
        internal_counters.push_back(45640);
        internal_counters.push_back(45895);
        internal_counters.push_back(46150);
        internal_counters.push_back(46405);
        internal_counters.push_back(46660);
        internal_counters.push_back(46915);
        internal_counters.push_back(47170);
        internal_counters.push_back(47425);
        internal_counters.push_back(47680);
        internal_counters.push_back(47935);
        internal_counters.push_back(48190);
        internal_counters.push_back(48445);
        internal_counters.push_back(48700);
        internal_counters.push_back(48955);
        internal_counters.push_back(49210);
        internal_counters.push_back(49465);
        internal_counters.push_back(49720);
        internal_counters.push_back(49975);
        internal_counters.push_back(50230);
        internal_counters.push_back(50485);
        internal_counters.push_back(50740);
        internal_counters.push_back(50995);
        internal_counters.push_back(51250);
        internal_counters.push_back(51505);
        internal_counters.push_back(51760);
        internal_counters.push_back(52015);
        internal_counters.push_back(52270);
        internal_counters.push_back(52525);
        internal_counters.push_back(52780);
        internal_counters.push_back(53035);
        internal_counters.push_back(53290);
        internal_counters.push_back(53545);
        internal_counters.push_back(53800);
        internal_counters.push_back(54055);
        internal_counters.push_back(54310);
        internal_counters.push_back(54565);
        internal_counters.push_back(54820);
        internal_counters.push_back(55075);
        internal_counters.push_back(55330);
        internal_counters.push_back(55585);
        internal_counters.push_back(55840);
        internal_counters.push_back(56095);
        internal_counters.push_back(56350);
        internal_counters.push_back(56605);
        internal_counters.push_back(56860);
        internal_counters.push_back(57115);
        internal_counters.push_back(57370);
        internal_counters.push_back(57625);
        internal_counters.push_back(57880);
        internal_counters.push_back(58135);
        internal_counters.push_back(58390);
        internal_counters.push_back(58645);
        internal_counters.push_back(58900);
        internal_counters.push_back(59155);
        internal_counters.push_back(59410);
        internal_counters.push_back(59665);
        internal_counters.push_back(59920);
        internal_counters.push_back(60175);
        internal_counters.push_back(60430);
        internal_counters.push_back(60685);
        internal_counters.push_back(60940);
        internal_counters.push_back(61195);

        c.DefineDerivedCounter("TexVolFilteringCount",
                               "TextureUnit",
                               "Count of pixels that received volume filtering.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(4),*",
                               "4bddc587-d589-8128-e18c-762eab2c871f");
    }
    { // Index:47
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(45129);
        internal_counters.push_back(45384);
        internal_counters.push_back(45639);
        internal_counters.push_back(45894);
        internal_counters.push_back(46149);
        internal_counters.push_back(46404);
        internal_counters.push_back(46659);
        internal_counters.push_back(46914);
        internal_counters.push_back(47169);
        internal_counters.push_back(47424);
        internal_counters.push_back(47679);
        internal_counters.push_back(47934);
        internal_counters.push_back(48189);
        internal_counters.push_back(48444);
        internal_counters.push_back(48699);
        internal_counters.push_back(48954);
        internal_counters.push_back(49209);
        internal_counters.push_back(49464);
        internal_counters.push_back(49719);
        internal_counters.push_back(49974);
        internal_counters.push_back(50229);
        internal_counters.push_back(50484);
        internal_counters.push_back(50739);
        internal_counters.push_back(50994);
        internal_counters.push_back(51249);
        internal_counters.push_back(51504);
        internal_counters.push_back(51759);
        internal_counters.push_back(52014);
        internal_counters.push_back(52269);
        internal_counters.push_back(52524);
        internal_counters.push_back(52779);
        internal_counters.push_back(53034);
        internal_counters.push_back(53289);
        internal_counters.push_back(53544);
        internal_counters.push_back(53799);
        internal_counters.push_back(54054);
        internal_counters.push_back(54309);
        internal_counters.push_back(54564);
        internal_counters.push_back(54819);
        internal_counters.push_back(55074);
        internal_counters.push_back(55329);
        internal_counters.push_back(55584);
        internal_counters.push_back(55839);
        internal_counters.push_back(56094);
        internal_counters.push_back(56349);
        internal_counters.push_back(56604);
        internal_counters.push_back(56859);
        internal_counters.push_back(57114);
        internal_counters.push_back(57369);
        internal_counters.push_back(57624);
        internal_counters.push_back(57879);
        internal_counters.push_back(58134);
        internal_counters.push_back(58389);
        internal_counters.push_back(58644);
        internal_counters.push_back(58899);
        internal_counters.push_back(59154);
        internal_counters.push_back(59409);
        internal_counters.push_back(59664);
        internal_counters.push_back(59919);
        internal_counters.push_back(60174);
        internal_counters.push_back(60429);
        internal_counters.push_back(60684);
        internal_counters.push_back(60939);
        internal_counters.push_back(61194);

        c.DefineDerivedCounter("NoTexVolFilteringCount",
                               "TextureUnit",
                               "Count of pixels that did not receive volume filtering.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(4),*",
                               "9fe1a854-17c6-9d26-b2b9-80610cd5827d");
    }
    { // Index:48
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(45148);
        internal_counters.push_back(45403);
        internal_counters.push_back(45658);
        internal_counters.push_back(45913);
        internal_counters.push_back(46168);
        internal_counters.push_back(46423);
        internal_counters.push_back(46678);
        internal_counters.push_back(46933);
        internal_counters.push_back(47188);
        internal_counters.push_back(47443);
        internal_counters.push_back(47698);
        internal_counters.push_back(47953);
        internal_counters.push_back(48208);
        internal_counters.push_back(48463);
        internal_counters.push_back(48718);
        internal_counters.push_back(48973);
        internal_counters.push_back(49228);
        internal_counters.push_back(49483);
        internal_counters.push_back(49738);
        internal_counters.push_back(49993);
        internal_counters.push_back(50248);
        internal_counters.push_back(50503);
        internal_counters.push_back(50758);
        internal_counters.push_back(51013);
        internal_counters.push_back(51268);
        internal_counters.push_back(51523);
        internal_counters.push_back(51778);
        internal_counters.push_back(52033);
        internal_counters.push_back(52288);
        internal_counters.push_back(52543);
        internal_counters.push_back(52798);
        internal_counters.push_back(53053);
        internal_counters.push_back(53308);
        internal_counters.push_back(53563);
        internal_counters.push_back(53818);
        internal_counters.push_back(54073);
        internal_counters.push_back(54328);
        internal_counters.push_back(54583);
        internal_counters.push_back(54838);
        internal_counters.push_back(55093);
        internal_counters.push_back(55348);
        internal_counters.push_back(55603);
        internal_counters.push_back(55858);
        internal_counters.push_back(56113);
        internal_counters.push_back(56368);
        internal_counters.push_back(56623);
        internal_counters.push_back(56878);
        internal_counters.push_back(57133);
        internal_counters.push_back(57388);
        internal_counters.push_back(57643);
        internal_counters.push_back(57898);
        internal_counters.push_back(58153);
        internal_counters.push_back(58408);
        internal_counters.push_back(58663);
        internal_counters.push_back(58918);
        internal_counters.push_back(59173);
        internal_counters.push_back(59428);
        internal_counters.push_back(59683);
        internal_counters.push_back(59938);
        internal_counters.push_back(60193);
        internal_counters.push_back(60448);
        internal_counters.push_back(60703);
        internal_counters.push_back(60958);
        internal_counters.push_back(61213);
        internal_counters.push_back(45149);
        internal_counters.push_back(45404);
        internal_counters.push_back(45659);
        internal_counters.push_back(45914);
        internal_counters.push_back(46169);
        internal_counters.push_back(46424);
        internal_counters.push_back(46679);
        internal_counters.push_back(46934);
        internal_counters.push_back(47189);
        internal_counters.push_back(47444);
        internal_counters.push_back(47699);
        internal_counters.push_back(47954);
        internal_counters.push_back(48209);
        internal_counters.push_back(48464);
        internal_counters.push_back(48719);
        internal_counters.push_back(48974);
        internal_counters.push_back(49229);
        internal_counters.push_back(49484);
        internal_counters.push_back(49739);
        internal_counters.push_back(49994);
        internal_counters.push_back(50249);
        internal_counters.push_back(50504);
        internal_counters.push_back(50759);
        internal_counters.push_back(51014);
        internal_counters.push_back(51269);
        internal_counters.push_back(51524);
        internal_counters.push_back(51779);
        internal_counters.push_back(52034);
        internal_counters.push_back(52289);
        internal_counters.push_back(52544);
        internal_counters.push_back(52799);
        internal_counters.push_back(53054);
        internal_counters.push_back(53309);
        internal_counters.push_back(53564);
        internal_counters.push_back(53819);
        internal_counters.push_back(54074);
        internal_counters.push_back(54329);
        internal_counters.push_back(54584);
        internal_counters.push_back(54839);
        internal_counters.push_back(55094);
        internal_counters.push_back(55349);
        internal_counters.push_back(55604);
        internal_counters.push_back(55859);
        internal_counters.push_back(56114);
        internal_counters.push_back(56369);
        internal_counters.push_back(56624);
        internal_counters.push_back(56879);
        internal_counters.push_back(57134);
        internal_counters.push_back(57389);
        internal_counters.push_back(57644);
        internal_counters.push_back(57899);
        internal_counters.push_back(58154);
        internal_counters.push_back(58409);
        internal_counters.push_back(58664);
        internal_counters.push_back(58919);
        internal_counters.push_back(59174);
        internal_counters.push_back(59429);
        internal_counters.push_back(59684);
        internal_counters.push_back(59939);
        internal_counters.push_back(60194);
        internal_counters.push_back(60449);
        internal_counters.push_back(60704);
        internal_counters.push_back(60959);
        internal_counters.push_back(61214);
        internal_counters.push_back(45150);
        internal_counters.push_back(45405);
        internal_counters.push_back(45660);
        internal_counters.push_back(45915);
        internal_counters.push_back(46170);
        internal_counters.push_back(46425);
        internal_counters.push_back(46680);
        internal_counters.push_back(46935);
        internal_counters.push_back(47190);
        internal_counters.push_back(47445);
        internal_counters.push_back(47700);
        internal_counters.push_back(47955);
        internal_counters.push_back(48210);
        internal_counters.push_back(48465);
        internal_counters.push_back(48720);
        internal_counters.push_back(48975);
        internal_counters.push_back(49230);
        internal_counters.push_back(49485);
        internal_counters.push_back(49740);
        internal_counters.push_back(49995);
        internal_counters.push_back(50250);
        internal_counters.push_back(50505);
        internal_counters.push_back(50760);
        internal_counters.push_back(51015);
        internal_counters.push_back(51270);
        internal_counters.push_back(51525);
        internal_counters.push_back(51780);
        internal_counters.push_back(52035);
        internal_counters.push_back(52290);
        internal_counters.push_back(52545);
        internal_counters.push_back(52800);
        internal_counters.push_back(53055);
        internal_counters.push_back(53310);
        internal_counters.push_back(53565);
        internal_counters.push_back(53820);
        internal_counters.push_back(54075);
        internal_counters.push_back(54330);
        internal_counters.push_back(54585);
        internal_counters.push_back(54840);
        internal_counters.push_back(55095);
        internal_counters.push_back(55350);
        internal_counters.push_back(55605);
        internal_counters.push_back(55860);
        internal_counters.push_back(56115);
        internal_counters.push_back(56370);
        internal_counters.push_back(56625);
        internal_counters.push_back(56880);
        internal_counters.push_back(57135);
        internal_counters.push_back(57390);
        internal_counters.push_back(57645);
        internal_counters.push_back(57900);
        internal_counters.push_back(58155);
        internal_counters.push_back(58410);
        internal_counters.push_back(58665);
        internal_counters.push_back(58920);
        internal_counters.push_back(59175);
        internal_counters.push_back(59430);
        internal_counters.push_back(59685);
        internal_counters.push_back(59940);
        internal_counters.push_back(60195);
        internal_counters.push_back(60450);
        internal_counters.push_back(60705);
        internal_counters.push_back(60960);
        internal_counters.push_back(61215);
        internal_counters.push_back(45151);
        internal_counters.push_back(45406);
        internal_counters.push_back(45661);
        internal_counters.push_back(45916);
        internal_counters.push_back(46171);
        internal_counters.push_back(46426);
        internal_counters.push_back(46681);
        internal_counters.push_back(46936);
        internal_counters.push_back(47191);
        internal_counters.push_back(47446);
        internal_counters.push_back(47701);
        internal_counters.push_back(47956);
        internal_counters.push_back(48211);
        internal_counters.push_back(48466);
        internal_counters.push_back(48721);
        internal_counters.push_back(48976);
        internal_counters.push_back(49231);
        internal_counters.push_back(49486);
        internal_counters.push_back(49741);
        internal_counters.push_back(49996);
        internal_counters.push_back(50251);
        internal_counters.push_back(50506);
        internal_counters.push_back(50761);
        internal_counters.push_back(51016);
        internal_counters.push_back(51271);
        internal_counters.push_back(51526);
        internal_counters.push_back(51781);
        internal_counters.push_back(52036);
        internal_counters.push_back(52291);
        internal_counters.push_back(52546);
        internal_counters.push_back(52801);
        internal_counters.push_back(53056);
        internal_counters.push_back(53311);
        internal_counters.push_back(53566);
        internal_counters.push_back(53821);
        internal_counters.push_back(54076);
        internal_counters.push_back(54331);
        internal_counters.push_back(54586);
        internal_counters.push_back(54841);
        internal_counters.push_back(55096);
        internal_counters.push_back(55351);
        internal_counters.push_back(55606);
        internal_counters.push_back(55861);
        internal_counters.push_back(56116);
        internal_counters.push_back(56371);
        internal_counters.push_back(56626);
        internal_counters.push_back(56881);
        internal_counters.push_back(57136);
        internal_counters.push_back(57391);
        internal_counters.push_back(57646);
        internal_counters.push_back(57901);
        internal_counters.push_back(58156);
        internal_counters.push_back(58411);
        internal_counters.push_back(58666);
        internal_counters.push_back(58921);
        internal_counters.push_back(59176);
        internal_counters.push_back(59431);
        internal_counters.push_back(59686);
        internal_counters.push_back(59941);
        internal_counters.push_back(60196);
        internal_counters.push_back(60451);
        internal_counters.push_back(60706);
        internal_counters.push_back(60961);
        internal_counters.push_back(61216);
        internal_counters.push_back(45152);
        internal_counters.push_back(45407);
        internal_counters.push_back(45662);
        internal_counters.push_back(45917);
        internal_counters.push_back(46172);
        internal_counters.push_back(46427);
        internal_counters.push_back(46682);
        internal_counters.push_back(46937);
        internal_counters.push_back(47192);
        internal_counters.push_back(47447);
        internal_counters.push_back(47702);
        internal_counters.push_back(47957);
        internal_counters.push_back(48212);
        internal_counters.push_back(48467);
        internal_counters.push_back(48722);
        internal_counters.push_back(48977);
        internal_counters.push_back(49232);
        internal_counters.push_back(49487);
        internal_counters.push_back(49742);
        internal_counters.push_back(49997);
        internal_counters.push_back(50252);
        internal_counters.push_back(50507);
        internal_counters.push_back(50762);
        internal_counters.push_back(51017);
        internal_counters.push_back(51272);
        internal_counters.push_back(51527);
        internal_counters.push_back(51782);
        internal_counters.push_back(52037);
        internal_counters.push_back(52292);
        internal_counters.push_back(52547);
        internal_counters.push_back(52802);
        internal_counters.push_back(53057);
        internal_counters.push_back(53312);
        internal_counters.push_back(53567);
        internal_counters.push_back(53822);
        internal_counters.push_back(54077);
        internal_counters.push_back(54332);
        internal_counters.push_back(54587);
        internal_counters.push_back(54842);
        internal_counters.push_back(55097);
        internal_counters.push_back(55352);
        internal_counters.push_back(55607);
        internal_counters.push_back(55862);
        internal_counters.push_back(56117);
        internal_counters.push_back(56372);
        internal_counters.push_back(56627);
        internal_counters.push_back(56882);
        internal_counters.push_back(57137);
        internal_counters.push_back(57392);
        internal_counters.push_back(57647);
        internal_counters.push_back(57902);
        internal_counters.push_back(58157);
        internal_counters.push_back(58412);
        internal_counters.push_back(58667);
        internal_counters.push_back(58922);
        internal_counters.push_back(59177);
        internal_counters.push_back(59432);
        internal_counters.push_back(59687);
        internal_counters.push_back(59942);
        internal_counters.push_back(60197);
        internal_counters.push_back(60452);
        internal_counters.push_back(60707);
        internal_counters.push_back(60962);
        internal_counters.push_back(61217);
        internal_counters.push_back(45153);
        internal_counters.push_back(45408);
        internal_counters.push_back(45663);
        internal_counters.push_back(45918);
        internal_counters.push_back(46173);
        internal_counters.push_back(46428);
        internal_counters.push_back(46683);
        internal_counters.push_back(46938);
        internal_counters.push_back(47193);
        internal_counters.push_back(47448);
        internal_counters.push_back(47703);
        internal_counters.push_back(47958);
        internal_counters.push_back(48213);
        internal_counters.push_back(48468);
        internal_counters.push_back(48723);
        internal_counters.push_back(48978);
        internal_counters.push_back(49233);
        internal_counters.push_back(49488);
        internal_counters.push_back(49743);
        internal_counters.push_back(49998);
        internal_counters.push_back(50253);
        internal_counters.push_back(50508);
        internal_counters.push_back(50763);
        internal_counters.push_back(51018);
        internal_counters.push_back(51273);
        internal_counters.push_back(51528);
        internal_counters.push_back(51783);
        internal_counters.push_back(52038);
        internal_counters.push_back(52293);
        internal_counters.push_back(52548);
        internal_counters.push_back(52803);
        internal_counters.push_back(53058);
        internal_counters.push_back(53313);
        internal_counters.push_back(53568);
        internal_counters.push_back(53823);
        internal_counters.push_back(54078);
        internal_counters.push_back(54333);
        internal_counters.push_back(54588);
        internal_counters.push_back(54843);
        internal_counters.push_back(55098);
        internal_counters.push_back(55353);
        internal_counters.push_back(55608);
        internal_counters.push_back(55863);
        internal_counters.push_back(56118);
        internal_counters.push_back(56373);
        internal_counters.push_back(56628);
        internal_counters.push_back(56883);
        internal_counters.push_back(57138);
        internal_counters.push_back(57393);
        internal_counters.push_back(57648);
        internal_counters.push_back(57903);
        internal_counters.push_back(58158);
        internal_counters.push_back(58413);
        internal_counters.push_back(58668);
        internal_counters.push_back(58923);
        internal_counters.push_back(59178);
        internal_counters.push_back(59433);
        internal_counters.push_back(59688);
        internal_counters.push_back(59943);
        internal_counters.push_back(60198);
        internal_counters.push_back(60453);
        internal_counters.push_back(60708);
        internal_counters.push_back(60963);
        internal_counters.push_back(61218);
        internal_counters.push_back(45154);
        internal_counters.push_back(45409);
        internal_counters.push_back(45664);
        internal_counters.push_back(45919);
        internal_counters.push_back(46174);
        internal_counters.push_back(46429);
        internal_counters.push_back(46684);
        internal_counters.push_back(46939);
        internal_counters.push_back(47194);
        internal_counters.push_back(47449);
        internal_counters.push_back(47704);
        internal_counters.push_back(47959);
        internal_counters.push_back(48214);
        internal_counters.push_back(48469);
        internal_counters.push_back(48724);
        internal_counters.push_back(48979);
        internal_counters.push_back(49234);
        internal_counters.push_back(49489);
        internal_counters.push_back(49744);
        internal_counters.push_back(49999);
        internal_counters.push_back(50254);
        internal_counters.push_back(50509);
        internal_counters.push_back(50764);
        internal_counters.push_back(51019);
        internal_counters.push_back(51274);
        internal_counters.push_back(51529);
        internal_counters.push_back(51784);
        internal_counters.push_back(52039);
        internal_counters.push_back(52294);
        internal_counters.push_back(52549);
        internal_counters.push_back(52804);
        internal_counters.push_back(53059);
        internal_counters.push_back(53314);
        internal_counters.push_back(53569);
        internal_counters.push_back(53824);
        internal_counters.push_back(54079);
        internal_counters.push_back(54334);
        internal_counters.push_back(54589);
        internal_counters.push_back(54844);
        internal_counters.push_back(55099);
        internal_counters.push_back(55354);
        internal_counters.push_back(55609);
        internal_counters.push_back(55864);
        internal_counters.push_back(56119);
        internal_counters.push_back(56374);
        internal_counters.push_back(56629);
        internal_counters.push_back(56884);
        internal_counters.push_back(57139);
        internal_counters.push_back(57394);
        internal_counters.push_back(57649);
        internal_counters.push_back(57904);
        internal_counters.push_back(58159);
        internal_counters.push_back(58414);
        internal_counters.push_back(58669);
        internal_counters.push_back(58924);
        internal_counters.push_back(59179);
        internal_counters.push_back(59434);
        internal_counters.push_back(59689);
        internal_counters.push_back(59944);
        internal_counters.push_back(60199);
        internal_counters.push_back(60454);
        internal_counters.push_back(60709);
        internal_counters.push_back(60964);
        internal_counters.push_back(61219);
        internal_counters.push_back(45155);
        internal_counters.push_back(45410);
        internal_counters.push_back(45665);
        internal_counters.push_back(45920);
        internal_counters.push_back(46175);
        internal_counters.push_back(46430);
        internal_counters.push_back(46685);
        internal_counters.push_back(46940);
        internal_counters.push_back(47195);
        internal_counters.push_back(47450);
        internal_counters.push_back(47705);
        internal_counters.push_back(47960);
        internal_counters.push_back(48215);
        internal_counters.push_back(48470);
        internal_counters.push_back(48725);
        internal_counters.push_back(48980);
        internal_counters.push_back(49235);
        internal_counters.push_back(49490);
        internal_counters.push_back(49745);
        internal_counters.push_back(50000);
        internal_counters.push_back(50255);
        internal_counters.push_back(50510);
        internal_counters.push_back(50765);
        internal_counters.push_back(51020);
        internal_counters.push_back(51275);
        internal_counters.push_back(51530);
        internal_counters.push_back(51785);
        internal_counters.push_back(52040);
        internal_counters.push_back(52295);
        internal_counters.push_back(52550);
        internal_counters.push_back(52805);
        internal_counters.push_back(53060);
        internal_counters.push_back(53315);
        internal_counters.push_back(53570);
        internal_counters.push_back(53825);
        internal_counters.push_back(54080);
        internal_counters.push_back(54335);
        internal_counters.push_back(54590);
        internal_counters.push_back(54845);
        internal_counters.push_back(55100);
        internal_counters.push_back(55355);
        internal_counters.push_back(55610);
        internal_counters.push_back(55865);
        internal_counters.push_back(56120);
        internal_counters.push_back(56375);
        internal_counters.push_back(56630);
        internal_counters.push_back(56885);
        internal_counters.push_back(57140);
        internal_counters.push_back(57395);
        internal_counters.push_back(57650);
        internal_counters.push_back(57905);
        internal_counters.push_back(58160);
        internal_counters.push_back(58415);
        internal_counters.push_back(58670);
        internal_counters.push_back(58925);
        internal_counters.push_back(59180);
        internal_counters.push_back(59435);
        internal_counters.push_back(59690);
        internal_counters.push_back(59945);
        internal_counters.push_back(60200);
        internal_counters.push_back(60455);
        internal_counters.push_back(60710);
        internal_counters.push_back(60965);
        internal_counters.push_back(61220);
        internal_counters.push_back(45156);
        internal_counters.push_back(45411);
        internal_counters.push_back(45666);
        internal_counters.push_back(45921);
        internal_counters.push_back(46176);
        internal_counters.push_back(46431);
        internal_counters.push_back(46686);
        internal_counters.push_back(46941);
        internal_counters.push_back(47196);
        internal_counters.push_back(47451);
        internal_counters.push_back(47706);
        internal_counters.push_back(47961);
        internal_counters.push_back(48216);
        internal_counters.push_back(48471);
        internal_counters.push_back(48726);
        internal_counters.push_back(48981);
        internal_counters.push_back(49236);
        internal_counters.push_back(49491);
        internal_counters.push_back(49746);
        internal_counters.push_back(50001);
        internal_counters.push_back(50256);
        internal_counters.push_back(50511);
        internal_counters.push_back(50766);
        internal_counters.push_back(51021);
        internal_counters.push_back(51276);
        internal_counters.push_back(51531);
        internal_counters.push_back(51786);
        internal_counters.push_back(52041);
        internal_counters.push_back(52296);
        internal_counters.push_back(52551);
        internal_counters.push_back(52806);
        internal_counters.push_back(53061);
        internal_counters.push_back(53316);
        internal_counters.push_back(53571);
        internal_counters.push_back(53826);
        internal_counters.push_back(54081);
        internal_counters.push_back(54336);
        internal_counters.push_back(54591);
        internal_counters.push_back(54846);
        internal_counters.push_back(55101);
        internal_counters.push_back(55356);
        internal_counters.push_back(55611);
        internal_counters.push_back(55866);
        internal_counters.push_back(56121);
        internal_counters.push_back(56376);
        internal_counters.push_back(56631);
        internal_counters.push_back(56886);
        internal_counters.push_back(57141);
        internal_counters.push_back(57396);
        internal_counters.push_back(57651);
        internal_counters.push_back(57906);
        internal_counters.push_back(58161);
        internal_counters.push_back(58416);
        internal_counters.push_back(58671);
        internal_counters.push_back(58926);
        internal_counters.push_back(59181);
        internal_counters.push_back(59436);
        internal_counters.push_back(59691);
        internal_counters.push_back(59946);
        internal_counters.push_back(60201);
        internal_counters.push_back(60456);
        internal_counters.push_back(60711);
        internal_counters.push_back(60966);
        internal_counters.push_back(61221);

        c.DefineDerivedCounter("TexAveAnisotropy",
                               "TextureUnit",
                               "The average degree of anisotropy applied. A number between 1 and 16. The anisotropic filtering algorithm only applies samples where they are required (e.g. there will be no extra anisotropic samples if the view vector is perpendicular to the surface) so this can be much lower than the requested anisotropy.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(2),64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,*,+,(4),128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum64,*,+,(6),192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,sum64,*,+,(8),256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum64,*,+,(10),320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,sum64,*,+,(12),384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,sum64,*,+,(14),448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,sum64,*,+,(16),512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,sum64,*,+,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,+,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum64,+,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,sum64,+,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum64,+,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,sum64,+,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,sum64,+,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,sum64,+,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,sum64,+,/",
                               "7ca2a2b9-a4eb-ce23-d163-59147e672396");
    }
    { // Index:49
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(5496);
        internal_counters.push_back(5938);
        internal_counters.push_back(6380);
        internal_counters.push_back(6822);
        internal_counters.push_back(7264);
        internal_counters.push_back(7706);
        internal_counters.push_back(8148);
        internal_counters.push_back(8590);
        internal_counters.push_back(9032);
        internal_counters.push_back(9474);
        internal_counters.push_back(9916);
        internal_counters.push_back(10358);
        internal_counters.push_back(10800);
        internal_counters.push_back(11242);
        internal_counters.push_back(11684);
        internal_counters.push_back(12126);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("DepthStencilTestBusy",
                               "Timing",
                               "Percentage of time GPU spent performing depth and stencil tests relative to GPUBusy.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*",
                               "6834fb52-42e8-bb50-fd48-ec2f2904e7e0");
    }
    { // Index:50
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(5496);
        internal_counters.push_back(5938);
        internal_counters.push_back(6380);
        internal_counters.push_back(6822);
        internal_counters.push_back(7264);
        internal_counters.push_back(7706);
        internal_counters.push_back(8148);
        internal_counters.push_back(8590);
        internal_counters.push_back(9032);
        internal_counters.push_back(9474);
        internal_counters.push_back(9916);
        internal_counters.push_back(10358);
        internal_counters.push_back(10800);
        internal_counters.push_back(11242);
        internal_counters.push_back(11684);
        internal_counters.push_back(12126);

        c.DefineDerivedCounter("DepthStencilTestBusyCycles",
                               "Timing",
                               "Number of GPU cycles spent performing depth and stencil tests.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16",
                               "07ad48f0-49d8-87e7-1ef5-1e24ff2cef49");
    }
    { // Index:51
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(16062);
        internal_counters.push_back(16884);
        internal_counters.push_back(17706);
        internal_counters.push_back(18528);
        internal_counters.push_back(19350);
        internal_counters.push_back(20172);
        internal_counters.push_back(20994);
        internal_counters.push_back(21816);
        internal_counters.push_back(22638);
        internal_counters.push_back(23460);
        internal_counters.push_back(24282);
        internal_counters.push_back(25104);
        internal_counters.push_back(25926);
        internal_counters.push_back(26748);
        internal_counters.push_back(27570);
        internal_counters.push_back(28392);
        internal_counters.push_back(29214);
        internal_counters.push_back(30036);
        internal_counters.push_back(30858);
        internal_counters.push_back(31680);
        internal_counters.push_back(32502);
        internal_counters.push_back(33324);
        internal_counters.push_back(34146);
        internal_counters.push_back(34968);
        internal_counters.push_back(35790);
        internal_counters.push_back(36612);
        internal_counters.push_back(37434);
        internal_counters.push_back(38256);
        internal_counters.push_back(39078);
        internal_counters.push_back(39900);
        internal_counters.push_back(40722);
        internal_counters.push_back(41544);
        internal_counters.push_back(16063);
        internal_counters.push_back(16885);
        internal_counters.push_back(17707);
        internal_counters.push_back(18529);
        internal_counters.push_back(19351);
        internal_counters.push_back(20173);
        internal_counters.push_back(20995);
        internal_counters.push_back(21817);
        internal_counters.push_back(22639);
        internal_counters.push_back(23461);
        internal_counters.push_back(24283);
        internal_counters.push_back(25105);
        internal_counters.push_back(25927);
        internal_counters.push_back(26749);
        internal_counters.push_back(27571);
        internal_counters.push_back(28393);
        internal_counters.push_back(29215);
        internal_counters.push_back(30037);
        internal_counters.push_back(30859);
        internal_counters.push_back(31681);
        internal_counters.push_back(32503);
        internal_counters.push_back(33325);
        internal_counters.push_back(34147);
        internal_counters.push_back(34969);
        internal_counters.push_back(35791);
        internal_counters.push_back(36613);
        internal_counters.push_back(37435);
        internal_counters.push_back(38257);
        internal_counters.push_back(39079);
        internal_counters.push_back(39901);
        internal_counters.push_back(40723);
        internal_counters.push_back(41545);
        internal_counters.push_back(16064);
        internal_counters.push_back(16886);
        internal_counters.push_back(17708);
        internal_counters.push_back(18530);
        internal_counters.push_back(19352);
        internal_counters.push_back(20174);
        internal_counters.push_back(20996);
        internal_counters.push_back(21818);
        internal_counters.push_back(22640);
        internal_counters.push_back(23462);
        internal_counters.push_back(24284);
        internal_counters.push_back(25106);
        internal_counters.push_back(25928);
        internal_counters.push_back(26750);
        internal_counters.push_back(27572);
        internal_counters.push_back(28394);
        internal_counters.push_back(29216);
        internal_counters.push_back(30038);
        internal_counters.push_back(30860);
        internal_counters.push_back(31682);
        internal_counters.push_back(32504);
        internal_counters.push_back(33326);
        internal_counters.push_back(34148);
        internal_counters.push_back(34970);
        internal_counters.push_back(35792);
        internal_counters.push_back(36614);
        internal_counters.push_back(37436);
        internal_counters.push_back(38258);
        internal_counters.push_back(39080);
        internal_counters.push_back(39902);
        internal_counters.push_back(40724);
        internal_counters.push_back(41546);
        internal_counters.push_back(16065);
        internal_counters.push_back(16887);
        internal_counters.push_back(17709);
        internal_counters.push_back(18531);
        internal_counters.push_back(19353);
        internal_counters.push_back(20175);
        internal_counters.push_back(20997);
        internal_counters.push_back(21819);
        internal_counters.push_back(22641);
        internal_counters.push_back(23463);
        internal_counters.push_back(24285);
        internal_counters.push_back(25107);
        internal_counters.push_back(25929);
        internal_counters.push_back(26751);
        internal_counters.push_back(27573);
        internal_counters.push_back(28395);
        internal_counters.push_back(29217);
        internal_counters.push_back(30039);
        internal_counters.push_back(30861);
        internal_counters.push_back(31683);
        internal_counters.push_back(32505);
        internal_counters.push_back(33327);
        internal_counters.push_back(34149);
        internal_counters.push_back(34971);
        internal_counters.push_back(35793);
        internal_counters.push_back(36615);
        internal_counters.push_back(37437);
        internal_counters.push_back(38259);
        internal_counters.push_back(39081);
        internal_counters.push_back(39903);
        internal_counters.push_back(40725);
        internal_counters.push_back(41547);
        internal_counters.push_back(16138);
        internal_counters.push_back(16960);
        internal_counters.push_back(17782);
        internal_counters.push_back(18604);
        internal_counters.push_back(19426);
        internal_counters.push_back(20248);
        internal_counters.push_back(21070);
        internal_counters.push_back(21892);
        internal_counters.push_back(22714);
        internal_counters.push_back(23536);
        internal_counters.push_back(24358);
        internal_counters.push_back(25180);
        internal_counters.push_back(26002);
        internal_counters.push_back(26824);
        internal_counters.push_back(27646);
        internal_counters.push_back(28468);
        internal_counters.push_back(29290);
        internal_counters.push_back(30112);
        internal_counters.push_back(30934);
        internal_counters.push_back(31756);
        internal_counters.push_back(32578);
        internal_counters.push_back(33400);
        internal_counters.push_back(34222);
        internal_counters.push_back(35044);
        internal_counters.push_back(35866);
        internal_counters.push_back(36688);
        internal_counters.push_back(37510);
        internal_counters.push_back(38332);
        internal_counters.push_back(39154);
        internal_counters.push_back(39976);
        internal_counters.push_back(40798);
        internal_counters.push_back(41620);

        c.DefineDerivedCounter("HiZQuadsCulled",
                               "DepthAndStencil",
                               "Percentage of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum128,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum32,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum128,/,(100),*",
                               "fa0e319b-5573-6d34-5bab-904769925036");
    }
    { // Index:52
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(16062);
        internal_counters.push_back(16884);
        internal_counters.push_back(17706);
        internal_counters.push_back(18528);
        internal_counters.push_back(19350);
        internal_counters.push_back(20172);
        internal_counters.push_back(20994);
        internal_counters.push_back(21816);
        internal_counters.push_back(22638);
        internal_counters.push_back(23460);
        internal_counters.push_back(24282);
        internal_counters.push_back(25104);
        internal_counters.push_back(25926);
        internal_counters.push_back(26748);
        internal_counters.push_back(27570);
        internal_counters.push_back(28392);
        internal_counters.push_back(29214);
        internal_counters.push_back(30036);
        internal_counters.push_back(30858);
        internal_counters.push_back(31680);
        internal_counters.push_back(32502);
        internal_counters.push_back(33324);
        internal_counters.push_back(34146);
        internal_counters.push_back(34968);
        internal_counters.push_back(35790);
        internal_counters.push_back(36612);
        internal_counters.push_back(37434);
        internal_counters.push_back(38256);
        internal_counters.push_back(39078);
        internal_counters.push_back(39900);
        internal_counters.push_back(40722);
        internal_counters.push_back(41544);
        internal_counters.push_back(16063);
        internal_counters.push_back(16885);
        internal_counters.push_back(17707);
        internal_counters.push_back(18529);
        internal_counters.push_back(19351);
        internal_counters.push_back(20173);
        internal_counters.push_back(20995);
        internal_counters.push_back(21817);
        internal_counters.push_back(22639);
        internal_counters.push_back(23461);
        internal_counters.push_back(24283);
        internal_counters.push_back(25105);
        internal_counters.push_back(25927);
        internal_counters.push_back(26749);
        internal_counters.push_back(27571);
        internal_counters.push_back(28393);
        internal_counters.push_back(29215);
        internal_counters.push_back(30037);
        internal_counters.push_back(30859);
        internal_counters.push_back(31681);
        internal_counters.push_back(32503);
        internal_counters.push_back(33325);
        internal_counters.push_back(34147);
        internal_counters.push_back(34969);
        internal_counters.push_back(35791);
        internal_counters.push_back(36613);
        internal_counters.push_back(37435);
        internal_counters.push_back(38257);
        internal_counters.push_back(39079);
        internal_counters.push_back(39901);
        internal_counters.push_back(40723);
        internal_counters.push_back(41545);
        internal_counters.push_back(16064);
        internal_counters.push_back(16886);
        internal_counters.push_back(17708);
        internal_counters.push_back(18530);
        internal_counters.push_back(19352);
        internal_counters.push_back(20174);
        internal_counters.push_back(20996);
        internal_counters.push_back(21818);
        internal_counters.push_back(22640);
        internal_counters.push_back(23462);
        internal_counters.push_back(24284);
        internal_counters.push_back(25106);
        internal_counters.push_back(25928);
        internal_counters.push_back(26750);
        internal_counters.push_back(27572);
        internal_counters.push_back(28394);
        internal_counters.push_back(29216);
        internal_counters.push_back(30038);
        internal_counters.push_back(30860);
        internal_counters.push_back(31682);
        internal_counters.push_back(32504);
        internal_counters.push_back(33326);
        internal_counters.push_back(34148);
        internal_counters.push_back(34970);
        internal_counters.push_back(35792);
        internal_counters.push_back(36614);
        internal_counters.push_back(37436);
        internal_counters.push_back(38258);
        internal_counters.push_back(39080);
        internal_counters.push_back(39902);
        internal_counters.push_back(40724);
        internal_counters.push_back(41546);
        internal_counters.push_back(16065);
        internal_counters.push_back(16887);
        internal_counters.push_back(17709);
        internal_counters.push_back(18531);
        internal_counters.push_back(19353);
        internal_counters.push_back(20175);
        internal_counters.push_back(20997);
        internal_counters.push_back(21819);
        internal_counters.push_back(22641);
        internal_counters.push_back(23463);
        internal_counters.push_back(24285);
        internal_counters.push_back(25107);
        internal_counters.push_back(25929);
        internal_counters.push_back(26751);
        internal_counters.push_back(27573);
        internal_counters.push_back(28395);
        internal_counters.push_back(29217);
        internal_counters.push_back(30039);
        internal_counters.push_back(30861);
        internal_counters.push_back(31683);
        internal_counters.push_back(32505);
        internal_counters.push_back(33327);
        internal_counters.push_back(34149);
        internal_counters.push_back(34971);
        internal_counters.push_back(35793);
        internal_counters.push_back(36615);
        internal_counters.push_back(37437);
        internal_counters.push_back(38259);
        internal_counters.push_back(39081);
        internal_counters.push_back(39903);
        internal_counters.push_back(40725);
        internal_counters.push_back(41547);
        internal_counters.push_back(16138);
        internal_counters.push_back(16960);
        internal_counters.push_back(17782);
        internal_counters.push_back(18604);
        internal_counters.push_back(19426);
        internal_counters.push_back(20248);
        internal_counters.push_back(21070);
        internal_counters.push_back(21892);
        internal_counters.push_back(22714);
        internal_counters.push_back(23536);
        internal_counters.push_back(24358);
        internal_counters.push_back(25180);
        internal_counters.push_back(26002);
        internal_counters.push_back(26824);
        internal_counters.push_back(27646);
        internal_counters.push_back(28468);
        internal_counters.push_back(29290);
        internal_counters.push_back(30112);
        internal_counters.push_back(30934);
        internal_counters.push_back(31756);
        internal_counters.push_back(32578);
        internal_counters.push_back(33400);
        internal_counters.push_back(34222);
        internal_counters.push_back(35044);
        internal_counters.push_back(35866);
        internal_counters.push_back(36688);
        internal_counters.push_back(37510);
        internal_counters.push_back(38332);
        internal_counters.push_back(39154);
        internal_counters.push_back(39976);
        internal_counters.push_back(40798);
        internal_counters.push_back(41620);

        c.DefineDerivedCounter("HiZQuadsCulledCount",
                               "DepthAndStencil",
                               "Count of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum128,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum32,-,(0),max",
                               "73b0b39d-6df2-3e24-0b5c-7cb0ac8b6f39");
    }
    { // Index:53
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(16138);
        internal_counters.push_back(16960);
        internal_counters.push_back(17782);
        internal_counters.push_back(18604);
        internal_counters.push_back(19426);
        internal_counters.push_back(20248);
        internal_counters.push_back(21070);
        internal_counters.push_back(21892);
        internal_counters.push_back(22714);
        internal_counters.push_back(23536);
        internal_counters.push_back(24358);
        internal_counters.push_back(25180);
        internal_counters.push_back(26002);
        internal_counters.push_back(26824);
        internal_counters.push_back(27646);
        internal_counters.push_back(28468);
        internal_counters.push_back(29290);
        internal_counters.push_back(30112);
        internal_counters.push_back(30934);
        internal_counters.push_back(31756);
        internal_counters.push_back(32578);
        internal_counters.push_back(33400);
        internal_counters.push_back(34222);
        internal_counters.push_back(35044);
        internal_counters.push_back(35866);
        internal_counters.push_back(36688);
        internal_counters.push_back(37510);
        internal_counters.push_back(38332);
        internal_counters.push_back(39154);
        internal_counters.push_back(39976);
        internal_counters.push_back(40798);
        internal_counters.push_back(41620);

        c.DefineDerivedCounter("HiZQuadsAcceptedCount",
                               "DepthAndStencil",
                               "Count of quads that did continue on in the pipeline after HiZ.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32",
                               "59049ad9-42b5-c7cb-3616-6a8f6a8e4894");
    }
    { // Index:54
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(16138);
        internal_counters.push_back(16960);
        internal_counters.push_back(17782);
        internal_counters.push_back(18604);
        internal_counters.push_back(19426);
        internal_counters.push_back(20248);
        internal_counters.push_back(21070);
        internal_counters.push_back(21892);
        internal_counters.push_back(22714);
        internal_counters.push_back(23536);
        internal_counters.push_back(24358);
        internal_counters.push_back(25180);
        internal_counters.push_back(26002);
        internal_counters.push_back(26824);
        internal_counters.push_back(27646);
        internal_counters.push_back(28468);
        internal_counters.push_back(29290);
        internal_counters.push_back(30112);
        internal_counters.push_back(30934);
        internal_counters.push_back(31756);
        internal_counters.push_back(32578);
        internal_counters.push_back(33400);
        internal_counters.push_back(34222);
        internal_counters.push_back(35044);
        internal_counters.push_back(35866);
        internal_counters.push_back(36688);
        internal_counters.push_back(37510);
        internal_counters.push_back(38332);
        internal_counters.push_back(39154);
        internal_counters.push_back(39976);
        internal_counters.push_back(40798);
        internal_counters.push_back(41620);
        internal_counters.push_back(16162);
        internal_counters.push_back(16984);
        internal_counters.push_back(17806);
        internal_counters.push_back(18628);
        internal_counters.push_back(19450);
        internal_counters.push_back(20272);
        internal_counters.push_back(21094);
        internal_counters.push_back(21916);
        internal_counters.push_back(22738);
        internal_counters.push_back(23560);
        internal_counters.push_back(24382);
        internal_counters.push_back(25204);
        internal_counters.push_back(26026);
        internal_counters.push_back(26848);
        internal_counters.push_back(27670);
        internal_counters.push_back(28492);
        internal_counters.push_back(29314);
        internal_counters.push_back(30136);
        internal_counters.push_back(30958);
        internal_counters.push_back(31780);
        internal_counters.push_back(32602);
        internal_counters.push_back(33424);
        internal_counters.push_back(34246);
        internal_counters.push_back(35068);
        internal_counters.push_back(35890);
        internal_counters.push_back(36712);
        internal_counters.push_back(37534);
        internal_counters.push_back(38356);
        internal_counters.push_back(39178);
        internal_counters.push_back(40000);
        internal_counters.push_back(40822);
        internal_counters.push_back(41644);
        internal_counters.push_back(16062);
        internal_counters.push_back(16884);
        internal_counters.push_back(17706);
        internal_counters.push_back(18528);
        internal_counters.push_back(19350);
        internal_counters.push_back(20172);
        internal_counters.push_back(20994);
        internal_counters.push_back(21816);
        internal_counters.push_back(22638);
        internal_counters.push_back(23460);
        internal_counters.push_back(24282);
        internal_counters.push_back(25104);
        internal_counters.push_back(25926);
        internal_counters.push_back(26748);
        internal_counters.push_back(27570);
        internal_counters.push_back(28392);
        internal_counters.push_back(29214);
        internal_counters.push_back(30036);
        internal_counters.push_back(30858);
        internal_counters.push_back(31680);
        internal_counters.push_back(32502);
        internal_counters.push_back(33324);
        internal_counters.push_back(34146);
        internal_counters.push_back(34968);
        internal_counters.push_back(35790);
        internal_counters.push_back(36612);
        internal_counters.push_back(37434);
        internal_counters.push_back(38256);
        internal_counters.push_back(39078);
        internal_counters.push_back(39900);
        internal_counters.push_back(40722);
        internal_counters.push_back(41544);
        internal_counters.push_back(16063);
        internal_counters.push_back(16885);
        internal_counters.push_back(17707);
        internal_counters.push_back(18529);
        internal_counters.push_back(19351);
        internal_counters.push_back(20173);
        internal_counters.push_back(20995);
        internal_counters.push_back(21817);
        internal_counters.push_back(22639);
        internal_counters.push_back(23461);
        internal_counters.push_back(24283);
        internal_counters.push_back(25105);
        internal_counters.push_back(25927);
        internal_counters.push_back(26749);
        internal_counters.push_back(27571);
        internal_counters.push_back(28393);
        internal_counters.push_back(29215);
        internal_counters.push_back(30037);
        internal_counters.push_back(30859);
        internal_counters.push_back(31681);
        internal_counters.push_back(32503);
        internal_counters.push_back(33325);
        internal_counters.push_back(34147);
        internal_counters.push_back(34969);
        internal_counters.push_back(35791);
        internal_counters.push_back(36613);
        internal_counters.push_back(37435);
        internal_counters.push_back(38257);
        internal_counters.push_back(39079);
        internal_counters.push_back(39901);
        internal_counters.push_back(40723);
        internal_counters.push_back(41545);
        internal_counters.push_back(16064);
        internal_counters.push_back(16886);
        internal_counters.push_back(17708);
        internal_counters.push_back(18530);
        internal_counters.push_back(19352);
        internal_counters.push_back(20174);
        internal_counters.push_back(20996);
        internal_counters.push_back(21818);
        internal_counters.push_back(22640);
        internal_counters.push_back(23462);
        internal_counters.push_back(24284);
        internal_counters.push_back(25106);
        internal_counters.push_back(25928);
        internal_counters.push_back(26750);
        internal_counters.push_back(27572);
        internal_counters.push_back(28394);
        internal_counters.push_back(29216);
        internal_counters.push_back(30038);
        internal_counters.push_back(30860);
        internal_counters.push_back(31682);
        internal_counters.push_back(32504);
        internal_counters.push_back(33326);
        internal_counters.push_back(34148);
        internal_counters.push_back(34970);
        internal_counters.push_back(35792);
        internal_counters.push_back(36614);
        internal_counters.push_back(37436);
        internal_counters.push_back(38258);
        internal_counters.push_back(39080);
        internal_counters.push_back(39902);
        internal_counters.push_back(40724);
        internal_counters.push_back(41546);
        internal_counters.push_back(16065);
        internal_counters.push_back(16887);
        internal_counters.push_back(17709);
        internal_counters.push_back(18531);
        internal_counters.push_back(19353);
        internal_counters.push_back(20175);
        internal_counters.push_back(20997);
        internal_counters.push_back(21819);
        internal_counters.push_back(22641);
        internal_counters.push_back(23463);
        internal_counters.push_back(24285);
        internal_counters.push_back(25107);
        internal_counters.push_back(25929);
        internal_counters.push_back(26751);
        internal_counters.push_back(27573);
        internal_counters.push_back(28395);
        internal_counters.push_back(29217);
        internal_counters.push_back(30039);
        internal_counters.push_back(30861);
        internal_counters.push_back(31683);
        internal_counters.push_back(32505);
        internal_counters.push_back(33327);
        internal_counters.push_back(34149);
        internal_counters.push_back(34971);
        internal_counters.push_back(35793);
        internal_counters.push_back(36615);
        internal_counters.push_back(37437);
        internal_counters.push_back(38259);
        internal_counters.push_back(39081);
        internal_counters.push_back(39903);
        internal_counters.push_back(40725);
        internal_counters.push_back(41547);

        c.DefineDerivedCounter("PreZQuadsCulled",
                               "DepthAndStencil",
                               "Percentage of quads rejected based on the detailZ and earlyZ tests.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum32,-,(0),max,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum128,/,(100),*",
                               "4e77547b-ec55-5663-f034-af59be66d77d");
    }
    { // Index:55
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(16138);
        internal_counters.push_back(16960);
        internal_counters.push_back(17782);
        internal_counters.push_back(18604);
        internal_counters.push_back(19426);
        internal_counters.push_back(20248);
        internal_counters.push_back(21070);
        internal_counters.push_back(21892);
        internal_counters.push_back(22714);
        internal_counters.push_back(23536);
        internal_counters.push_back(24358);
        internal_counters.push_back(25180);
        internal_counters.push_back(26002);
        internal_counters.push_back(26824);
        internal_counters.push_back(27646);
        internal_counters.push_back(28468);
        internal_counters.push_back(29290);
        internal_counters.push_back(30112);
        internal_counters.push_back(30934);
        internal_counters.push_back(31756);
        internal_counters.push_back(32578);
        internal_counters.push_back(33400);
        internal_counters.push_back(34222);
        internal_counters.push_back(35044);
        internal_counters.push_back(35866);
        internal_counters.push_back(36688);
        internal_counters.push_back(37510);
        internal_counters.push_back(38332);
        internal_counters.push_back(39154);
        internal_counters.push_back(39976);
        internal_counters.push_back(40798);
        internal_counters.push_back(41620);
        internal_counters.push_back(16162);
        internal_counters.push_back(16984);
        internal_counters.push_back(17806);
        internal_counters.push_back(18628);
        internal_counters.push_back(19450);
        internal_counters.push_back(20272);
        internal_counters.push_back(21094);
        internal_counters.push_back(21916);
        internal_counters.push_back(22738);
        internal_counters.push_back(23560);
        internal_counters.push_back(24382);
        internal_counters.push_back(25204);
        internal_counters.push_back(26026);
        internal_counters.push_back(26848);
        internal_counters.push_back(27670);
        internal_counters.push_back(28492);
        internal_counters.push_back(29314);
        internal_counters.push_back(30136);
        internal_counters.push_back(30958);
        internal_counters.push_back(31780);
        internal_counters.push_back(32602);
        internal_counters.push_back(33424);
        internal_counters.push_back(34246);
        internal_counters.push_back(35068);
        internal_counters.push_back(35890);
        internal_counters.push_back(36712);
        internal_counters.push_back(37534);
        internal_counters.push_back(38356);
        internal_counters.push_back(39178);
        internal_counters.push_back(40000);
        internal_counters.push_back(40822);
        internal_counters.push_back(41644);

        c.DefineDerivedCounter("PreZQuadsCulledCount",
                               "DepthAndStencil",
                               "Count of quads rejected based on the detailZ and earlyZ tests.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum32,-,(0),max",
                               "1bf169e6-9304-834e-df5f-0c44d7890a08");
    }
    { // Index:56
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(16162);
        internal_counters.push_back(16984);
        internal_counters.push_back(17806);
        internal_counters.push_back(18628);
        internal_counters.push_back(19450);
        internal_counters.push_back(20272);
        internal_counters.push_back(21094);
        internal_counters.push_back(21916);
        internal_counters.push_back(22738);
        internal_counters.push_back(23560);
        internal_counters.push_back(24382);
        internal_counters.push_back(25204);
        internal_counters.push_back(26026);
        internal_counters.push_back(26848);
        internal_counters.push_back(27670);
        internal_counters.push_back(28492);
        internal_counters.push_back(29314);
        internal_counters.push_back(30136);
        internal_counters.push_back(30958);
        internal_counters.push_back(31780);
        internal_counters.push_back(32602);
        internal_counters.push_back(33424);
        internal_counters.push_back(34246);
        internal_counters.push_back(35068);
        internal_counters.push_back(35890);
        internal_counters.push_back(36712);
        internal_counters.push_back(37534);
        internal_counters.push_back(38356);
        internal_counters.push_back(39178);
        internal_counters.push_back(40000);
        internal_counters.push_back(40822);
        internal_counters.push_back(41644);

        c.DefineDerivedCounter("PreZQuadsSurvivingCount",
                               "DepthAndStencil",
                               "Count of quads surviving detailZ and earlyZ tests.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32",
                               "50e25e51-3713-89cb-7f92-559cde5e5532");
    }
    { // Index:57
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(16162);
        internal_counters.push_back(16984);
        internal_counters.push_back(17806);
        internal_counters.push_back(18628);
        internal_counters.push_back(19450);
        internal_counters.push_back(20272);
        internal_counters.push_back(21094);
        internal_counters.push_back(21916);
        internal_counters.push_back(22738);
        internal_counters.push_back(23560);
        internal_counters.push_back(24382);
        internal_counters.push_back(25204);
        internal_counters.push_back(26026);
        internal_counters.push_back(26848);
        internal_counters.push_back(27670);
        internal_counters.push_back(28492);
        internal_counters.push_back(29314);
        internal_counters.push_back(30136);
        internal_counters.push_back(30958);
        internal_counters.push_back(31780);
        internal_counters.push_back(32602);
        internal_counters.push_back(33424);
        internal_counters.push_back(34246);
        internal_counters.push_back(35068);
        internal_counters.push_back(35890);
        internal_counters.push_back(36712);
        internal_counters.push_back(37534);
        internal_counters.push_back(38356);
        internal_counters.push_back(39178);
        internal_counters.push_back(40000);
        internal_counters.push_back(40822);
        internal_counters.push_back(41644);
        internal_counters.push_back(16062);
        internal_counters.push_back(16884);
        internal_counters.push_back(17706);
        internal_counters.push_back(18528);
        internal_counters.push_back(19350);
        internal_counters.push_back(20172);
        internal_counters.push_back(20994);
        internal_counters.push_back(21816);
        internal_counters.push_back(22638);
        internal_counters.push_back(23460);
        internal_counters.push_back(24282);
        internal_counters.push_back(25104);
        internal_counters.push_back(25926);
        internal_counters.push_back(26748);
        internal_counters.push_back(27570);
        internal_counters.push_back(28392);
        internal_counters.push_back(29214);
        internal_counters.push_back(30036);
        internal_counters.push_back(30858);
        internal_counters.push_back(31680);
        internal_counters.push_back(32502);
        internal_counters.push_back(33324);
        internal_counters.push_back(34146);
        internal_counters.push_back(34968);
        internal_counters.push_back(35790);
        internal_counters.push_back(36612);
        internal_counters.push_back(37434);
        internal_counters.push_back(38256);
        internal_counters.push_back(39078);
        internal_counters.push_back(39900);
        internal_counters.push_back(40722);
        internal_counters.push_back(41544);
        internal_counters.push_back(16063);
        internal_counters.push_back(16885);
        internal_counters.push_back(17707);
        internal_counters.push_back(18529);
        internal_counters.push_back(19351);
        internal_counters.push_back(20173);
        internal_counters.push_back(20995);
        internal_counters.push_back(21817);
        internal_counters.push_back(22639);
        internal_counters.push_back(23461);
        internal_counters.push_back(24283);
        internal_counters.push_back(25105);
        internal_counters.push_back(25927);
        internal_counters.push_back(26749);
        internal_counters.push_back(27571);
        internal_counters.push_back(28393);
        internal_counters.push_back(29215);
        internal_counters.push_back(30037);
        internal_counters.push_back(30859);
        internal_counters.push_back(31681);
        internal_counters.push_back(32503);
        internal_counters.push_back(33325);
        internal_counters.push_back(34147);
        internal_counters.push_back(34969);
        internal_counters.push_back(35791);
        internal_counters.push_back(36613);
        internal_counters.push_back(37435);
        internal_counters.push_back(38257);
        internal_counters.push_back(39079);
        internal_counters.push_back(39901);
        internal_counters.push_back(40723);
        internal_counters.push_back(41545);
        internal_counters.push_back(16064);
        internal_counters.push_back(16886);
        internal_counters.push_back(17708);
        internal_counters.push_back(18530);
        internal_counters.push_back(19352);
        internal_counters.push_back(20174);
        internal_counters.push_back(20996);
        internal_counters.push_back(21818);
        internal_counters.push_back(22640);
        internal_counters.push_back(23462);
        internal_counters.push_back(24284);
        internal_counters.push_back(25106);
        internal_counters.push_back(25928);
        internal_counters.push_back(26750);
        internal_counters.push_back(27572);
        internal_counters.push_back(28394);
        internal_counters.push_back(29216);
        internal_counters.push_back(30038);
        internal_counters.push_back(30860);
        internal_counters.push_back(31682);
        internal_counters.push_back(32504);
        internal_counters.push_back(33326);
        internal_counters.push_back(34148);
        internal_counters.push_back(34970);
        internal_counters.push_back(35792);
        internal_counters.push_back(36614);
        internal_counters.push_back(37436);
        internal_counters.push_back(38258);
        internal_counters.push_back(39080);
        internal_counters.push_back(39902);
        internal_counters.push_back(40724);
        internal_counters.push_back(41546);
        internal_counters.push_back(16065);
        internal_counters.push_back(16887);
        internal_counters.push_back(17709);
        internal_counters.push_back(18531);
        internal_counters.push_back(19353);
        internal_counters.push_back(20175);
        internal_counters.push_back(20997);
        internal_counters.push_back(21819);
        internal_counters.push_back(22641);
        internal_counters.push_back(23463);
        internal_counters.push_back(24285);
        internal_counters.push_back(25107);
        internal_counters.push_back(25929);
        internal_counters.push_back(26751);
        internal_counters.push_back(27573);
        internal_counters.push_back(28395);
        internal_counters.push_back(29217);
        internal_counters.push_back(30039);
        internal_counters.push_back(30861);
        internal_counters.push_back(31683);
        internal_counters.push_back(32505);
        internal_counters.push_back(33327);
        internal_counters.push_back(34149);
        internal_counters.push_back(34971);
        internal_counters.push_back(35793);
        internal_counters.push_back(36615);
        internal_counters.push_back(37437);
        internal_counters.push_back(38259);
        internal_counters.push_back(39081);
        internal_counters.push_back(39903);
        internal_counters.push_back(40725);
        internal_counters.push_back(41547);

        c.DefineDerivedCounter("PostZQuads",
                               "DepthAndStencil",
                               "Percentage of quads for which the pixel shader will run and may be postZ tested.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum128,/,(100),*",
                               "58f0d34b-eeb8-e8db-abce-cb72584144be");
    }
    { // Index:58
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(16162);
        internal_counters.push_back(16984);
        internal_counters.push_back(17806);
        internal_counters.push_back(18628);
        internal_counters.push_back(19450);
        internal_counters.push_back(20272);
        internal_counters.push_back(21094);
        internal_counters.push_back(21916);
        internal_counters.push_back(22738);
        internal_counters.push_back(23560);
        internal_counters.push_back(24382);
        internal_counters.push_back(25204);
        internal_counters.push_back(26026);
        internal_counters.push_back(26848);
        internal_counters.push_back(27670);
        internal_counters.push_back(28492);
        internal_counters.push_back(29314);
        internal_counters.push_back(30136);
        internal_counters.push_back(30958);
        internal_counters.push_back(31780);
        internal_counters.push_back(32602);
        internal_counters.push_back(33424);
        internal_counters.push_back(34246);
        internal_counters.push_back(35068);
        internal_counters.push_back(35890);
        internal_counters.push_back(36712);
        internal_counters.push_back(37534);
        internal_counters.push_back(38356);
        internal_counters.push_back(39178);
        internal_counters.push_back(40000);
        internal_counters.push_back(40822);
        internal_counters.push_back(41644);

        c.DefineDerivedCounter("PostZQuadCount",
                               "DepthAndStencil",
                               "Count of quads for which the pixel shader will run and may be postZ tested.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32",
                               "08404526-ce35-939b-34c8-a7a35a0ff4d6");
    }
    { // Index:59
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(5529);
        internal_counters.push_back(5971);
        internal_counters.push_back(6413);
        internal_counters.push_back(6855);
        internal_counters.push_back(7297);
        internal_counters.push_back(7739);
        internal_counters.push_back(8181);
        internal_counters.push_back(8623);
        internal_counters.push_back(9065);
        internal_counters.push_back(9507);
        internal_counters.push_back(9949);
        internal_counters.push_back(10391);
        internal_counters.push_back(10833);
        internal_counters.push_back(11275);
        internal_counters.push_back(11717);
        internal_counters.push_back(12159);

        c.DefineDerivedCounter("PreZSamplesPassing",
                               "DepthAndStencil",
                               "Number of samples tested for Z before shading and passed.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16",
                               "3bfe6c4d-7422-ca03-7ea5-e67ff1a00136");
    }
    { // Index:60
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(5531);
        internal_counters.push_back(5973);
        internal_counters.push_back(6415);
        internal_counters.push_back(6857);
        internal_counters.push_back(7299);
        internal_counters.push_back(7741);
        internal_counters.push_back(8183);
        internal_counters.push_back(8625);
        internal_counters.push_back(9067);
        internal_counters.push_back(9509);
        internal_counters.push_back(9951);
        internal_counters.push_back(10393);
        internal_counters.push_back(10835);
        internal_counters.push_back(11277);
        internal_counters.push_back(11719);
        internal_counters.push_back(12161);

        c.DefineDerivedCounter("PreZSamplesFailingS",
                               "DepthAndStencil",
                               "Number of samples tested for Z before shading and failed stencil test.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16",
                               "df7f705e-5162-d3b5-da8b-63466cf9c4e5");
    }
    { // Index:61
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(5530);
        internal_counters.push_back(5972);
        internal_counters.push_back(6414);
        internal_counters.push_back(6856);
        internal_counters.push_back(7298);
        internal_counters.push_back(7740);
        internal_counters.push_back(8182);
        internal_counters.push_back(8624);
        internal_counters.push_back(9066);
        internal_counters.push_back(9508);
        internal_counters.push_back(9950);
        internal_counters.push_back(10392);
        internal_counters.push_back(10834);
        internal_counters.push_back(11276);
        internal_counters.push_back(11718);
        internal_counters.push_back(12160);

        c.DefineDerivedCounter("PreZSamplesFailingZ",
                               "DepthAndStencil",
                               "Number of samples tested for Z before shading and failed Z test.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16",
                               "4484e950-f7a4-3800-bc74-78dd297f017e");
    }
    { // Index:62
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(5526);
        internal_counters.push_back(5968);
        internal_counters.push_back(6410);
        internal_counters.push_back(6852);
        internal_counters.push_back(7294);
        internal_counters.push_back(7736);
        internal_counters.push_back(8178);
        internal_counters.push_back(8620);
        internal_counters.push_back(9062);
        internal_counters.push_back(9504);
        internal_counters.push_back(9946);
        internal_counters.push_back(10388);
        internal_counters.push_back(10830);
        internal_counters.push_back(11272);
        internal_counters.push_back(11714);
        internal_counters.push_back(12156);

        c.DefineDerivedCounter("PostZSamplesPassing",
                               "DepthAndStencil",
                               "Number of samples tested for Z after shading and passed.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16",
                               "4995d5d6-2330-b986-508b-fae24856f44c");
    }
    { // Index:63
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(5528);
        internal_counters.push_back(5970);
        internal_counters.push_back(6412);
        internal_counters.push_back(6854);
        internal_counters.push_back(7296);
        internal_counters.push_back(7738);
        internal_counters.push_back(8180);
        internal_counters.push_back(8622);
        internal_counters.push_back(9064);
        internal_counters.push_back(9506);
        internal_counters.push_back(9948);
        internal_counters.push_back(10390);
        internal_counters.push_back(10832);
        internal_counters.push_back(11274);
        internal_counters.push_back(11716);
        internal_counters.push_back(12158);

        c.DefineDerivedCounter("PostZSamplesFailingS",
                               "DepthAndStencil",
                               "Number of samples tested for Z after shading and failed stencil test.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16",
                               "ae558af4-f4be-3dd4-7316-b2c4dcf0def8");
    }
    { // Index:64
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(5527);
        internal_counters.push_back(5969);
        internal_counters.push_back(6411);
        internal_counters.push_back(6853);
        internal_counters.push_back(7295);
        internal_counters.push_back(7737);
        internal_counters.push_back(8179);
        internal_counters.push_back(8621);
        internal_counters.push_back(9063);
        internal_counters.push_back(9505);
        internal_counters.push_back(9947);
        internal_counters.push_back(10389);
        internal_counters.push_back(10831);
        internal_counters.push_back(11273);
        internal_counters.push_back(11715);
        internal_counters.push_back(12157);

        c.DefineDerivedCounter("PostZSamplesFailingZ",
                               "DepthAndStencil",
                               "Number of samples tested for Z after shading and failed Z test.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16",
                               "b3684c94-814a-c695-c85d-a5b6ab798b35");
    }
    { // Index:65
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(5398);
        internal_counters.push_back(5840);
        internal_counters.push_back(6282);
        internal_counters.push_back(6724);
        internal_counters.push_back(7166);
        internal_counters.push_back(7608);
        internal_counters.push_back(8050);
        internal_counters.push_back(8492);
        internal_counters.push_back(8934);
        internal_counters.push_back(9376);
        internal_counters.push_back(9818);
        internal_counters.push_back(10260);
        internal_counters.push_back(10702);
        internal_counters.push_back(11144);
        internal_counters.push_back(11586);
        internal_counters.push_back(12028);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("ZUnitStalled",
                               "DepthAndStencil",
                               "The percentage of GPUTime the depth buffer spends waiting for the color buffer to be ready to accept data. High figures here indicate a bottleneck in color buffer operations.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*",
                               "5e86c3ad-1726-3157-1d01-7ed188bf854d");
    }
    { // Index:66
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(5398);
        internal_counters.push_back(5840);
        internal_counters.push_back(6282);
        internal_counters.push_back(6724);
        internal_counters.push_back(7166);
        internal_counters.push_back(7608);
        internal_counters.push_back(8050);
        internal_counters.push_back(8492);
        internal_counters.push_back(8934);
        internal_counters.push_back(9376);
        internal_counters.push_back(9818);
        internal_counters.push_back(10260);
        internal_counters.push_back(10702);
        internal_counters.push_back(11144);
        internal_counters.push_back(11586);
        internal_counters.push_back(12028);

        c.DefineDerivedCounter("ZUnitStalledCycles",
                               "DepthAndStencil",
                               "Number of GPU cycles the depth buffer spends waiting for the color buffer to be ready to accept data. Larger numbers indicate a bottleneck in color buffer operations.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16",
                               "4351fa7f-6737-2c3e-3ffb-b3addbdceedd");
    }
    { // Index:67
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(336);
        internal_counters.push_back(652);
        internal_counters.push_back(968);
        internal_counters.push_back(1284);
        internal_counters.push_back(1600);
        internal_counters.push_back(1916);
        internal_counters.push_back(2232);
        internal_counters.push_back(2548);
        internal_counters.push_back(2864);
        internal_counters.push_back(3180);
        internal_counters.push_back(3496);
        internal_counters.push_back(3812);
        internal_counters.push_back(4128);
        internal_counters.push_back(4444);
        internal_counters.push_back(4760);
        internal_counters.push_back(5076);

        c.DefineDerivedCounter("CBMemRead",
                               "ColorBuffer",
                               "Number of bytes read from the color buffer.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeBytes,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*",
                               "84b531d8-a1f8-7f49-7c27-7bc97801f1e6");
    }
    { // Index:68
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(338);
        internal_counters.push_back(654);
        internal_counters.push_back(970);
        internal_counters.push_back(1286);
        internal_counters.push_back(1602);
        internal_counters.push_back(1918);
        internal_counters.push_back(2234);
        internal_counters.push_back(2550);
        internal_counters.push_back(2866);
        internal_counters.push_back(3182);
        internal_counters.push_back(3498);
        internal_counters.push_back(3814);
        internal_counters.push_back(4130);
        internal_counters.push_back(4446);
        internal_counters.push_back(4762);
        internal_counters.push_back(5078);

        c.DefineDerivedCounter("CBMemWritten",
                               "ColorBuffer",
                               "Number of bytes written to the color buffer.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeBytes,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*",
                               "550f8ff8-60b6-a6bf-87d0-25ac9e87de70");
    }
    { // Index:69
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(78796);
        internal_counters.push_back(78896);
        internal_counters.push_back(78996);
        internal_counters.push_back(79096);
        internal_counters.push_back(79196);
        internal_counters.push_back(79296);
        internal_counters.push_back(79396);
        internal_counters.push_back(79496);
        internal_counters.push_back(79596);
        internal_counters.push_back(79696);
        internal_counters.push_back(79796);
        internal_counters.push_back(79896);
        internal_counters.push_back(79996);
        internal_counters.push_back(80096);
        internal_counters.push_back(80196);
        internal_counters.push_back(80296);
        internal_counters.push_back(80396);
        internal_counters.push_back(80496);
        internal_counters.push_back(80596);
        internal_counters.push_back(80696);
        internal_counters.push_back(80796);
        internal_counters.push_back(80896);
        internal_counters.push_back(80996);
        internal_counters.push_back(81096);
        internal_counters.push_back(81196);
        internal_counters.push_back(81296);
        internal_counters.push_back(81396);
        internal_counters.push_back(81496);
        internal_counters.push_back(81596);
        internal_counters.push_back(81696);
        internal_counters.push_back(81796);
        internal_counters.push_back(81896);
        internal_counters.push_back(81996);
        internal_counters.push_back(82096);
        internal_counters.push_back(82196);
        internal_counters.push_back(82296);
        internal_counters.push_back(82396);
        internal_counters.push_back(82496);
        internal_counters.push_back(82596);
        internal_counters.push_back(82696);
        internal_counters.push_back(82796);
        internal_counters.push_back(82896);
        internal_counters.push_back(82996);
        internal_counters.push_back(83096);
        internal_counters.push_back(83196);
        internal_counters.push_back(83296);
        internal_counters.push_back(83396);
        internal_counters.push_back(83496);
        internal_counters.push_back(83596);
        internal_counters.push_back(83696);
        internal_counters.push_back(83796);
        internal_counters.push_back(83896);
        internal_counters.push_back(83996);
        internal_counters.push_back(84096);
        internal_counters.push_back(84196);
        internal_counters.push_back(84296);
        internal_counters.push_back(84396);
        internal_counters.push_back(84496);
        internal_counters.push_back(84596);
        internal_counters.push_back(84696);
        internal_counters.push_back(84796);
        internal_counters.push_back(84896);
        internal_counters.push_back(84996);
        internal_counters.push_back(85096);
        internal_counters.push_back(78804);
        internal_counters.push_back(78904);
        internal_counters.push_back(79004);
        internal_counters.push_back(79104);
        internal_counters.push_back(79204);
        internal_counters.push_back(79304);
        internal_counters.push_back(79404);
        internal_counters.push_back(79504);
        internal_counters.push_back(79604);
        internal_counters.push_back(79704);
        internal_counters.push_back(79804);
        internal_counters.push_back(79904);
        internal_counters.push_back(80004);
        internal_counters.push_back(80104);
        internal_counters.push_back(80204);
        internal_counters.push_back(80304);
        internal_counters.push_back(80404);
        internal_counters.push_back(80504);
        internal_counters.push_back(80604);
        internal_counters.push_back(80704);
        internal_counters.push_back(80804);
        internal_counters.push_back(80904);
        internal_counters.push_back(81004);
        internal_counters.push_back(81104);
        internal_counters.push_back(81204);
        internal_counters.push_back(81304);
        internal_counters.push_back(81404);
        internal_counters.push_back(81504);
        internal_counters.push_back(81604);
        internal_counters.push_back(81704);
        internal_counters.push_back(81804);
        internal_counters.push_back(81904);
        internal_counters.push_back(82004);
        internal_counters.push_back(82104);
        internal_counters.push_back(82204);
        internal_counters.push_back(82304);
        internal_counters.push_back(82404);
        internal_counters.push_back(82504);
        internal_counters.push_back(82604);
        internal_counters.push_back(82704);
        internal_counters.push_back(82804);
        internal_counters.push_back(82904);
        internal_counters.push_back(83004);
        internal_counters.push_back(83104);
        internal_counters.push_back(83204);
        internal_counters.push_back(83304);
        internal_counters.push_back(83404);
        internal_counters.push_back(83504);
        internal_counters.push_back(83604);
        internal_counters.push_back(83704);
        internal_counters.push_back(83804);
        internal_counters.push_back(83904);
        internal_counters.push_back(84004);
        internal_counters.push_back(84104);
        internal_counters.push_back(84204);
        internal_counters.push_back(84304);
        internal_counters.push_back(84404);
        internal_counters.push_back(84504);
        internal_counters.push_back(84604);
        internal_counters.push_back(84704);
        internal_counters.push_back(84804);
        internal_counters.push_back(84904);
        internal_counters.push_back(85004);
        internal_counters.push_back(85104);

        c.DefineDerivedCounter("L0CacheHit",
                               "MemoryCache",
                               "The percentage of read requests that hit the data in the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "(0),(1),64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,ifnotzero",
                               "286c786e-9a42-3371-9dea-dd54e6e612e9");
    }
    { // Index:70
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(78796);
        internal_counters.push_back(78896);
        internal_counters.push_back(78996);
        internal_counters.push_back(79096);
        internal_counters.push_back(79196);
        internal_counters.push_back(79296);
        internal_counters.push_back(79396);
        internal_counters.push_back(79496);
        internal_counters.push_back(79596);
        internal_counters.push_back(79696);
        internal_counters.push_back(79796);
        internal_counters.push_back(79896);
        internal_counters.push_back(79996);
        internal_counters.push_back(80096);
        internal_counters.push_back(80196);
        internal_counters.push_back(80296);
        internal_counters.push_back(80396);
        internal_counters.push_back(80496);
        internal_counters.push_back(80596);
        internal_counters.push_back(80696);
        internal_counters.push_back(80796);
        internal_counters.push_back(80896);
        internal_counters.push_back(80996);
        internal_counters.push_back(81096);
        internal_counters.push_back(81196);
        internal_counters.push_back(81296);
        internal_counters.push_back(81396);
        internal_counters.push_back(81496);
        internal_counters.push_back(81596);
        internal_counters.push_back(81696);
        internal_counters.push_back(81796);
        internal_counters.push_back(81896);
        internal_counters.push_back(81996);
        internal_counters.push_back(82096);
        internal_counters.push_back(82196);
        internal_counters.push_back(82296);
        internal_counters.push_back(82396);
        internal_counters.push_back(82496);
        internal_counters.push_back(82596);
        internal_counters.push_back(82696);
        internal_counters.push_back(82796);
        internal_counters.push_back(82896);
        internal_counters.push_back(82996);
        internal_counters.push_back(83096);
        internal_counters.push_back(83196);
        internal_counters.push_back(83296);
        internal_counters.push_back(83396);
        internal_counters.push_back(83496);
        internal_counters.push_back(83596);
        internal_counters.push_back(83696);
        internal_counters.push_back(83796);
        internal_counters.push_back(83896);
        internal_counters.push_back(83996);
        internal_counters.push_back(84096);
        internal_counters.push_back(84196);
        internal_counters.push_back(84296);
        internal_counters.push_back(84396);
        internal_counters.push_back(84496);
        internal_counters.push_back(84596);
        internal_counters.push_back(84696);
        internal_counters.push_back(84796);
        internal_counters.push_back(84896);
        internal_counters.push_back(84996);
        internal_counters.push_back(85096);

        c.DefineDerivedCounter("L0CacheRequestCount",
                               "MemoryCache",
                               "The number of read requests made to the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64",
                               "74983cae-ee57-2e1b-d990-5128fef84e1f");
    }
    { // Index:71
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(78796);
        internal_counters.push_back(78896);
        internal_counters.push_back(78996);
        internal_counters.push_back(79096);
        internal_counters.push_back(79196);
        internal_counters.push_back(79296);
        internal_counters.push_back(79396);
        internal_counters.push_back(79496);
        internal_counters.push_back(79596);
        internal_counters.push_back(79696);
        internal_counters.push_back(79796);
        internal_counters.push_back(79896);
        internal_counters.push_back(79996);
        internal_counters.push_back(80096);
        internal_counters.push_back(80196);
        internal_counters.push_back(80296);
        internal_counters.push_back(80396);
        internal_counters.push_back(80496);
        internal_counters.push_back(80596);
        internal_counters.push_back(80696);
        internal_counters.push_back(80796);
        internal_counters.push_back(80896);
        internal_counters.push_back(80996);
        internal_counters.push_back(81096);
        internal_counters.push_back(81196);
        internal_counters.push_back(81296);
        internal_counters.push_back(81396);
        internal_counters.push_back(81496);
        internal_counters.push_back(81596);
        internal_counters.push_back(81696);
        internal_counters.push_back(81796);
        internal_counters.push_back(81896);
        internal_counters.push_back(81996);
        internal_counters.push_back(82096);
        internal_counters.push_back(82196);
        internal_counters.push_back(82296);
        internal_counters.push_back(82396);
        internal_counters.push_back(82496);
        internal_counters.push_back(82596);
        internal_counters.push_back(82696);
        internal_counters.push_back(82796);
        internal_counters.push_back(82896);
        internal_counters.push_back(82996);
        internal_counters.push_back(83096);
        internal_counters.push_back(83196);
        internal_counters.push_back(83296);
        internal_counters.push_back(83396);
        internal_counters.push_back(83496);
        internal_counters.push_back(83596);
        internal_counters.push_back(83696);
        internal_counters.push_back(83796);
        internal_counters.push_back(83896);
        internal_counters.push_back(83996);
        internal_counters.push_back(84096);
        internal_counters.push_back(84196);
        internal_counters.push_back(84296);
        internal_counters.push_back(84396);
        internal_counters.push_back(84496);
        internal_counters.push_back(84596);
        internal_counters.push_back(84696);
        internal_counters.push_back(84796);
        internal_counters.push_back(84896);
        internal_counters.push_back(84996);
        internal_counters.push_back(85096);
        internal_counters.push_back(78804);
        internal_counters.push_back(78904);
        internal_counters.push_back(79004);
        internal_counters.push_back(79104);
        internal_counters.push_back(79204);
        internal_counters.push_back(79304);
        internal_counters.push_back(79404);
        internal_counters.push_back(79504);
        internal_counters.push_back(79604);
        internal_counters.push_back(79704);
        internal_counters.push_back(79804);
        internal_counters.push_back(79904);
        internal_counters.push_back(80004);
        internal_counters.push_back(80104);
        internal_counters.push_back(80204);
        internal_counters.push_back(80304);
        internal_counters.push_back(80404);
        internal_counters.push_back(80504);
        internal_counters.push_back(80604);
        internal_counters.push_back(80704);
        internal_counters.push_back(80804);
        internal_counters.push_back(80904);
        internal_counters.push_back(81004);
        internal_counters.push_back(81104);
        internal_counters.push_back(81204);
        internal_counters.push_back(81304);
        internal_counters.push_back(81404);
        internal_counters.push_back(81504);
        internal_counters.push_back(81604);
        internal_counters.push_back(81704);
        internal_counters.push_back(81804);
        internal_counters.push_back(81904);
        internal_counters.push_back(82004);
        internal_counters.push_back(82104);
        internal_counters.push_back(82204);
        internal_counters.push_back(82304);
        internal_counters.push_back(82404);
        internal_counters.push_back(82504);
        internal_counters.push_back(82604);
        internal_counters.push_back(82704);
        internal_counters.push_back(82804);
        internal_counters.push_back(82904);
        internal_counters.push_back(83004);
        internal_counters.push_back(83104);
        internal_counters.push_back(83204);
        internal_counters.push_back(83304);
        internal_counters.push_back(83404);
        internal_counters.push_back(83504);
        internal_counters.push_back(83604);
        internal_counters.push_back(83704);
        internal_counters.push_back(83804);
        internal_counters.push_back(83904);
        internal_counters.push_back(84004);
        internal_counters.push_back(84104);
        internal_counters.push_back(84204);
        internal_counters.push_back(84304);
        internal_counters.push_back(84404);
        internal_counters.push_back(84504);
        internal_counters.push_back(84604);
        internal_counters.push_back(84704);
        internal_counters.push_back(84804);
        internal_counters.push_back(84904);
        internal_counters.push_back(85004);
        internal_counters.push_back(85104);

        c.DefineDerivedCounter("L0CacheHitCount",
                               "MemoryCache",
                               "The number of read requests which result in a cache hit from the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,-",
                               "c0de7338-069b-c5ba-ead3-c65e030cd2ac");
    }
    { // Index:72
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(78804);
        internal_counters.push_back(78904);
        internal_counters.push_back(79004);
        internal_counters.push_back(79104);
        internal_counters.push_back(79204);
        internal_counters.push_back(79304);
        internal_counters.push_back(79404);
        internal_counters.push_back(79504);
        internal_counters.push_back(79604);
        internal_counters.push_back(79704);
        internal_counters.push_back(79804);
        internal_counters.push_back(79904);
        internal_counters.push_back(80004);
        internal_counters.push_back(80104);
        internal_counters.push_back(80204);
        internal_counters.push_back(80304);
        internal_counters.push_back(80404);
        internal_counters.push_back(80504);
        internal_counters.push_back(80604);
        internal_counters.push_back(80704);
        internal_counters.push_back(80804);
        internal_counters.push_back(80904);
        internal_counters.push_back(81004);
        internal_counters.push_back(81104);
        internal_counters.push_back(81204);
        internal_counters.push_back(81304);
        internal_counters.push_back(81404);
        internal_counters.push_back(81504);
        internal_counters.push_back(81604);
        internal_counters.push_back(81704);
        internal_counters.push_back(81804);
        internal_counters.push_back(81904);
        internal_counters.push_back(82004);
        internal_counters.push_back(82104);
        internal_counters.push_back(82204);
        internal_counters.push_back(82304);
        internal_counters.push_back(82404);
        internal_counters.push_back(82504);
        internal_counters.push_back(82604);
        internal_counters.push_back(82704);
        internal_counters.push_back(82804);
        internal_counters.push_back(82904);
        internal_counters.push_back(83004);
        internal_counters.push_back(83104);
        internal_counters.push_back(83204);
        internal_counters.push_back(83304);
        internal_counters.push_back(83404);
        internal_counters.push_back(83504);
        internal_counters.push_back(83604);
        internal_counters.push_back(83704);
        internal_counters.push_back(83804);
        internal_counters.push_back(83904);
        internal_counters.push_back(84004);
        internal_counters.push_back(84104);
        internal_counters.push_back(84204);
        internal_counters.push_back(84304);
        internal_counters.push_back(84404);
        internal_counters.push_back(84504);
        internal_counters.push_back(84604);
        internal_counters.push_back(84704);
        internal_counters.push_back(84804);
        internal_counters.push_back(84904);
        internal_counters.push_back(85004);
        internal_counters.push_back(85104);

        c.DefineDerivedCounter("L0CacheMissCount",
                               "MemoryCache",
                               "The number of read requests which result in a cache miss from the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64",
                               "a2f08766-ea1b-6eae-6eaf-faa04125d3e6");
    }
    { // Index:73
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(90650);
        internal_counters.push_back(90900);
        internal_counters.push_back(91150);
        internal_counters.push_back(91400);
        internal_counters.push_back(91650);
        internal_counters.push_back(91900);
        internal_counters.push_back(92150);
        internal_counters.push_back(92400);
        internal_counters.push_back(92650);
        internal_counters.push_back(92900);
        internal_counters.push_back(93150);
        internal_counters.push_back(93400);
        internal_counters.push_back(93650);
        internal_counters.push_back(93900);
        internal_counters.push_back(94150);
        internal_counters.push_back(94400);
        internal_counters.push_back(94650);
        internal_counters.push_back(94900);
        internal_counters.push_back(90689);
        internal_counters.push_back(90939);
        internal_counters.push_back(91189);
        internal_counters.push_back(91439);
        internal_counters.push_back(91689);
        internal_counters.push_back(91939);
        internal_counters.push_back(92189);
        internal_counters.push_back(92439);
        internal_counters.push_back(92689);
        internal_counters.push_back(92939);
        internal_counters.push_back(93189);
        internal_counters.push_back(93439);
        internal_counters.push_back(93689);
        internal_counters.push_back(93939);
        internal_counters.push_back(94189);
        internal_counters.push_back(94439);
        internal_counters.push_back(94689);
        internal_counters.push_back(94939);

        c.DefineDerivedCounter("L2CacheHit",
                               "MemoryCache",
                               "The percentage of read or write requests that hit the data in the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "(0),(1),18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum18,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18,ifnotzero",
                               "47694e4d-6ce6-f387-080d-b1f3d00b73ac");
    }
    { // Index:74
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(90689);
        internal_counters.push_back(90939);
        internal_counters.push_back(91189);
        internal_counters.push_back(91439);
        internal_counters.push_back(91689);
        internal_counters.push_back(91939);
        internal_counters.push_back(92189);
        internal_counters.push_back(92439);
        internal_counters.push_back(92689);
        internal_counters.push_back(92939);
        internal_counters.push_back(93189);
        internal_counters.push_back(93439);
        internal_counters.push_back(93689);
        internal_counters.push_back(93939);
        internal_counters.push_back(94189);
        internal_counters.push_back(94439);
        internal_counters.push_back(94689);
        internal_counters.push_back(94939);
        internal_counters.push_back(90650);
        internal_counters.push_back(90900);
        internal_counters.push_back(91150);
        internal_counters.push_back(91400);
        internal_counters.push_back(91650);
        internal_counters.push_back(91900);
        internal_counters.push_back(92150);
        internal_counters.push_back(92400);
        internal_counters.push_back(92650);
        internal_counters.push_back(92900);
        internal_counters.push_back(93150);
        internal_counters.push_back(93400);
        internal_counters.push_back(93650);
        internal_counters.push_back(93900);
        internal_counters.push_back(94150);
        internal_counters.push_back(94400);
        internal_counters.push_back(94650);
        internal_counters.push_back(94900);

        c.DefineDerivedCounter("L2CacheMiss",
                               "MemoryCache",
                               "The percentage of read or write requests that miss the data in the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size. Value range: 0% (optimal) to 100% (all miss).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum18,/,(100),*",
                               "8aee5458-a58e-11b6-5131-7f19ed070117");
    }
    { // Index:75
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(90650);
        internal_counters.push_back(90900);
        internal_counters.push_back(91150);
        internal_counters.push_back(91400);
        internal_counters.push_back(91650);
        internal_counters.push_back(91900);
        internal_counters.push_back(92150);
        internal_counters.push_back(92400);
        internal_counters.push_back(92650);
        internal_counters.push_back(92900);
        internal_counters.push_back(93150);
        internal_counters.push_back(93400);
        internal_counters.push_back(93650);
        internal_counters.push_back(93900);
        internal_counters.push_back(94150);
        internal_counters.push_back(94400);
        internal_counters.push_back(94650);
        internal_counters.push_back(94900);

        c.DefineDerivedCounter("L2CacheRequestCount",
                               "MemoryCache",
                               "The number of read or write requests made to the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18",
                               "21e9219c-e725-0d96-06b1-b21698b736b2");
    }
    { // Index:76
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(90650);
        internal_counters.push_back(90900);
        internal_counters.push_back(91150);
        internal_counters.push_back(91400);
        internal_counters.push_back(91650);
        internal_counters.push_back(91900);
        internal_counters.push_back(92150);
        internal_counters.push_back(92400);
        internal_counters.push_back(92650);
        internal_counters.push_back(92900);
        internal_counters.push_back(93150);
        internal_counters.push_back(93400);
        internal_counters.push_back(93650);
        internal_counters.push_back(93900);
        internal_counters.push_back(94150);
        internal_counters.push_back(94400);
        internal_counters.push_back(94650);
        internal_counters.push_back(94900);
        internal_counters.push_back(90689);
        internal_counters.push_back(90939);
        internal_counters.push_back(91189);
        internal_counters.push_back(91439);
        internal_counters.push_back(91689);
        internal_counters.push_back(91939);
        internal_counters.push_back(92189);
        internal_counters.push_back(92439);
        internal_counters.push_back(92689);
        internal_counters.push_back(92939);
        internal_counters.push_back(93189);
        internal_counters.push_back(93439);
        internal_counters.push_back(93689);
        internal_counters.push_back(93939);
        internal_counters.push_back(94189);
        internal_counters.push_back(94439);
        internal_counters.push_back(94689);
        internal_counters.push_back(94939);

        c.DefineDerivedCounter("L2CacheHitCount",
                               "MemoryCache",
                               "The number of read or write requests which result in a cache hit from the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum18,-",
                               "29ddcb92-d3dd-951b-1b23-efe52e4eeee4");
    }
    { // Index:77
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(90689);
        internal_counters.push_back(90939);
        internal_counters.push_back(91189);
        internal_counters.push_back(91439);
        internal_counters.push_back(91689);
        internal_counters.push_back(91939);
        internal_counters.push_back(92189);
        internal_counters.push_back(92439);
        internal_counters.push_back(92689);
        internal_counters.push_back(92939);
        internal_counters.push_back(93189);
        internal_counters.push_back(93439);
        internal_counters.push_back(93689);
        internal_counters.push_back(93939);
        internal_counters.push_back(94189);
        internal_counters.push_back(94439);
        internal_counters.push_back(94689);
        internal_counters.push_back(94939);

        c.DefineDerivedCounter("L2CacheMissCount",
                               "MemoryCache",
                               "The number of read or write requests which result in a cache miss from the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18",
                               "376eec7b-ab25-9012-06b5-63291a17fd47");
    }
    { // Index:78
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(78833);
        internal_counters.push_back(78933);
        internal_counters.push_back(79033);
        internal_counters.push_back(79133);
        internal_counters.push_back(79233);
        internal_counters.push_back(79333);
        internal_counters.push_back(79433);
        internal_counters.push_back(79533);
        internal_counters.push_back(79633);
        internal_counters.push_back(79733);
        internal_counters.push_back(79833);
        internal_counters.push_back(79933);
        internal_counters.push_back(80033);
        internal_counters.push_back(80133);
        internal_counters.push_back(80233);
        internal_counters.push_back(80333);
        internal_counters.push_back(80433);
        internal_counters.push_back(80533);
        internal_counters.push_back(80633);
        internal_counters.push_back(80733);
        internal_counters.push_back(80833);
        internal_counters.push_back(80933);
        internal_counters.push_back(81033);
        internal_counters.push_back(81133);
        internal_counters.push_back(81233);
        internal_counters.push_back(81333);
        internal_counters.push_back(81433);
        internal_counters.push_back(81533);
        internal_counters.push_back(81633);
        internal_counters.push_back(81733);
        internal_counters.push_back(81833);
        internal_counters.push_back(81933);
        internal_counters.push_back(82033);
        internal_counters.push_back(82133);
        internal_counters.push_back(82233);
        internal_counters.push_back(82333);
        internal_counters.push_back(82433);
        internal_counters.push_back(82533);
        internal_counters.push_back(82633);
        internal_counters.push_back(82733);
        internal_counters.push_back(82833);
        internal_counters.push_back(82933);
        internal_counters.push_back(83033);
        internal_counters.push_back(83133);
        internal_counters.push_back(83233);
        internal_counters.push_back(83333);
        internal_counters.push_back(83433);
        internal_counters.push_back(83533);
        internal_counters.push_back(83633);
        internal_counters.push_back(83733);
        internal_counters.push_back(83833);
        internal_counters.push_back(83933);
        internal_counters.push_back(84033);
        internal_counters.push_back(84133);
        internal_counters.push_back(84233);
        internal_counters.push_back(84333);
        internal_counters.push_back(84433);
        internal_counters.push_back(84533);
        internal_counters.push_back(84633);
        internal_counters.push_back(84733);
        internal_counters.push_back(84833);
        internal_counters.push_back(84933);
        internal_counters.push_back(85033);
        internal_counters.push_back(85133);

        c.DefineDerivedCounter("L0TagConflictReadStalledCycles",
                               "MemoryCache",
                               "The number of cycles read operations from the L0 cache are stalled due to tag conflicts.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64",
                               "e2412737-e2bf-c791-5f2f-64abd4ba47cf");
    }
    { // Index:79
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(78834);
        internal_counters.push_back(78934);
        internal_counters.push_back(79034);
        internal_counters.push_back(79134);
        internal_counters.push_back(79234);
        internal_counters.push_back(79334);
        internal_counters.push_back(79434);
        internal_counters.push_back(79534);
        internal_counters.push_back(79634);
        internal_counters.push_back(79734);
        internal_counters.push_back(79834);
        internal_counters.push_back(79934);
        internal_counters.push_back(80034);
        internal_counters.push_back(80134);
        internal_counters.push_back(80234);
        internal_counters.push_back(80334);
        internal_counters.push_back(80434);
        internal_counters.push_back(80534);
        internal_counters.push_back(80634);
        internal_counters.push_back(80734);
        internal_counters.push_back(80834);
        internal_counters.push_back(80934);
        internal_counters.push_back(81034);
        internal_counters.push_back(81134);
        internal_counters.push_back(81234);
        internal_counters.push_back(81334);
        internal_counters.push_back(81434);
        internal_counters.push_back(81534);
        internal_counters.push_back(81634);
        internal_counters.push_back(81734);
        internal_counters.push_back(81834);
        internal_counters.push_back(81934);
        internal_counters.push_back(82034);
        internal_counters.push_back(82134);
        internal_counters.push_back(82234);
        internal_counters.push_back(82334);
        internal_counters.push_back(82434);
        internal_counters.push_back(82534);
        internal_counters.push_back(82634);
        internal_counters.push_back(82734);
        internal_counters.push_back(82834);
        internal_counters.push_back(82934);
        internal_counters.push_back(83034);
        internal_counters.push_back(83134);
        internal_counters.push_back(83234);
        internal_counters.push_back(83334);
        internal_counters.push_back(83434);
        internal_counters.push_back(83534);
        internal_counters.push_back(83634);
        internal_counters.push_back(83734);
        internal_counters.push_back(83834);
        internal_counters.push_back(83934);
        internal_counters.push_back(84034);
        internal_counters.push_back(84134);
        internal_counters.push_back(84234);
        internal_counters.push_back(84334);
        internal_counters.push_back(84434);
        internal_counters.push_back(84534);
        internal_counters.push_back(84634);
        internal_counters.push_back(84734);
        internal_counters.push_back(84834);
        internal_counters.push_back(84934);
        internal_counters.push_back(85034);
        internal_counters.push_back(85134);

        c.DefineDerivedCounter("L0TagConflictWriteStalledCycles",
                               "MemoryCache",
                               "The number of cycles write operations to the L0 cache are stalled due to tag conflicts.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64",
                               "0c2571f3-f084-f351-99ba-0d9e23b47e8e");
    }
    { // Index:80
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(78835);
        internal_counters.push_back(78935);
        internal_counters.push_back(79035);
        internal_counters.push_back(79135);
        internal_counters.push_back(79235);
        internal_counters.push_back(79335);
        internal_counters.push_back(79435);
        internal_counters.push_back(79535);
        internal_counters.push_back(79635);
        internal_counters.push_back(79735);
        internal_counters.push_back(79835);
        internal_counters.push_back(79935);
        internal_counters.push_back(80035);
        internal_counters.push_back(80135);
        internal_counters.push_back(80235);
        internal_counters.push_back(80335);
        internal_counters.push_back(80435);
        internal_counters.push_back(80535);
        internal_counters.push_back(80635);
        internal_counters.push_back(80735);
        internal_counters.push_back(80835);
        internal_counters.push_back(80935);
        internal_counters.push_back(81035);
        internal_counters.push_back(81135);
        internal_counters.push_back(81235);
        internal_counters.push_back(81335);
        internal_counters.push_back(81435);
        internal_counters.push_back(81535);
        internal_counters.push_back(81635);
        internal_counters.push_back(81735);
        internal_counters.push_back(81835);
        internal_counters.push_back(81935);
        internal_counters.push_back(82035);
        internal_counters.push_back(82135);
        internal_counters.push_back(82235);
        internal_counters.push_back(82335);
        internal_counters.push_back(82435);
        internal_counters.push_back(82535);
        internal_counters.push_back(82635);
        internal_counters.push_back(82735);
        internal_counters.push_back(82835);
        internal_counters.push_back(82935);
        internal_counters.push_back(83035);
        internal_counters.push_back(83135);
        internal_counters.push_back(83235);
        internal_counters.push_back(83335);
        internal_counters.push_back(83435);
        internal_counters.push_back(83535);
        internal_counters.push_back(83635);
        internal_counters.push_back(83735);
        internal_counters.push_back(83835);
        internal_counters.push_back(83935);
        internal_counters.push_back(84035);
        internal_counters.push_back(84135);
        internal_counters.push_back(84235);
        internal_counters.push_back(84335);
        internal_counters.push_back(84435);
        internal_counters.push_back(84535);
        internal_counters.push_back(84635);
        internal_counters.push_back(84735);
        internal_counters.push_back(84835);
        internal_counters.push_back(84935);
        internal_counters.push_back(85035);
        internal_counters.push_back(85135);

        c.DefineDerivedCounter("L0TagConflictAtomicStalledCycles",
                               "MemoryCache",
                               "The number of cycles atomic operations on the L0 cache are stalled due to tag conflicts.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeItems,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64",
                               "f13f8563-4151-1533-f42f-0f9c08a20210");
    }
    { // Index:81
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(90793);
        internal_counters.push_back(91043);
        internal_counters.push_back(91293);
        internal_counters.push_back(91543);
        internal_counters.push_back(91793);
        internal_counters.push_back(92043);
        internal_counters.push_back(92293);
        internal_counters.push_back(92543);
        internal_counters.push_back(92793);
        internal_counters.push_back(93043);
        internal_counters.push_back(93293);
        internal_counters.push_back(93543);
        internal_counters.push_back(93793);
        internal_counters.push_back(94043);
        internal_counters.push_back(94293);
        internal_counters.push_back(94543);
        internal_counters.push_back(94793);
        internal_counters.push_back(95043);
        internal_counters.push_back(90794);
        internal_counters.push_back(91044);
        internal_counters.push_back(91294);
        internal_counters.push_back(91544);
        internal_counters.push_back(91794);
        internal_counters.push_back(92044);
        internal_counters.push_back(92294);
        internal_counters.push_back(92544);
        internal_counters.push_back(92794);
        internal_counters.push_back(93044);
        internal_counters.push_back(93294);
        internal_counters.push_back(93544);
        internal_counters.push_back(93794);
        internal_counters.push_back(94044);
        internal_counters.push_back(94294);
        internal_counters.push_back(94544);
        internal_counters.push_back(94794);
        internal_counters.push_back(95044);
        internal_counters.push_back(90795);
        internal_counters.push_back(91045);
        internal_counters.push_back(91295);
        internal_counters.push_back(91545);
        internal_counters.push_back(91795);
        internal_counters.push_back(92045);
        internal_counters.push_back(92295);
        internal_counters.push_back(92545);
        internal_counters.push_back(92795);
        internal_counters.push_back(93045);
        internal_counters.push_back(93295);
        internal_counters.push_back(93545);
        internal_counters.push_back(93795);
        internal_counters.push_back(94045);
        internal_counters.push_back(94295);
        internal_counters.push_back(94545);
        internal_counters.push_back(94795);
        internal_counters.push_back(95045);
        internal_counters.push_back(90796);
        internal_counters.push_back(91046);
        internal_counters.push_back(91296);
        internal_counters.push_back(91546);
        internal_counters.push_back(91796);
        internal_counters.push_back(92046);
        internal_counters.push_back(92296);
        internal_counters.push_back(92546);
        internal_counters.push_back(92796);
        internal_counters.push_back(93046);
        internal_counters.push_back(93296);
        internal_counters.push_back(93546);
        internal_counters.push_back(93796);
        internal_counters.push_back(94046);
        internal_counters.push_back(94296);
        internal_counters.push_back(94546);
        internal_counters.push_back(94796);
        internal_counters.push_back(95046);

        c.DefineDerivedCounter("FetchSize",
                               "GlobalMemory",
                               "The total bytes fetched from the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeBytes,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18,(32),*,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum18,(64),*,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,sum18,(128),*,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,sum18,(256),*,sum4",
                               "664bb3ef-6eca-86b1-1e2d-30cb897b5fa9");
    }
    { // Index:82
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(90755);
        internal_counters.push_back(91005);
        internal_counters.push_back(91255);
        internal_counters.push_back(91505);
        internal_counters.push_back(91755);
        internal_counters.push_back(92005);
        internal_counters.push_back(92255);
        internal_counters.push_back(92505);
        internal_counters.push_back(92755);
        internal_counters.push_back(93005);
        internal_counters.push_back(93255);
        internal_counters.push_back(93505);
        internal_counters.push_back(93755);
        internal_counters.push_back(94005);
        internal_counters.push_back(94255);
        internal_counters.push_back(94505);
        internal_counters.push_back(94755);
        internal_counters.push_back(95005);
        internal_counters.push_back(90761);
        internal_counters.push_back(91011);
        internal_counters.push_back(91261);
        internal_counters.push_back(91511);
        internal_counters.push_back(91761);
        internal_counters.push_back(92011);
        internal_counters.push_back(92261);
        internal_counters.push_back(92511);
        internal_counters.push_back(92761);
        internal_counters.push_back(93011);
        internal_counters.push_back(93261);
        internal_counters.push_back(93511);
        internal_counters.push_back(93761);
        internal_counters.push_back(94011);
        internal_counters.push_back(94261);
        internal_counters.push_back(94511);
        internal_counters.push_back(94761);
        internal_counters.push_back(95011);

        c.DefineDerivedCounter("WriteSize",
                               "GlobalMemory",
                               "The total bytes written to the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeBytes,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,sum18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum18,-,(32),*,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum18,(64),*,+",
                               "f96f2c16-b1b4-4ec4-229c-fc82e6f80a82");
    }
    { // Index:83
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(45074);
        internal_counters.push_back(45329);
        internal_counters.push_back(45584);
        internal_counters.push_back(45839);
        internal_counters.push_back(46094);
        internal_counters.push_back(46349);
        internal_counters.push_back(46604);
        internal_counters.push_back(46859);
        internal_counters.push_back(47114);
        internal_counters.push_back(47369);
        internal_counters.push_back(47624);
        internal_counters.push_back(47879);
        internal_counters.push_back(48134);
        internal_counters.push_back(48389);
        internal_counters.push_back(48644);
        internal_counters.push_back(48899);
        internal_counters.push_back(49154);
        internal_counters.push_back(49409);
        internal_counters.push_back(49664);
        internal_counters.push_back(49919);
        internal_counters.push_back(50174);
        internal_counters.push_back(50429);
        internal_counters.push_back(50684);
        internal_counters.push_back(50939);
        internal_counters.push_back(51194);
        internal_counters.push_back(51449);
        internal_counters.push_back(51704);
        internal_counters.push_back(51959);
        internal_counters.push_back(52214);
        internal_counters.push_back(52469);
        internal_counters.push_back(52724);
        internal_counters.push_back(52979);
        internal_counters.push_back(53234);
        internal_counters.push_back(53489);
        internal_counters.push_back(53744);
        internal_counters.push_back(53999);
        internal_counters.push_back(54254);
        internal_counters.push_back(54509);
        internal_counters.push_back(54764);
        internal_counters.push_back(55019);
        internal_counters.push_back(55274);
        internal_counters.push_back(55529);
        internal_counters.push_back(55784);
        internal_counters.push_back(56039);
        internal_counters.push_back(56294);
        internal_counters.push_back(56549);
        internal_counters.push_back(56804);
        internal_counters.push_back(57059);
        internal_counters.push_back(57314);
        internal_counters.push_back(57569);
        internal_counters.push_back(57824);
        internal_counters.push_back(58079);
        internal_counters.push_back(58334);
        internal_counters.push_back(58589);
        internal_counters.push_back(58844);
        internal_counters.push_back(59099);
        internal_counters.push_back(59354);
        internal_counters.push_back(59609);
        internal_counters.push_back(59864);
        internal_counters.push_back(60119);
        internal_counters.push_back(60374);
        internal_counters.push_back(60629);
        internal_counters.push_back(60884);
        internal_counters.push_back(61139);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("MemUnitBusy",
                               "GlobalMemory",
                               "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*",
                               "a1efa380-4a72-e066-e06a-2ab71a488521");
    }
    { // Index:84
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(45074);
        internal_counters.push_back(45329);
        internal_counters.push_back(45584);
        internal_counters.push_back(45839);
        internal_counters.push_back(46094);
        internal_counters.push_back(46349);
        internal_counters.push_back(46604);
        internal_counters.push_back(46859);
        internal_counters.push_back(47114);
        internal_counters.push_back(47369);
        internal_counters.push_back(47624);
        internal_counters.push_back(47879);
        internal_counters.push_back(48134);
        internal_counters.push_back(48389);
        internal_counters.push_back(48644);
        internal_counters.push_back(48899);
        internal_counters.push_back(49154);
        internal_counters.push_back(49409);
        internal_counters.push_back(49664);
        internal_counters.push_back(49919);
        internal_counters.push_back(50174);
        internal_counters.push_back(50429);
        internal_counters.push_back(50684);
        internal_counters.push_back(50939);
        internal_counters.push_back(51194);
        internal_counters.push_back(51449);
        internal_counters.push_back(51704);
        internal_counters.push_back(51959);
        internal_counters.push_back(52214);
        internal_counters.push_back(52469);
        internal_counters.push_back(52724);
        internal_counters.push_back(52979);
        internal_counters.push_back(53234);
        internal_counters.push_back(53489);
        internal_counters.push_back(53744);
        internal_counters.push_back(53999);
        internal_counters.push_back(54254);
        internal_counters.push_back(54509);
        internal_counters.push_back(54764);
        internal_counters.push_back(55019);
        internal_counters.push_back(55274);
        internal_counters.push_back(55529);
        internal_counters.push_back(55784);
        internal_counters.push_back(56039);
        internal_counters.push_back(56294);
        internal_counters.push_back(56549);
        internal_counters.push_back(56804);
        internal_counters.push_back(57059);
        internal_counters.push_back(57314);
        internal_counters.push_back(57569);
        internal_counters.push_back(57824);
        internal_counters.push_back(58079);
        internal_counters.push_back(58334);
        internal_counters.push_back(58589);
        internal_counters.push_back(58844);
        internal_counters.push_back(59099);
        internal_counters.push_back(59354);
        internal_counters.push_back(59609);
        internal_counters.push_back(59864);
        internal_counters.push_back(60119);
        internal_counters.push_back(60374);
        internal_counters.push_back(60629);
        internal_counters.push_back(60884);
        internal_counters.push_back(61139);

        c.DefineDerivedCounter("MemUnitBusyCycles",
                               "GlobalMemory",
                               "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalledCycles). This is measured with all extra fetches and writes and any cache or memory effects taken into account.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64",
                               "168f077c-4797-b2f5-717f-105c725266c8");
    }
    { // Index:85
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(78826);
        internal_counters.push_back(78926);
        internal_counters.push_back(79026);
        internal_counters.push_back(79126);
        internal_counters.push_back(79226);
        internal_counters.push_back(79326);
        internal_counters.push_back(79426);
        internal_counters.push_back(79526);
        internal_counters.push_back(79626);
        internal_counters.push_back(79726);
        internal_counters.push_back(79826);
        internal_counters.push_back(79926);
        internal_counters.push_back(80026);
        internal_counters.push_back(80126);
        internal_counters.push_back(80226);
        internal_counters.push_back(80326);
        internal_counters.push_back(80426);
        internal_counters.push_back(80526);
        internal_counters.push_back(80626);
        internal_counters.push_back(80726);
        internal_counters.push_back(80826);
        internal_counters.push_back(80926);
        internal_counters.push_back(81026);
        internal_counters.push_back(81126);
        internal_counters.push_back(81226);
        internal_counters.push_back(81326);
        internal_counters.push_back(81426);
        internal_counters.push_back(81526);
        internal_counters.push_back(81626);
        internal_counters.push_back(81726);
        internal_counters.push_back(81826);
        internal_counters.push_back(81926);
        internal_counters.push_back(82026);
        internal_counters.push_back(82126);
        internal_counters.push_back(82226);
        internal_counters.push_back(82326);
        internal_counters.push_back(82426);
        internal_counters.push_back(82526);
        internal_counters.push_back(82626);
        internal_counters.push_back(82726);
        internal_counters.push_back(82826);
        internal_counters.push_back(82926);
        internal_counters.push_back(83026);
        internal_counters.push_back(83126);
        internal_counters.push_back(83226);
        internal_counters.push_back(83326);
        internal_counters.push_back(83426);
        internal_counters.push_back(83526);
        internal_counters.push_back(83626);
        internal_counters.push_back(83726);
        internal_counters.push_back(83826);
        internal_counters.push_back(83926);
        internal_counters.push_back(84026);
        internal_counters.push_back(84126);
        internal_counters.push_back(84226);
        internal_counters.push_back(84326);
        internal_counters.push_back(84426);
        internal_counters.push_back(84526);
        internal_counters.push_back(84626);
        internal_counters.push_back(84726);
        internal_counters.push_back(84826);
        internal_counters.push_back(84926);
        internal_counters.push_back(85026);
        internal_counters.push_back(85126);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("MemUnitStalled",
                               "GlobalMemory",
                               "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*",
                               "465ba54f-d250-1453-790a-731b10d230b1");
    }
    { // Index:86
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(78826);
        internal_counters.push_back(78926);
        internal_counters.push_back(79026);
        internal_counters.push_back(79126);
        internal_counters.push_back(79226);
        internal_counters.push_back(79326);
        internal_counters.push_back(79426);
        internal_counters.push_back(79526);
        internal_counters.push_back(79626);
        internal_counters.push_back(79726);
        internal_counters.push_back(79826);
        internal_counters.push_back(79926);
        internal_counters.push_back(80026);
        internal_counters.push_back(80126);
        internal_counters.push_back(80226);
        internal_counters.push_back(80326);
        internal_counters.push_back(80426);
        internal_counters.push_back(80526);
        internal_counters.push_back(80626);
        internal_counters.push_back(80726);
        internal_counters.push_back(80826);
        internal_counters.push_back(80926);
        internal_counters.push_back(81026);
        internal_counters.push_back(81126);
        internal_counters.push_back(81226);
        internal_counters.push_back(81326);
        internal_counters.push_back(81426);
        internal_counters.push_back(81526);
        internal_counters.push_back(81626);
        internal_counters.push_back(81726);
        internal_counters.push_back(81826);
        internal_counters.push_back(81926);
        internal_counters.push_back(82026);
        internal_counters.push_back(82126);
        internal_counters.push_back(82226);
        internal_counters.push_back(82326);
        internal_counters.push_back(82426);
        internal_counters.push_back(82526);
        internal_counters.push_back(82626);
        internal_counters.push_back(82726);
        internal_counters.push_back(82826);
        internal_counters.push_back(82926);
        internal_counters.push_back(83026);
        internal_counters.push_back(83126);
        internal_counters.push_back(83226);
        internal_counters.push_back(83326);
        internal_counters.push_back(83426);
        internal_counters.push_back(83526);
        internal_counters.push_back(83626);
        internal_counters.push_back(83726);
        internal_counters.push_back(83826);
        internal_counters.push_back(83926);
        internal_counters.push_back(84026);
        internal_counters.push_back(84126);
        internal_counters.push_back(84226);
        internal_counters.push_back(84326);
        internal_counters.push_back(84426);
        internal_counters.push_back(84526);
        internal_counters.push_back(84626);
        internal_counters.push_back(84726);
        internal_counters.push_back(84826);
        internal_counters.push_back(84926);
        internal_counters.push_back(85026);
        internal_counters.push_back(85126);

        c.DefineDerivedCounter("MemUnitStalledCycles",
                               "GlobalMemory",
                               "Number of GPU cycles the memory unit is stalled.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64",
                               "2745659a-0e40-bace-3b9b-86a54f8e4623");
    }
    { // Index:87
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(90769);
        internal_counters.push_back(91019);
        internal_counters.push_back(91269);
        internal_counters.push_back(91519);
        internal_counters.push_back(91769);
        internal_counters.push_back(92019);
        internal_counters.push_back(92269);
        internal_counters.push_back(92519);
        internal_counters.push_back(92769);
        internal_counters.push_back(93019);
        internal_counters.push_back(93269);
        internal_counters.push_back(93519);
        internal_counters.push_back(93769);
        internal_counters.push_back(94019);
        internal_counters.push_back(94269);
        internal_counters.push_back(94519);
        internal_counters.push_back(94769);
        internal_counters.push_back(95019);
        internal_counters.push_back(276);

        c.DefineDerivedCounter("WriteUnitStalled",
                               "GlobalMemory",
                               "The percentage of GPUTime the Write unit is stalled. Value range: 0% to 100% (bad).",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypePercentage,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,max18,18,/,(100),*",
                               "594ad3ce-d1ec-10fc-7d59-25738e397d72");
    }
    { // Index:88
        vector<GpaUInt32> internal_counters;
        internal_counters.push_back(90769);
        internal_counters.push_back(91019);
        internal_counters.push_back(91269);
        internal_counters.push_back(91519);
        internal_counters.push_back(91769);
        internal_counters.push_back(92019);
        internal_counters.push_back(92269);
        internal_counters.push_back(92519);
        internal_counters.push_back(92769);
        internal_counters.push_back(93019);
        internal_counters.push_back(93269);
        internal_counters.push_back(93519);
        internal_counters.push_back(93769);
        internal_counters.push_back(94019);
        internal_counters.push_back(94269);
        internal_counters.push_back(94519);
        internal_counters.push_back(94769);
        internal_counters.push_back(95019);

        c.DefineDerivedCounter("WriteUnitStalledCycles",
                               "GlobalMemory",
                               "Number of GPU cycles the Write unit is stalled.",
                               kGpaDataTypeFloat64,
                               kGpaUsageTypeCycles,
                               true,
                               false,
                               internal_counters,
                               "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,max18",
                               "ede3305e-abd4-d6bf-6b00-ffc57a29fce3");
    }
}

// clang-format on

